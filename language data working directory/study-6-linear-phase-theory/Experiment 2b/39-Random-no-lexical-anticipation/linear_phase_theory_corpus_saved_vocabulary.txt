ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'COMP:ARE/inf', 'LF:to', 'COMP:D', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:C', '-ARG', '-SPEC:iR', '-SPEC:v', 'adjoinable', 'P', '-COMP:N', '-SPEC:N', '!COMP:*', '-SPEC:ADV', 'TAIL:V', 'PF:a', '-SPEC:*', '-COMP:ADV', '-VAL'}
a_D             {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', '-SPEC:V', '-SPEC:Neg/fin', 'PF:D', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', 'LF:D', '-SPEC:C', '-ARG', 'COMP:N', 'D', 'adjoinable', 'LANG:EN', '!COMP:*', 'OP'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'CLASS:TR', '-COMP:Neg', 'ARG', 'COMP:D', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', 'LF:admire', '-SPEC:Neg', '!COMP:*', 'PF:admire', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', "PF:T/fin'", '!SPEC:*', 'LANG:EN', 'CAT:T/fin', 'NO_DET', 'NO_NUMBER', '-VAL'}
v*              {'PF:v', '-VAL', 'LF:v', 'NO_NUMBER', 'NO_DET', 'LANG:EN', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', 'NO_PERSON', '!SPEC:*', 'LANG:EN', 'PHI:PER:3', "PF:T/fin''", 'CAT:T/fin', 'NO_DET', 'NO_NUMBER', '-VAL'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'ARG', 'COMP:D', 'LANG:IT', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:adora', '-COMP:N', 'SPEC:P', 'V', 'LF:admire', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
antaa           ['LANG:FI']
anta-           {'ASP:BOUNDED', 'ARG', 'COMP:D', '-COMP:FIN', 'CLASS:DITR', 'LANG:FI', 'COMP:P', '+SEM:directional', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:D', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'LF:give', '-COMP:N', 'SPEC:P', 'V', 'PF:antaa', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'ARG', 'COMP:D', 'COMP:P', 'SPEC:D', 'SEM:internal', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:v', '-COMP:V', 'PF:ask', '-SPEC:FORCE', '-VAL', 'LF:ask'}
ask-            {'ARG', 'COMP:D', 'COMP:P', 'SPEC:D', 'SEM:internal', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:v', '-COMP:V', 'PF:ask', '-SPEC:FORCE', '-VAL', 'LF:ask'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'N', '-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-SEM:directional', '-COMP:v', 'PF:avain', '-COMP:V', '-SPEC:ADV', 'LF:key', '-SPEC:FORCE'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'LF:car', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-SEM:directional', '-COMP:v', 'PF:auto', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
city            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'PF:city', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', 'LF:city', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
che             ['LANG:IT']
che-            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', 'LF:who', '-COMP:C/fin', 'LANG:IT', '-SPEC:V', '-COMP:*', '-SPEC:P', 'PF:che', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
chiamato        ['LANG:IT']
chiamata-       {'LF:called', 'ARG', 'PF:chiamato', 'LANG:IT', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
danno           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', 'PF:danno', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'LF:damage', 'N', '-SPEC:FORCE'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'COMP:ARE/inf', 'ARG', 'COMP:D', 'LANG:IT', 'LF:detest', 'COMP:P', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:v', '-SPEC:FORCE', 'PF:detest', '-VAL'}
devono          ['LANG:EN']
deva-           {'COMP:ARE/inf', 'ARG', 'LANG:IT', 'COMP:P', 'SPEC:D', 'SEM:internal', 'LF:must', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', '-ASP', '-COMP:N', 'SPEC:P', 'PF:deva', 'V', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
di              {'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', 'PF:di', '-COMP:uWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:PER:_', '-SPEC:INF', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', '-COMP:N', 'P', '-adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:ADV', 'LF:of', '-SPEC:FORCE', '-COMP:ADV', '-VAL'}
does            {'ARG', 'VAL', '-SPEC:V', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:M', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:C/fin', 'PHI:PER:3', '-SPEC:N', '!COMP:*', 'COMP:T/prt', '-SPEC:Neg', 'COMP:V', '!PROBE:V', 'PF:does', 'T', 'PHI:GEN:_', '-COMP:INF', 'PHI:NUM:SG', 'COMP:v', 'FIN', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:*', '!SPEC:D', 'PHI:NUM:_', '-SPEC:TO/inf', '-SPEC:C', '-SPEC:v', 'COMP:Neg', 'LANG:EN', 'PHI:GEN:F', 'LF:does', 'T/fin', '-SPEC:FORCE'}
does_C          ['LANG:EN']
does-           {'ARG', 'VAL', '-SPEC:V', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:M', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:C/fin', 'PHI:PER:3', '-SPEC:N', '!COMP:*', 'COMP:T/prt', '-SPEC:Neg', 'COMP:V', '!PROBE:V', 'PF:does', 'T', 'PHI:GEN:_', '-COMP:INF', 'PHI:NUM:SG', 'COMP:v', 'FIN', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:*', '!SPEC:D', 'PHI:NUM:_', '-SPEC:TO/inf', '-SPEC:C', '-SPEC:v', 'COMP:Neg', 'LANG:EN', 'PHI:GEN:F', 'LF:does', 'T/fin', '-SPEC:FORCE'}
dorme           ['LANG:IT']
dorme-          {'ARG', 'LF:sleep', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:dorme', '!SPEC:D', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'ARG', 'VAL', '!SPEC:*', 'LANG:FI', '%SPEC:INF', 'FIN', 'POL:NEG', '-SPEC:T/fin', 'SEM:internal', 'PHI:PER:_', 'SPEC:*', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T', 'LF:neg', '!COMP:*', 'COMP:T/prt', 'NEG', 'PF:ei', '!COMP:T', 'Neg/fin'}
e-              {'ARG', 'VAL', '!SPEC:*', 'LANG:FI', '%SPEC:INF', 'FIN', 'POL:NEG', '-SPEC:T/fin', 'SEM:internal', 'PHI:PER:_', 'SPEC:*', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T', 'LF:neg', '!COMP:*', 'COMP:T/prt', 'NEG', 'PF:ei', '!COMP:T', 'Neg/fin'}
elaa            ['LANG:FI']
ela-            {'-COMP:D', 'PF:elaa', 'ARG', 'LANG:FI', 'COMP:P', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:live', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', 'CLASS:INTR', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:MA/inf', '-COMP:v', '-SPEC:FORCE', '-VAL'}
etsii           ['LANG:FI']
etsi-           {'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', 'LF:search', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:etsi', '-COMP:N', 'SPEC:P', 'V', '-COMP:v', '-COMP:V', '!COMP:D', '-SPEC:FORCE', '-VAL'}
etta            {'-VAL', '-ARG', 'COMP:T/fin', 'LANG:FI', 'PF:etta', 'COMP:C/fin', '!COMP:*', 'FORCE', 'FIN', '!PROBE:T/fin', '-SPEC:*', 'LF:that'}
flow'           {'ARG', 'COMP:P', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:v', '-COMP:V', 'LF:flow', '-SPEC:FORCE', 'PF:flow', '-VAL'}
from            {'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', '-SPEC:Neg/fin', 'LF:from', '-COMP:uWH', '-SPEC:T/fin', 'PHI:PER:_', 'PF:from', '-SPEC:INF', '-SPEC:iWH', '-float', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', '-SPEC:*', 'adjoinable', 'P', '-COMP:N', 'LANG:EN', 'TAIL:V,+SEM:directional', '-SPEC:N', '!COMP:*', '-SPEC:ADV', '-SPEC:FORCE', '-COMP:ADV', '-VAL'}
gave            ['LANG:EN']
give-           {'ARG', 'COMP:D', '-COMP:FIN', 'CLASS:DITR', 'COMP:P', '+SEM:directional', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:give', 'SPEC:D', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', 'ASP', 'LF:give', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:uWH', '-COMP:A', 'PF:Giuseppe', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', 'LF:Giuseppe', '-SPEC:V', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-SEM:directional', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'LF:want', 'COMP:A/inf', 'ASP:BOUNDED', 'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:haluaa', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:*', '-VAL'}
hairitsee       ['LANG:FI']
hairitse-       {'ARG', '-COMP:FIN', 'LANG:FI', 'COMP:P', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:v', '-COMP:V', 'LF:disturb', '!COMP:D', '-SPEC:FORCE', 'PF:hairitsee', '-VAL'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'ARG', 'LANG:IT', 'COMP:T', 'COMP:P', 'PF:ha', 'SPEC:D', 'SPEC:*', 'SEM:internal', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', '-ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', 'LF:have', '-COMP:v', '-SPEC:FORCE', '-VAL'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'LF:disappear', '-COMP:D', 'ARG', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:D', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'CLASS:INTR', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:v', '-COMP:V', '-COMP:MA/inf', 'PF:havia', '-SPEC:FORCE', '-VAL'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'CLASS:TR', 'ARG', 'COMP:D', '-COMP:FIN', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:ihaile-', '-COMP:N', 'SPEC:P', 'V', 'LF:admire', '!COMP:*', '-COMP:v', '-COMP:V', '!COMP:D', '-SPEC:FORCE', '-VAL'}
il              {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', 'LANG:IT', '-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', 'LF:the', '-SPEC:C', '-ARG', 'COMP:N', 'D', 'adjoinable', 'PF:il', '!COMP:*', 'OP'}
i               {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', 'LANG:IT', '-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', 'LF:the', '-SPEC:C', '-ARG', 'COMP:N', 'D', 'adjoinable', 'PF:il', '!COMP:*', 'OP'}
in              {'ARG', 'COMP:D', '-SPEC:P', 'LANG:IT', '-SPEC:V', 'PF:in', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:INF', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', 'adjoinable', 'P', '-COMP:N', '-SPEC:N', '!COMP:*', '-SPEC:ADV', '-SPEC:FORCE', '-COMP:ADV', '-VAL', 'LF:in'}
infermieri      {'-SPEC:uWH', '-COMP:A', 'LF:nurses', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', 'PF:infermieri', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
is              ['LANG:EN']
be-             {'COMP:P', 'SPEC:D', 'SPEC:TO/inf', '-SPEC:T/fin', 'SPEC:ADV', '-COMP:T/fin', '-COMP:TO/inf', 'ASP', 'PF:be', '-ARG', 'LF:be', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', 'COPULA', '-VAL'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:D', 'ARG', 'LANG:FI', 'PF:istuu', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:D', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'CLASS:INTR', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:MA/inf', '-COMP:v', '-SPEC:FORCE', '-VAL', 'LF:sit'}
John            ['LANG:EN']
John-           {'-SPEC:uWH', '-COMP:A', 'PF:John', 'LF:John', '-COMP:WH', '-SPEC:V', '-COMP:C/fin', '-SPEC:P', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', '-adjoinable', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-SEM:directional', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', 'LF:who', '-COMP:C/fin', 'PF:joka', 'LANG:FI', '-SPEC:V', '-COMP:*', '-SPEC:P', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'LF:Jukka', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-SEM:directional', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'PF:Jukka', 'N', '-SPEC:FORCE'}
juosten         ['LANG:FI']
juokse-         {'PF:juokse-', 'ARG', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'LF:run', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
istuu           ['LANG:FI']
istu-           {'ARG', 'LANG:FI', 'PF:istuu', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL', 'LF:sit'}
kaksi           {'NUM', 'COMP:N', 'ARG', 'PHI:NUM:SG', 'LANG:FI', 'PHI:DET:_', 'PF:kaksi', 'COMP:n', 'TAIL:ARG,VAL,FIN', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', 'LF:two', '-VAL'}
kaksi           {'NUM', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'COMP:N', 'LANG:EN', 'PF:kaksi', 'COMP:n', 'SPEC:*', 'LF:two'}
kaksi_1         {'NUM', 'COMP:N', 'ARG', 'PHI:NUM:SG', 'LANG:FI', 'PHI:DET:_', 'PF:kaksi', 'COMP:n', 'TAIL:ARG,VAL,FIN', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', 'LF:two', '-VAL'}
kaksi_2         {'NUM', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'COMP:N', 'LANG:EN', 'PF:kaksi', 'COMP:n', 'SPEC:*', 'LF:two'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'NUM', 'PF:kaksi', 'COMP:n', 'COMP:N', 'SPEC:*', 'LANG:FI', 'LF:two'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:uR', '-COMP:P', '-SPEC:T/fin', 'PF:kaupunki', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', 'LF:city', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'SEM:external', 'ARG', 'LANG:FI', '!COMP:A/inf', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'LF:order', 'V', '-COMP:V', 'PF:kaske', '-COMP:v', '-SPEC:FORCE', '-VAL'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'LF:watch', '-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', 'PF:kello', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
kello0-         {'LF:watch', 'LANG:FI', 'SPEC:D', '2SPEC', '0', 'PF:kello'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'N', '-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', 'PF:key', '-COMP:N', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'LF:key', '-SPEC:FORCE'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'PF:kirja', '-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'LF:book', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-SEM:directional', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
kohti           {'-VAL', 'LF:towards', 'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:PER:_', '-SPEC:INF', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', 'adjoinable', 'P', '-COMP:N', '-SPEC:N', '!COMP:*', '-SPEC:ADV', 'TAIL:V', '-SPEC:FORCE', '-COMP:ADV', 'PF:kohti'}
koko            {'PF:koko', 'TAIL:T', '-COMP:uR', '-COMP:D', 'LF:all', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', '-SPEC:C', '-ARG', 'COMP:N', 'D', 'adjoinable', '!COMP:*', 'OP'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:uWH', 'PF:kuka', '-COMP:A', '-COMP:WH', 'LF:who', '-COMP:C/fin', '-SPEC:V', 'LANG:FI', '-SPEC:P', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'PHI', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
kuorsaa-        {'-COMP:D', 'ARG', 'LF:snore', '-COMP:WH', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'PF:kuorsaa', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
kuorsaamalla    ['LANG:FI']
lahella         {'ARG', 'VAL', '!SPEC:*', 'LANG:FI', '-SPEC:V', '-SPEC:Neg/fin', '-COMP:uWH', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', 'PF:lahella', '-SPEC:C/fin', 'adjoinable', '-SPEC:N', '!COMP:*', 'COMP:V', 'COMP:D', '-SPEC:P', '-COMP:C/fin', 'COMP:v', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'SPEC:*', '!SPEC:D', '-SPEC:INF', 'PHI:NUM:_', '-SPEC:C', '-SPEC:iR', '-SPEC:v', '-COMP:N', 'P', 'LF:near', '-SPEC:ADV', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:iWH'}
lahella         {'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:PER:_', '-SPEC:INF', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'PF:lahella', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', 'adjoinable', 'P', '-COMP:N', '-SPEC:N', '!COMP:*', 'LF:near', '-SPEC:ADV', '!COMP:D', '-SPEC:FORCE', '-COMP:ADV', '-VAL'}
lahella_1       {'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:PER:_', '-SPEC:INF', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'PF:lahella', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', 'adjoinable', 'P', '-COMP:N', '-SPEC:N', '!COMP:*', 'LF:near', '-SPEC:ADV', '!COMP:D', '-SPEC:FORCE', '-COMP:ADV', '-VAL'}
lahella_2       {'ARG', 'VAL', '!SPEC:*', 'LANG:FI', '-SPEC:V', '-SPEC:Neg/fin', '-COMP:uWH', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', 'PF:lahella', '-SPEC:C/fin', 'adjoinable', '-SPEC:N', '!COMP:*', 'COMP:V', 'COMP:D', '-SPEC:P', '-COMP:C/fin', 'COMP:v', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'SPEC:*', '!SPEC:D', '-SPEC:INF', 'PHI:NUM:_', '-SPEC:C', '-SPEC:iR', '-SPEC:v', '-COMP:N', 'P', 'LF:near', '-SPEC:ADV', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:iWH'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-COMP:D', 'ARG', 'LANG:FI', 'COMP:PP', 'LF:leave', 'COMP:P', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'CLASS:INTR', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:lahtea', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:MA/inf', '-COMP:v', '-SPEC:FORCE', '-VAL'}
lavano          ['LANG:IT']
lava-           {'ARG', 'COMP:D', 'LANG:IT', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:wash', 'PHI:PER:_', 'SPEC:ADV', 'PF:lava', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', 'LANG:IT', '-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', 'LF:D', '-SPEC:C', '-ARG', 'COMP:N', 'D', 'adjoinable', '!COMP:*', 'OP', 'PF:le'}
leaves          ['LANG:EN']
leave           {'ARG', 'LF:leave', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', '!SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'LANG:EN', 'V', '-COMP:V', '-COMP:v', '-SPEC:FORCE', 'PF:leave', '-VAL'}
leave-          {'ARG', 'LF:leave', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', '!SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:V', '-COMP:v', '-SPEC:FORCE', 'PF:leave', '-VAL'}
like-           {'ARG', 'COMP:P', 'LF:like', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:like', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:V', '!COMP:D', '-COMP:v', '-SPEC:FORCE', '-VAL'}
likes           ['LANG:EN']
like            {'ARG', 'COMP:P', 'LF:like', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:like', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:V', '!COMP:D', '-COMP:v', '-SPEC:FORCE', '-VAL'}
little          ['LANG:EN']
little-         {'2SPEC', 'PF:little-', 'SPEC:D', 'LF:little', '0', 'LANG:EN'}
lle             {'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', '+SEM:directional', '-COMP:uWH', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:INF', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:T/fin', 'PHI:NUM:_', 'PF:P(lle)', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', 'adjoinable', 'P', '-COMP:N', 'TAIL:V,+SEM:directional', '-SPEC:N', '!COMP:*', '-SPEC:ADV', 'LF:for', '-SPEC:*', '-COMP:ADV', '-VAL'}
lla             {'TAIL:T', 'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', 'LF:by', '-COMP:uWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:PER:_', '-SPEC:INF', 'TAIL:*V', '-SPEC:iWH', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', 'PF:P(lla)', 'adjoinable', 'P', '-COMP:N', '-SPEC:N', '!COMP:*', '-SPEC:ADV', '-SPEC:FORCE', '-COMP:ADV', '-VAL'}
Luisa           ['LANG:IT']
Luisa-          {'LF:Luisa', '-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', 'PF:Luisa', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-SEM:directional', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
lukemalla       ['LANG:FI']
luke-           {'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PF:luke', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL', 'LF:read'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'ASP:BOUNDED', 'CLASS:TR', 'ARG', 'COMP:D', 'LF:find', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:loyta-', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:v', '-COMP:V', '!COMP:D', '-SPEC:FORCE', '-VAL'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', 'PF:Mary', '-SPEC:V', '-SPEC:P', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', '-adjoinable', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-SEM:directional', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'LF:Mary', 'N', '-SPEC:FORCE'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:Merja', 'COMP:R', '-SPEC:C/fin', 'LF:Merja', '-COMP:N', '-adjoinable', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-SEM:directional', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'PF:malla', 'TAIL:T', '-SPEC:FORCE', 'adjoinable', 'COMP:v', 'LANG:FI', '-SPEC:N', '-SPEC:Neg/fin', 'LF:by', '-SPEC:T/fin', 'SPEC:*', 'MA/inf', 'ADV'}
meren           ['LANG:FI']
mere-           {'LF:ocean', '-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', 'PF:meri', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
mies            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'LF:man', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', 'PF:mies'}
mistake         {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'PF:mistake', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', 'LF:mistake', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'LF:what', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', 'PF:mika-', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'CLASS:TR', 'ARG', 'COMP:D', 'COMP:P', '-COMP:P', '+SEM:directional', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'LF:move', 'LANGN:EN', 'ASP', 'PF:move', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
mukavasti       ['LANG:EN']
mukava-         {'2SPEC', 'LF:comfortably', 'LANG:FI', 'SPEC:D', 'PF:mukavasti', '0'}
must            {'-COMP:INF', 'SPEC:*', 'PF:must', 'MODAL', 'ARG', 'VAL', '-SPEC:V', 'COMP:v', 'FIN', 'SPEC:D', '-SPEC:T/fin', 'LF:must', 'SPEC:TO/inf', 'PHI:PER:_', '!SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:TO/inf', '-SPEC:C/fin', '-SPEC:C', '-SPEC:v', 'COMP:Neg', 'LANG:EN', '-SPEC:N', '!COMP:*', 'COMP:T/prt', '-SPEC:Neg', 'COMP:V', '!PROBE:V', 'T/fin', 'T', '-SPEC:FORCE'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-VAL', 'ASP:BOUNDED', 'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', 'LF:sell', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', 'PF:myy'}
naki            ['LANG:FI']
nake-           {'ASP:BOUNDED', 'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', '-COMP:ESSA/inf', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'LF:see', 'ASP', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:v', '-COMP:V', '-COMP:MA/tta', '-SPEC:FORCE', 'PF:nake', '-VAL'}
nayttaa         ['LANG:FI']
naytta-         {'VAL', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', 'LF:seem', 'SPEC:ADV', '!SPEC:D', '-COMP:T/fin', 'ASP', '-ARG', '!COMP:VA/inf', '-COMP:N', 'SPEC:P', 'V', 'PF:naytta', '-COMP:V', '-COMP:v', '-SPEC:FORCE'}
ndo             {'?ARG', '-COMP:C/fin', 'VAL', '-SPEC:V', 'LF:ing', 'LANG:EN', 'COMP:v', '!COMP:*', 'INF', '-COMP:FORCE', 'COMP:V', '-SPEC:T/fin', '-COMP:T/fin', 'PF:PRG', 'PRG'}
ne              {'PF:ne', '-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', '-SPEC:C', '-ARG', 'PHI:NUM:PL', 'COMP:N', 'D', 'adjoinable', 'PHI:PER:3', '!COMP:*', 'OP', 'LF:those'}
niiden          ['LANG:EN']
nen             {'adjoinable', 'LANG:FI', 'LF:ing', '-SPEC:A', '-SPEC:D', 'SPEC:*', 'TAIL:D', 'PF:a', 'A', 'COMP:0'}
not             {'-COMP:D', 'ARG', 'PF:not', 'LF:not', '-COMP:FIN', 'Neg', 'LANG:EN', '!COMP:*', 'PHI:DET:_', 'POL:NEG', '-SPEC:T/fin', 'SPEC:*', 'PHI:PER:_', '-COMP:C', 'PHI:NUM:_', 'PHI:GEN:_', '-VAL'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:D', 'ARG', '-COMP:T', 'LF:sleep', 'LANG:FI', 'COMP:P', 'SPEC:D', '-COMP:Neg/fin', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', 'CLASS:INTR', 'PHI:DET:_', 'ASP', 'PF:nukku', '-COMP:N', 'SPEC:P', 'V', '-COMP:MA/inf', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'LF:possessions', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', 'PF:omaisuuden'}
operatoria      ['LANG:IT']
operatoria-     {'SPEC:D', '2SPEC', 'LF:operation', 'LANG:IT', '0', 'PF:operatoria'}
ostaa           ['LANG:FI']
osta-           {'ASP:BOUNDED', 'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:v', 'LF:buy', '-COMP:V', 'PF:osta', '-SPEC:FORCE', '-VAL'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'LF:day', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:R', 'PF:paiva', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', 'SEM:nonreferential'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'LF:Paris', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', 'PF:Pariisi', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', 'PF:Pekka', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-SEM:directional', '-COMP:v', '-COMP:V', 'LF:Pekka', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
pelottaa        ['LANG:FI']
pelkaa-         {'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:pelkaa', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', 'LF:fear', '-VAL'}
persuades       ['LANG:EN']
persuade-       {'SEM:external', 'ARG', 'PF:persuade', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'COMP:TO/inf', 'ASP', 'LF:persuade', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
peruuntui       ['LANG:FI']
peruuntu-       {'PF:peruuntui', 'ARG', 'LANG:FI', 'COMP:P', 'LF:cancelled', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'ASP:BOUNDED', 'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:wash', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'PF:pese', 'ASP', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
pese-           {'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:wash', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'PF:pese', 'ASP', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
petardi         {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', 'PF:petardi', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', 'LF:firecrackers', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
pieni           ['LANG:FI']
pieni-          {'LF:small', 'SPEC:D', '2SPEC', 'PF:pieni-', 'LANG:FI', '0'}
poikien         ['LANG:FI']
poika-          {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', 'PF:poika', 'LF:boy', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
puhelinta       ['LANG:FI']
puhelin-        {'LANG:FI', 'SPEC:D', '2SPEC', 'PF:puhelin', '0', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'LANG:FI', 'SPEC:D', '2SPEC', 'PF:puna-', '0', 'LF:red'}
presupposto     {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:presupposition', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE', 'PF:presupposto'}
primary         {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', 'LF:nurse', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', 'PF:primary'}
promises        ['LANG:EN']
promise-        {'ARG', 'COMP:D', 'LF:promise', 'COMP:P', 'SPEC:D', 'SEM:internal', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', 'PF:promise', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
pyytaa          ['LANG:FI']
pyyta-          {'SEM:external', 'PF:pyyda', 'ARG', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL', 'LF:ask'}
raukesi         ['LANG:FI']
raukea-         {'ARG', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PF:raukea', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'LF:terminate', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
red             ['LANG:EN']
red-            {'PF:red', 'SPEC:D', '2SPEC', '0', 'LANG:EN', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'ASP:BOUNDED', 'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PF:saavutta-', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'LF:reach', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:v', '-COMP:V', '!COMP:D', '-SPEC:FORCE', '-VAL'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'COMP:VA/inf', 'ARG', 'LF:say', 'LANG:FI', 'COMP:P', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'COMP:FORCE', 'SPEC:P', 'V', 'PF:sano-', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
said            ['LANG:EN']
say'            {'ARG', 'LF:say', 'COMP:P', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', 'PF:say', '!COMP:FORCE', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
say-            {'ARG', 'LF:say', 'COMP:P', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', 'PF:say', '!COMP:FORCE', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
sala            ['LANG:IT']
sala-           {'-SPEC:uWH', '-COMP:A', 'LF:room', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'PF:sala', 'N', '-SPEC:FORCE'}
scoppiati       ['LANG:IT']
scoppia-        {'ARG', 'LANG:IT', 'LF:explode', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:scoppia', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
sen             {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', 'TAIL:*POL:NEG', 'TAIL:PHI', 'LF:the/that', '-SPEC:P', 'LANG:FI', '!PROBE:N', '-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', '-SPEC:C', '-ARG', 'COMP:N', 'TAIL:ASP', 'D', 'adjoinable', '!COMP:*', 'OP', 'PF:sen'}
se'             {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', 'LF:the/that', '!PROBE:N', 'LANG:FI', '-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', '-SPEC:C', '-ARG', 'PF:se', 'COMP:N', 'D', 'adjoinable', '!COMP:*', 'OP'}
se              {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', 'LF:the/that', '!PROBE:N', 'LANG:FI', '-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', '-SPEC:C', '-ARG', 'PF:se', 'COMP:N', 'D', 'adjoinable', '!COMP:*', 'OP'}
se              ['LANG:FI']
sentenza        {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', 'PF:sentenza', 'LF:sentence', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'PF:Seine', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:v', '-COMP:AUX', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE', 'LF:Seine'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:D', 'PF:sembra', 'COMP:P', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:seem', 'SPEC:ADV', '-COMP:T/fin', '-ARG', '-ASP', '-COMP:N', 'SPEC:P', 'V', '!COMP:ARE/inf', 'LANG:EN', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
sleeps          ['LANG:EN']
sleep           {'PF:sleep', '-COMP:D', 'ARG', 'LF:sleep', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:D', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', 'CLASS:INTR', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:V', '-COMP:MA/inf', '-COMP:v', '-SPEC:FORCE', '-VAL'}
sleep-          {'PF:sleep', '-COMP:D', 'ARG', 'LF:sleep', 'COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:D', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', 'CLASS:INTR', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:V', '-COMP:MA/inf', '-COMP:v', '-SPEC:FORCE', '-VAL'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', '!COMP:A/inf', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:sopimus', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', 'LF:agreement', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
spinge          ['LANG:IT']
spinge-         {'ARG', 'LANG:IT', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:spinge', '-COMP:N', 'SPEC:P', 'V', '-COMP:V', '!COMP:D', 'LF:push', '-COMP:v', '-SPEC:FORCE', '-VAL'}
ssa             {'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:PER:_', '-SPEC:INF', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', 'adjoinable', 'P', '-COMP:N', '-SPEC:N', '!COMP:*', 'PF:ssa', '-SPEC:ADV', 'TAIL:V', '-COMP:ADV', '-SPEC:FORCE', 'COMP:n/MA', '-VAL', 'LF:in'}
stanno          ['LANG:IT']
sta-            {'PF:sta', 'ARG', 'LF:stay', 'COMP:P', 'SPEC:D', 'SEM:internal', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', '-ASP', '-COMP:N', 'SPEC:P', 'V', 'COMP:PRG', 'LANG:EN', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
sti             {'TAIL:T', '-ARG', '-SPEC:FORCE', 'PF:sti', 'adjoinable', 'LANG:FI', '-SPEC:N', '!COMP:*', '-SPEC:Neg/fin', 'LF:by', '-SPEC:T/fin', 'SPEC:*', 'ADV'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:sukka-', 'COMP:R', 'LF:socks', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
talo            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', 'LF:house', 'PF:talo', '-COMP:N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
tama            ['LANG:EN']
tama-           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', 'PF:tama', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'PHI', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', 'LF:this', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'ARG', 'MODAL', 'LANG:FI', '!COMP:A/inf', 'COMP:P', 'FIN', '-SPEC:T/fin', 'SPEC:*', 'LF:must', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', '-ASP', '-COMP:N', 'SPEC:P', 'V', 'PF:taytyy', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
teki            ['LANG:FI']
teke-           {'ASP:BOUNDED', 'PF:teke', 'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', 'LF:make', '-COMP:V', '!COMP:D', '-COMP:A/inf', '-COMP:v', '-SPEC:FORCE', '-VAL'}
that            {'-VAL', '-ARG', 'PF:that', 'COMP:T/fin', 'LANG:EN', 'COMP:C/fin', '!COMP:*', 'FORCE', 'FIN', '!PROBE:T/fin', '-SPEC:*', 'LF:that'}
the             {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', '-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', 'PF:the', '-SPEC:INF', 'PHI:DEF:DEF', '-COMP:T/fin', 'LF:the', '-SPEC:C', '-ARG', 'COMP:N', 'D', 'adjoinable', 'LANG:EN', '!COMP:*', 'OP'}
to              {'LF:to', 'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', '-SPEC:Neg/fin', '+SEM:directional', '-COMP:uWH', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:INF', '-SPEC:iWH', '-float', '-COMP:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:C', 'PHI:GEN:_', '-SPEC:iR', '-SPEC:v', 'adjoinable', 'P', '-COMP:N', 'LANG:EN', 'TAIL:V,+SEM:directional', '-SPEC:N', 'PF:to', '!COMP:*', '-SPEC:ADV', '-SPEC:*', '-COMP:ADV', '-VAL'}
to_inf          {'-COMP:C/fin', '-SPEC:V', 'COMP:v', 'PF:TO/inf', 'INF', 'LF:TO/inf', '-COMP:FORCE', '-SPEC:T/fin', '-COMP:T/fin', '?ARG', 'TO/inf', '-SPEC:v', 'adjoinable', 'LANG:EN', '!COMP:*', 'COMP:V', '-VAL'}
towards         {'LF:towards', 'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:T/fin', 'PHI:PER:_', 'PF:towards', '-SPEC:INF', '-SPEC:iWH', '-float', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', '-SPEC:*', 'adjoinable', 'P', '-COMP:N', 'LANG:EN', '-SPEC:N', '!COMP:*', '-SPEC:ADV', 'TAIL:V', '-SPEC:FORCE', '-COMP:ADV', '-VAL'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'CLASS:TR', 'ARG', 'COMP:D', 'LANG:FI', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:tonaise', '-COMP:N', 'SPEC:P', 'V', '!COMP:*', '-COMP:V', 'LF:nudge', '-COMP:v', '-SPEC:FORCE', '-VAL'}
tta             {'PF:tta', 'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:PER:_', '-SPEC:INF', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'LF:without', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '-SPEC:v', 'adjoinable', 'P', '-COMP:N', '-SPEC:N', '!COMP:*', '-SPEC:ADV', '-COMP:ADV', 'ADV', 'COMP:n/MA', '-VAL'}
tries           ['LANG:EN']
try-            {'LF:try', 'ARG', 'PF:try', 'COMP:P', 'SPEC:D', '!COMP:-ARG', 'SEM:internal', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', 'ASP', '!COMP:TO/inf', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
verifiche       {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', 'PF:verifiche', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'COMP:C', 'LF:verification', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:D', 'ARG', 'LANG:FI', 'COMP:P', 'SPEC:D', 'PF:virtaa', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '!COMP:P', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', '-COMP:v', '-COMP:V', 'LF:flow', '-SPEC:FORCE', '-VAL'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'LF:want', 'ARG', 'COMP:P', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:volu', 'SPEC:ADV', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:*', '-VAL'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'ASP:BOUNDED', 'CLASS:TR', 'ARG', 'COMP:D', 'LF:win', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'SEM:achievement', 'V', 'LANG:EN', '!COMP:*', '-COMP:V', 'PF:voitta', '-COMP:v', '-SPEC:FORCE', '-VAL'}
wants           ['LANG:EN']
want-           {'LF:want', 'CLASS:TR', 'ARG', 'COMP:D', 'COMP:P', '-COMP:P', '-SPEC:T/fin', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:TO/inf', 'COMP:TO/inf', 'ASP', '-COMP:N', 'SPEC:P', 'PF:want', 'V', 'LANG:EN', '!COMP:*', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
what            ['LANG:EN']
what-           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', 'PF:what', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'LF:what', 'LANG:EN', 'COMP:C', '-SPEC:N', 'SPEC:A', '-COMP:v', '-COMP:AUX', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
which           {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', '-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', 'OP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:C', '-ARG', 'COMP:N', 'D', 'adjoinable', 'LF:which', 'LANG:EN', '!COMP:*', 'PF:which', 'OP'}
who             ['LANG:EN']
who-            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', 'LF:who', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', 'PF:who', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
whether         {'Q', 'COMP:T/fin', 'COMP:C/fin', 'FIN', 'OP:WH', 'PF:whether', '-ARG', 'LANG:EN', 'OP:Q', '!COMP:*', 'LF:whether', 'FORCE', 'OP', '!PROBE:T/fin', '-SPEC:*', '-VAL'}
yrittaa         ['LANG:FI']
yritta-         {'LF:try', 'PF:yritta', 'ARG', '!COMP:A/inf', 'COMP:P', 'SPEC:D', '!COMP:-ARG', 'SEM:internal', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
mina            ['LANG:EN']
mina-           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-COMP:*', 'PF:mina', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE', 'LF:I'}
sina            ['LANG:EN']
sina-           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-COMP:*', 'COMP:P', 'COMP:uR', 'LF:you', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:sina', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
han             ['LANG:EN']
han-            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', 'PF:han', '-SPEC:C/fin', 'LF:s/he', 'PHI_N', '-COMP:N', 'COMP:C', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'LF:we', '-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', 'PF:me', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
te              ['LANG:EN']
te-             {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-COMP:*', 'COMP:P', 'COMP:uR', 'LF:you', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', 'PF:te', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'LANG:FI', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', 'PF:he', '-SPEC:C/fin', 'LF:they', 'PHI_N', '-COMP:N', 'COMP:C', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
se-             {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', '-SPEC:V', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', '-SPEC:C', '-ARG', 'LF:it/that', 'PF:se', 'COMP:N', 'D', 'adjoinable', '!COMP:*', 'OP'}
I               ['LANG:EN']
I-              {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'PF:I', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE', 'LF:I'}
you             ['LANG:EN']
you-            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', 'PF:you', '-SPEC:V', '-SPEC:P', '-COMP:*', 'COMP:P', 'COMP:uR', 'LF:you', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
he              ['LANG:EN']
he-             {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', 'PF:he', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'LF:he', 'N', '-SPEC:FORCE'}
she             ['LANG:EN']
she-            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', 'LF:she', '-COMP:v', '-COMP:AUX', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE', 'PF:she'}
we              ['LANG:EN']
we-             {'LF:we', '-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', 'PF:we', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:uWH', 'PF:you_pl', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'COMP:P', 'COMP:uR', 'LF:you_pl', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'SPEC:A', 'PHI', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
they            ['LANG:EN']
they-           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'PF:they', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', 'LF:they', 'PHI_N', '-COMP:N', 'LANG:EN', 'COMP:C', '-SPEC:N', 'SPEC:A', '-COMP:v', '-COMP:AUX', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
it              ['LANG:EN']
it-             {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', '-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', '-SPEC:C', '-ARG', 'LF:it/that', 'COMP:N', 'D', 'adjoinable', 'LANG:EN', 'PF:it', '!COMP:*', 'OP'}
io              ['LANG:EN']
io-             {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', 'PF:io', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE', 'LF:I'}
tu              ['LANG:EN']
tu-             {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', 'LF:you', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', 'PF:tu', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
lui             ['LANG:EN']
lui-            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', 'PF:lui', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'LF:he', 'N', '-SPEC:FORCE'}
lei             ['LANG:EN']
lei-            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', 'PF:lei', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', 'LF:she', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
noi             ['LANG:EN']
noi-            {'LF:we', '-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'PF:noi', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
voi             ['LANG:EN']
voi-            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', 'LF:you_pl', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', 'PF:voi', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
loro            ['LANG:EN']
loro-           {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:loro', 'COMP:R', '-SPEC:C/fin', 'LF:they', 'PHI_N', '-COMP:N', 'COMP:C', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
mi              ['LANG:EN']
mi-             {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', 'CL', '-SPEC:T/fin', 'PF:mi(cl)', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', 'LF:me', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
la              ['LANG:EN']
la-             {'-SPEC:uWH', 'PF:la(cl)', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', 'CL', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', 'LF:her', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
lo              ['LANG:EN']
lo-             {'-SPEC:uWH', '-COMP:A', '-COMP:WH', 'LF:him', '-COMP:C/fin', 'LANG:IT', '-SPEC:V', '-COMP:*', '-SPEC:P', 'COMP:P', 'COMP:uR', 'CL', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', 'PF:lo(cl)', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
si              ['LANG:EN']
si-             {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:3sg', 'COMP:R', 'CAL:CL', '-SPEC:C/fin', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', 'PF:si(cl)', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-SPEC:V', '-COMP:*', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'PF:ci', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', 'LF:there', '-COMP:N', 'PHI_N', 'SPEC:A', 'COMP:C', '-SPEC:N', '-COMP:AUX', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
[-n]            {'LANG:FI', 'PHI:PER:1', 'inflectional', 'PHI:NUM:SG', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-t]            {'PHI:PER:2', 'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-V]            {'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI', 'PHI:PER:3'}
[-mme]          {'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:1', 'inflectional', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-mme]          {'PHI:NUM:PL', 'PHI:PER:1', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-tte]          {'PHI:PER:2', 'LANG:FI', 'PHI:NUM:PL', 'inflectional', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-vat]          {'LANG:FI', 'PHI:NUM:PL', 'inflectional', 'PHI', 'PHI:PER:3'}
[-ni]           {'LANG:FI', 'PHI:PER:1', 'inflectional', 'PHI:NUM:SG', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-si]           {'PHI:PER:2', 'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-nsa]          {'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI', 'PHI:PER:3'}
[-an]           {'inflectional', 'PHI', 'LANG:FI', 'PHI:PER:3'}
[-nne]          {'PHI:PER:2', 'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-s]            {'PHI:GEN:F', 'inflectional', 'PHI:NUM:SG', 'PHI:GEN:M', 'PHI', 'LANG:EN', 'PHI:PER:3'}
[-0]            {'PHI:PER:2', 'PHI:NUM:PL', 'PHI:GEN:N', 'inflectional', 'PHI:NUM:SG', 'PHI', 'LANG:EN', 'PHI:PER:3', 'PHI:PER:1', 'PHI:DET:DEF'}
[-o]            {'PHI:PER:1', 'inflectional', 'PHI:NUM:SG', 'LANG:IT', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-i]            {'PHI:PER:2', 'inflectional', 'PHI:NUM:SG', 'LANG:IT', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-a]            {'inflectional', 'PHI:NUM:SG', 'LANG:IT', 'PHI', 'PHI:PER:3', 'PHI:DET:DEF'}
[-e]            {'inflectional', 'PHI:NUM:SG', 'LANG:IT', 'PHI', 'PHI:PER:3', 'PHI:DET:DEF'}
[-iamo]         {'PHI:NUM:PL', 'PHI:PER:1', 'inflectional', 'LANG:IT', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-te]           {'PHI:PER:2', 'PHI:NUM:PL', 'inflectional', 'LANG:IT', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-no]           {'PHI:NUM:PL', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:3', 'PHI:DET:DEF'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'inflectional', 'adjoinable', 'LANG:EN', 'NOM'}
[-par]          {'PAR', 'inflectional', 'adjoinable', 'LANG:FI', 'TAIL:ARG,-VAL'}
[-gen]          {'TAIL:INF,ARG', 'inflectional', '-float', 'LANG:EN', 'GEN'}
gen             {'TAIL:INF,ARG', 'inflectional', '-float', 'LANG:EN', 'GEN'}
[-n_acc]        {'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'inflectional', 'adjoinable', 'n-ACC', 'LANG:FI', 'TAIL:PHI'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'inflectional', 'adjoinable', 't-ACC', 'LANG:FI'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'TAIL:*PHI', 'adjoinable', 'inflectional', '0_ACC', 'LANG:FI'}
asp             {'ASP:BOUNDED', 'inflectional', 'LANG:EN'}
a'              {'a', 'LF:A', 'PF:a', 'LANG:X'}
b'              {'b', 'LANG:X', 'PF:b', 'LF:B'}
b''             {'b', 'PF:b', '-COMP:c', 'LANG:EN', 'LF:B'}
c''             {'PF:c', 'LF:C', 'c', 'SPEC:a', 'LANG:EN'}
c'              {'c', 'PF:c', 'LF:C', 'LANG:X'}
d'              {'LANG:', 'LF:D', 'PF:d', 'd'}
a''             ['LANG:EN']
x'              {'x', 'PF:x', 'LF:X', 'LANG:X'}
y'              {'y', 'LANG:X', 'PF:y', 'LF:Y'}
z'              {'LANG:X', 'PF:x', 'LF:Z', 'z'}
John'           {'PF:John', "N'", 'LANG:X', 'LF:John'}
admires'        {'PF:admires', 'LANG:X', "V'", 'LF:admires'}
admires''       {'ARG', 'PF:admires', 'COMP:P', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'LF:admires', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-VAL'}
Mary'           {"N'", 'LF:mary', 'PF:Mary', 'LANG:X'}
T/fin           {'-COMP:INF', 'ARG', 'VAL', '-SPEC:V', 'COMP:v', 'FIN', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:*', '!SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:TO/inf', 'LF:T', 'PF:T', '-SPEC:C/fin', '-SPEC:C', '-SPEC:v', 'LANG:EN', '-SPEC:N', '!COMP:*', 'COMP:T/prt', '-SPEC:Neg', 'COMP:V', '!PROBE:V', 'T/fin', 'T', '-SPEC:FORCE'}
v               {'PF:v', 'ASP', 'ARG', 'LANG:EN', '-SPEC:N', '!COMP:*', 'v', 'PHI:DET:_', 'COMP:V', 'LF:v', '!PROBE:V', 'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-VAL'}
C/fin           {'C/fin', '-COMP:C/fin', 'VAL', '-COMP:T/prt', 'COMP:T/fin', 'C', 'FIN', '-SPEC:T/fin', 'SPEC:*', 'COMP:Neg/fin', 'LF:C/fin', '-SPEC:C/fin', '-ARG', '!PROBE:FIN', 'LANG:EN', '-SPEC:N', '!COMP:*', 'PF:C'}
T               {'ARG', 'VAL', '-SPEC:V', 'COMP:v', 'FIN', 'SPEC:D', '-SPEC:T/fin', 'PHI:PER:_', 'SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', 'PHI:DET:_', 'LF:T', 'PF:T', 'LANG:EN', '-SPEC:N', '!COMP:*', 'COMP:T/prt', '-COMP:NEG', 'COMP:V', '!PROBE:V', 'T', '-SPEC:FORCE'}
T/prt           {'T/prt', 'ARG', 'COMP:D', 'VAL', '-SPEC:V', 'COMP:v', 'LF:T/prt', 'FIN', 'SPEC:D', 'SPEC:*', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN', '-SPEC:N', 'PF:T/prt', '!COMP:*', 'COMP:T/prt', '-COMP:NEG', 'COMP:V', '!PROBE:V', 'T', '-SPEC:FORCE'}
a0              {'adjoinable', 'PF:A', '-adjoinable', 'LANG:EN', 'LF:A', '-SPEC:A', '-SPEC:D', 'TAIL:D', 'A', 'COMP:0'}
n               {'-SPEC:uWH', 'ARG', 'n', 'VAL', '-SPEC:V', '!SPEC:*', 'PHI:PER:_', '-SPEC:R', 'COMP:R/D', 'COMP:R', 'PHI:DET:_', '-SPEC:C/fin', 'COMP:C', '-SPEC:N', '!COMP:*', 'COMP:V', '-COMP:v', 'PHI:GEN:_', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', 'COMP:v', 'COMP:P', 'COMP:uR', 'INF', '-SPEC:T/fin', 'SPEC:*', '-SPEC:INF', '!SPEC:D', 'PHI:NUM:_', 'COMP:0', 'LF:n', '-COMP:N', 'SPEC:A', 'LANG:EN', '-COMP:AUX', 'PF:n', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
impass          {'ASP', 'LF:impass', 'PF:impass', 'ARG', 'LANG:EN', '-SPEC:N', '!COMP:*', 'v', 'PHI:DET:_', 'COMP:V', '!PROBE:V', 'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-VAL'}
cau             {'ASP', 'ARG', 'LANG:EN', '-SPEC:N', 'LF:v/Cause', '!COMP:*', 'PF:Cau', 'v', 'COMP:V', '!PROBE:V', 'SPEC:D', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-VAL'}
INF             {'-COMP:C/fin', 'PF:INF', '-SPEC:V', 'LANG:EN', 'COMP:v', '!COMP:*', 'INF', '-COMP:FORCE', 'COMP:V', '-SPEC:T/fin', '-COMP:T/fin', 'LF:INF'}
prtcpl          {'T/prt', 'ARG', 'COMP:D', '-COMP:C/fin', 'VAL', '-SPEC:V', 'COMP:v', 'LF:T/prt', 'INF', '-COMP:FORCE', 'FIN', 'SPEC:D', '-SPEC:T/fin', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', '-SPEC:N', 'PF:T/prt', '!COMP:*', 'COMP:T/prt', '-COMP:NEG', 'COMP:V', '!PROBE:V', 'T', '-SPEC:FORCE'}
TO/inf          {'!COMP:V', '-COMP:C/fin', '-SPEC:V', 'COMP:v', 'PF:TO/inf', 'INF', 'LF:TO/inf', '-COMP:FORCE', '-SPEC:T/fin', '-COMP:T/fin', '?ARG', 'TO/inf', '-SPEC:v', 'adjoinable', 'LANG:EN', '!COMP:*', 'COMP:V', '-VAL'}
A/inf           {'PF:A/inf', 'LF:A/inf', '-COMP:C/fin', '-SPEC:V', 'COMP:v', '-SPEC:Neg/fin', '?VAL', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'SPEC:*', '-COMP:T/fin', '?ARG', 'LANG:EN', '!COMP:*', 'A/inf', 'COMP:V'}
ARE/inf         {'PF:are', '-COMP:C/fin', 'VAL', '-SPEC:V', 'COMP:v', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'SPEC:*', '-COMP:T/fin', '?ARG', 'LF:ARE/inf', '-adjoinable', 'LANG:EN', '!COMP:*', 'COMP:V', 'ARE/inf'}
ESSA/inf        {'TAIL:T', 'ESSA/inf', '-COMP:C/fin', '-SPEC:V', 'COMP:v', '?VAL', '-SPEC:Neg/fin', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'SPEC:*', '-SPEC:FORCE', '-COMP:T/fin', 'PF:essa', '?ARG', 'adjoinable', 'LANG:EN', '-SPEC:N', 'LF:while', '!COMP:*', 'COMP:V', 'ADV'}
TUA/inf         {'TAIL:T', 'ARG', '-COMP:C/fin', 'VAL', '!SPEC:*', '-SPEC:V', 'COMP:v', '-SPEC:Neg/fin', 'INF', 'PF:tua', '-COMP:FORCE', '-SPEC:T/fin', 'PHI:PER:_', 'LF:after', 'SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', '-COMP:T/fin', 'PHI:DET:_', 'TUA/inf', 'adjoinable', 'LANG:EN', '-SPEC:N', '!COMP:*', 'COMP:V', 'ADV'}
VA/inf          {'PF:vAn', 'ARG', '-COMP:C/fin', 'VAL', '!SPEC:*', '-SPEC:V', 'COMP:v', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'PHI:PER:_', 'SPEC:*', 'VA/inf', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', '-SPEC:N', 'LF:VA', '!COMP:*', 'COMP:V', 'PHI:GEN:_'}
MA/ssa          {'ARG', 'ADV', 'LF:in_doing', 'COMP:v', '-SPEC:Neg/fin', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:*', 'adjoinable', 'LANG:EN', '-SPEC:N', 'PF:massa', 'COMP:V', 'TAIL:V', 'MA/inf', '-SPEC:FORCE', '-VAL'}
MA/tta          {'TAIL:T', '-SPEC:FORCE', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'adjoinable', 'LANG:EN', '-SPEC:N', '-SPEC:Neg/fin', 'PHI:DET:_', 'LF:without_doing', '-SPEC:T/fin', 'PHI:PER:_', 'MA/inf', 'PF:matta', 'ADV', '-VAL'}
MA/lla          {'PF:malla', 'TAIL:T', 'ARG', '-SPEC:Neg/fin', 'PHI:PER:_', 'LF:by_doing', 'PHI:DET:_', 'adjoinable', '-SPEC:N', 'COMP:V', 'PHI:GEN:_', 'ADV', 'COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:EN', 'MA/inf', '-SPEC:FORCE', '-VAL'}
MA/inf          {'ARG', '-SPEC:Neg/fin', 'PHI:PER:_', 'PHI:DET:_', 'adjoinable', 'PF:maan', '-SPEC:N', 'COMP:V', 'PHI:GEN:_', 'LF:to_do', 'ADV', 'COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:EN', 'TAIL:V', 'MA/inf', '-SPEC:FORCE', '-VAL'}
E/inf           {'TAIL:T', '-ARG', '-SPEC:FORCE', 'adjoinable', 'LANG:FI', '-SPEC:N', '-SPEC:Neg/fin', 'LF:by', '-SPEC:T/fin', 'SPEC:*', 'ADV', '-VAL', 'PF:en'}
BE-             {'COMP:P', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', '-COMP:T/fin', 'ASP', '-ARG', 'PF:BE', '-COMP:N', 'SPEC:P', 'V', 'LANG:EN', '!COMP:*', 'COMP:T/prt', 'LF:BE', '-COMP:V', '-COMP:v', '-SPEC:FORCE', 'COPULA', '-VAL'}
D               {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '!PROBE:N', '-SPEC:V', '-SPEC:Neg/fin', 'PF:D', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', 'LF:D', '-SPEC:C', '-ARG', 'COMP:N', 'D', 'adjoinable', 'LANG:EN', '!COMP:*', 'OP'}
D/rel           {'-COMP:uR', '-COMP:D', '-SPEC:MA/lla', '-SPEC:P', '-COMP:C/fin', '-SPEC:V', '!PROBE:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:T/fin', 'D/rel', '-SPEC:C', '-ARG', 'COMP:N', 'adjoinable', 'D', 'LANG:EN', 'PF:D/rel', '!COMP:*', 'OP:REL', 'LF:D/rel', 'OP:_', 'OP'}
P               {'ARG', 'COMP:D', '-SPEC:P', '-SPEC:V', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:INF', '-SPEC:iWH', '-float', 'PF:P', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:C', 'PHI:GEN:_', '-SPEC:iR', '-SPEC:v', '-SPEC:*', 'adjoinable', 'P', '-COMP:N', 'LANG:EN', '-SPEC:N', '!COMP:*', '-SPEC:ADV', 'LF:P', '-SPEC:FORCE', '-COMP:ADV', '-VAL'}
pro             ['LANG:EN']
pro-            {'-SPEC:uWH', '-COMP:A', '-COMP:WH', '-COMP:C/fin', '-SPEC:P', '-SPEC:V', 'COMP:P', 'COMP:uR', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'COMP:R', '-SPEC:C/fin', 'LF:pro', '-COMP:N', 'SPEC:A', 'PHI', 'LANG:EN', 'COMP:C', '-SPEC:N', '-COMP:AUX', 'PF:(pro)', '-COMP:v', '-COMP:V', '-SPEC:ADV', 'N', '-SPEC:FORCE'}
cl              {'LEFT:T/fin', 'RIGHT:PRG', 'CL', 'LEFT:D,CL', 'inflectional', 'RIGHT:ARE/inf', 'LANG:EN'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'LANG:EN', 'PHI:NUM:PL'}
1p              {'inflectional', 'LANG:EN', 'PHI:PER:1'}
2p              {'PHI:PER:2', 'inflectional', 'LANG:EN'}
3p              {'inflectional', 'LANG:EN', 'PHI:PER:3'}
def             {'inflectional', 'LANG:EN', 'PHI:DET:DEF'}
indef           {'inflectional', 'LANG:EN', 'PHI:DET:INDEF'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'LANG:EN', 'PHI:HUM:NONHUM'}
m               {'inflectional', 'PHI:GEN:M', 'LANG:EN'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'LANG:EN', 'NOM'}
acc             {'inflectional', 'TAIL:v', 'ACC', 'LANG:EN'}
dat             {'inflectional', 'TAIL:v', 'DAT', 'LANG:EN'}
uC/op           {'inflectional', 'LANG:EN', 'uC/op'}
wh              {'OP:_', 'inflectional', 'LANG:EN', 'OP:WH'}
wh_             {'FORCE:OP:WH', 'OP:_', 'inflectional', 'OP', 'LANG:EN'}
top             {'inflectional', 'OP:TOP', 'LANG:EN'}
foc             {'inflectional', 'OP:FOC', 'LANG:EN'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN'}
rel             {'-COMP:C/fin', 'OP:REL', 'SPEC:D', 'OP:_', 'inflectional', 'adjoinable', 'LANG:EN'}
Q               {'OP:WH', 'inflectional', 'OP', 'OP:Q', 'LANG:EN'}
