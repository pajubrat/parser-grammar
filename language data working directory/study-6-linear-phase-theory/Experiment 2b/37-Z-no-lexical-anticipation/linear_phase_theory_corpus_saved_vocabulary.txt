ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'LF:to', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', 'COMP:ARE/inf', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', 'PF:a', '-SPEC:v', '-SPEC:ADV', '-SPEC:P', '-SPEC:C/fin', '-VAL', '-COMP:N', '-SPEC:*', 'TAIL:V', '-COMP:ADV', 'LANG:IT', '-COMP:A', '-SPEC:iR', '-ARG', '-SPEC:iWH', 'P', '-COMP:T', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
a_D             {'-SPEC:V', '-COMP:P', 'LF:D', '-SPEC:Neg/fin', '-SPEC:T/fin', 'PF:D', '-SPEC:MA/lla', '-SPEC:P', 'COMP:N', '-COMP:uR', 'D', '-ARG', 'LANG:EN', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'PF:admire', 'COMP:P', '-SPEC:Neg', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'LF:admire', 'ASP', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:EN', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:Neg', 'SPEC:P', '-COMP:v', '!COMP:*'}
admire*         ['LANG:EN']
T/fin*          {"PF:T/fin'", 'CAT:T/fin', 'NO_NUMBER', 'LF:T', 'NO_DET', 'LANG:EN', '-VAL', '!SPEC:*'}
v*              {'PF:v', 'LF:v', 'NO_NUMBER', 'LANG:EN', 'CAT:v', '-VAL', 'NO_DET'}
admire**        ['LANG:EN']
T/fin**         {'CAT:T/fin', 'NO_NUMBER', 'PHI:PER:3', 'LF:T', 'NO_DET', 'NO_PERSON', 'LANG:EN', "PF:T/fin''", '-VAL', '!SPEC:*'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'ARG', '-COMP:V', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'PF:adora', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'LF:admire', 'LANG:IT', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
antaa           ['LANG:FI']
anta-           {'+SEM:directional', 'ARG', '-COMP:V', 'COMP:D', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'COMP:P', 'CLASS:DITR', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'LF:give', 'PF:antaa', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'ASP:BOUNDED', 'PHI:NUM:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*', '-COMP:FIN'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'ARG', '-COMP:V', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'SEM:internal', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LF:ask', 'LANG:EN', 'PF:ask', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:v', '-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SEM:directional', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'PF:avain', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', 'LF:key', 'COMP:R/D', '-COMP:VA/inf'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:V', '-COMP:V', 'PF:auto', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SEM:directional', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-COMP:VA/inf', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', 'LF:car'}
bank            {'-SPEC:V', '-COMP:V', 'PF:bank1', '-SPEC:T/fin', 'LF:bank_inst', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LANG:EN', 'FREQ:1', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
bank            {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'FREQ:2', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'PF:bank2', '-COMP:A', '-SPEC:R', 'LANG:EN', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf', 'LF:bank_river'}
barn            {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', 'LF:barn', '-SPEC:R', 'LANG:EN', 'PF:barn', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
city            {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', 'PF:city', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LANG:EN', 'LF:city', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
che             ['LANG:IT']
che-            {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', 'PF:che', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', 'LF:who', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
chiamato        ['LANG:IT']
chiamata-       {'ARG', '-COMP:V', 'LF:called', 'PF:chiamato', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'LANG:IT', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
claims          ['LANG:EN']
claim-          {'ARG', '-COMP:V', 'SPEC:ADV', 'COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', '-COMP:N', 'V', 'PF:claim', 'SPEC:TO/inf', 'LF:claim', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
danno           {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'LF:damage', 'COMP:R', 'COMP:D/rel', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-COMP:A', '-SPEC:R', '-SPEC:FORCE', 'PF:danno', 'COMP:uR', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'LF:detest', 'ARG', '-COMP:V', 'COMP:D', 'SPEC:ADV', 'COMP:ARE/inf', 'PF:detest', '-SPEC:T/fin', 'COMP:P', 'SEM:internal', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'LANG:IT', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
devono          ['LANG:EN']
deva-           {'ARG', '-COMP:V', 'SPEC:ADV', 'COMP:ARE/inf', '-ASP', '-SPEC:T/fin', 'PF:deva', 'COMP:P', 'SEM:internal', '-VAL', '-COMP:N', 'V', 'LF:must', 'SPEC:TO/inf', 'LANG:IT', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
di              {'LF:of', 'ARG', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', '-SPEC:ADV', 'SPEC:*', 'PF:di', '-SPEC:P', 'LANG:FI', '-SPEC:C/fin', '-VAL', '-COMP:N', '-adjoinable', '-COMP:ADV', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'P', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '!COMP:*'}
does            {'ARG', '-SPEC:V', 'SPEC:FORCE', '!PROBE:V', '-SPEC:T/fin', '-SPEC:v', 'T/fin', 'FIN', 'PHI:NUM:SG', '-SPEC:Neg', '!SPEC:*', 'PHI:PER:3', 'COMP:v', 'LANG:EN', 'VAL', 'PHI:PER:_', '-COMP:INF', 'PHI:GEN:_', '-COMP:T/fin', '!COMP:*', 'COMP:V', '-SPEC:N', '-SPEC:TO/inf', 'LF:does', 'T', 'SPEC:*', 'PHI:GEN:F', '-SPEC:C/fin', 'COMP:Neg', 'SPEC:TO/inf', 'PHI:GEN:M', 'COMP:T/prt', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:C', 'PF:does', 'SPEC:D'}
does_C          ['LANG:EN']
does-           {'ARG', '-SPEC:V', 'SPEC:FORCE', '!PROBE:V', '-SPEC:T/fin', '-SPEC:v', 'T/fin', 'FIN', 'PHI:NUM:SG', '-SPEC:Neg', '!SPEC:*', 'PHI:PER:3', 'COMP:v', 'LANG:EN', 'VAL', 'PHI:PER:_', '-COMP:INF', 'PHI:GEN:_', '-COMP:T/fin', '!COMP:*', 'COMP:V', '-SPEC:N', '-SPEC:TO/inf', 'LF:does', 'T', 'SPEC:*', 'PHI:GEN:F', '-SPEC:C/fin', 'COMP:Neg', 'SPEC:TO/inf', 'PHI:GEN:M', 'COMP:T/prt', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:C', 'PF:does', 'SPEC:D'}
dorme           ['LANG:IT']
dorme-          {'PF:dorme', 'ARG', '-COMP:V', 'SPEC:ADV', 'CLASS:INTR', '!SPEC:D', 'LF:sleep', '-SPEC:T/fin', 'COMP:P', '-COMP:MA/inf', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
disappeared     ['LANG:EN']
disappear-      {'ARG', '-COMP:V', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'LF:disappear', 'COMP:P', '-COMP:MA/inf', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:disappear', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'PF:easy', 'LF:easy', '0', '2SPEC', 'LANG:EN', 'SPEC:D'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'ARG', 'POL:NEG', '-SPEC:T/fin', 'FIN', 'LF:neg', 'SPEC:*', 'NEG', 'LANG:FI', 'SEM:internal', '!SPEC:*', '-SPEC:T', 'PF:ei', '%SPEC:INF', 'COMP:T/prt', 'PHI:DET:_', 'VAL', 'PHI:NUM:_', 'PHI:PER:_', '!COMP:T', '!COMP:*', 'Neg/fin'}
e-              {'ARG', 'POL:NEG', '-SPEC:T/fin', 'FIN', 'LF:neg', 'SPEC:*', 'NEG', 'LANG:FI', 'SEM:internal', '!SPEC:*', '-SPEC:T', 'PF:ei', '%SPEC:INF', 'COMP:T/prt', 'PHI:DET:_', 'VAL', 'PHI:NUM:_', 'PHI:PER:_', '!COMP:T', '!COMP:*', 'Neg/fin'}
elaa            ['LANG:FI']
ela-            {'ARG', '-COMP:V', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'COMP:P', '-COMP:MA/inf', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'LF:live', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'PF:elaa', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
etsii           ['LANG:FI']
etsi-           {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'PF:etsi', 'LF:search', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', '!COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
etta            {'LF:that', '-SPEC:*', 'COMP:T/fin', '-ARG', 'COMP:C/fin', '!PROBE:FIN', 'FORCE', 'PF:etta', '-SPEC:D', 'FIN', 'LANG:FI', '-VAL', '!COMP:*'}
fell            ['LANG:EN']
fell-           {'ARG', '-COMP:V', 'SPEC:ADV', 'SPEC:D', 'CLASS:INTR', '-SPEC:T/fin', 'COMP:P', '-COMP:MA/inf', '-VAL', '-COMP:N', 'LF:fell', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'PF:fell'}
flow'           {'ARG', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'PF:flow', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:flow', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
from            {'ARG', '-SPEC:V', 'TAIL:V,+SEM:directional', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', '-SPEC:ADV', '-SPEC:P', '-SPEC:C/fin', '-VAL', 'LF:from', '-COMP:N', '-SPEC:*', '-COMP:ADV', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'LANG:EN', 'PF:from', 'P', 'PHI:NUM:_', '-float', '-COMP:T', '-SPEC:C', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:INF', 'PHI:GEN:_', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
gave            ['LANG:EN']
give-           {'+SEM:directional', 'ARG', '-COMP:V', 'COMP:D', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'COMP:P', 'PF:give', 'CLASS:DITR', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'LF:give', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*', '-COMP:FIN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SEM:directional', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-COMP:A', '-SPEC:R', '-SPEC:FORCE', 'PF:Giuseppe', 'LF:Giuseppe', 'COMP:uR', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:A/inf', 'COMP:P', 'PF:haluaa', 'LANG:FI', 'SEM:internal', '-VAL', '-COMP:N', 'V', '-SPEC:*', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'ASP:BOUNDED', 'PHI:NUM:_', 'PHI:PER:_', 'LF:want', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
hairitsee       ['LANG:FI']
hairitse-       {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:D', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', '!COMP:*', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'PF:hairitsee', 'PHI:NUM:_', 'PHI:PER:_', '!COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'LF:disturb', '-COMP:FIN'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'ARG', '-COMP:V', 'SPEC:ADV', '-ASP', '-SPEC:T/fin', 'PF:ha', 'COMP:P', 'SPEC:*', 'SEM:internal', '-VAL', 'COMP:T', '-COMP:N', 'V', 'SPEC:TO/inf', 'LF:have', 'LANG:IT', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
horse           {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'PF:horse', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', 'LF:horse', '-SPEC:R', 'LANG:EN', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'ARG', '-COMP:V', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'LF:disappear', 'COMP:P', '-COMP:MA/inf', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'PF:havia', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', 'PF:ihaile-', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'LF:admire', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', '!COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*', '-COMP:FIN'}
il              {'-SPEC:V', '-COMP:P', 'PF:il', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'COMP:N', '-COMP:uR', 'D', 'LANG:IT', '-ARG', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable', 'LF:the'}
i               {'-SPEC:V', '-COMP:P', 'PF:il', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'COMP:N', '-COMP:uR', 'D', 'LANG:IT', '-ARG', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable', 'LF:the'}
in              {'ARG', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', 'LF:in', '-SPEC:ADV', 'PF:in', '-SPEC:P', '-SPEC:C/fin', '-VAL', '-COMP:N', '-COMP:ADV', 'LANG:IT', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'P', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:T', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
infermieri      {'-COMP:v', '-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', 'LF:nurses', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', 'PF:infermieri', 'COMP:R/D', '-COMP:VA/inf'}
is              ['LANG:EN']
be-             {'-COMP:V', 'SPEC:ADV', 'COPULA', '-SPEC:T/fin', 'COMP:P', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'PF:be', '-COMP:TO/inf', '-ARG', 'ASP', 'LANG:EN', '-SPEC:FORCE', 'LF:be', 'SPEC:P', '-COMP:v', '!COMP:*', 'SPEC:D'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'ARG', '-COMP:V', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'COMP:P', '-COMP:MA/inf', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'LF:sit', 'PF:istuu', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
John            ['LANG:EN']
John-           {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', 'PF:John', '-adjoinable', '-COMP:A', 'LANG:EN', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SEM:directional', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'LF:John', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', 'LANG:FI', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', 'LF:who', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf', 'PF:joka'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SEM:directional', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'COMP:uR', 'COMP:R/D', '-COMP:C/fin', 'LF:Jukka', '-SPEC:FORCE', '-COMP:v', 'PF:Jukka', '-COMP:VA/inf'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'ARG', '-COMP:V', 'SPEC:ADV', 'PF:juokse-', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:NUM:_', 'LF:run', 'SPEC:P', '-COMP:v'}
kaksi           {'ARG', 'NUM', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'LF:two', 'COMP:n', 'SPEC:*', 'PHI:NUM:SG', 'PF:kaksi', 'LANG:FI', '-VAL', 'COMP:N'}
kaksi           {'NUM', 'TAIL:ARG,ASP:BOUNDED', 'LANG:EN', 'LF:two', 'TAIL:*POL:NEG', 'SPEC:*', 'PF:kaksi', 'COMP:N', 'COMP:n'}
kaksi_1         {'ARG', 'NUM', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'LF:two', 'COMP:n', 'SPEC:*', 'PHI:NUM:SG', 'PF:kaksi', 'LANG:FI', '-VAL', 'COMP:N'}
kaksi_2         {'NUM', 'TAIL:ARG,ASP:BOUNDED', 'LANG:EN', 'LF:two', 'TAIL:*POL:NEG', 'SPEC:*', 'PF:kaksi', 'COMP:N', 'COMP:n'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LF:two', 'NUM', 'SPEC:*', 'PF:kaksi', 'LANG:FI', 'COMP:n', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:V', '-COMP:P', '-COMP:V', 'PF:kaupunki', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LF:city', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'ARG', '-COMP:V', 'SEM:external', 'SPEC:ADV', '-SPEC:T/fin', '!COMP:A/inf', 'COMP:P', 'PF:kaske', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'LF:order', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', 'LF:watch', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'PF:kello', 'COMP:T/prt', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
kello0-         {'SPEC:D', '0', 'PF:kello', 'LANG:FI', 'LF:watch', '2SPEC'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:v', '-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', 'PF:key', '-SPEC:R', 'LANG:EN', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', 'LF:key', 'COMP:R/D', '-COMP:VA/inf'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:V', '-COMP:V', 'PF:kirja', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SEM:directional', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LF:book', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
knows           ['LANG:EN']
know-           {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'PF:know', 'COMP:P', '-VAL', 'LF:know', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
kohti           {'ARG', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', '-SPEC:ADV', 'SPEC:*', '-SPEC:P', 'LANG:FI', '-SPEC:C/fin', '-VAL', '-COMP:N', 'TAIL:V', '-COMP:ADV', 'PF:kohti', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'P', 'adjoinable', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '!COMP:*', 'LF:towards'}
koko            {'LF:all', '-SPEC:V', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'TAIL:T', 'LANG:FI', 'COMP:N', '-COMP:uR', 'D', 'PF:koko', '-ARG', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:V', '-COMP:V', 'PF:kuka', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', 'PHI', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', 'LF:who', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'ARG', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'PF:kuorsaa', 'COMP:P', 'LANG:FI', '-COMP:WH', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'LF:snore'}
lahella         {'ARG', '-SPEC:V', 'COMP:D', 'INF', '-SPEC:Neg/fin', 'PF:lahella', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:v', 'LANG:FI', '!SPEC:*', '-COMP:A', '-SPEC:iR', 'COMP:v', 'P', 'VAL', 'PHI:PER:_', '-COMP:T/fin', '-COMP:C/fin', '!COMP:*', 'adjoinable', '-COMP:FORCE', '!SPEC:D', 'COMP:V', '-SPEC:N', '-SPEC:ADV', 'LF:near', 'SPEC:*', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:ADV', '-SPEC:iWH', 'PHI:DET:_', 'PHI:NUM:_', '-COMP:T', '-SPEC:C', '-SPEC:INF', '-SPEC:FORCE'}
lahella         {'ARG', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', 'PF:lahella', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', '-SPEC:ADV', 'LF:near', 'SPEC:*', '-SPEC:P', 'LANG:FI', '-SPEC:C/fin', '-VAL', '-SPEC:INF', '-COMP:N', '-COMP:ADV', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'P', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T', '-SPEC:C', '-COMP:T/fin', '!COMP:D', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
lahella_1       {'ARG', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', 'PF:lahella', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', '-SPEC:ADV', 'LF:near', 'SPEC:*', '-SPEC:P', 'LANG:FI', '-SPEC:C/fin', '-VAL', '-SPEC:INF', '-COMP:N', '-COMP:ADV', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'P', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T', '-SPEC:C', '-COMP:T/fin', '!COMP:D', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
lahella_2       {'ARG', '-SPEC:V', 'COMP:D', 'INF', '-SPEC:Neg/fin', 'PF:lahella', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:v', 'LANG:FI', '!SPEC:*', '-COMP:A', '-SPEC:iR', 'COMP:v', 'P', 'VAL', 'PHI:PER:_', '-COMP:T/fin', '-COMP:C/fin', '!COMP:*', 'adjoinable', '-COMP:FORCE', '!SPEC:D', 'COMP:V', '-SPEC:N', '-SPEC:ADV', 'LF:near', 'SPEC:*', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:ADV', '-SPEC:iWH', 'PHI:DET:_', 'PHI:NUM:_', '-COMP:T', '-SPEC:C', '-SPEC:INF', '-SPEC:FORCE'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'ARG', '-COMP:V', 'PF:lahtea', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'COMP:P', '-COMP:MA/inf', 'LANG:FI', 'LF:leave', '-VAL', 'COMP:PP', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
lavano          ['LANG:IT']
lava-           {'ARG', '-COMP:V', 'COMP:D', 'LF:wash', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'LANG:IT', 'PF:lava', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:V', '-COMP:P', 'LF:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'PF:le', 'COMP:N', '-COMP:uR', 'D', 'LANG:IT', '-ARG', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable'}
leaves          ['LANG:EN']
leave           {'ARG', '-COMP:V', 'SPEC:ADV', '!SPEC:D', '-SPEC:T/fin', 'COMP:P', '-VAL', 'LF:leave', '-COMP:N', 'V', 'SPEC:TO/inf', 'PF:leave', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
leave-          {'ARG', '-COMP:V', 'SPEC:ADV', '!SPEC:D', '-SPEC:T/fin', 'COMP:P', '-VAL', 'LF:leave', '-COMP:N', 'V', 'SPEC:TO/inf', 'PF:leave', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:T/fin', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
like-           {'ARG', '-COMP:V', 'SPEC:ADV', 'LF:like', '-SPEC:T/fin', 'PF:like', 'COMP:P', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
likes           ['LANG:EN']
like            {'ARG', '-COMP:V', 'SPEC:ADV', 'LF:like', '-SPEC:T/fin', 'PF:like', 'COMP:P', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
little          ['LANG:EN']
little-         {'PF:little-', 'LF:little', '0', '2SPEC', 'LANG:EN', 'SPEC:D'}
lle             {'+SEM:directional', 'ARG', '-SPEC:V', 'TAIL:V,+SEM:directional', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', '-SPEC:ADV', '-SPEC:P', 'LANG:FI', '-SPEC:C/fin', '-VAL', '-COMP:N', 'LF:for', '-SPEC:*', '-COMP:ADV', '-COMP:A', 'PF:P(lle)', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'P', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
lla             {'ARG', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', 'TAIL:*V', '-COMP:uWH', '-SPEC:v', '-SPEC:N', '-SPEC:ADV', 'SPEC:*', '-SPEC:P', 'TAIL:T', 'LANG:FI', '-SPEC:C/fin', '-VAL', 'LF:by', '-COMP:N', 'PF:P(lla)', '-COMP:ADV', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'P', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SEM:directional', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LF:Luisa', 'LANG:IT', '-COMP:A', '-SPEC:R', 'PF:Luisa', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'LF:read', 'PF:luke', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'ASP:BOUNDED', 'PHI:NUM:_', 'LF:find', 'PHI:PER:_', '!COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*', 'PF:loyta-'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:V', 'PF:Mary', '-SPEC:T/fin', 'LF:Mary', 'COMP:R', '-COMP:WH', 'N', '-adjoinable', '-COMP:A', 'LANG:EN', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SEM:directional', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', 'LANG:FI', '-COMP:WH', 'N', '-adjoinable', '-COMP:A', 'PF:Merja', 'LF:Merja', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SEM:directional', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'ADV', '-SPEC:Neg/fin', 'COMP:v', 'MA/inf', '-SPEC:T/fin', '-SPEC:N', '-SPEC:FORCE', 'adjoinable', 'PF:malla', 'SPEC:*', 'TAIL:T', 'LANG:FI', 'LF:by'}
meren           ['LANG:FI']
mere-           {'PF:meri', '-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LF:ocean', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
mies            {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'LF:man', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'PF:mies', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
mistake         {'-SPEC:V', 'PF:mistake', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LANG:EN', 'LF:mistake', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'LF:what', '-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'PF:mika-', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'+SEM:directional', 'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'LF:move', 'COMP:P', 'LANGN:EN', '-VAL', 'PF:move', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', '0', 'SPEC:D', 'PF:mukavasti', 'LANG:FI', '2SPEC'}
must            {'ARG', '-SPEC:V', 'SPEC:FORCE', '!PROBE:V', '-SPEC:T/fin', 'COMP:V', '-SPEC:N', '-SPEC:v', 'T/fin', '-SPEC:TO/inf', 'T', 'FIN', 'SPEC:*', '-SPEC:C/fin', '-SPEC:Neg', '!SPEC:*', 'COMP:Neg', 'LF:must', 'SPEC:TO/inf', 'COMP:T/prt', 'COMP:v', 'PHI:DET:_', 'LANG:EN', 'VAL', 'PHI:NUM:_', '-COMP:INF', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:C', 'MODAL', '-COMP:T/fin', '!COMP:*', 'PF:must', 'SPEC:D'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', 'LF:sell', '-SPEC:T/fin', 'COMP:P', 'PF:myy', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'ASP:BOUNDED', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
naki            ['LANG:FI']
nake-           {'ARG', '-COMP:V', '-COMP:P', 'LF:see', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:ESSA/inf', '-COMP:MA/tta', 'COMP:P', 'LANG:FI', 'PF:nake', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', '-COMP:MA/ssa', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'ASP:BOUNDED', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:V', 'SPEC:ADV', '!SPEC:D', '-SPEC:T/fin', 'COMP:P', 'LF:seem', 'LANG:FI', 'SEM:internal', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', '-ARG', 'VAL', '!COMP:VA/inf', 'PF:naytta', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
ndo             {'-SPEC:V', 'INF', '!COMP:*', 'LF:ing', 'COMP:v', '-SPEC:T/fin', 'COMP:V', 'LANG:EN', 'VAL', '?ARG', 'PF:PRG', '-COMP:T/fin', '-COMP:C/fin', 'PRG', '-COMP:FORCE'}
ne              {'PF:ne', '-SPEC:V', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:T/fin', 'LF:those', 'PHI:NUM:PL', '-SPEC:MA/lla', '-SPEC:P', 'LANG:FI', 'COMP:N', '-COMP:uR', 'D', 'PHI:PER:3', '-ARG', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'PF:a', 'A', 'COMP:0', '-SPEC:A', 'SPEC:*', 'TAIL:D', 'LANG:FI', '-SPEC:D'}
not             {'ARG', 'PF:not', 'POL:NEG', 'LF:not', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', '-COMP:C', 'Neg', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:*', '-COMP:D', '-VAL', '!COMP:*', '-COMP:FIN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'ARG', '-COMP:V', 'PF:nukku', '-COMP:Neg/fin', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'LF:sleep', 'COMP:P', '-COMP:MA/inf', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T', '-COMP:T/fin', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'PF:omaisuuden', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LF:possessions', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', '0', 'LANG:IT', '2SPEC', 'PF:operatoria', 'SPEC:D'}
ostaa           ['LANG:FI']
osta-           {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'PF:osta', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'ASP:BOUNDED', 'PHI:NUM:_', 'PHI:PER:_', 'LF:buy', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'SEM:nonreferential', 'PF:paiva', '-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LF:day', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
past            {'ARG', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', '-SPEC:ADV', '-SPEC:P', '-SPEC:C/fin', '-VAL', '-COMP:N', '-SPEC:*', '-COMP:ADV', 'LF:past', '-COMP:A', 'PF:past', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'LANG:EN', 'P', 'PHI:NUM:_', 'PHI:PER:_', '-float', '-COMP:T', '-SPEC:C', 'PHI:GEN:_', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'LF:Paris', 'COMP:T/prt', '-COMP:A', 'PF:Pariisi', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SEM:directional', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', 'PF:Pekka', '-COMP:WH', 'N', 'LF:Pekka', '-SPEC:C/fin', '-COMP:N', '-SPEC:INF', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', 'LF:fear', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'PF:pelkaa', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
persuades       ['LANG:EN']
persuade-       {'ARG', '-COMP:V', 'SEM:external', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', '-VAL', 'PF:persuade', '-COMP:N', 'V', 'SPEC:TO/inf', 'LF:persuade', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'COMP:TO/inf', '!COMP:*'}
peruuntui       ['LANG:FI']
peruuntu-       {'LF:cancelled', 'ARG', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'PF:peruuntui', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'LF:wash', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'ASP:BOUNDED', 'PHI:NUM:_', 'PHI:PER:_', 'PF:pese_asp', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
pese-           {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'LF:wash', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', '!COMP:*', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'PF:pese'}
petardi         {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'LF:firecrackers', 'COMP:C', 'SPEC:A', 'PF:petardi', 'LANG:IT', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', '0', 'PF:pieni-', '2SPEC', 'LANG:FI', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'PF:poika', '-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'LF:boy', 'COMP:T/prt', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', 'LF:phone', '0', 'SPEC:D', 'LANG:FI', '2SPEC'}
punainen        ['LANG:FI']
puna-           {'PF:puna-', 'LF:red', '0', 'SPEC:D', 'LANG:FI', '2SPEC'}
presupposto     {'-SPEC:V', '-COMP:V', 'PF:presupposto', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', 'LF:presupposition', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
primary         {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-COMP:A', '-SPEC:R', '-SPEC:FORCE', 'LF:nurse', 'PF:primary', 'COMP:uR', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
promises        ['LANG:EN']
promise-        {'ARG', '-COMP:V', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'SEM:internal', '-VAL', 'PF:promise', 'V', '-COMP:N', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:promise', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
problem         {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'LF:problem', 'COMP:P', 'COMP:R', 'COMP:D/rel', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LANG:EN', 'COMP:R/D', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'PF:problem', '-COMP:VA/inf'}
pyytaa          ['LANG:FI']
pyyta-          {'ARG', '-COMP:V', '-COMP:P', 'SEM:external', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LF:ask', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', 'PF:pyyda', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'ARG', '-COMP:V', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'COMP:P', 'PF:race', '-COMP:MA/inf', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'LAMG:EN', 'PHI:GEN:_', 'LF:race', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
raukesi         ['LANG:FI']
raukea-         {'ARG', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'PF:raukea', 'LF:terminate', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
red             ['LANG:EN']
red-            {'LF:red', '0', 'PF:red', '2SPEC', 'LANG:EN', 'SPEC:D'}
saavuttaa       ['LANG:FI']
saavutta-       {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'PF:saavutta-', 'COMP:P', 'LF:reach', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'ASP:BOUNDED', 'PHI:NUM:_', 'PHI:PER:_', '!COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'COMP:FORCE', 'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', 'COMP:VA/inf', '-SPEC:T/fin', 'COMP:P', 'LF:say', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'PF:sano-', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*', 'SPEC:D'}
said            ['LANG:EN']
say'            {'ARG', '-COMP:V', 'SPEC:ADV', '!COMP:FORCE', '-SPEC:T/fin', 'COMP:P', 'LF:say', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:say', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
say-            {'ARG', '-COMP:V', 'SPEC:ADV', '!COMP:FORCE', '-SPEC:T/fin', 'COMP:P', 'LF:say', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:say', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
sala            ['LANG:IT']
sala-           {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', 'LF:room', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf', 'PF:sala'}
scoppiati       ['LANG:IT']
scoppia-        {'ARG', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', '-VAL', 'LF:explode', 'PF:scoppia', '-COMP:N', 'V', 'SPEC:TO/inf', 'LANG:IT', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
sentenza        {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'PF:sentenza', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-COMP:A', '-SPEC:R', '-SPEC:FORCE', '-COMP:C/fin', 'COMP:uR', 'LF:sentence', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'PF:Seine', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LANG:EN', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf', 'LF:Seine'}
sembrano        ['LANG:IT']
sembra-         {'!COMP:ARE/inf', '-COMP:V', 'SPEC:ADV', '-ASP', '-SPEC:T/fin', 'COMP:P', 'LF:seem', 'PF:sembra', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', '-ARG', 'LANG:EN', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
sleeps          ['LANG:EN']
sleep           {'ARG', '-COMP:V', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'LF:sleep', 'COMP:P', '-COMP:MA/inf', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'PF:sleep', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
sleep-          {'ARG', '-COMP:V', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'LF:sleep', 'COMP:P', '-COMP:MA/inf', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'PF:sleep', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
solution        {'-SPEC:V', '-COMP:V', 'LF:solution', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LANG:EN', 'PF:solution', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:V', 'LF:agreement', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '!COMP:A/inf', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LANG:FI', 'PF:sopimus', '-COMP:WH', 'N', '-SPEC:C/fin', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
spinge          ['LANG:IT']
spinge-         {'ARG', '-COMP:V', '-COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'PF:spinge', '-VAL', 'LF:push', '-COMP:N', 'V', 'SPEC:TO/inf', 'LANG:IT', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
ssa             {'ARG', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', 'LF:in', '-SPEC:ADV', 'SPEC:*', '-SPEC:P', 'LANG:FI', '-SPEC:C/fin', '-VAL', 'COMP:n/MA', '-COMP:N', 'TAIL:V', '-COMP:ADV', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'P', 'PHI:NUM:_', 'PHI:PER:_', 'PF:ssa', '-COMP:T', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
stanno          ['LANG:IT']
sta-            {'ARG', '-COMP:V', 'SPEC:ADV', '-ASP', '-SPEC:T/fin', 'COMP:P', 'PF:sta', 'SEM:internal', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'LF:stay', 'COMP:PRG', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
sti             {'PF:sti', 'ADV', '-SPEC:Neg/fin', '-SPEC:T/fin', '-ARG', '-SPEC:N', '-SPEC:FORCE', 'adjoinable', 'SPEC:*', 'TAIL:T', 'LANG:FI', '!COMP:*', 'LF:by'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'PF:sukka-', 'COMP:P', 'COMP:R', 'COMP:D/rel', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', 'LF:socks', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
surprised       ['LANG:EN']
surprise-       {'ARG', '-COMP:V', 'LF:surprise', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'PF:surprise', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:T/fin', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
talo            {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'PF:talo', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-COMP:VA/inf', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', 'LF:house'}
tama            ['LANG:EN']
tama-           {'-SPEC:V', '-COMP:V', 'LF:this', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', 'PHI', '-SPEC:P', 'LANG:FI', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', 'PF:tama', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'ARG', '-COMP:V', 'SPEC:ADV', '-ASP', '-SPEC:T/fin', '!COMP:A/inf', 'COMP:P', 'FIN', 'SPEC:*', 'LANG:FI', '-VAL', '-COMP:N', 'LF:must', 'V', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:taytyy', 'PHI:PER:_', 'PHI:NUM:_', 'MODAL', '-SPEC:FORCE', 'SPEC:P', '-COMP:v'}
teki            ['LANG:FI']
teke-           {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', '-COMP:A/inf', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'PF:teke', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'ASP:BOUNDED', 'PHI:NUM:_', 'PHI:PER:_', 'LF:make', '!COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
that            {'LF:that', '-SPEC:*', 'COMP:T/fin', '-ARG', 'COMP:C/fin', 'LANG:EN', 'PF:that', '!PROBE:FIN', 'FORCE', 'FIN', '-VAL', '!COMP:*'}
the             {'-SPEC:V', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'COMP:N', '-COMP:uR', 'D', 'PHI:DEF:DEF', 'PF:the', '-ARG', 'LANG:EN', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable', 'LF:the'}
to              {'+SEM:directional', 'ARG', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:v', '-VAL', '-SPEC:*', '-COMP:A', '-SPEC:iR', 'PF:to', 'LANG:EN', 'P', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:T/fin', '!COMP:*', 'adjoinable', 'LF:to', '-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'TAIL:V', '-COMP:ADV', '-SPEC:iWH', 'PHI:DET:_', 'PHI:NUM:_', '-float', '-COMP:T', '-SPEC:C', '-SPEC:INF', '-SPEC:FORCE'}
to_inf          {'-SPEC:V', 'INF', '-SPEC:T/fin', 'COMP:V', '-SPEC:v', '-VAL', 'LF:TO/inf', 'COMP:v', 'LANG:EN', '?ARG', 'TO/inf', '-COMP:T/fin', '-COMP:C/fin', 'PF:TO/inf', '!COMP:*', 'adjoinable', '-COMP:FORCE'}
towards         {'ARG', '-SPEC:V', 'PF:towards', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', '-SPEC:ADV', '-SPEC:P', '-SPEC:C/fin', '-VAL', '-COMP:N', '-SPEC:*', 'TAIL:V', '-COMP:ADV', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'LANG:EN', 'P', 'adjoinable', 'PHI:NUM:_', '-float', '-COMP:T', '-SPEC:C', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:INF', 'PHI:GEN:_', '-SPEC:FORCE', '!COMP:*', 'LF:towards'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'PF:tonaise', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', 'LF:nudge', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
tta             {'ARG', '-SPEC:V', 'ADV', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:N', '-SPEC:v', '-SPEC:ADV', 'SPEC:*', '-SPEC:P', 'LANG:FI', 'LF:without', '-VAL', '-SPEC:C/fin', 'COMP:n/MA', '-COMP:N', '-COMP:ADV', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'P', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T', 'PF:tta', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
tries           ['LANG:EN']
try-            {'ARG', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'LF:try', 'COMP:P', '!COMP:-ARG', '!COMP:TO/inf', 'PF:try', 'SEM:internal', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
verifiche       {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', '-SPEC:P', 'LF:verification', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'PF:verifiche', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-COMP:A', '-SPEC:R', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'ARG', '-COMP:V', 'PF:virtaa', 'SPEC:ADV', 'CLASS:INTR', '!COMP:P', '-SPEC:T/fin', 'COMP:P', '-COMP:MA/inf', 'LANG:FI', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'LF:flow', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'ARG', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'PF:volu', 'COMP:P', 'SEM:internal', '-VAL', '-COMP:N', 'V', '-SPEC:*', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:want', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', 'SEM:achievement', '-SPEC:T/fin', 'COMP:P', '-VAL', '-COMP:N', 'V', 'PF:voitta', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LF:win', 'LANG:EN', 'CLASS:TR', 'ASP:BOUNDED', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*'}
wants           ['LANG:EN']
want-           {'ARG', '-COMP:V', '-COMP:P', 'COMP:D', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:TO/inf', 'COMP:P', '-VAL', '-COMP:N', 'V', 'PF:want', 'ASP', 'PHI:DET:_', 'LANG:EN', 'CLASS:TR', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', 'LF:want', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'COMP:TO/inf', '!COMP:*'}
what            ['LANG:EN']
what-           {'LF:what', '-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', 'LANG:EN', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', 'PF:what', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
which           {'-SPEC:V', '-COMP:P', '-SPEC:Neg/fin', 'OP:WH', '-SPEC:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'COMP:N', '-COMP:uR', 'D', 'LF:which', '-ARG', 'LANG:EN', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable', 'PF:which'}
who             ['LANG:EN']
who-            {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', 'LANG:EN', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', 'LF:who', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', 'PF:who', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
whether         {'OP:WH', 'COMP:T/fin', 'COMP:C/fin', 'FIN', 'PF:whether', '-VAL', '-SPEC:*', 'LF:whether', 'OP:Q', '-ARG', 'LANG:EN', '!PROBE:FIN', 'Q', 'FORCE', 'OP', '!COMP:*'}
yrittaa         ['LANG:FI']
yritta-         {'ARG', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'PF:yritta', '!COMP:A/inf', 'LF:try', 'COMP:P', '!COMP:-ARG', 'SEM:internal', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
mina            ['LANG:EN']
mina-           {'-SPEC:V', '-SPEC:T/fin', 'LF:I', 'COMP:R', 'LANG:FI', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'PF:mina', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
sina            ['LANG:EN']
sina-           {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', 'LANG:FI', '-COMP:WH', 'N', '-COMP:*', '-SPEC:INF', 'PF:sina', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', 'LF:you', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
han             ['LANG:EN']
han-            {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', 'LANG:FI', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', 'LF:s/he', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'PF:han', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', 'LANG:FI', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', 'PF:me', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LF:we', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
te              ['LANG:EN']
te-             {'PF:te', '-SPEC:V', '-SPEC:T/fin', 'COMP:R', 'LANG:FI', '-COMP:WH', 'N', '-COMP:*', '-SPEC:INF', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', 'LF:you', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:V', '-SPEC:T/fin', 'LF:they', 'COMP:R', 'LANG:FI', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', 'PF:he', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
se              {'PF:se', '-SPEC:V', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:MA/lla', 'LF:the/that', '-SPEC:P', 'LANG:FI', 'COMP:N', '-COMP:uR', 'D', '-ARG', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable'}
sen             {'-SPEC:V', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:MA/lla', 'TAIL:ASP', 'LF:the/that', '-SPEC:P', 'LANG:FI', 'COMP:N', '-COMP:uR', 'D', '-ARG', 'TAIL:PHI', 'PF:sen', 'OP', '-SPEC:C', 'TAIL:*POL:NEG', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable'}
I               ['LANG:EN']
I-              {'-SPEC:V', '-SPEC:T/fin', 'LF:I', 'PF:I', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', 'LANG:EN', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
you             ['LANG:EN']
you-            {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-SPEC:INF', '-COMP:A', 'LANG:EN', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', 'PF:you', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', 'LF:you', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
he              ['LANG:EN']
he-             {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', 'LANG:EN', 'PF:he', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', 'LF:he', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
she             ['LANG:EN']
she-            {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', 'LF:she', '-COMP:A', 'LANG:EN', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'PF:she', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
we              ['LANG:EN']
we-             {'-SPEC:V', 'PF:we', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', 'LANG:EN', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LF:we', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:V', '-COMP:V', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', 'PHI', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'LF:you_pl', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'PF:you_pl', 'LANG:EN', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
they            ['LANG:EN']
they-           {'PF:they', '-SPEC:V', '-SPEC:T/fin', 'LF:they', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', 'LANG:EN', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
it              ['LANG:EN']
it-             {'PF:it', '-SPEC:V', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'COMP:N', 'LF:it/that', '-COMP:uR', 'D', '-ARG', 'LANG:EN', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable'}
io              ['LANG:EN']
io-             {'-SPEC:V', '-SPEC:T/fin', 'LF:I', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', 'PF:io', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
tu              ['LANG:EN']
tu-             {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-SPEC:INF', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', 'PF:tu', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', 'LF:you', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
lui             ['LANG:EN']
lui-            {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', 'PF:lui', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', 'LF:he', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
lei             ['LANG:EN']
lei-            {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', 'LF:she', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', 'PF:lei', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
noi             ['LANG:EN']
noi-            {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', 'LF:we', '-SPEC:R', '-SPEC:INF', 'PF:noi', '-SPEC:FORCE', '-COMP:VA/inf'}
voi             ['LANG:EN']
voi-            {'PF:voi', '-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'LF:you_pl', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
loro            ['LANG:EN']
loro-           {'-SPEC:V', '-SPEC:T/fin', 'LF:they', 'COMP:R', 'PF:loro', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
mi              ['LANG:EN']
mi-             {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', 'CL', 'LF:me', '-COMP:V', 'PF:mi(cl)', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
la              ['LANG:EN']
la-             {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'PF:la(cl)', 'CL', 'COMP:R/D', '-COMP:V', 'LF:her', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
lo              ['LANG:EN']
lo-             {'-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', 'LF:him', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', 'CL', '-COMP:V', 'PF:lo(cl)', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
si              ['LANG:EN']
si-             {'-SPEC:V', '-SPEC:T/fin', 'LF:3sg', 'COMP:R', '-COMP:WH', 'PF:si(cl)', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', 'CAL:CL', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'PF:ci', '-SPEC:V', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '-COMP:*', '-COMP:A', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '-COMP:V', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'LF:there', 'COMP:P', 'COMP:D/rel', '-SPEC:P', '-SPEC:C/fin', 'PHI_N', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'LANG:IT', '-SPEC:R', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
[-n]            {'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:1', 'LANG:FI', 'PHI', 'inflectional'}
[-t]            {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI', 'LANG:FI', 'inflectional'}
[-V]            {'PHI:NUM:SG', 'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional'}
[-mme]          {'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:FI', 'PHI', 'inflectional', 'PHI:NUM:PL'}
[-mme]          {'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:FI', 'inflectional', 'PHI:NUM:PL'}
[-tte]          {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI', 'LANG:FI', 'inflectional', 'PHI:NUM:PL'}
[-vat]          {'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional', 'PHI:NUM:PL'}
[-ni]           {'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:1', 'LANG:FI', 'PHI', 'inflectional'}
[-si]           {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI', 'LANG:FI', 'inflectional'}
[-nsa]          {'PHI:NUM:SG', 'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional'}
[-an]           {'PHI:DET:DET', 'PHI:NUM:SG', 'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional'}
[-nne]          {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'LANG:FI', 'inflectional', 'PHI:NUM:PL'}
[-s]            {'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI:GEN:F', 'PHI', 'inflectional', 'LANG:EN'}
[-0]            {'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:1', 'PHI:GEN:N', 'PHI:NUM:PL', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI', 'inflectional'}
[-o]            {'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:1', 'LANG:IT', 'PHI', 'inflectional'}
[-i]            {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI', 'LANG:IT', 'inflectional'}
[-a]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'LANG:IT', 'PHI', 'inflectional'}
[-e]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'LANG:IT', 'PHI', 'inflectional'}
[-iamo]         {'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:IT', 'PHI', 'inflectional', 'PHI:NUM:PL'}
[-te]           {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI', 'LANG:IT', 'inflectional', 'PHI:NUM:PL'}
[-no]           {'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT', 'PHI', 'inflectional', 'PHI:NUM:PL'}
[-nom]          {'adjoinable', 'inflectional', 'TAIL:FIN,ARG,VAL', 'NOM', 'LANG:EN'}
[-par]          {'adjoinable', 'TAIL:ARG,-VAL', 'LANG:FI', 'inflectional', 'PAR'}
[-gen]          {'-float', 'TAIL:INF,ARG', 'GEN', 'inflectional', 'LANG:EN'}
gen             {'-float', 'TAIL:INF,ARG', 'GEN', 'inflectional', 'LANG:EN'}
[-n_acc]        {'adjoinable', 'n-ACC', 'TAIL:PHI', 'TAIL:*POL:NEG', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'inflectional'}
[-t_acc]        {'adjoinable', 'TAIL:*POL:NEG', 'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 't-ACC'}
[-0_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'LANG:FI', '0_ACC', 'TAIL:*PHI', 'inflectional'}
asp             {'ASP:BOUNDED', 'inflectional', 'LANG:EN'}
a'              {'a', 'LANG:X', 'PF:a', 'LF:A'}
b'              {'LF:B', 'PF:b', 'b', 'LANG:X'}
b''             {'LF:B', 'PF:b', 'b', '-COMP:c', 'LANG:EN'}
c''             {'LF:C', 'c', 'SPEC:a', 'PF:c', 'LANG:EN'}
c'              {'LF:C', 'c', 'PF:c', 'LANG:X'}
d'              {'PF:d', 'LF:D', 'd', 'LANG:'}
a''             ['LANG:EN']
x'              {'PF:x', 'LANG:X', 'x', 'LF:X'}
y'              {'PF:y', 'y', 'LF:Y', 'LANG:X'}
z'              {'PF:x', 'z', 'LF:Z', 'LANG:X'}
John'           {'LF:John', 'LANG:X', 'PF:John', "N'"}
admires'        {'PF:admires', 'LF:admires', "V'", 'LANG:X'}
admires''       {'ARG', '-COMP:V', 'PF:admires', 'SPEC:ADV', '-SPEC:T/fin', 'COMP:P', 'LF:admires', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'ASP', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:D'}
Mary'           {'PF:Mary', 'LANG:X', 'LF:mary', "N'"}
T/fin           {'ARG', '-SPEC:V', 'SPEC:FORCE', '!PROBE:V', '-SPEC:T/fin', 'COMP:V', 'LF:T', '-SPEC:v', '-SPEC:N', 'T/fin', '-SPEC:TO/inf', 'T', 'FIN', 'SPEC:*', '-SPEC:C/fin', '-SPEC:Neg', '!SPEC:*', 'SPEC:TO/inf', 'COMP:T/prt', 'COMP:v', 'PHI:DET:_', 'LANG:EN', 'VAL', 'PF:T', '-COMP:INF', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:C', 'PHI:GEN:_', '-COMP:T/fin', '!COMP:*', 'SPEC:D'}
v               {'ARG', '!PROBE:V', 'ASP', 'COMP:V', '-SPEC:N', 'LANG:EN', 'v', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', 'LF:v', 'PHI:GEN:_', '-VAL', '!COMP:*', 'PF:v', 'SPEC:D'}
C/fin           {'-SPEC:T/fin', 'COMP:T/fin', '-SPEC:N', 'PF:C', 'C', 'SPEC:*', 'FIN', '-SPEC:C/fin', 'COMP:Neg/fin', '-COMP:T/prt', '-ARG', 'LANG:EN', 'VAL', '!PROBE:FIN', 'LF:C/fin', '-COMP:C/fin', 'C/fin', '!COMP:*'}
T               {'ARG', '-SPEC:V', '!PROBE:V', 'COMP:V', '-SPEC:T/fin', 'LF:T', '-SPEC:N', 'T', 'FIN', 'SPEC:*', '-COMP:NEG', 'COMP:T/prt', 'COMP:v', 'PHI:DET:_', 'LANG:EN', 'VAL', 'PF:T', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:FORCE', '!COMP:*', 'SPEC:D'}
T/prt           {'ARG', '-SPEC:V', 'COMP:D', '!PROBE:V', 'COMP:V', '-SPEC:T/fin', '-SPEC:N', 'T/prt', 'T', 'FIN', 'SPEC:*', '-COMP:NEG', 'LF:T/prt', 'PF:T/prt', 'COMP:T/prt', 'COMP:v', 'PHI:DET:_', 'LANG:EN', 'VAL', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:FORCE', '!COMP:*', 'SPEC:D'}
a0              {'-adjoinable', 'LANG:EN', 'PF:A', 'A', 'COMP:0', '-SPEC:A', 'TAIL:D', 'LF:A', '-SPEC:D'}
n               {'ARG', '-SPEC:V', 'INF', '-SPEC:T/fin', 'COMP:R', '-COMP:WH', 'N', '!SPEC:*', '-COMP:A', 'COMP:v', 'LANG:EN', 'n', 'VAL', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:C/fin', '-COMP:v', 'COMP:R/D', '!COMP:*', 'LF:n', '-COMP:V', '-COMP:AUX', 'COMP:V', '-SPEC:N', '!SPEC:D', '-SPEC:ADV', 'PF:n', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'SPEC:*', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', 'PHI:DET:_', '-SPEC:R', 'PHI:NUM:_', 'COMP:0', '-SPEC:INF', 'COMP:uR', '-SPEC:FORCE', '-COMP:VA/inf'}
impass          {'ARG', '!PROBE:V', 'ASP', 'COMP:V', '-SPEC:N', 'LANG:EN', 'v', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', 'PHI:GEN:_', 'PF:impass', 'LF:impass', '-VAL', '!COMP:*', 'SPEC:D'}
cau             {'ARG', '!PROBE:V', 'ASP', 'COMP:V', '-SPEC:N', 'LANG:EN', 'v', 'PF:Cau', 'LF:v/Cause', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', 'PHI:GEN:_', '-VAL', '!COMP:*', 'SPEC:D'}
INF             {'-SPEC:V', 'INF', 'COMP:v', '-SPEC:T/fin', 'COMP:V', 'LANG:EN', 'PF:INF', '-COMP:T/fin', '-COMP:C/fin', 'LF:INF', '!COMP:*', '-COMP:FORCE'}
prtcpl          {'ARG', '-SPEC:V', 'COMP:D', 'INF', '!PROBE:V', 'SPEC:D', '-SPEC:T/fin', 'COMP:V', '-SPEC:N', 'T/prt', 'T', 'FIN', 'SPEC:*', '-COMP:NEG', 'LF:T/prt', 'PF:T/prt', 'COMP:T/prt', 'COMP:v', 'PHI:DET:_', 'LANG:EN', 'VAL', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:FORCE', '!COMP:*', '-COMP:FORCE'}
TO/inf          {'-SPEC:V', 'INF', '-SPEC:T/fin', 'COMP:V', '-SPEC:v', '-VAL', 'LF:TO/inf', 'COMP:v', '!COMP:V', 'LANG:EN', '?ARG', 'TO/inf', '-COMP:T/fin', '-COMP:C/fin', 'PF:TO/inf', '!COMP:*', 'adjoinable', '-COMP:FORCE'}
A/inf           {'-SPEC:V', 'INF', '-SPEC:Neg/fin', '-SPEC:T/fin', 'COMP:V', 'SPEC:*', 'PF:A/inf', '?VAL', 'COMP:v', 'LANG:EN', 'LF:A/inf', 'A/inf', '?ARG', '-COMP:T/fin', '-COMP:C/fin', '!COMP:*', '-COMP:FORCE'}
ARE/inf         {'-SPEC:V', 'INF', '-SPEC:T/fin', 'COMP:V', 'SPEC:*', 'ARE/inf', 'PF:are', '-adjoinable', 'COMP:v', 'LANG:EN', 'VAL', '?ARG', 'LF:ARE/inf', '-COMP:T/fin', '-COMP:C/fin', '!COMP:*', '-COMP:FORCE'}
ESSA/inf        {'-SPEC:V', 'ADV', 'INF', 'PF:essa', '-SPEC:Neg/fin', '-SPEC:T/fin', 'COMP:V', '-SPEC:N', 'SPEC:*', 'TAIL:T', '?VAL', 'COMP:v', 'ESSA/inf', 'LANG:EN', '?ARG', 'LF:while', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:FORCE', '!COMP:*', 'adjoinable', '-COMP:FORCE'}
TUA/inf         {'ARG', 'PF:tua', '-SPEC:V', 'ADV', 'INF', '-SPEC:Neg/fin', '-SPEC:T/fin', 'COMP:V', '-SPEC:N', 'SPEC:*', 'LF:after', 'TAIL:T', '!SPEC:*', 'COMP:v', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:EN', 'VAL', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:T/fin', '-COMP:C/fin', 'TUA/inf', '!COMP:*', 'adjoinable', '-COMP:FORCE'}
VA/inf          {'ARG', '-SPEC:V', 'INF', 'VA/inf', 'LF:VA', '-SPEC:N', '-SPEC:T/fin', 'COMP:V', 'SPEC:*', 'PF:vAn', '!SPEC:*', 'COMP:v', 'PHI:DET:_', 'LANG:EN', 'VAL', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:T/fin', '-COMP:C/fin', '!COMP:*', '-COMP:FORCE'}
MA/ssa          {'ARG', 'MA/ssa', 'ADV', '-SPEC:Neg/fin', 'PF:massa', 'MA/inf', 'COMP:V', '-SPEC:T/fin', '-SPEC:N', '-VAL', '-SPEC:*', 'TAIL:V', 'LF:in_doing', 'COMP:v', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', 'adjoinable'}
MA/tta          {'ARG', 'PF:matta', 'ADV', '-SPEC:Neg/fin', 'MA/inf', '-SPEC:T/fin', '-SPEC:N', 'LANG:EN', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:without_doing', 'PHI:PER:_', 'PHI:DET:_', 'PHI:GEN:_', 'TAIL:T', '-VAL', 'adjoinable'}
MA/lla          {'ARG', '-SPEC:Neg/fin', '-SPEC:T/fin', 'TAIL:T', '-VAL', 'LF:by_doing', 'COMP:v', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:_', 'PF:malla', 'adjoinable', 'ADV', 'MA/inf', 'COMP:V', '-SPEC:N', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:FORCE'}
MA/inf          {'ARG', '-SPEC:Neg/fin', '-SPEC:T/fin', 'PF:maan', '-VAL', 'COMP:v', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:_', 'LF:to_do', 'adjoinable', 'ADV', 'MA/inf', 'COMP:V', '-SPEC:N', 'TAIL:V', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:FORCE'}
E/inf           {'ADV', '-SPEC:Neg/fin', '-SPEC:T/fin', '-ARG', 'PF:en', '-SPEC:N', '-SPEC:FORCE', 'adjoinable', 'SPEC:*', 'TAIL:T', 'LANG:FI', '-VAL', 'LF:by'}
BE-             {'LF:BE', '-COMP:V', 'SPEC:ADV', 'COPULA', '-SPEC:T/fin', 'COMP:P', '-VAL', '-COMP:N', 'V', 'SPEC:TO/inf', 'COMP:T/prt', 'ASP', '-ARG', 'LANG:EN', '-COMP:T/fin', 'PF:BE', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*', 'SPEC:D'}
D               {'-SPEC:V', '-COMP:P', 'LF:D', '-SPEC:Neg/fin', '-SPEC:T/fin', 'PF:D', '-SPEC:MA/lla', '-SPEC:P', 'COMP:N', '-COMP:uR', 'D', '-ARG', 'LANG:EN', 'OP', '-SPEC:C', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable'}
D/rel           {'-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', 'LF:D/rel', '-SPEC:MA/lla', '-SPEC:P', 'COMP:N', 'D/rel', 'inflectional', '-SPEC:INF', '-COMP:uR', 'D', 'OP:REL', '-ARG', 'LANG:EN', 'OP:_', 'OP', '-SPEC:C', '-COMP:T/fin', '-COMP:C/fin', '-COMP:D', '!PROBE:N', '!COMP:*', 'adjoinable', 'PF:D/rel'}
P               {'ARG', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:T/fin', '-COMP:uWH', 'LF:P', '-SPEC:v', '-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:C/fin', '-VAL', '-COMP:N', '-SPEC:*', '-COMP:ADV', '-COMP:A', '-SPEC:iR', '-SPEC:iWH', 'PHI:DET:_', 'PF:P', 'LANG:EN', 'P', 'PHI:NUM:_', 'PHI:PER:_', '-float', '-COMP:T', '-SPEC:C', 'PHI:GEN:_', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
pro             ['LANG:EN']
pro-            {'-SPEC:V', '-COMP:V', 'PF:(pro)', '-SPEC:T/fin', '-COMP:AUX', 'LF:pro', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH', 'COMP:P', 'COMP:D/rel', 'COMP:R', 'PHI', '-SPEC:P', '-COMP:WH', '-SPEC:C/fin', 'N', '-SPEC:INF', '-COMP:N', 'COMP:C', 'SPEC:A', 'COMP:T/prt', '-COMP:A', '-SPEC:R', 'LANG:EN', '-COMP:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'COMP:R/D', '-COMP:VA/inf'}
cl              {'LEFT:D,CL', 'LEFT:T/fin', 'RIGHT:PRG', 'RIGHT:ARE/inf', 'inflectional', 'LANG:EN', 'CL'}
inc             {'INCORPORATED', 'inflectional', 'LANG:EN'}
sg              {'inflectional', 'LANG:EN', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:EN'}
2p              {'PHI:PER:2', 'inflectional', 'LANG:EN'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'PHI:DET:DEF', 'inflectional', 'LANG:EN'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'PHI:HUM:HUM', 'inflectional', 'LANG:EN'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:EN'}
m               {'LANG:EN', 'inflectional', 'PHI:GEN:M'}
f               {'PHI:GEN:F', 'inflectional', 'LANG:EN'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'LANG:EN', 'NOM'}
acc             {'ACC', 'inflectional', 'LANG:EN', 'TAIL:v'}
dat             {'DAT', 'inflectional', 'LANG:EN', 'TAIL:v'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'OP:WH', 'inflectional', 'LANG:EN', 'OP:_'}
wh_             {'OP', 'FORCE:OP:WH', 'inflectional', 'LANG:EN', 'OP:_'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'OP:FOC', 'inflectional', 'LANG:EN'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
Q               {'OP', 'OP:WH', 'OP:Q', 'inflectional', 'LANG:EN'}
