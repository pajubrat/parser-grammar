ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:v', '-SPEC:C', 'COMP:ARE/inf', '-COMP:uWH', 'adjoinable', '-SPEC:V', '-SPEC:iR', '-COMP:ADV', 'LANG:IT', '-SPEC:ADV', 'COMP:D', 'LF:to', 'P', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:*', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'PF:a', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:iWH'}
a_D             {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', '-COMP:D', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'LF:D', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'LANG:EN', 'OP', '-SPEC:N', 'PF:D', 'D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'ASP', 'SPEC:ADV', 'PF:admire', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'ARG', 'LANG:EN', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-COMP:Neg', '-SPEC:FORCE', '-VAL', '-SPEC:Neg', 'LF:admire'}
admire*         ['LANG:EN']
T/fin*          {"PF:T/fin'", 'LF:T', '!SPEC:*', 'CAT:T/fin', 'LANG:EN', 'NO_NUMBER', '-VAL', 'NO_DET'}
v*              {'CAT:v', 'NO_NUMBER', 'LANG:EN', '-VAL', 'NO_DET', 'PF:v', 'LF:v'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', 'NO_PERSON', '!SPEC:*', 'CAT:T/fin', 'LANG:EN', "PF:T/fin''", 'NO_NUMBER', '-VAL', 'PHI:PER:3', 'NO_DET'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'PF:adora', 'LANG:IT', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', 'PHI:GEN:_', 'COMP:P', '-SPEC:FORCE', '-COMP:N', '-COMP:v', 'V', '-VAL', '-COMP:T/fin', 'LF:admire'}
antaa           ['LANG:FI']
anta-           {'ASP', 'PF:antaa', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:D', 'LF:give', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '+SEM:directional', '-COMP:N', '-COMP:v', 'V', '-COMP:FIN', '-SPEC:FORCE', '-VAL', 'CLASS:DITR', 'ASP:BOUNDED'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'ASP', 'PF:ask', 'SEM:internal', 'LF:ask', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:D', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
ask-            {'ASP', 'PF:ask', 'SEM:internal', 'LF:ask', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:D', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', 'LF:key', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', 'PF:avain', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-SEM:directional', '-SPEC:C/fin'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'N', 'COMP:R/D', '-SPEC:V', 'LF:car', 'PF:auto', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-SEM:directional', '-SPEC:C/fin'}
city            {'LF:city', 'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', 'LANG:EN', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', 'PF:city', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
che             ['LANG:IT']
che-            {'N', 'COMP:R/D', '-SPEC:V', 'LF:who', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'PF:che', '-COMP:v', '-SPEC:N', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
chiamato        ['LANG:IT']
chiamata-       {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LANG:IT', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'PF:chiamato', 'ARG', '-COMP:V', 'LF:called', 'COMP:P', '-COMP:T/fin', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
danno           {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LF:damage', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', 'PF:danno', '-COMP:T/fin', '-SPEC:C/fin'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'COMP:ARE/inf', 'ASP', 'SEM:internal', 'SPEC:ADV', 'PHI:NUM:_', 'LANG:IT', 'COMP:D', 'PHI:PER:_', 'LF:detest', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', 'PF:detest', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
devono          ['LANG:EN']
deva-           {'COMP:ARE/inf', 'SEM:internal', 'SPEC:ADV', 'PHI:NUM:_', 'PF:deva', 'SPEC:D', 'LANG:IT', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:must', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-ASP', '-SPEC:FORCE', '-VAL'}
di              {'-SPEC:v', '-SPEC:C', '-adjoinable', '-COMP:uWH', '-SPEC:V', 'PHI:NUM:_', 'PF:di', '-SPEC:iR', '-COMP:ADV', 'SPEC:*', '-SPEC:ADV', 'COMP:D', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', 'PHI:DET:_', '-SPEC:INF', 'ARG', '-SPEC:P', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', 'LF:of', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:iWH'}
does            {'PHI:NUM:SG', '-SPEC:v', '-COMP:INF', 'PHI:PER:_', 'COMP:Neg', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:does', 'ARG', 'LANG:EN', '-COMP:T/fin', 'LF:does', '-SPEC:TO/inf', '-SPEC:C/fin', '-SPEC:Neg', '!SPEC:D', 'FIN', '-SPEC:V', 'PHI:GEN:M', 'PHI:NUM:_', 'T/fin', 'COMP:v', 'COMP:V', '!PROBE:V', 'SPEC:*', 'SPEC:D', 'COMP:D', 'PHI:GEN:F', 'PHI:DET:_', '!COMP:*', 'PHI:GEN:_', '-SPEC:N', 'COMP:T/prt', 'PHI:PER:3', 'T', '-SPEC:FORCE', 'VAL'}
does_C          ['LANG:EN']
does-           {'PHI:NUM:SG', '-SPEC:v', '-COMP:INF', 'PHI:PER:_', 'COMP:Neg', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:does', 'ARG', 'LANG:EN', '-COMP:T/fin', 'LF:does', '-SPEC:TO/inf', '-SPEC:C/fin', '-SPEC:Neg', '!SPEC:D', 'FIN', '-SPEC:V', 'PHI:GEN:M', 'PHI:NUM:_', 'T/fin', 'COMP:v', 'COMP:V', '!PROBE:V', 'SPEC:*', 'SPEC:D', 'COMP:D', 'PHI:GEN:F', 'PHI:DET:_', '!COMP:*', 'PHI:GEN:_', '-SPEC:N', 'COMP:T/prt', 'PHI:PER:3', 'T', '-SPEC:FORCE', 'VAL'}
dorme           ['LANG:IT']
dorme-          {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LF:sleep', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', 'PHI:GEN:_', 'COMP:P', '-SPEC:FORCE', '-COMP:N', '-COMP:v', 'PF:dorme', 'V', '-VAL', '-COMP:T/fin', '!SPEC:D'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'FIN', 'LF:neg', 'SEM:internal', 'PHI:NUM:_', 'PF:ei', 'SPEC:*', 'Neg/fin', 'PHI:PER:_', '!COMP:T', '-SPEC:T/fin', 'LANG:FI', '%SPEC:INF', 'PHI:DET:_', 'ARG', '!COMP:*', '!SPEC:*', '-SPEC:T', 'POL:NEG', 'COMP:T/prt', 'VAL', 'NEG'}
e-              {'FIN', 'LF:neg', 'SEM:internal', 'PHI:NUM:_', 'PF:ei', 'SPEC:*', 'Neg/fin', 'PHI:PER:_', '!COMP:T', '-SPEC:T/fin', 'LANG:FI', '%SPEC:INF', 'PHI:DET:_', 'ARG', '!COMP:*', '!SPEC:*', '-SPEC:T', 'POL:NEG', 'COMP:T/prt', 'VAL', 'NEG'}
elaa            ['LANG:FI']
ela-            {'PF:elaa', 'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LF:live', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
etsii           ['LANG:FI']
etsi-           {'ASP', '!COMP:D', 'SPEC:ADV', 'PHI:NUM:_', 'PF:etsi', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:search', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
etta            {'LF:that', 'FIN', '-SPEC:*', '!COMP:*', '!PROBE:T/fin', 'PF:etta', '-VAL', '-ARG', 'FORCE', 'COMP:T/fin', 'COMP:C/fin', 'LANG:FI'}
flow'           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:D', 'PHI:PER:_', 'PF:flow', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', 'LF:flow', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
from            {'-SPEC:v', '-SPEC:C', '-COMP:uWH', '-SPEC:V', 'adjoinable', 'PHI:NUM:_', '-SPEC:iR', '-COMP:ADV', '-SPEC:ADV', 'COMP:D', 'TAIL:V,+SEM:directional', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:DET:_', 'PF:from', '-SPEC:INF', '-SPEC:*', 'ARG', '-SPEC:P', 'LANG:EN', '!COMP:*', '-float', 'PHI:GEN:_', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', 'LF:from', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:iWH'}
gave            ['LANG:EN']
give-           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:D', 'LF:give', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PF:give', 'PHI:GEN:_', '+SEM:directional', '-COMP:N', '-COMP:v', 'V', '-COMP:FIN', '-SPEC:FORCE', '-VAL', 'CLASS:DITR'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'N', 'LF:Giuseppe', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', 'PF:Giuseppe', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-SEM:directional', '-SPEC:C/fin'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'ASP', 'SEM:internal', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'LF:want', '-SPEC:*', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'PF:haluaa', 'COMP:A/inf', 'ASP:BOUNDED'}
hairitsee       ['LANG:FI']
hairitse-       {'ASP', 'LF:disturb', '!COMP:D', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:D', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', 'PF:hairitsee', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-COMP:FIN', '-SPEC:FORCE', '-VAL'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SEM:internal', 'PF:ha', 'SPEC:ADV', 'PHI:NUM:_', 'LF:have', 'SPEC:*', 'COMP:T', 'SPEC:D', 'LANG:IT', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-ASP', '-SPEC:FORCE', '-VAL'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'ASP', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'PF:havia', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'LF:disappear'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'ASP', '!COMP:D', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-COMP:FIN', '-SPEC:FORCE', '-VAL', 'LF:admire', 'PF:ihaile-'}
il              {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', '-COMP:D', 'LANG:IT', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'PF:il', 'OP', 'LF:the', '-SPEC:N', 'D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin'}
i               {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', '-COMP:D', 'LANG:IT', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'PF:il', 'OP', 'LF:the', '-SPEC:N', 'D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin'}
in              {'-SPEC:v', '-SPEC:C', '-COMP:uWH', '-SPEC:V', 'adjoinable', 'PHI:NUM:_', '-SPEC:iR', '-COMP:ADV', 'LANG:IT', '-SPEC:ADV', '-SPEC:iWH', 'COMP:D', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:DET:_', '-SPEC:INF', 'ARG', '-SPEC:P', '!COMP:*', 'PHI:GEN:_', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', 'PF:in', 'LF:in'}
infermieri      {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'PF:infermieri', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'LF:nurses', 'COMP:R', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
is              ['LANG:EN']
be-             {'ASP', 'SPEC:ADV', 'PF:be', 'SPEC:D', 'COPULA', '-ARG', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:P', '!COMP:*', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', '-COMP:TO/inf', 'V', '-VAL', '-SPEC:FORCE', 'LF:be'}
istuuko         ['LANG:FI']
istuu-          {'ASP', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'LF:sit', 'PHI:DET:_', 'PF:istuu', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
John            ['LANG:EN']
John-           {'N', '-adjoinable', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', 'LF:John', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', 'LANG:EN', 'PF:John', '-COMP:V', '-COMP:A', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-SEM:directional', '-SPEC:C/fin'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'N', 'COMP:R/D', '-SPEC:V', 'LF:Jukka', 'SPEC:A', 'PF:Jukka', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-SEM:directional', '-SPEC:C/fin'}
juosten         ['LANG:FI']
juokse-         {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:run', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', 'PF:juokse-', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
istuu           ['LANG:FI']
istu-           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'LF:sit', 'PHI:DET:_', 'PF:istuu', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
kaksi           {'PHI:NUM:SG', 'PF:kaksi', 'LF:two', 'ARG', 'PHI:NUM:_', 'NUM', 'SPEC:*', 'TAIL:ARG,VAL,FIN', 'COMP:n', 'PHI:DET:_', '-VAL', 'COMP:N', 'PHI:PER:_', 'LANG:FI'}
kaksi           {'PF:kaksi', 'LF:two', 'LANG:EN', 'NUM', 'TAIL:*POL:NEG', 'SPEC:*', 'COMP:n', 'COMP:N', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'SPEC:*', 'PF:kaksi', 'LF:two', 'COMP:n', 'COMP:N', 'NUM', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'LF:city', 'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', 'PF:kaupunki', '-SPEC:T/fin', 'LANG:FI', '-COMP:P', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'LF:order', 'ASP', 'PF:kaske', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '!COMP:A/inf', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'SEM:external', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', 'LF:watch', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'PF:kello', '-COMP:v', '-SPEC:N', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
kello0-         {'PF:kello', 'SPEC:D', '2SPEC', 'LF:watch', 'LANG:FI', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', 'LF:key', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', 'PF:key', '-SPEC:C/fin'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', 'PF:kirja', '-COMP:V', '-COMP:A', '-COMP:T/fin', 'LF:book', 'COMP:P', 'COMP:R', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-SEM:directional', '-SPEC:C/fin'}
kohti           {'-SPEC:v', 'LF:towards', '-SPEC:C', '-COMP:uWH', 'adjoinable', '-SPEC:V', 'PHI:NUM:_', 'TAIL:V', '-SPEC:iR', '-COMP:ADV', 'SPEC:*', '-SPEC:ADV', 'COMP:D', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', 'PHI:DET:_', '-SPEC:INF', 'ARG', '-SPEC:P', '!COMP:*', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:N', '-SPEC:N', '-VAL', '-COMP:T/fin', 'PF:kohti', '-SPEC:iWH'}
koko            {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', '-COMP:D', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'OP', 'TAIL:T', '-SPEC:N', 'D', '-COMP:uR', 'PF:koko', '-SPEC:D', 'LF:all', '-COMP:T/fin'}
kuka            ['LANG:FI']
kuka-           {'N', 'COMP:R/D', '-SPEC:V', 'PF:kuka', 'LF:who', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'PHI', 'COMP:R', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
kuorsaa-        {'ASP', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:D', 'LF:snore', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', 'COMP:P', '-SPEC:FORCE', '-COMP:N', 'PF:kuorsaa', '-COMP:WH', '-COMP:v', 'V', '-VAL', '-COMP:T/fin'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:v', '-SPEC:C', 'adjoinable', '-SPEC:iR', '-COMP:ADV', '-SPEC:ADV', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:INF', 'ARG', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:C/fin', '!SPEC:D', '-SPEC:iWH', '-COMP:uWH', '-SPEC:V', 'PHI:NUM:_', 'COMP:V', 'COMP:v', 'SPEC:*', 'COMP:D', '-COMP:C/fin', '-SPEC:Neg/fin', 'LANG:FI', 'INF', 'PHI:DET:_', '-SPEC:P', '!COMP:*', '!SPEC:*', '-COMP:N', '-SPEC:N', '-COMP:FORCE', 'VAL', 'PF:lahella', 'LF:near'}
lahella         {'-SPEC:v', '-SPEC:C', '-COMP:uWH', '-SPEC:V', 'adjoinable', '!COMP:D', 'PHI:NUM:_', '-SPEC:iR', '-COMP:ADV', 'SPEC:*', '-SPEC:ADV', 'COMP:D', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', 'PHI:DET:_', '-SPEC:INF', 'ARG', '!COMP:*', '-SPEC:P', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:N', '-SPEC:N', '-VAL', '-COMP:T/fin', 'PF:lahella', 'LF:near', '-SPEC:iWH'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'ASP', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'PF:lahtea', '-SPEC:T/fin', 'PHI:PER:_', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'COMP:PP', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'LF:leave', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
lavano          ['LANG:IT']
lava-           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LANG:IT', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', '!COMP:*', 'LF:wash', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'PF:lava'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', 'PF:le', '-COMP:D', 'LANG:IT', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'LF:D', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'OP', '-SPEC:N', 'D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin'}
leaves          ['LANG:EN']
leave           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', 'PHI:GEN:_', 'COMP:P', '-SPEC:FORCE', 'PF:leave', 'LF:leave', '-COMP:N', '-COMP:v', 'V', '-VAL', '-COMP:T/fin', '!SPEC:D'}
leave-          {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', 'PHI:GEN:_', 'COMP:P', '-SPEC:FORCE', 'PF:leave', 'LF:leave', '-COMP:N', '-COMP:v', 'V', '-VAL', '-COMP:T/fin', '!SPEC:D'}
like-           {'ASP', '!COMP:D', 'SPEC:ADV', 'PHI:NUM:_', 'PF:like', 'LF:like', '-SPEC:T/fin', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', 'PHI:GEN:_', 'COMP:P', '-SPEC:FORCE', '-COMP:N', '-COMP:v', 'V', '-VAL', '-COMP:T/fin'}
likes           ['LANG:EN']
like            {'ASP', '!COMP:D', 'SPEC:ADV', 'PHI:NUM:_', 'PF:like', 'LF:like', '-SPEC:T/fin', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', 'PHI:GEN:_', 'COMP:P', '-SPEC:FORCE', '-COMP:N', '-COMP:v', 'V', '-VAL', '-COMP:T/fin'}
little          ['LANG:EN']
little-         {'LF:little', 'SPEC:D', 'LANG:EN', '2SPEC', '0', 'PF:little-'}
lle             {'-SPEC:v', '-SPEC:C', 'PF:P(lle)', '-COMP:uWH', 'adjoinable', '-SPEC:V', 'PHI:NUM:_', '-SPEC:iR', '-COMP:ADV', '-SPEC:ADV', 'COMP:D', 'TAIL:V,+SEM:directional', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', 'PHI:DET:_', '-SPEC:*', '-SPEC:INF', 'ARG', '-SPEC:P', '!COMP:*', '-SPEC:FORCE', '+SEM:directional', 'LF:for', '-COMP:N', '-SPEC:N', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:iWH'}
lla             {'-SPEC:v', '-SPEC:C', '-COMP:uWH', '-SPEC:V', 'adjoinable', 'TAIL:*V', 'PHI:NUM:_', '-SPEC:iR', '-COMP:ADV', 'SPEC:*', 'LF:by', '-SPEC:ADV', 'COMP:D', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', 'PHI:DET:_', '-SPEC:INF', 'ARG', '-SPEC:P', '!COMP:*', '-SPEC:FORCE', 'TAIL:T', 'PF:P(lla)', '-COMP:N', '-SPEC:N', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:iWH'}
Luisa           ['LANG:IT']
Luisa-          {'N', 'COMP:R/D', '-SPEC:V', 'LF:Luisa', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'PF:Luisa', 'COMP:P', '-COMP:T/fin', 'COMP:R', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-SEM:directional', '-SPEC:C/fin'}
lukemalla       ['LANG:FI']
luke-           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LF:read', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'PF:luke'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'ASP', '!COMP:D', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'LF:find', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PF:loyta-', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'ASP:BOUNDED'}
Mary            ['LANG:EN']
Mary-           {'N', '-adjoinable', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', 'LF:Mary', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-SEM:directional', 'PF:Mary', '-SPEC:C/fin'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'N', '-adjoinable', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-SEM:directional', '-SPEC:C/fin', 'PF:Merja', 'LF:Merja'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'ADV', 'adjoinable', 'COMP:v', 'TAIL:T', '-SPEC:N', 'SPEC:*', 'LF:by', 'PF:malla', 'MA/inf', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI'}
meren           ['LANG:FI']
mere-           {'LF:ocean', 'N', 'COMP:R/D', '-SPEC:V', 'PF:meri', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
mistake         {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', 'LANG:EN', '-COMP:V', '-COMP:A', 'LF:mistake', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', 'PF:mistake', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', 'PF:mika-', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'LF:what', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'LANGN:EN', 'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'PF:move', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '+SEM:directional', '-COMP:N', '-COMP:v', 'LF:move', 'V', '-VAL', '-SPEC:FORCE'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'SPEC:D', 'LF:comfortably', 'PF:mukavasti', '2SPEC', 'LANG:FI'}
must            {'-SPEC:v', 'FIN', '-SPEC:V', 'PHI:NUM:_', 'T/fin', '-COMP:INF', 'COMP:v', 'COMP:V', '!PROBE:V', 'VAL', 'SPEC:D', 'SPEC:*', 'COMP:D', 'PHI:PER:_', 'COMP:Neg', '-SPEC:T/fin', 'MODAL', 'LF:must', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', '!COMP:*', 'LANG:EN', '-SPEC:Neg', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:N', 'COMP:T/prt', 'T', '-COMP:T/fin', '-SPEC:TO/inf', '-SPEC:C/fin', '!SPEC:D', 'PF:must'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'PF:myy', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LF:sell', 'LANG:FI', 'SPEC:TO/inf', '-COMP:P', 'PHI:DET:_', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'ASP:BOUNDED'}
naki            ['LANG:FI']
nake-           {'ASP', 'PF:nake', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:MA/inf', '-COMP:N', '-COMP:v', 'LF:see', 'V', '-VAL', '-SPEC:FORCE', '-COMP:ESSA/inf', 'ASP:BOUNDED'}
nayttaa         ['LANG:FI']
naytta-         {'ASP', 'SEM:internal', 'SPEC:ADV', 'LF:seem', '-ARG', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'SPEC:P', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PF:naytta', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'VAL', '!SPEC:D', '!COMP:VA/inf'}
ndo             {'-SPEC:V', '!COMP:*', 'LANG:EN', '-COMP:T/fin', '?ARG', 'COMP:V', 'COMP:v', 'PRG', '-COMP:C/fin', 'PF:PRG', 'VAL', 'LF:ing', '-SPEC:T/fin', 'INF', '-COMP:FORCE'}
ne              {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', 'PF:ne', '-COMP:D', 'COMP:N', 'LF:those', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'OP', '-SPEC:N', 'D', 'PHI:NUM:PL', '-COMP:uR', 'PHI:PER:3', '-SPEC:D', '-COMP:T/fin'}
niiden          ['LANG:EN']
nen             {'adjoinable', 'PF:a', 'TAIL:D', '-SPEC:A', 'SPEC:*', 'A', '-SPEC:D', 'COMP:0', 'LANG:FI', 'LF:ing'}
not             {'-COMP:C', 'ARG', '!COMP:*', 'LANG:EN', 'PHI:NUM:_', 'Neg', 'PHI:GEN:_', 'SPEC:*', 'PF:not', '-SPEC:T/fin', '-COMP:D', 'POL:NEG', '-VAL', '-COMP:FIN', 'PHI:PER:_', 'LF:not', 'PHI:DET:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LF:sleep', 'PF:nukku', '-COMP:D', 'SPEC:D', 'CLASS:INTR', '-COMP:Neg/fin', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', 'COMP:P', '-SPEC:FORCE', '-COMP:N', '-COMP:v', 'V', '-VAL', '-COMP:T/fin', '-COMP:T'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', 'LF:possessions', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'PF:omaisuuden'}
operatoria      ['LANG:IT']
operatoria-     {'PF:operatoria', 'LANG:IT', 'SPEC:D', 'LF:operation', '2SPEC', '0'}
ostaa           ['LANG:FI']
osta-           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LF:buy', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PF:osta', '-COMP:P', 'PHI:DET:_', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'ASP:BOUNDED'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', 'LF:day', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', 'PF:paiva', '-SPEC:C/fin', 'SEM:nonreferential'}
Pariisia        ['LANG:FI']
Pariisi-        {'N', 'COMP:R/D', '-SPEC:V', 'LF:Paris', 'SPEC:A', '-COMP:ADV', '-COMP:D', 'PF:Pariisi', '-SPEC:ADV', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', 'PF:Pekka', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-SEM:directional', '-SPEC:C/fin', 'LF:Pekka'}
pelottaa        ['LANG:FI']
pelkaa-         {'ASP', 'PF:pelkaa', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', 'LF:fear', '-SPEC:FORCE', '-VAL'}
persuades       ['LANG:EN']
persuade-       {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LF:persuade', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', '!COMP:*', 'LANG:EN', 'ARG', '-COMP:V', 'COMP:TO/inf', 'COMP:P', '-SPEC:FORCE', '-COMP:T/fin', 'PHI:GEN:_', 'SEM:external', '-COMP:N', '-COMP:v', 'V', '-VAL', 'PF:persuade'}
peruuntui       ['LANG:FI']
peruuntu-       {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'PF:peruuntui', 'SPEC:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LF:cancelled', '-COMP:V', 'COMP:P', '-SPEC:FORCE', '-COMP:N', '-COMP:v', 'V', '-VAL', '-COMP:T/fin'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'LF:wash', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-SPEC:FORCE', '-COMP:N', '-COMP:v', 'V', '-VAL', 'PF:pese', 'ASP:BOUNDED'}
pese-           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'LF:wash', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-SPEC:FORCE', '-COMP:N', '-COMP:v', 'V', '-VAL', 'PF:pese'}
petardi         {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', 'PF:petardi', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'LF:firecrackers'}
pieni           ['LANG:FI']
pieni-          {'0', 'LF:small', 'SPEC:D', 'PF:pieni-', '2SPEC', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', 'LF:boy', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', 'PF:poika', '-SPEC:C/fin'}
puhelinta       ['LANG:FI']
puhelin-        {'0', 'LF:phone', 'SPEC:D', 'PF:puhelin', '2SPEC', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'SPEC:D', '2SPEC', 'LF:red', 'PF:puna-', 'LANG:FI', '0'}
presupposto     {'N', 'COMP:R/D', '-SPEC:V', 'LF:presupposition', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', 'PF:presupposto', '-SPEC:C/fin'}
primary         {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LF:nurse', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'PF:primary', 'COMP:P', 'COMP:R', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
promises        ['LANG:EN']
promise-        {'ASP', 'SEM:internal', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:D', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'PF:promise', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', 'LF:promise', '-SPEC:FORCE', '-VAL'}
pyytaa          ['LANG:FI']
pyyta-          {'ASP', 'LF:ask', 'SPEC:ADV', 'PHI:NUM:_', 'PF:pyyda', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', 'COMP:P', '-SPEC:FORCE', 'SEM:external', '-COMP:N', '-COMP:v', 'V', '-VAL', '-COMP:T/fin'}
raukesi         ['LANG:FI']
raukea-         {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LF:terminate', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'PF:raukea'}
red             ['LANG:EN']
red-            {'SPEC:D', 'LANG:EN', 'LF:red', 'PF:red', '2SPEC', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'ASP', '!COMP:D', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'LF:reach', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', 'PF:saavutta-', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'ASP:BOUNDED'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'ASP', 'COMP:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:D', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'LF:say', 'SPEC:TO/inf', 'PHI:DET:_', 'COMP:VA/inf', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'PF:sano-'}
said            ['LANG:EN']
say'            {'ASP', 'SPEC:ADV', 'PHI:NUM:_', '!COMP:FORCE', 'SPEC:D', 'PHI:PER:_', '-SPEC:T/fin', 'LF:say', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', 'PF:say', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
say-            {'ASP', 'SPEC:ADV', 'PHI:NUM:_', '!COMP:FORCE', 'SPEC:D', 'PHI:PER:_', '-SPEC:T/fin', 'LF:say', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', 'PF:say', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
sala            ['LANG:IT']
sala-           {'N', 'COMP:R/D', '-SPEC:V', 'LF:room', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', 'PF:sala', '-SPEC:C/fin'}
scoppiati       ['LANG:IT']
scoppia-        {'PF:scoppia', 'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LANG:IT', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'LF:explode'}
sen             {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', 'LF:the/that', 'TAIL:ASP', '-COMP:D', 'TAIL:PHI', 'PF:sen', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'OP', '-SPEC:N', 'TAIL:*POL:NEG', 'D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin'}
se'             {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'PF:se', 'adjoinable', 'LF:the/that', '-COMP:D', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'OP', '-SPEC:N', 'D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin'}
sentenza        {'N', 'COMP:R/D', '-SPEC:V', 'PF:sentenza', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', 'LF:sentence', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
Seine           ['LANG:EN']
Seine-          {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', 'LF:Seine', '-SPEC:T/fin', '-SPEC:INF', 'PF:Seine', '-SPEC:P', 'LANG:EN', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
sembrano        ['LANG:IT']
sembra-         {'!COMP:ARE/inf', 'SPEC:ADV', '-COMP:D', 'SPEC:D', '-ARG', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:sembra', 'SPEC:P', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-ASP', '-SPEC:FORCE', 'LF:seem', '-VAL'}
sleeps          ['LANG:EN']
sleep           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LF:sleep', '-COMP:D', 'PF:sleep', 'CLASS:INTR', 'SPEC:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
sleep-          {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LF:sleep', '-COMP:D', 'PF:sleep', 'CLASS:INTR', 'SPEC:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'N', 'COMP:R/D', 'PF:sopimus', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '!COMP:A/inf', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'LF:agreement'}
spinge          ['LANG:IT']
spinge-         {'ASP', '!COMP:D', 'SPEC:ADV', 'PHI:NUM:_', 'LANG:IT', 'PF:spinge', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'ARG', '-COMP:V', 'PHI:GEN:_', 'LF:push', '-SPEC:FORCE', '-COMP:N', '-COMP:v', 'V', '-VAL', '-COMP:T/fin'}
ssa             {'-SPEC:v', '-SPEC:C', '-COMP:uWH', '-SPEC:V', 'adjoinable', 'PHI:NUM:_', 'TAIL:V', '-SPEC:iR', '-COMP:ADV', 'SPEC:*', '-SPEC:ADV', 'COMP:D', '-SPEC:iWH', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', 'PF:ssa', 'PHI:DET:_', '-SPEC:INF', 'ARG', '-SPEC:P', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', 'COMP:n/MA', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', 'LF:in'}
stanno          ['LANG:IT']
sta-            {'SEM:internal', 'SPEC:ADV', 'PHI:NUM:_', 'LF:stay', 'COMP:PRG', 'SPEC:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:sta', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', '-ASP', 'V', '-SPEC:FORCE', '-VAL'}
sti             {'ADV', '!COMP:*', 'PF:sti', 'adjoinable', 'TAIL:T', '-SPEC:N', 'SPEC:*', 'LF:by', '-SPEC:FORCE', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'PF:sukka-', 'COMP:P', 'COMP:R', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', 'LF:socks', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
talo            {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', 'PF:talo', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'LF:house'}
tama            ['LANG:EN']
tama-           {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-COMP:A', 'LF:this', '-COMP:V', 'PF:tama', 'COMP:P', 'PHI', 'COMP:R', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'FIN', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:*', 'PF:taytyy', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'MODAL', 'LF:must', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '!COMP:A/inf', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', '-ASP', '-SPEC:FORCE', '-VAL'}
teki            ['LANG:FI']
teke-           {'ASP', '!COMP:D', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'ARG', '-COMP:A/inf', '!COMP:*', '-COMP:V', 'PF:teke', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'LF:make', 'V', '-VAL', '-SPEC:FORCE', 'ASP:BOUNDED'}
that            {'LF:that', 'FIN', '-SPEC:*', '!COMP:*', 'LANG:EN', 'PF:that', '!PROBE:T/fin', '-VAL', '-ARG', 'FORCE', 'COMP:T/fin', 'COMP:C/fin'}
the             {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', '-COMP:D', 'PF:the', 'PHI:DEF:DEF', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'LANG:EN', 'OP', 'LF:the', '-SPEC:N', 'D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin'}
to              {'-SPEC:v', '-SPEC:C', '-COMP:uWH', '-SPEC:V', 'adjoinable', 'PHI:NUM:_', '-SPEC:iR', '-COMP:ADV', '-SPEC:ADV', 'COMP:D', 'LF:to', 'TAIL:V,+SEM:directional', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:DET:_', '-SPEC:*', '-SPEC:INF', 'ARG', '-SPEC:P', 'LANG:EN', '!COMP:*', '-float', 'PHI:GEN:_', '-SPEC:FORCE', '+SEM:directional', '-COMP:N', '-SPEC:N', 'PF:to', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:iWH'}
to_inf          {'PF:TO/inf', '-SPEC:v', '-SPEC:V', 'adjoinable', 'COMP:V', 'COMP:v', 'TO/inf', '-COMP:C/fin', '-SPEC:T/fin', 'INF', '!COMP:*', 'LF:TO/inf', 'LANG:EN', '?ARG', '-VAL', '-COMP:T/fin', '-COMP:FORCE'}
towards         {'-SPEC:v', 'LF:towards', '-SPEC:C', '-COMP:uWH', 'adjoinable', '-SPEC:V', 'PHI:NUM:_', 'TAIL:V', '-SPEC:iR', '-COMP:ADV', '-SPEC:ADV', 'COMP:D', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:DET:_', 'PF:towards', '-SPEC:INF', '-SPEC:*', 'ARG', '-SPEC:P', 'LANG:EN', '!COMP:*', '-float', 'PHI:GEN:_', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:iWH'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'PF:tonaise', 'SPEC:P', 'ARG', '!COMP:*', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', '-COMP:v', 'V', 'LF:nudge', '-SPEC:FORCE', '-VAL'}
tta             {'-SPEC:v', '-SPEC:C', '-COMP:uWH', '-SPEC:V', 'adjoinable', 'PHI:NUM:_', 'LF:without', '-SPEC:iR', '-COMP:ADV', 'SPEC:*', '-SPEC:ADV', 'COMP:D', 'P', 'PF:tta', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', 'PHI:DET:_', '-SPEC:INF', 'ADV', 'ARG', '-SPEC:P', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', 'COMP:n/MA', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:iWH'}
tries           ['LANG:EN']
try-            {'ASP', '!COMP:TO/inf', 'SEM:internal', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:D', 'LF:try', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '!COMP:-ARG', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'PF:try'}
verifiche       {'N', 'LF:verification', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', 'PF:verifiche', '-SPEC:C/fin'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'ASP', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:D', 'SPEC:D', '!COMP:P', 'PHI:PER:_', '-SPEC:T/fin', 'LANG:FI', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', '-COMP:N', 'LF:flow', '-COMP:v', 'PF:virtaa', 'V', '-VAL', '-SPEC:FORCE'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'ASP', 'SEM:internal', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:want', '-SPEC:*', 'SPEC:P', '!COMP:*', 'LANG:EN', 'ARG', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'PF:volu'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'LF:win', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'ARG', 'LANG:EN', '!COMP:*', '-COMP:V', 'SEM:achievement', 'COMP:P', '-COMP:T/fin', 'PHI:GEN:_', '-COMP:N', 'PF:voitta', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', 'ASP:BOUNDED'}
wants           ['LANG:EN']
want-           {'ASP', 'SPEC:ADV', 'PHI:NUM:_', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'PF:want', '-COMP:P', 'LF:want', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', '!COMP:*', 'COMP:TO/inf', 'COMP:P', '-COMP:T/fin', 'PHI:GEN:_', '-COMP:N', '-COMP:v', 'V', '-VAL', '-SPEC:FORCE', '-SPEC:TO/inf'}
what            ['LANG:EN']
what-           {'N', 'PF:what', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', 'LANG:EN', '-COMP:V', '-COMP:A', 'LF:what', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
which           {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', 'OP:WH', '-COMP:D', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'LANG:EN', 'OP', '-SPEC:N', 'D', 'LF:which', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'PF:which'}
who             ['LANG:EN']
who-            {'N', 'COMP:R/D', '-SPEC:V', 'LF:who', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', 'LANG:EN', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', 'PF:who', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
whether         {'FIN', 'OP:WH', 'PF:whether', '!PROBE:T/fin', '-ARG', 'FORCE', 'COMP:T/fin', 'Q', '-SPEC:*', '!COMP:*', 'LANG:EN', 'OP', 'LF:whether', 'OP:Q', '-VAL', 'COMP:C/fin'}
yrittaa         ['LANG:FI']
yritta-         {'ASP', 'SEM:internal', 'SPEC:ADV', 'PHI:NUM:_', 'SPEC:D', 'LF:try', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', '!COMP:A/inf', 'LANG:EN', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '!COMP:-ARG', '-COMP:N', '-COMP:v', 'V', 'PF:yritta', '-SPEC:FORCE', '-VAL'}
mina            ['LANG:EN']
mina-           {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'PF:mina', 'COMP:P', 'COMP:R', 'LF:I', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
sina            ['LANG:EN']
sina-           {'N', 'COMP:R/D', '-SPEC:V', 'LF:you', 'SPEC:A', 'PF:sina', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
han             ['LANG:EN']
han-            {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', 'PF:han', '-SPEC:C/fin', 'LF:s/he'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'N', 'LF:we', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', 'PF:me', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
te              ['LANG:EN']
te-             {'N', 'COMP:R/D', '-SPEC:V', 'LF:you', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', 'PF:te', '-SPEC:C/fin'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'PF:he', 'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:FI', 'LF:they', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
he-             {'PF:he', 'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', 'LF:he', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', 'LANG:EN', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
se              ['LANG:FI']
se-             {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'PF:se', 'adjoinable', '-COMP:D', 'LF:it/that', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'OP', '-SPEC:N', 'D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin'}
I               ['LANG:EN']
I-              {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', 'PF:I', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', 'LANG:EN', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', 'LF:I', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
you             ['LANG:EN']
you-            {'N', 'COMP:R/D', '-SPEC:V', 'PF:you', 'LF:you', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', 'LANG:EN', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'PF:she', '-COMP:*', 'LF:she', '-SPEC:INF', '-SPEC:P', 'PHI_N', 'LANG:EN', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
we              ['LANG:EN']
we-             {'N', 'LF:we', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', 'PF:we', '-SPEC:INF', '-SPEC:P', 'PHI_N', 'LANG:EN', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
you_pl          ['LANG:EN']
you_pl-         {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:ADV', 'LF:you_pl', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', 'LANG:EN', '-COMP:V', '-COMP:A', 'COMP:P', 'PHI', 'COMP:R', 'PF:you_pl', '-SPEC:R', 'COMP:uR', '-COMP:N', '-COMP:v', '-SPEC:N', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
they            ['LANG:EN']
they-           {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LF:they', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', 'PF:they', 'LANG:EN', '-COMP:V', '-COMP:A', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
it              ['LANG:EN']
it-             {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', 'PF:it', '-COMP:D', 'LF:it/that', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'LANG:EN', 'OP', '-SPEC:N', 'D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin'}
io              ['LANG:EN']
io-             {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', 'PF:io', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', 'LF:I', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
tu              ['LANG:EN']
tu-             {'N', 'COMP:R/D', '-SPEC:V', 'PF:tu', 'LF:you', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
lui             ['LANG:EN']
lui-            {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', 'LF:he', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'PF:lui', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
lei             ['LANG:EN']
lei-            {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', 'LF:she', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'PF:lei'}
noi             ['LANG:EN']
noi-            {'N', 'LF:we', 'COMP:R/D', '-SPEC:V', 'PF:noi', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
voi             ['LANG:EN']
voi-            {'N', 'COMP:R/D', '-SPEC:V', 'PF:voi', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', 'LF:you_pl', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
loro            ['LANG:EN']
loro-           {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', 'LF:they', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', '-COMP:V', 'PF:loro', 'COMP:P', 'COMP:R', '-SPEC:R', '-COMP:N', 'COMP:uR', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:FORCE', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
mi              ['LANG:EN']
mi-             {'LF:me', 'SPEC:A', '-COMP:ADV', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:INF', '-COMP:V', 'COMP:P', 'COMP:uR', '-COMP:v', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'PF:mi(cl)', 'N', 'COMP:R/D', '-SPEC:V', 'CL', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-COMP:C/fin', '-COMP:*', '-SPEC:P', 'PHI_N', '-COMP:A', 'COMP:R', '-SPEC:R', '-COMP:N', '-SPEC:N', '-COMP:WH', '-SPEC:FORCE'}
la              ['LANG:EN']
la-             {'SPEC:A', '-COMP:ADV', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:INF', '-COMP:V', 'COMP:P', 'COMP:uR', '-COMP:v', '-COMP:AUX', '-COMP:T/fin', 'PF:la(cl)', '-SPEC:C/fin', 'N', 'COMP:R/D', '-SPEC:V', 'CL', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-COMP:C/fin', '-COMP:*', '-SPEC:P', 'PHI_N', '-COMP:A', 'COMP:R', '-SPEC:R', '-COMP:N', '-SPEC:N', '-COMP:WH', 'LF:her', '-SPEC:FORCE'}
lo              ['LANG:EN']
lo-             {'SPEC:A', '-COMP:ADV', 'LF:him', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:INF', '-COMP:V', 'COMP:P', 'COMP:uR', '-COMP:v', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'N', 'COMP:R/D', '-SPEC:V', 'CL', '-COMP:D', '-SPEC:uWH', 'PF:lo(cl)', 'LANG:IT', '-COMP:C/fin', '-COMP:*', '-SPEC:P', 'PHI_N', '-COMP:A', 'COMP:R', '-SPEC:R', '-COMP:N', '-SPEC:N', '-COMP:WH', '-SPEC:FORCE'}
si              ['LANG:EN']
si-             {'CAL:CL', 'SPEC:A', '-COMP:ADV', 'LF:3sg', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:INF', '-COMP:V', 'COMP:P', 'COMP:uR', '-COMP:v', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'N', 'COMP:R/D', '-SPEC:V', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-COMP:C/fin', '-COMP:*', '-SPEC:P', 'PHI_N', '-COMP:A', 'PF:si(cl)', 'COMP:R', '-SPEC:R', '-COMP:N', '-SPEC:N', '-COMP:WH', '-SPEC:FORCE'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:*', '-SPEC:INF', '-SPEC:P', 'PHI_N', '-COMP:A', 'PF:ci', '-COMP:V', 'COMP:P', 'COMP:R', '-SPEC:R', '-SPEC:FORCE', '-COMP:N', 'LF:there', 'COMP:uR', '-COMP:v', '-SPEC:N', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin'}
[-n]            {'PHI:NUM:SG', 'inflectional', 'PHI:PER:1', 'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-t]            {'PHI:NUM:SG', 'inflectional', 'PHI:PER:2', 'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-V]            {'PHI:NUM:SG', 'inflectional', 'PHI:PER:3', 'PHI', 'LANG:FI'}
[-mme]          {'PHI:NUM:PL', 'inflectional', 'PHI:PER:1', 'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-mme]          {'PHI:NUM:PL', 'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-tte]          {'PHI:NUM:PL', 'inflectional', 'PHI:PER:2', 'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-vat]          {'PHI:NUM:PL', 'inflectional', 'PHI:PER:3', 'PHI', 'LANG:FI'}
[-ni]           {'PHI:NUM:SG', 'inflectional', 'PHI:PER:1', 'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-si]           {'PHI:NUM:SG', 'inflectional', 'PHI:PER:2', 'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-nsa]          {'PHI:NUM:SG', 'inflectional', 'PHI:PER:3', 'PHI', 'LANG:FI'}
[-an]           {'PHI:PER:3', 'PHI', 'LANG:FI', 'inflectional'}
[-nne]          {'PHI:NUM:PL', 'inflectional', 'PHI:PER:2', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-s]            {'PHI:NUM:SG', 'PHI:GEN:M', 'inflectional', 'LANG:EN', 'PHI:PER:3', 'PHI:GEN:F', 'PHI'}
[-0]            {'PHI:NUM:SG', 'inflectional', 'LANG:EN', 'PHI:PER:2', 'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'PHI:GEN:N', 'PHI:PER:1', 'PHI:DET:DEF'}
[-o]            {'PHI:NUM:SG', 'LANG:IT', 'inflectional', 'PHI:PER:1', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-i]            {'PHI:NUM:SG', 'LANG:IT', 'inflectional', 'PHI:PER:2', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-a]            {'PHI:NUM:SG', 'LANG:IT', 'inflectional', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF'}
[-e]            {'PHI:NUM:SG', 'LANG:IT', 'inflectional', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF'}
[-iamo]         {'PHI:NUM:PL', 'LANG:IT', 'inflectional', 'PHI:PER:1', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-te]           {'PHI:NUM:PL', 'LANG:IT', 'inflectional', 'PHI:PER:2', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-no]           {'PHI:NUM:PL', 'LANG:IT', 'inflectional', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF'}
[-nom]          {'NOM', 'adjoinable', 'TAIL:FIN,ARG,VAL', 'LANG:EN', 'inflectional'}
[-par]          {'TAIL:ARG,-VAL', 'adjoinable', 'inflectional', 'PAR', 'LANG:FI'}
[-gen]          {'GEN', 'TAIL:INF,ARG', 'LANG:EN', 'inflectional', '-float'}
gen             {'GEN', 'TAIL:INF,ARG', 'LANG:EN', 'inflectional', '-float'}
[-n_acc]        {'TAIL:*POL:NEG', 'n-ACC', 'adjoinable', 'TAIL:PHI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI'}
[-t_acc]        {'TAIL:*POL:NEG', 'adjoinable', 't-ACC', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI'}
[-0_acc]        {'TAIL:*POL:NEG', '0_ACC', 'adjoinable', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*PHI'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
a'              {'LANG:X', 'LF:A', 'PF:a', 'a'}
b'              {'LANG:X', 'b', 'LF:B', 'PF:b'}
b''             {'b', 'PF:b', 'LANG:EN', 'LF:B', '-COMP:c'}
c''             {'PF:c', 'SPEC:a', 'c', 'LANG:EN', 'LF:C'}
c'              {'PF:c', 'LF:C', 'c', 'LANG:X'}
d'              {'LF:D', 'PF:d', 'd', 'LANG:'}
a''             ['LANG:EN']
x'              {'PF:x', 'x', 'LANG:X', 'LF:X'}
y'              {'LANG:X', 'y', 'LF:Y', 'PF:y'}
z'              {'PF:x', 'z', 'LANG:X', 'LF:Z'}
John'           {'PF:John', "N'", 'LF:John', 'LANG:X'}
admires'        {'PF:admires', 'LF:admires', "V'", 'LANG:X'}
admires''       {'ASP', 'SPEC:ADV', 'PF:admires', 'PHI:NUM:_', 'SPEC:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', 'ARG', 'LANG:EN', '-COMP:V', 'PHI:GEN:_', 'COMP:P', '-SPEC:FORCE', '-COMP:N', 'LF:admires', '-COMP:v', 'V', '-VAL', '-COMP:T/fin'}
Mary'           {'LANG:X', "N'", 'PF:Mary', 'LF:mary'}
T/fin           {'PF:T', '-SPEC:v', 'FIN', '-SPEC:V', 'PHI:NUM:_', 'T/fin', '-COMP:INF', 'COMP:v', 'COMP:V', '!PROBE:V', 'VAL', 'SPEC:D', 'SPEC:*', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:T', 'ARG', '!COMP:*', 'LANG:EN', '-SPEC:Neg', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:N', 'COMP:T/prt', 'T', '-COMP:T/fin', '-SPEC:TO/inf', '-SPEC:C/fin', '!SPEC:D'}
v               {'v', 'ASP', 'ARG', '!COMP:*', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:v', 'COMP:V', '-SPEC:N', '!PROBE:V', 'SPEC:D', '-VAL', 'LF:v', 'PHI:PER:_', 'PHI:DET:_'}
C/fin           {'FIN', '!PROBE:FIN', 'COMP:Neg/fin', 'C', 'SPEC:*', 'VAL', 'C/fin', '-COMP:C/fin', '-ARG', 'COMP:T/fin', '-SPEC:T/fin', '!COMP:*', 'LANG:EN', '-COMP:T/prt', '-SPEC:N', 'LF:C/fin', 'PF:C', '-SPEC:C/fin'}
T               {'PF:T', 'FIN', '-SPEC:V', 'PHI:NUM:_', 'COMP:v', 'COMP:V', 'SPEC:*', '!PROBE:V', 'SPEC:D', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'LF:T', 'ARG', '!COMP:*', 'LANG:EN', 'PHI:GEN:_', '-SPEC:N', 'COMP:T/prt', '-COMP:NEG', 'T', '-SPEC:FORCE', 'VAL'}
T/prt           {'T/prt', 'FIN', '-SPEC:V', 'PHI:NUM:_', 'LF:T/prt', 'COMP:V', 'COMP:v', 'SPEC:*', '!PROBE:V', 'SPEC:D', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ARG', '!COMP:*', 'LANG:EN', 'PHI:GEN:_', '-SPEC:N', 'COMP:T/prt', '-COMP:NEG', 'PF:T/prt', '-SPEC:FORCE', 'VAL', 'T'}
a0              {'-adjoinable', 'adjoinable', 'LANG:EN', 'TAIL:D', '-SPEC:A', 'PF:A', 'A', '-SPEC:D', 'COMP:0', 'LF:A'}
n               {'SPEC:A', '-COMP:ADV', 'VAL', '-SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:INF', 'ARG', 'LANG:EN', '-COMP:V', 'COMP:P', 'COMP:uR', '-COMP:v', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '!SPEC:D', 'N', 'COMP:R/D', '-SPEC:V', 'PHI:NUM:_', 'COMP:V', 'COMP:v', '-COMP:D', 'SPEC:*', '-SPEC:uWH', 'n', '-COMP:C/fin', 'INF', 'PHI:DET:_', '-SPEC:P', '!COMP:*', '-COMP:A', '!SPEC:*', 'PHI:GEN:_', 'COMP:R', '-SPEC:R', '-COMP:N', '-SPEC:N', '-COMP:WH', 'PF:n', '-SPEC:FORCE', 'COMP:0', 'LF:n'}
impass          {'v', 'ASP', 'ARG', '!COMP:*', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:V', '-SPEC:N', 'LF:impass', '!PROBE:V', 'SPEC:D', '-VAL', 'PF:impass', 'PHI:PER:_', 'PHI:DET:_'}
cau             {'v', 'ASP', 'ARG', '!COMP:*', 'LANG:EN', 'LF:v/Cause', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:V', '-SPEC:N', '!PROBE:V', 'PF:Cau', 'SPEC:D', '-VAL', 'PHI:PER:_', 'PHI:DET:_'}
INF             {'-SPEC:V', '!COMP:*', 'LANG:EN', 'PF:INF', 'COMP:V', 'COMP:v', '-COMP:C/fin', '-COMP:T/fin', 'LF:INF', '-SPEC:T/fin', 'INF', '-COMP:FORCE'}
prtcpl          {'T/prt', 'FIN', '-SPEC:V', 'PHI:NUM:_', 'LF:T/prt', 'COMP:V', 'COMP:v', 'SPEC:*', '!PROBE:V', 'SPEC:D', 'COMP:D', '-COMP:C/fin', 'PHI:PER:_', '-SPEC:T/fin', 'INF', 'PHI:DET:_', 'ARG', '!COMP:*', 'LANG:EN', 'PHI:GEN:_', '-COMP:FORCE', '-SPEC:FORCE', '-SPEC:N', '-COMP:NEG', 'COMP:T/prt', 'PF:T/prt', '-COMP:T/fin', 'VAL', 'T'}
TO/inf          {'PF:TO/inf', '-SPEC:v', '-SPEC:V', 'adjoinable', 'COMP:V', 'COMP:v', 'TO/inf', '-COMP:C/fin', '-SPEC:T/fin', 'INF', '!COMP:V', '!COMP:*', 'LF:TO/inf', 'LANG:EN', '?ARG', '-VAL', '-COMP:T/fin', '-COMP:FORCE'}
A/inf           {'-SPEC:V', 'A/inf', 'COMP:V', 'COMP:v', 'SPEC:*', '-COMP:C/fin', '-SPEC:T/fin', '?VAL', 'LF:A/inf', '-SPEC:Neg/fin', 'INF', 'PF:A/inf', '!COMP:*', 'LANG:EN', '?ARG', '-COMP:T/fin', '-COMP:FORCE'}
ARE/inf         {'-adjoinable', '-SPEC:V', 'LF:ARE/inf', 'COMP:V', 'COMP:v', 'SPEC:*', '-COMP:C/fin', 'ARE/inf', '-SPEC:T/fin', 'INF', '!COMP:*', 'LANG:EN', '?ARG', 'PF:are', '-COMP:T/fin', 'VAL', '-COMP:FORCE'}
ESSA/inf        {'-SPEC:V', 'adjoinable', 'COMP:V', 'COMP:v', 'SPEC:*', 'LF:while', 'ESSA/inf', '-COMP:C/fin', '-SPEC:T/fin', '?VAL', 'INF', '-SPEC:Neg/fin', 'ADV', '!COMP:*', 'LANG:EN', '-COMP:T/fin', '?ARG', 'TAIL:T', 'PF:essa', '-SPEC:N', '-SPEC:FORCE', '-COMP:FORCE'}
TUA/inf         {'-SPEC:V', 'adjoinable', 'PHI:NUM:_', 'CAL', 'COMP:V', 'COMP:v', 'TUA/inf', '-COMP:C/fin', 'LF:after', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'INF', 'PHI:DET:_', 'ADV', 'ARG', '!SPEC:*', 'PF:tua', 'LANG:EN', '!COMP:*', '-COMP:T/fin', 'PHI:GEN:_', 'TAIL:T', '-SPEC:N', '-SPEC:FORCE', '-COMP:FORCE'}
VA/inf          {'-SPEC:V', 'PHI:NUM:_', 'COMP:V', 'COMP:v', 'LF:VA', 'PF:vAn', 'SPEC:*', '-COMP:C/fin', 'PHI:PER:_', '-SPEC:T/fin', 'INF', 'PHI:DET:_', 'ARG', '!SPEC:*', 'LANG:EN', '!COMP:*', 'PHI:GEN:_', '-SPEC:N', 'VA/inf', '-COMP:T/fin', 'VAL', '-COMP:FORCE'}
MA/ssa          {'adjoinable', 'PHI:NUM:_', 'TAIL:V', 'COMP:V', 'COMP:v', 'LF:in_doing', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:DET:_', '-SPEC:*', 'ADV', 'ARG', 'LANG:EN', 'PHI:GEN:_', '-SPEC:N', 'PF:massa', '-VAL', 'MA/inf', '-SPEC:FORCE'}
MA/tta          {'LF:without_doing', 'ADV', 'ARG', 'adjoinable', 'LANG:EN', 'PHI:NUM:_', 'PF:matta', 'PHI:GEN:_', 'TAIL:T', '-SPEC:N', '-VAL', 'MA/inf', '-SPEC:FORCE', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:DET:_'}
MA/lla          {'adjoinable', 'PHI:PER:_', '-SPEC:T/fin', 'LF:by_doing', 'ARG', 'LANG:EN', 'TAIL:T', '-VAL', 'MA/inf', 'PHI:NUM:_', 'COMP:v', 'COMP:V', '-SPEC:Neg/fin', 'PHI:DET:_', 'ADV', 'PHI:GEN:_', '-SPEC:N', 'PF:malla', '-SPEC:FORCE'}
MA/inf          {'adjoinable', 'TAIL:V', 'PHI:PER:_', '-SPEC:T/fin', 'ARG', 'LANG:EN', 'LF:to_do', '-VAL', 'MA/inf', 'PHI:NUM:_', 'COMP:v', 'COMP:V', 'PF:maan', '-SPEC:Neg/fin', 'PHI:DET:_', 'ADV', 'PHI:GEN:_', '-SPEC:N', '-SPEC:FORCE'}
E/inf           {'ADV', 'adjoinable', 'PF:en', '-SPEC:N', 'SPEC:*', 'LF:by', '-VAL', '-SPEC:FORCE', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:FI'}
BE-             {'ASP', 'SPEC:ADV', 'PF:BE', 'SPEC:D', 'COPULA', '-ARG', '-SPEC:T/fin', 'LF:BE', 'SPEC:TO/inf', 'SPEC:P', '!COMP:*', 'LANG:EN', '-COMP:V', 'COMP:P', '-SPEC:FORCE', '-COMP:N', '-COMP:v', 'COMP:T/prt', 'V', '-VAL', '-COMP:T/fin'}
D               {'-SPEC:C', '!PROBE:N', '-SPEC:V', 'adjoinable', '-COMP:D', 'COMP:N', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'LF:D', '-SPEC:INF', '-SPEC:P', '!COMP:*', 'LANG:EN', 'OP', '-SPEC:N', 'PF:D', 'D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin'}
P               {'-SPEC:v', '-SPEC:C', '-COMP:uWH', '-SPEC:V', 'PF:P', 'adjoinable', 'PHI:NUM:_', '-SPEC:iR', '-COMP:ADV', '-SPEC:ADV', 'COMP:D', 'P', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:DET:_', 'LF:P', '-SPEC:INF', '-SPEC:*', 'ARG', '-SPEC:P', 'LANG:EN', '!COMP:*', '-float', 'PHI:GEN:_', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-VAL', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:iWH'}
pro             ['LANG:EN']
pro-            {'N', 'COMP:R/D', '-SPEC:V', 'SPEC:A', '-COMP:ADV', '-COMP:D', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', 'LANG:EN', '-COMP:V', '-COMP:A', 'PF:(pro)', 'PHI', 'COMP:P', 'COMP:R', '-SPEC:R', 'COMP:uR', '-COMP:N', '-COMP:v', '-SPEC:N', '-COMP:WH', '-COMP:AUX', '-COMP:T/fin', 'LF:pro', '-SPEC:C/fin'}
cl              {'LEFT:T/fin', 'RIGHT:PRG', 'CL', 'inflectional', 'RIGHT:ARE/inf', 'LANG:EN', 'LEFT:D,CL'}
inc             {'LANG:EN', 'INCORPORATED', 'inflectional'}
sg              {'PHI:NUM:SG', 'LANG:EN', 'inflectional'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'LANG:EN', 'PHI:PER:2', 'inflectional'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'LANG:EN', 'PHI:HUM:HUM', 'inflectional'}
nonhum          {'LANG:EN', 'PHI:HUM:NONHUM', 'inflectional'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'LANG:EN', 'NOM', 'TAIL:FIN,!COMP:*,VAL', 'inflectional'}
acc             {'LANG:EN', 'TAIL:v', 'ACC', 'inflectional'}
dat             {'DAT', 'TAIL:v', 'LANG:EN', 'inflectional'}
uC/op           {'LANG:EN', 'uC/op', 'inflectional'}
wh              {'LANG:EN', 'OP:WH', 'OP:_', 'inflectional'}
wh_             {'OP:_', 'LANG:EN', 'inflectional', 'OP', 'FORCE:OP:WH'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
rel             {'adjoinable', 'LANG:EN', 'inflectional', '-COMP:C/fin', 'OP:REL'}
Q               {'OP:Q', 'LANG:EN', 'inflectional', 'OP:WH', 'OP'}
