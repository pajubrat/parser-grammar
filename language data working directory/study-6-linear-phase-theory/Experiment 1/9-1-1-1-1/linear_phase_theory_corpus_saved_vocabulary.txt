ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-COMP:ADV', 'PF:a', '-COMP:N', 'TAIL:V', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:*', 'LF:to', '-SPEC:v', '-COMP:T/fin', '-ARG', 'COMP:ARE/inf', '-SPEC:C', '-VAL', '-COMP:uWH', '-SPEC:C/fin', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', '-SPEC:FORCE', 'LANG:IT', 'COMP:D', '-SPEC:iWH', '!COMP:*', '-SPEC:iR', 'P', 'adjoinable'}
a_D             {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', '!PROBE:N', '-ARG', 'LANG:EN', 'OP', '-SPEC:C', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'PF:D', '-COMP:uR', '-SPEC:D', 'LF:D', '!COMP:*', 'adjoinable'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'PF:admire', '-COMP:Neg', '-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:Neg', 'LF:admire', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', '-COMP:V', 'ARG'}
admire*         ['LANG:EN']
T/fin*          {'NO_DET', 'LF:T', 'NO_NUMBER', '!SPEC:*', "PF:T/fin'", 'LANG:EN', '-VAL', 'CAT:T/fin'}
v*              {'PF:v', 'NO_DET', 'LANG:EN', 'LF:v', 'NO_NUMBER', '-VAL', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'NO_PERSON', 'NO_DET', "PF:T/fin''", 'PHI:PER:3', 'LF:T', 'NO_NUMBER', '!SPEC:*', 'LANG:EN', '-VAL', 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LF:admire', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:V', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:IT', 'PF:adora', 'COMP:D', 'ARG', 'PHI:DET:_', 'COMP:P', '-COMP:v'}
antaa           ['LANG:FI']
anta-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'CLASS:DITR', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '+SEM:directional', 'PHI:PER:_', '-COMP:FIN', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'PF:antaa', 'COMP:P', 'LF:give', 'COMP:D', 'PHI:DET:_', '!COMP:*', 'ASP:BOUNDED', '-COMP:V', 'ARG'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-COMP:N', 'LF:ask', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', 'SEM:internal', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'COMP:D', 'PHI:DET:_', 'COMP:P', 'PF:ask', '-COMP:V', 'ARG'}
ask-            {'-COMP:N', 'LF:ask', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', 'SEM:internal', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'COMP:D', 'PHI:DET:_', 'COMP:P', 'PF:ask', '-COMP:V', 'ARG'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', 'LF:key', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', '-SEM:directional', 'COMP:P', 'PF:avain', 'N', '-SPEC:ADV'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', 'PF:auto', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LF:car', '-SEM:directional', 'COMP:P', 'N', '-SPEC:ADV'}
city            {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LF:city', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', 'PF:city', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV'}
che             ['LANG:IT']
che-            {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', 'PF:che', 'COMP:R/D', '-COMP:V', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'LF:who', '-COMP:*', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'PF:chiamato', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'LANG:IT', 'LF:called', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
danno           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', 'LF:damage', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', 'PF:danno', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'COMP:ARE/inf', 'ASP', 'V', 'SPEC:TO/inf', 'SEM:internal', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:detest', 'LF:detest', '-COMP:v', 'LANG:IT', 'COMP:D', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
devono          ['LANG:EN']
deva-           {'-COMP:N', 'SPEC:P', '-ASP', 'PHI:NUM:_', '-COMP:T/fin', 'COMP:ARE/inf', 'V', 'LF:must', 'SEM:internal', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:IT', 'PF:deva', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
di              {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '-COMP:T/fin', 'LANG:FI', 'SPEC:*', 'PF:di', '-SPEC:C', '-VAL', '-COMP:uWH', '-SPEC:C/fin', 'PHI:PER:_', '-adjoinable', '-SPEC:P', 'LF:of', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', '-SPEC:ADV', '-SPEC:FORCE', 'COMP:D', '-SPEC:iWH', 'PHI:DET:_', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
does            {'PHI:PER:3', 'PHI:NUM:_', '-COMP:INF', '-SPEC:N', '-SPEC:v', '-COMP:T/fin', 'SPEC:*', '-SPEC:Neg', 'LANG:EN', '-SPEC:TO/inf', 'SPEC:TO/inf', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:GEN:_', '!SPEC:D', 'FIN', 'VAL', '!PROBE:V', '-SPEC:T/fin', 'PHI:GEN:M', 'LF:does', '-SPEC:V', 'PHI:NUM:SG', '-SPEC:FORCE', 'SPEC:D', 'COMP:V', 'COMP:T/prt', 'T/fin', 'COMP:v', 'T', 'PF:does', 'COMP:Neg', 'PHI:DET:_', '!COMP:*', 'PHI:GEN:F', 'ARG'}
does_C          ['LANG:EN']
does-           {'PHI:PER:3', 'PHI:NUM:_', '-COMP:INF', '-SPEC:N', '-SPEC:v', '-COMP:T/fin', 'SPEC:*', '-SPEC:Neg', 'LANG:EN', '-SPEC:TO/inf', 'SPEC:TO/inf', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:GEN:_', '!SPEC:D', 'FIN', 'VAL', '!PROBE:V', '-SPEC:T/fin', 'PHI:GEN:M', 'LF:does', '-SPEC:V', 'PHI:NUM:SG', '-SPEC:FORCE', 'SPEC:D', 'COMP:V', 'COMP:T/prt', 'T/fin', 'COMP:v', 'T', 'PF:does', 'COMP:Neg', 'PHI:DET:_', '!COMP:*', 'PHI:GEN:F', 'ARG'}
dorme           ['LANG:IT']
dorme-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', 'ASP', 'LF:sleep', 'V', 'PF:dorme', 'SPEC:ADV', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:PER:_', 'PHI:GEN:_', '!SPEC:D', '-SPEC:T/fin', '-SPEC:FORCE', 'ARG', 'PHI:DET:_', 'COMP:P', '-COMP:v'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:NUM:_', 'SPEC:*', 'LANG:FI', '!COMP:T', 'POL:NEG', 'SEM:internal', 'PHI:PER:_', 'FIN', 'VAL', '-SPEC:T/fin', '-SPEC:T', 'COMP:T/prt', 'PF:ei', 'Neg/fin', '!SPEC:*', '%SPEC:INF', 'NEG', 'PHI:DET:_', '!COMP:*', 'LF:neg', 'ARG'}
e-              {'PHI:NUM:_', 'SPEC:*', 'LANG:FI', '!COMP:T', 'POL:NEG', 'SEM:internal', 'PHI:PER:_', 'FIN', 'VAL', '-SPEC:T/fin', '-SPEC:T', 'COMP:T/prt', 'PF:ei', 'Neg/fin', '!SPEC:*', '%SPEC:INF', 'NEG', 'PHI:DET:_', '!COMP:*', 'LF:neg', 'ARG'}
elaa            ['LANG:FI']
ela-            {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'PF:elaa', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:D', 'CLASS:INTR', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG', 'LF:live'}
etsii           ['LANG:FI']
etsi-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '!COMP:D', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'PF:etsi', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'PHI:DET:_', 'COMP:P', 'LF:search', '-COMP:V', 'ARG'}
etta            {'-SPEC:*', 'LANG:FI', '-ARG', 'LF:that', '!PROBE:T/fin', 'FORCE', '-VAL', 'COMP:C/fin', '!COMP:*', 'PF:etta', 'FIN', 'COMP:T/fin'}
flow'           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'PF:flow', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'PHI:DET:_', 'COMP:P', 'ARG', 'LF:flow'}
from            {'-COMP:ADV', '-COMP:N', 'adjoinable', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '-float', '-SPEC:*', '-COMP:T/fin', 'LANG:EN', '-SPEC:C', '-VAL', '-COMP:uWH', '-SPEC:C/fin', 'PHI:PER:_', 'TAIL:V,+SEM:directional', 'PF:from', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'PHI:DET:_', '-SPEC:FORCE', 'PHI:GEN:_', 'COMP:D', '-SPEC:iWH', 'LF:from', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
gave            ['LANG:EN']
give-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'PF:give', 'CLASS:DITR', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '+SEM:directional', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:FIN', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'COMP:P', 'LF:give', 'COMP:D', 'PHI:DET:_', '!COMP:*', '-COMP:V', 'ARG'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:R', '-COMP:N', 'LF:Giuseppe', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LANG:IT', '-SEM:directional', 'COMP:P', 'PF:Giuseppe', 'N', '-SPEC:ADV'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-SPEC:*', '-COMP:T/fin', 'LANG:FI', 'ASP', 'PF:haluaa', 'V', 'SPEC:TO/inf', 'SEM:internal', 'COMP:A/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'LF:want', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', 'ASP:BOUNDED', '-COMP:V', 'ARG'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'PF:hairitsee', '!COMP:D', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-COMP:FIN', '-SPEC:T/fin', 'LF:disturb', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:N', 'SPEC:P', '-ASP', 'PHI:NUM:_', 'LF:have', 'SPEC:*', '-COMP:T/fin', 'COMP:T', 'V', 'SPEC:TO/inf', 'SEM:internal', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', 'PF:ha', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:IT', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'PF:havia', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:D', 'CLASS:INTR', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', 'COMP:P', 'LF:disappear', '-COMP:V', 'ARG'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PF:ihaile-', '-COMP:N', 'SPEC:P', 'PHI:NUM:_', '!COMP:D', '-COMP:T/fin', 'LANG:FI', 'LF:admire', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-COMP:FIN', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', '-COMP:V', 'ARG'}
il              {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', '!PROBE:N', '-ARG', 'OP', '-SPEC:C', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', 'LF:the', '-SPEC:V', 'COMP:N', 'PF:il', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:D', 'LANG:IT', '!COMP:*', 'adjoinable'}
i               {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', '!PROBE:N', '-ARG', 'OP', '-SPEC:C', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', 'LF:the', '-SPEC:V', 'COMP:N', 'PF:il', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:D', 'LANG:IT', '!COMP:*', 'adjoinable'}
in              {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-VAL', '-COMP:uWH', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:GEN:_', '-SPEC:V', '-SPEC:FORCE', 'LANG:IT', 'LF:in', 'COMP:D', '-SPEC:iWH', 'adjoinable', 'PF:in', '-SPEC:iR', 'P', 'ARG'}
infermieri      {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'PF:infermieri', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:ADV', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', 'LF:nurses'}
is              ['LANG:EN']
be-             {'-COMP:N', 'SPEC:P', 'LF:be', '-COMP:T/fin', '-ARG', 'PF:be', '-COMP:TO/inf', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'COMP:P', 'COPULA', '!COMP:*', '-COMP:V', '-COMP:v'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'SPEC:ADV', '-COMP:D', 'CLASS:INTR', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', 'COMP:P', 'LF:sit', 'PF:istuu', 'ARG'}
John            ['LANG:EN']
John-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-adjoinable', '-COMP:A', '-SPEC:P', '-SPEC:INF', 'LF:John', 'PF:John', '-SPEC:R', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SEM:directional', 'COMP:P', 'N', '-SPEC:ADV'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:R', '-COMP:N', '-SPEC:N', 'PF:Jukka', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', 'LF:Jukka', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', '-SEM:directional', 'COMP:P', 'N', '-SPEC:ADV'}
juosten         ['LANG:FI']
juokse-         {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'LF:run', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'PF:juokse-', '-SPEC:FORCE', '-COMP:v', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
istuu           ['LANG:FI']
istu-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'PHI:DET:_', 'COMP:P', 'LF:sit', 'PF:istuu', 'ARG'}
kaksi           {'TAIL:ARG,VAL,FIN', 'PHI:NUM:_', 'COMP:N', 'PHI:NUM:SG', 'COMP:n', 'SPEC:*', 'LANG:FI', 'PF:kaksi', 'ARG', 'NUM', '-VAL', 'PHI:DET:_', 'PHI:PER:_', 'LF:two'}
kaksi           {'COMP:N', 'COMP:n', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'LANG:EN', 'PF:kaksi', 'NUM', 'TAIL:*POL:NEG'}
kaksi_1         {'TAIL:ARG,VAL,FIN', 'PHI:NUM:_', 'COMP:N', 'PHI:NUM:SG', 'COMP:n', 'SPEC:*', 'LANG:FI', 'PF:kaksi', 'ARG', 'NUM', '-VAL', 'PHI:DET:_', 'PHI:PER:_', 'LF:two'}
kaksi_2         {'COMP:N', 'COMP:n', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'LANG:EN', 'PF:kaksi', 'NUM', 'TAIL:*POL:NEG'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'PF:kaksi', 'COMP:N', 'NUM', 'COMP:n', 'SPEC:*', 'LANG:FI', 'LF:two'}
kaupunkia       ['LANG:EN']
kaupunki        {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', 'LF:city', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', '-COMP:P', 'PF:kaupunki', 'N', '-SPEC:ADV'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'LF:order', '-SPEC:FORCE', 'SEM:external', '-COMP:v', 'PF:kaske', 'PHI:DET:_', 'COMP:P', '!COMP:A/inf', '-COMP:V', 'ARG'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:R', '-COMP:N', '-SPEC:N', 'LF:watch', '-COMP:T/fin', 'LANG:FI', 'PF:kello', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV'}
kello0-         {'0', 'LF:watch', 'SPEC:D', 'LANG:FI', 'PF:kello', '2SPEC'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', 'LF:key', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', 'PF:key', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', 'LF:book', 'PF:kirja', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', '-SEM:directional', 'COMP:P', 'N', '-SPEC:ADV'}
kohti           {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'TAIL:V', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '-COMP:T/fin', 'LANG:FI', 'SPEC:*', '-SPEC:C', '-VAL', '-COMP:uWH', '-SPEC:C/fin', 'PHI:PER:_', 'PF:kohti', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:V', '-SPEC:FORCE', 'LF:towards', 'COMP:D', '-SPEC:iWH', 'adjoinable', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
koko            {'-SPEC:Neg/fin', '-SPEC:N', 'PF:koko', '-COMP:T/fin', 'LANG:FI', '!PROBE:N', '-ARG', 'OP', '-SPEC:C', 'TAIL:T', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:D', '!COMP:*', 'LF:all', 'adjoinable'}
kuka            ['LANG:FI']
kuka-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'LF:who', 'SPEC:A', '-COMP:v', 'PHI', 'PF:kuka', 'COMP:P', 'N', '-SPEC:ADV'}
kuorsaa-        {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'PF:kuorsaa', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'SPEC:ADV', '-COMP:D', 'PHI:PER:_', '-COMP:WH', '-SPEC:T/fin', 'LF:snore', '-SPEC:FORCE', '-COMP:v', 'PHI:DET:_', 'COMP:P', 'ARG'}
kuorsaamalla    ['LANG:FI']
lahella         {'-COMP:ADV', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:FORCE', '-COMP:uWH', 'PHI:PER:_', '!SPEC:D', 'VAL', 'COMP:V', 'LF:near', 'COMP:v', '!COMP:*', 'ARG', 'adjoinable', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:Neg/fin', '-SPEC:v', '-COMP:T/fin', 'SPEC:*', '-SPEC:C', 'INF', '-SPEC:C/fin', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE', '!SPEC:*', 'COMP:D', 'PF:lahella', '-SPEC:iWH', '-SPEC:iR', 'P', '-SPEC:ADV'}
lahella         {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '!COMP:D', '-COMP:T/fin', 'LANG:FI', 'SPEC:*', '-SPEC:C', '-VAL', '-COMP:uWH', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', '-SPEC:FORCE', 'LF:near', 'COMP:D', 'PF:lahella', '-SPEC:iWH', 'adjoinable', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
lahella_1       {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '!COMP:D', '-COMP:T/fin', 'LANG:FI', 'SPEC:*', '-SPEC:C', '-VAL', '-COMP:uWH', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', '-SPEC:FORCE', 'LF:near', 'COMP:D', 'PF:lahella', '-SPEC:iWH', 'adjoinable', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
lahella_2       {'-COMP:ADV', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:FORCE', '-COMP:uWH', 'PHI:PER:_', '!SPEC:D', 'VAL', 'COMP:V', 'LF:near', 'COMP:v', '!COMP:*', 'ARG', 'adjoinable', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:Neg/fin', '-SPEC:v', '-COMP:T/fin', 'SPEC:*', '-SPEC:C', 'INF', '-SPEC:C/fin', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE', '!SPEC:*', 'COMP:D', 'PF:lahella', '-SPEC:iWH', '-SPEC:iR', 'P', '-SPEC:ADV'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'LF:leave', 'COMP:PP', '-COMP:T/fin', 'LANG:FI', 'PF:lahtea', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:D', 'CLASS:INTR', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
lavano          ['LANG:IT']
lava-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'LANG:IT', 'LF:wash', 'COMP:P', 'COMP:D', 'PF:lava', 'PHI:DET:_', '!COMP:*', '-COMP:V', 'ARG'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', '!PROBE:N', '-ARG', 'OP', '-SPEC:C', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:D', 'LANG:IT', 'LF:D', '!COMP:*', 'PF:le', 'adjoinable'}
leaves          ['LANG:EN']
leave           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'LF:leave', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PF:leave', '-COMP:V', 'PHI:PER:_', 'PHI:GEN:_', '!SPEC:D', '-SPEC:T/fin', '-SPEC:FORCE', 'ARG', 'PHI:DET:_', 'COMP:P', '-COMP:v'}
leave-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'LF:leave', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'PF:leave', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '!SPEC:D', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
like-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '!COMP:D', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:V', 'LF:like', 'PHI:PER:_', 'PF:like', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'ARG', 'PHI:DET:_', 'COMP:P', '-COMP:v'}
likes           ['LANG:EN']
like            {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '!COMP:D', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:V', 'LF:like', 'PHI:PER:_', 'PF:like', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'ARG', 'PHI:DET:_', 'COMP:P', '-COMP:v'}
little          ['LANG:EN']
little-         {'LANG:EN', 'PF:little-', '0', 'SPEC:D', 'LF:little', '2SPEC'}
lle             {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:N', '-SPEC:*', '-SPEC:v', '-COMP:T/fin', 'LANG:FI', '-SPEC:C', '-VAL', '-COMP:uWH', '+SEM:directional', '-SPEC:C/fin', 'PHI:PER:_', 'TAIL:V,+SEM:directional', '-SPEC:P', 'PF:P(lle)', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'PHI:DET:_', '-SPEC:FORCE', 'LF:for', 'COMP:D', '-SPEC:iWH', 'adjoinable', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
lla             {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '-COMP:T/fin', 'LANG:FI', 'SPEC:*', 'PF:P(lla)', '-SPEC:C', '-VAL', '-COMP:uWH', 'TAIL:T', '-SPEC:C/fin', 'PHI:PER:_', 'TAIL:*V', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:V', '-SPEC:FORCE', 'COMP:D', '-SPEC:iWH', 'adjoinable', '!COMP:*', '-SPEC:iR', 'P', 'LF:by', 'ARG'}
Luisa           ['LANG:IT']
Luisa-          {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'LF:Luisa', 'COMP:uR', '-COMP:A', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', '-SEM:directional', 'PF:Luisa', 'N', '-SPEC:ADV'}
lukemalla       ['LANG:FI']
luke-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'PF:luke', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'COMP:D', '-COMP:P', 'ARG', 'PHI:DET:_', '!COMP:*', '-COMP:V', 'LF:read'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '!COMP:D', '-COMP:T/fin', 'LANG:FI', 'LF:find', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'COMP:D', 'PF:loyta-', '-COMP:P', 'PHI:DET:_', '!COMP:*', 'ASP:BOUNDED', '-COMP:V', 'ARG'}
Mary            ['LANG:EN']
Mary-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-adjoinable', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', '-SEM:directional', 'LF:Mary', 'PF:Mary', 'COMP:P', 'N', '-SPEC:ADV'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:R', '-COMP:N', '-SPEC:N', 'PF:Merja', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', 'LF:Merja', 'COMP:uR', '-SPEC:C/fin', '-adjoinable', '-COMP:A', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:R', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', '-SEM:directional', 'COMP:P', 'N', '-SPEC:ADV'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:T/fin', '-SPEC:Neg/fin', 'PF:malla', '-SPEC:FORCE', '-SPEC:N', 'SPEC:*', 'LANG:FI', 'COMP:v', 'MA/inf', 'adjoinable', 'TAIL:T', 'LF:by', 'ADV'}
meren           ['LANG:FI']
mere-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'PF:meri', 'COMP:P', 'LF:ocean', 'N', '-SPEC:ADV'}
mistake         {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'PF:mistake', 'LF:mistake', 'COMP:P', 'N', '-SPEC:ADV'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:R', '-COMP:N', '-SPEC:N', 'LF:what', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'PF:mika-', 'COMP:P', 'N', '-SPEC:ADV'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '+SEM:directional', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', 'LF:move', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'LANGN:EN', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', 'PF:move', '-COMP:V', 'ARG'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', '0', 'SPEC:D', 'LANG:FI', 'PF:mukavasti', '2SPEC'}
must            {'PHI:NUM:_', '-COMP:INF', '-SPEC:N', '-SPEC:v', '-COMP:T/fin', 'SPEC:*', '-SPEC:Neg', 'LANG:EN', '-SPEC:TO/inf', 'SPEC:TO/inf', 'LF:must', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:GEN:_', '!SPEC:D', 'FIN', 'VAL', '!PROBE:V', '-SPEC:T/fin', '-SPEC:V', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:D', 'COMP:V', 'T/fin', 'COMP:v', 'T', 'COMP:Neg', 'MODAL', 'PHI:DET:_', '!COMP:*', 'PF:must', 'ARG'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', 'PF:myy', '-VAL', 'SPEC:ADV', 'ASP:BOUNDED', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', 'LF:sell', '-COMP:V', 'ARG'}
naki            ['LANG:FI']
nake-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'PF:nake', '-COMP:ESSA/inf', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'LF:see', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', '-COMP:MA/inf', 'COMP:P', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', 'ASP:BOUNDED', '-COMP:V', 'ARG'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:N', 'SPEC:P', '-COMP:T/fin', 'LANG:FI', '-ARG', 'PF:naytta', 'ASP', 'V', 'SPEC:TO/inf', 'SEM:internal', 'SPEC:ADV', '!SPEC:D', 'VAL', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:seem', '!COMP:VA/inf', 'COMP:P', '-COMP:V', '-COMP:v'}
ndo             {'VAL', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:V', 'PF:PRG', 'COMP:V', '-COMP:T/fin', '-COMP:FORCE', 'PRG', 'COMP:v', 'LANG:EN', '!COMP:*', '?ARG', 'INF', 'LF:ing'}
ne              {'PHI:NUM:PL', 'PHI:PER:3', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '!PROBE:N', '-ARG', 'PF:ne', 'OP', '-SPEC:C', 'D', '-COMP:D', '-SPEC:P', 'LF:those', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:D', '!COMP:*', 'adjoinable'}
niiden          ['LANG:EN']
nen             {'PF:a', 'SPEC:*', 'LANG:FI', '-SPEC:D', 'TAIL:D', 'adjoinable', 'COMP:0', '-SPEC:A', 'A', 'LF:ing'}
not             {'-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:*', 'LF:not', '-COMP:C', 'LANG:EN', 'Neg', 'PHI:GEN:_', 'POL:NEG', '-VAL', 'PHI:DET:_', '!COMP:*', '-COMP:D', 'PHI:PER:_', 'PF:not', 'ARG', '-COMP:FIN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:N', 'SPEC:P', '-COMP:Neg/fin', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'LF:sleep', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:D', 'CLASS:INTR', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:nukku', 'SPEC:D', '-COMP:v', '-COMP:MA/inf', '-COMP:T', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:R', '-COMP:N', 'PF:omaisuuden', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LF:possessions', 'COMP:P', 'N', '-SPEC:ADV'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'SPEC:D', 'LF:operation', 'LANG:IT', 'PF:operatoria', '2SPEC'}
ostaa           ['LANG:FI']
osta-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:T/fin', 'PF:osta', 'CLASS:TR', '-SPEC:FORCE', '-COMP:v', 'COMP:P', 'COMP:D', '-COMP:P', 'LF:buy', '!COMP:*', 'ASP:BOUNDED', '-COMP:V', 'ARG'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:R', 'LF:day', 'SEM:nonreferential', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', 'PF:paiva', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', 'PF:Pariisi', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', 'LF:Paris', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', 'LF:Pekka', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', 'PF:Pekka', '-COMP:v', '-SEM:directional', 'COMP:P', 'N', '-SPEC:ADV'}
pelottaa        ['LANG:FI']
pelkaa-         {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'LF:fear', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'COMP:D', 'PF:pelkaa', '-COMP:P', 'PHI:DET:_', '!COMP:*', '-COMP:V', 'ARG'}
persuades       ['LANG:EN']
persuade-       {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', 'ASP', 'PF:persuade', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', 'COMP:TO/inf', '-SPEC:FORCE', 'SEM:external', '-COMP:v', 'COMP:P', 'PHI:DET:_', '!COMP:*', 'LF:persuade', 'ARG'}
peruuntui       ['LANG:FI']
peruuntu-       {'PF:peruuntui', '-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:V', 'PHI:PER:_', '-SPEC:T/fin', 'LF:cancelled', '-SPEC:FORCE', 'SPEC:D', 'ARG', 'PHI:DET:_', 'COMP:P', '-COMP:v'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'PF:pese', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'LF:wash', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', 'ASP:BOUNDED', '-COMP:V', 'ARG'}
pese-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'PF:pese', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'LF:wash', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', '-COMP:V', 'ARG'}
petardi         {'COMP:R', '-COMP:N', 'PF:petardi', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', 'LF:firecrackers', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', '0', 'SPEC:D', 'PF:pieni-', 'LANG:FI', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', 'PF:poika', '-COMP:AUX', 'LF:boy', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV'}
puhelinta       ['LANG:FI']
puhelin-        {'LF:phone', '0', 'PF:puhelin', 'SPEC:D', 'LANG:FI', '2SPEC'}
punainen        ['LANG:FI']
puna-           {'PF:puna-', '0', 'SPEC:D', 'LANG:FI', '2SPEC', 'LF:red'}
presupposto     {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', 'PF:presupposto', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'LF:presupposition', 'N', '-SPEC:ADV'}
primary         {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LF:nurse', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', 'PF:primary', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV'}
promises        ['LANG:EN']
promise-        {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'PF:promise', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', 'SEM:internal', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'LF:promise', '-COMP:v', 'COMP:D', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:N', 'LF:ask', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PF:pyyda', '-COMP:V', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:external', 'ARG', 'PHI:DET:_', 'COMP:P', '-COMP:v'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'PF:raukea', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'LF:terminate', '-SPEC:FORCE', '-COMP:v', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
red             ['LANG:EN']
red-            {'LANG:EN', 'PF:red', '0', 'SPEC:D', '2SPEC', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '!COMP:D', '-COMP:T/fin', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PF:saavutta-', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'COMP:D', '-COMP:P', 'LF:reach', 'PHI:DET:_', '!COMP:*', 'ASP:BOUNDED', '-COMP:V', 'ARG'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PF:sano-', '-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'COMP:VA/inf', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', 'LF:say', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'COMP:FORCE', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
said            ['LANG:EN']
say'            {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'PF:say', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', 'LF:say', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', '!COMP:FORCE', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
say-            {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'PF:say', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', 'LF:say', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', '!COMP:FORCE', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
sala            ['LANG:IT']
sala-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'PF:sala', '-COMP:AUX', '-COMP:V', 'COMP:R/D', 'LF:room', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LF:explode', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'LANG:IT', 'PF:scoppia', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
sen             {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '!PROBE:N', '-ARG', 'LF:the/that', 'OP', '-SPEC:C', 'PF:sen', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', 'COMP:N', 'TAIL:ASP', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:D', 'TAIL:PHI', 'adjoinable', '!COMP:*', 'TAIL:*POL:NEG'}
se'             {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', 'PF:se', '!PROBE:N', '-ARG', 'LF:the/that', 'OP', '-SPEC:C', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:D', '!COMP:*', 'adjoinable'}
sentenza        {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LF:sentence', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LANG:IT', 'PF:sentenza', 'COMP:P', 'N', '-SPEC:ADV'}
Seine           ['LANG:EN']
Seine-          {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', 'PF:Seine', '-COMP:v', 'LF:Seine', 'COMP:P', 'N', '-SPEC:ADV'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:N', 'SPEC:P', 'PF:sembra', '-ASP', '-COMP:T/fin', '-ARG', 'LANG:EN', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:D', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '!COMP:ARE/inf', 'LF:seem', 'COMP:P', '-COMP:V', '-COMP:v'}
sleeps          ['LANG:EN']
sleep           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'LF:sleep', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:D', 'CLASS:INTR', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', '-COMP:MA/inf', 'PF:sleep', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
sleep-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'LF:sleep', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:D', 'CLASS:INTR', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', '-COMP:MA/inf', 'PF:sleep', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', 'LF:agreement', '!COMP:A/inf', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'COMP:P', 'PF:sopimus', 'N', '-SPEC:ADV'}
spinge          ['LANG:IT']
spinge-         {'LF:push', '-COMP:N', 'SPEC:P', 'PHI:NUM:_', '!COMP:D', '-COMP:T/fin', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:spinge', 'LANG:IT', '-COMP:P', 'ARG', 'PHI:DET:_', '-COMP:V', '-COMP:v'}
ssa             {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'TAIL:V', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '-COMP:T/fin', 'LANG:FI', 'SPEC:*', 'COMP:n/MA', '-SPEC:C', '-VAL', '-COMP:uWH', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', '-SPEC:FORCE', 'LF:in', 'PF:ssa', 'COMP:D', '-SPEC:iWH', 'adjoinable', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
stanno          ['LANG:IT']
sta-            {'PF:sta', '-COMP:N', '-ASP', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', 'V', 'COMP:PRG', 'SEM:internal', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'LF:stay', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
sti             {'-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:N', 'SPEC:*', 'LANG:FI', '-ARG', 'PF:sti', 'adjoinable', '!COMP:*', 'TAIL:T', 'LF:by', 'ADV'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', 'PF:sukka-', 'COMP:R/D', '-COMP:V', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LF:socks', 'COMP:P', 'N', '-SPEC:ADV'}
talo            {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', 'LF:house', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:ADV', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', 'PF:talo'}
tama            ['LANG:EN']
tama-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', 'LF:this', 'COMP:uR', '-SPEC:C/fin', '-COMP:A', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'PHI', 'COMP:P', 'PF:tama', '-SPEC:ADV'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:N', 'SPEC:P', '-ASP', 'PHI:NUM:_', 'SPEC:*', 'LANG:FI', '-COMP:T/fin', 'V', 'LF:must', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'FIN', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'COMP:P', 'MODAL', 'PHI:DET:_', 'PF:taytyy', '!COMP:A/inf', '-COMP:V', 'ARG'}
teki            ['LANG:FI']
teke-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '!COMP:D', '-COMP:T/fin', 'LANG:FI', 'LF:make', '-COMP:A/inf', 'PF:teke', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', 'COMP:P', 'COMP:D', '-COMP:P', 'ARG', 'PHI:DET:_', '!COMP:*', 'ASP:BOUNDED', '-COMP:V', '-COMP:v'}
that            {'-SPEC:*', '-ARG', 'LF:that', 'LANG:EN', 'FORCE', '-VAL', 'COMP:C/fin', '!COMP:*', '!PROBE:T/fin', 'PF:that', 'FIN', 'COMP:T/fin'}
the             {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', '!PROBE:N', '-ARG', 'LANG:EN', 'OP', '-SPEC:C', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', 'LF:the', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:D', 'PF:the', 'PHI:DEF:DEF', '!COMP:*', 'adjoinable'}
to              {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:N', '-SPEC:*', 'LF:to', '-SPEC:v', '-float', '-COMP:T/fin', 'LANG:EN', '-SPEC:C', '-VAL', '-COMP:uWH', '+SEM:directional', '-SPEC:C/fin', 'PHI:PER:_', 'TAIL:V,+SEM:directional', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:V', 'PHI:GEN:_', '-SPEC:FORCE', 'COMP:D', 'PF:to', '-SPEC:iWH', 'adjoinable', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
to_inf          {'-SPEC:v', 'TO/inf', 'LF:TO/inf', '-COMP:T/fin', '-COMP:FORCE', 'PF:TO/inf', 'LANG:EN', '-VAL', 'INF', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:V', 'COMP:V', 'COMP:v', '?ARG', '!COMP:*', 'adjoinable'}
towards         {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'TAIL:V', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '-float', '-SPEC:*', 'PF:towards', '-COMP:T/fin', 'LANG:EN', '-SPEC:C', '-VAL', '-COMP:uWH', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:GEN:_', '-SPEC:V', '-SPEC:FORCE', 'LF:towards', 'COMP:D', '-SPEC:iWH', 'adjoinable', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'LF:nudge', 'PF:tonaise', 'LANG:FI', '-COMP:T/fin', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', '-COMP:v', 'COMP:P', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', '-COMP:V', 'ARG'}
tta             {'-COMP:ADV', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '-COMP:T/fin', 'LANG:FI', 'SPEC:*', 'LF:without', 'COMP:n/MA', '-SPEC:C', '-VAL', '-COMP:uWH', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:DET:_', 'ADV', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:D', 'PF:tta', '-SPEC:iWH', 'adjoinable', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
tries           ['LANG:EN']
try-            {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', 'SEM:internal', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', 'LF:try', '-SPEC:FORCE', 'SPEC:D', 'PF:try', '-COMP:v', '!COMP:TO/inf', '!COMP:-ARG', 'PHI:DET:_', 'COMP:P', '-COMP:V', 'ARG'}
verifiche       {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LF:verification', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', 'PF:verifiche', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'PF:virtaa', 'LANG:FI', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', '!COMP:P', '-COMP:V', 'SPEC:ADV', '-COMP:D', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'PHI:DET:_', 'COMP:P', 'LF:flow', 'ARG'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-SPEC:*', '-COMP:T/fin', 'LANG:EN', 'PF:volu', 'ASP', 'V', 'SPEC:TO/inf', 'SEM:internal', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'COMP:P', 'LF:want', 'PHI:DET:_', '!COMP:*', '-COMP:V', 'ARG'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'CLASS:TR', 'LF:win', 'PF:voitta', '-COMP:v', 'COMP:P', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', 'SEM:achievement', 'ASP:BOUNDED', '-COMP:V', 'ARG'}
wants           ['LANG:EN']
want-           {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:TO/inf', 'ASP', 'V', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', 'COMP:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'PF:want', '-COMP:v', 'COMP:P', 'LF:want', 'COMP:D', '-COMP:P', 'PHI:DET:_', '!COMP:*', '-COMP:V', 'ARG'}
what            ['LANG:EN']
what-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'PF:what', 'SPEC:A', '-COMP:v', 'COMP:P', 'LF:what', '-SPEC:ADV', 'PHI_N'}
which           {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', '!PROBE:N', '-ARG', 'LANG:EN', 'OP', '-SPEC:C', 'D', 'LF:which', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', '-COMP:uR', 'OP:WH', 'PF:which', '-SPEC:D', '!COMP:*', 'adjoinable'}
who             ['LANG:EN']
who-            {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'LF:who', '-COMP:*', 'SPEC:A', '-COMP:v', 'COMP:P', 'PF:who', 'N', '-SPEC:ADV', 'PHI_N'}
whether         {'OP:Q', '-SPEC:*', 'LF:whether', '-ARG', 'LANG:EN', '-VAL', 'COMP:C/fin', 'FIN', 'OP:WH', 'Q', 'PF:whether', 'FORCE', '!COMP:*', '!PROBE:T/fin', 'OP', 'COMP:T/fin'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', 'SEM:internal', '-VAL', 'SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', 'LF:try', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'PF:yritta', '!COMP:-ARG', 'PHI:DET:_', 'COMP:P', '!COMP:A/inf', '-COMP:V', 'ARG'}
mina            ['LANG:EN']
mina-           {'COMP:R', '-COMP:N', 'PF:mina', '-SPEC:N', 'LF:I', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
sina            ['LANG:EN']
sina-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', 'PF:sina', '-COMP:v', 'LF:you', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
han             ['LANG:EN']
han-            {'COMP:R', '-COMP:N', 'PF:han', '-SPEC:N', 'LF:s/he', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:R', '-COMP:N', 'LF:we', '-SPEC:N', 'PF:me', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
te              ['LANG:EN']
te-             {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', 'PF:te', 'COMP:R/D', '-COMP:V', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'LF:you', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:R', 'PF:he', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', 'LF:they', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
se              ['LANG:FI']
se-             {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', 'LANG:FI', 'PF:se', '!PROBE:N', '-ARG', 'OP', '-SPEC:C', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:D', 'LF:it/that', '!COMP:*', 'adjoinable'}
I               ['LANG:EN']
I-              {'COMP:R', '-COMP:N', '-SPEC:N', 'LF:I', '-COMP:T/fin', 'PF:I', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
you             ['LANG:EN']
you-            {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', 'PF:you', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'LF:you', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
he              ['LANG:EN']
he-             {'COMP:R', 'PF:he', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', 'LF:he', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
she             ['LANG:EN']
she-            {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', 'LF:she', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'PF:she', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
we              ['LANG:EN']
we-             {'COMP:R', '-COMP:N', 'LF:we', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', 'PF:we', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:R', '-COMP:N', '-SPEC:N', 'PF:you_pl', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', 'LF:you_pl', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'PHI', 'COMP:P', 'N', '-SPEC:ADV'}
they            ['LANG:EN']
they-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', 'LF:they', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'PF:they', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
it              ['LANG:EN']
it-             {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', '!PROBE:N', '-ARG', 'LANG:EN', 'OP', '-SPEC:C', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:D', 'PF:it', 'LF:it/that', '!COMP:*', 'adjoinable'}
io              ['LANG:EN']
io-             {'COMP:R', '-COMP:N', '-SPEC:N', 'LF:I', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'PF:io', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
tu              ['LANG:EN']
tu-             {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', 'PF:tu', 'COMP:R/D', '-COMP:V', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'LANG:IT', 'LF:you', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
lui             ['LANG:EN']
lui-            {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', 'LF:he', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', 'PF:lui', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
lei             ['LANG:EN']
lei-            {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', 'LF:she', '-SPEC:R', 'PF:lei', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', '-COMP:v', 'SPEC:A', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
noi             ['LANG:EN']
noi-            {'COMP:R', '-COMP:N', 'LF:we', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'LANG:IT', 'PF:noi', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
voi             ['LANG:EN']
voi-            {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', 'LF:you_pl', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'LANG:IT', 'PF:voi', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
loro            ['LANG:EN']
loro-           {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:ADV', 'LF:they', '-SPEC:P', '-SPEC:INF', '-SPEC:R', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', '-COMP:v', 'SPEC:A', 'LANG:IT', 'COMP:P', 'N', 'PF:loro', 'PHI_N'}
mi              ['LANG:EN']
mi-             {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', 'PF:mi(cl)', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', 'CL', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'LANG:IT', 'LF:me', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
la              ['LANG:EN']
la-             {'COMP:R', 'PF:la(cl)', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', 'LF:her', 'CL', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', '-COMP:v', 'SPEC:A', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
lo              ['LANG:EN']
lo-             {'PF:lo(cl)', '-COMP:N', 'LF:him', 'COMP:R', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', 'CL', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
si              ['LANG:EN']
si-             {'COMP:R', '-COMP:N', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', 'PF:si(cl)', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:R', '-COMP:WH', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'LANG:IT', 'CAL:CL', 'COMP:P', 'LF:3sg', 'N', '-SPEC:ADV', 'PHI_N'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:R', '-COMP:N', 'PF:ci', '-SPEC:N', '-COMP:T/fin', '-COMP:AUX', 'LF:there', 'COMP:R/D', '-COMP:V', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:*', 'SPEC:A', '-COMP:v', 'LANG:IT', 'COMP:P', 'N', '-SPEC:ADV', 'PHI_N'}
[-n]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:1', 'LANG:FI', 'inflectional', 'PHI'}
[-t]            {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'LANG:FI', 'inflectional', 'PHI'}
[-V]            {'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI', 'inflectional', 'PHI'}
[-mme]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1', 'LANG:FI', 'inflectional', 'PHI'}
[-mme]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1', 'LANG:FI', 'inflectional'}
[-tte]          {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'inflectional', 'PHI'}
[-vat]          {'PHI:NUM:PL', 'PHI:PER:3', 'LANG:FI', 'inflectional', 'PHI'}
[-ni]           {'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:1', 'LANG:FI', 'inflectional', 'PHI'}
[-si]           {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'LANG:FI', 'inflectional', 'PHI'}
[-nsa]          {'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI', 'inflectional', 'PHI'}
[-an]           {'PHI:PER:3', 'LANG:FI', 'inflectional', 'PHI'}
[-nne]          {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'inflectional'}
[-s]            {'PHI:PER:3', 'LANG:EN', 'PHI:GEN:M', 'PHI:NUM:SG', 'inflectional', 'PHI:GEN:F', 'PHI'}
[-0]            {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:GEN:N', 'inflectional', 'PHI', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'}
[-o]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:1', 'inflectional', 'LANG:IT', 'PHI'}
[-i]            {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'inflectional', 'LANG:IT', 'PHI'}
[-a]            {'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'LANG:IT', 'PHI'}
[-e]            {'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'LANG:IT', 'PHI'}
[-iamo]         {'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1', 'inflectional', 'LANG:IT', 'PHI'}
[-te]           {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'inflectional', 'LANG:IT', 'PHI'}
[-no]           {'PHI:NUM:PL', 'PHI:PER:3', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI'}
[-nom]          {'LANG:EN', 'TAIL:FIN,ARG,VAL', 'NOM', 'inflectional', 'adjoinable'}
[-par]          {'adjoinable', 'PAR', 'LANG:FI', 'inflectional', 'TAIL:ARG,-VAL'}
[-gen]          {'LANG:EN', '-float', 'GEN', 'TAIL:INF,ARG', 'inflectional'}
gen             {'LANG:EN', '-float', 'GEN', 'TAIL:INF,ARG', 'inflectional'}
[-n_acc]        {'TAIL:*POL:NEG', 'n-ACC', 'LANG:FI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'TAIL:PHI'}
[-t_acc]        {'t-ACC', 'adjoinable', 'LANG:FI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG'}
[-0_acc]        {'TAIL:*POL:NEG', '0_ACC', 'TAIL:*PHI', 'LANG:FI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
a'              {'LANG:X', 'a', 'PF:a', 'LF:A'}
b'              {'b', 'PF:b', 'LANG:X', 'LF:B'}
b''             {'LANG:EN', 'PF:b', 'b', '-COMP:c', 'LF:B'}
c''             {'LANG:EN', 'LF:C', 'c', 'SPEC:a', 'PF:c'}
c'              {'LANG:X', 'LF:C', 'c', 'PF:c'}
d'              {'d', 'LANG:', 'PF:d', 'LF:D'}
a''             ['LANG:EN']
x'              {'LANG:X', 'PF:x', 'LF:X', 'x'}
y'              {'LANG:X', 'PF:y', 'LF:Y', 'y'}
z'              {'z', 'PF:x', 'LF:Z', 'LANG:X'}
John'           {'LF:John', "N'", 'PF:John', 'LANG:X'}
admires'        {'LF:admires', 'LANG:X', "V'", 'PF:admires'}
admires''       {'-COMP:N', 'SPEC:P', 'PHI:NUM:_', 'LF:admires', '-COMP:T/fin', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:V', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'ARG', 'PF:admires', 'PHI:DET:_', 'COMP:P', '-COMP:v'}
Mary'           {'LANG:X', "N'", 'LF:mary', 'PF:Mary'}
T/fin           {'PHI:NUM:_', '-COMP:INF', '-SPEC:N', '-SPEC:v', '-COMP:T/fin', 'SPEC:*', '-SPEC:Neg', 'LANG:EN', '-SPEC:TO/inf', 'SPEC:TO/inf', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:GEN:_', 'PF:T', '!SPEC:D', 'FIN', 'VAL', '!PROBE:V', '-SPEC:T/fin', '-SPEC:V', '-SPEC:FORCE', 'LF:T', 'COMP:T/prt', 'SPEC:D', 'COMP:V', 'T/fin', 'COMP:v', 'T', 'PHI:DET:_', '!COMP:*', 'ARG'}
v               {'PF:v', '!PROBE:V', 'PHI:NUM:_', '-SPEC:N', 'SPEC:D', 'COMP:V', 'v', 'LANG:EN', 'ASP', 'LF:v', '-VAL', 'PHI:DET:_', '!COMP:*', 'PHI:PER:_', 'PHI:GEN:_', 'ARG'}
C/fin           {'-SPEC:N', 'SPEC:*', '-ARG', '-COMP:T/prt', 'LANG:EN', '-SPEC:C/fin', 'FIN', 'VAL', '-SPEC:T/fin', '-COMP:C/fin', 'LF:C/fin', 'C/fin', '!PROBE:FIN', 'PF:C', '!COMP:*', 'C', 'COMP:Neg/fin', 'COMP:T/fin'}
T               {'PHI:NUM:_', '-SPEC:N', 'SPEC:*', 'LANG:EN', '-COMP:NEG', 'PHI:PER:_', 'PHI:GEN:_', 'FIN', 'PF:T', 'VAL', '-SPEC:T/fin', '!PROBE:V', '-SPEC:V', '-SPEC:FORCE', 'LF:T', 'COMP:T/prt', 'SPEC:D', 'COMP:V', 'COMP:v', 'T', 'PHI:DET:_', '!COMP:*', 'ARG'}
T/prt           {'PHI:NUM:_', '-SPEC:N', 'LF:T/prt', 'SPEC:*', 'LANG:EN', '-COMP:NEG', 'PHI:PER:_', 'PHI:GEN:_', 'FIN', '!PROBE:V', 'T/prt', 'VAL', '-SPEC:T/fin', '-SPEC:V', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:D', 'COMP:V', 'COMP:v', 'COMP:D', 'T', 'PF:T/prt', 'PHI:DET:_', '!COMP:*', 'ARG'}
a0              {'LF:A', '-adjoinable', '-SPEC:A', '-SPEC:D', 'LANG:EN', 'TAIL:D', 'adjoinable', 'COMP:0', 'PF:A', 'A'}
n               {'-COMP:N', '-SPEC:N', 'PF:n', '-COMP:V', 'COMP:R/D', 'COMP:uR', 'PHI:PER:_', '-COMP:A', '!SPEC:D', 'VAL', '-SPEC:R', 'COMP:V', 'COMP:v', '!COMP:*', 'COMP:0', 'N', 'ARG', 'PHI:DET:_', 'COMP:R', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:*', 'LANG:EN', '-COMP:AUX', 'INF', '-SPEC:uWH', '-SPEC:C/fin', '-COMP:D', 'LF:n', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', 'SPEC:A', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', '!SPEC:*', 'n', 'COMP:P', '-SPEC:ADV'}
impass          {'!PROBE:V', 'PHI:NUM:_', '-SPEC:N', 'SPEC:D', 'COMP:V', 'PF:impass', 'LF:impass', 'LANG:EN', 'v', 'ASP', '-VAL', 'PHI:DET:_', '!COMP:*', 'PHI:PER:_', 'PHI:GEN:_', 'ARG'}
cau             {'!PROBE:V', 'PHI:NUM:_', 'PF:Cau', '-SPEC:N', 'SPEC:D', 'COMP:V', 'LANG:EN', 'v', 'ASP', '-VAL', 'PHI:DET:_', '!COMP:*', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'LF:v/Cause'}
INF             {'-SPEC:T/fin', '-COMP:C/fin', '-SPEC:V', 'COMP:V', '-COMP:T/fin', 'LF:INF', '-COMP:FORCE', 'COMP:v', 'LANG:EN', 'PF:INF', '!COMP:*', 'INF'}
prtcpl          {'PHI:NUM:_', '-SPEC:N', 'LF:T/prt', 'SPEC:*', '-COMP:T/fin', '-COMP:FORCE', 'LANG:EN', 'INF', '-COMP:NEG', 'PHI:PER:_', 'PHI:GEN:_', 'FIN', '!PROBE:V', 'T/prt', 'VAL', '-SPEC:T/fin', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:D', 'COMP:V', 'COMP:v', 'COMP:D', 'T', 'PF:T/prt', 'PHI:DET:_', '!COMP:*', 'ARG'}
TO/inf          {'!COMP:V', 'TO/inf', '-SPEC:v', 'LF:TO/inf', '-COMP:T/fin', '-COMP:FORCE', 'PF:TO/inf', 'LANG:EN', '-VAL', 'INF', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:V', 'COMP:V', 'COMP:v', '?ARG', '!COMP:*', 'adjoinable'}
A/inf           {'-SPEC:Neg/fin', 'LF:A/inf', 'SPEC:*', '-COMP:T/fin', '-COMP:FORCE', 'A/inf', 'LANG:EN', 'INF', 'PF:A/inf', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:V', 'COMP:V', 'COMP:v', '?ARG', '?VAL', '!COMP:*'}
ARE/inf         {'SPEC:*', '-COMP:T/fin', '-COMP:FORCE', 'LANG:EN', 'ARE/inf', 'INF', '-adjoinable', 'VAL', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:V', 'COMP:V', 'COMP:v', '?ARG', '!COMP:*', 'LF:ARE/inf', 'PF:are'}
ESSA/inf        {'-SPEC:Neg/fin', 'LF:while', '-SPEC:N', 'SPEC:*', '-COMP:T/fin', 'ESSA/inf', '-COMP:FORCE', 'PF:essa', 'LANG:EN', 'INF', 'TAIL:T', 'ADV', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'COMP:V', 'COMP:v', '?ARG', '?VAL', '!COMP:*', 'adjoinable'}
TUA/inf         {'PHI:NUM:_', '-SPEC:Neg/fin', '-SPEC:N', 'PF:tua', '-COMP:T/fin', 'SPEC:*', '-COMP:FORCE', 'LANG:EN', 'INF', 'TAIL:T', 'PHI:DET:_', 'PHI:PER:_', 'PHI:GEN:_', 'ADV', 'VAL', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'COMP:V', 'TUA/inf', '!SPEC:*', 'LF:after', 'COMP:v', 'adjoinable', '!COMP:*', 'ARG'}
VA/inf          {'PHI:NUM:_', '-SPEC:N', '-COMP:T/fin', 'SPEC:*', '-COMP:FORCE', 'LANG:EN', 'INF', 'PHI:PER:_', 'PHI:GEN:_', 'VAL', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:V', 'LF:VA', 'COMP:V', '!SPEC:*', 'VA/inf', 'COMP:v', 'PF:vAn', 'PHI:DET:_', '!COMP:*', 'ARG'}
MA/ssa          {'PHI:NUM:_', '-SPEC:Neg/fin', 'TAIL:V', '-SPEC:N', '-SPEC:*', 'LF:in_doing', 'LANG:EN', '-VAL', 'PHI:DET:_', 'PHI:PER:_', 'PHI:GEN:_', 'ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:V', 'COMP:v', 'PF:massa', 'MA/inf', 'adjoinable', 'ARG'}
MA/tta          {'-SPEC:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:N', 'LANG:EN', 'ARG', 'PHI:PER:_', 'PF:matta', '-VAL', 'MA/inf', 'TAIL:T', 'PHI:DET:_', 'LF:without_doing', 'PHI:GEN:_', 'ADV'}
MA/lla          {'PF:malla', '-SPEC:N', 'TAIL:T', 'PHI:PER:_', 'COMP:V', 'COMP:v', 'MA/inf', 'ARG', 'adjoinable', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:Neg/fin', 'LANG:EN', '-VAL', 'PHI:GEN:_', 'ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:by_doing'}
MA/inf          {'TAIL:V', '-SPEC:N', 'PHI:PER:_', 'COMP:V', 'COMP:v', 'MA/inf', 'ARG', 'adjoinable', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:Neg/fin', 'PF:maan', 'LANG:EN', '-VAL', 'PHI:GEN:_', 'ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:to_do'}
E/inf           {'-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:N', 'SPEC:*', 'LANG:FI', '-ARG', 'PF:en', '-VAL', 'adjoinable', 'TAIL:T', 'LF:by', 'ADV'}
BE-             {'-COMP:N', 'SPEC:P', '-COMP:T/fin', '-ARG', 'LANG:EN', 'ASP', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:D', 'PF:BE', 'COMP:P', 'COPULA', '!COMP:*', 'LF:BE', '-COMP:v'}
D               {'-SPEC:Neg/fin', '-SPEC:N', '-COMP:T/fin', '!PROBE:N', '-ARG', 'LANG:EN', 'OP', '-SPEC:C', 'D', '-COMP:D', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'PF:D', '-COMP:uR', '-SPEC:D', 'LF:D', '!COMP:*', 'adjoinable'}
P               {'-COMP:ADV', 'LF:P', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:N', '-SPEC:v', '-float', '-SPEC:*', '-COMP:T/fin', 'LANG:EN', '-SPEC:C', '-VAL', '-COMP:uWH', 'PF:P', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:GEN:_', '-SPEC:V', '-SPEC:FORCE', 'COMP:D', '-SPEC:iWH', 'adjoinable', '!COMP:*', '-SPEC:iR', 'P', 'ARG'}
pro             ['LANG:EN']
pro-            {'COMP:R', '-COMP:N', 'PF:(pro)', '-SPEC:N', '-COMP:T/fin', 'LANG:EN', '-COMP:AUX', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-COMP:D', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:T/fin', '-COMP:WH', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', 'SPEC:A', '-COMP:v', 'PHI', 'COMP:P', 'LF:pro', '-SPEC:ADV'}
cl              {'LANG:EN', 'CL', 'LEFT:D,CL', 'inflectional', 'LEFT:T/fin', 'RIGHT:ARE/inf', 'RIGHT:PRG'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'PHI:NUM:PL', 'LANG:EN', 'inflectional'}
1p              {'PHI:PER:1', 'LANG:EN', 'inflectional'}
2p              {'LANG:EN', 'PHI:PER:2', 'inflectional'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'LANG:EN', 'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'NOM'}
acc             {'TAIL:v', 'LANG:EN', 'inflectional', 'ACC'}
dat             {'TAIL:v', 'LANG:EN', 'inflectional', 'DAT'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'LANG:EN', 'OP:WH', 'inflectional', 'OP:_'}
wh_             {'LANG:EN', 'FORCE:OP:WH', 'inflectional', 'OP', 'OP:_'}
top             {'LANG:EN', 'inflectional', 'OP:TOP'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
rel             {'LANG:EN', '-COMP:C/fin', 'inflectional', 'adjoinable', 'OP:REL'}
Q               {'LANG:EN', 'OP:Q', 'OP:WH', 'inflectional', 'OP'}
