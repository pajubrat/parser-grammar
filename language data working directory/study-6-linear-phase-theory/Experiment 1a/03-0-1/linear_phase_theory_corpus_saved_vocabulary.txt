ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:*', '-SPEC:C', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:iR', 'TAIL:V', 'LF:to', '-ARG', '-SPEC:T/fin', 'P', 'LANG:IT', '-COMP:N', '-COMP:T/fin', 'adjoinable', 'COMP:D', '-SPEC:v', '-SPEC:iWH', 'COMP:ARE/inf', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:N', '-SPEC:INF', '-VAL', '!COMP:*', '-SPEC:ADV', 'PF:a', '-SPEC:Neg/fin', '-SPEC:V'}
a_D             {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', '!PROBE:N', 'LF:D', '-SPEC:T/fin', '-ARG', 'LANG:EN', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', '!COMP:*', '-SPEC:Neg/fin', 'PF:D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', '!COMP:*', '-COMP:Neg', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PF:admire', '-COMP:T/fin', 'COMP:D', 'V', 'PHI:DET:_', '-COMP:P', '-SPEC:Neg', 'SPEC:P', '-VAL', 'LF:admire', 'ARG', '-COMP:V', 'PHI:PER:_'}
admire*         ['LANG:EN']
T/fin*          {'LANG:EN', "PF:T/fin'", 'NO_DET', 'LF:T', '-VAL', 'CAT:T/fin', 'NO_NUMBER', '!SPEC:*'}
v*              {'NO_DET', 'LF:v', 'NO_NUMBER', 'CAT:v', 'PF:v', '-VAL', 'LANG:EN'}
admire**        ['LANG:EN']
T/fin**         {'NO_PERSON', 'PHI:PER:3', 'LANG:EN', 'NO_DET', 'LF:T', '-VAL', 'CAT:T/fin', 'NO_NUMBER', '!SPEC:*', "PF:T/fin''"}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:IT', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'V', 'PHI:DET:_', 'PF:adora', 'SPEC:P', '-VAL', 'LF:admire', 'ARG', '-COMP:V', 'PHI:PER:_'}
antaa           ['LANG:FI']
anta-           {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'CLASS:DITR', 'COMP:P', 'SPEC:D', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:FIN', 'ASP:BOUNDED', 'LF:give', 'LANG:FI', 'COMP:D', 'V', 'PHI:DET:_', 'SPEC:P', '+SEM:directional', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PF:antaa', 'PHI:PER:_'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-COMP:v', 'PF:ask', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'SEM:internal', 'LF:ask', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
ask-            {'-COMP:v', 'PF:ask', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'SEM:internal', 'LF:ask', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', 'PF:avain', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', 'LF:key', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:N', 'LF:car', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', 'PF:auto', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
city            {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LF:city', 'COMP:C', '-COMP:AUX', '-COMP:V', 'PF:city', 'SPEC:A'}
che             ['LANG:IT']
che-            {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', 'LF:who', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', 'PF:che', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', 'LF:called', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:IT', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'V', 'PF:chiamato', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
danno           {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'PF:danno', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', 'LF:damage', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:IT', 'PF:detest', 'SPEC:ADV', 'ASP', 'LF:detest', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'SEM:internal', 'COMP:ARE/inf', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
devono          ['LANG:EN']
deva-           {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-ASP', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:IT', 'SPEC:D', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'PF:deva', 'SEM:internal', 'COMP:ARE/inf', 'V', 'PHI:DET:_', 'SPEC:P', '-COMP:V', '-VAL', 'ARG', 'LF:must', 'PHI:PER:_'}
di              {'-adjoinable', '-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:iR', 'LF:of', '-SPEC:T/fin', 'P', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'SPEC:*', 'COMP:D', 'LANG:FI', '-SPEC:v', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:ADV', 'PF:di', '-SPEC:N', '-SPEC:INF', 'PHI:DET:_', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-SPEC:Neg/fin', '-SPEC:V'}
does            {'!PROBE:V', '-SPEC:C', 'PHI:PER:3', '-SPEC:FORCE', 'COMP:Neg', '-SPEC:T/fin', '!SPEC:D', 'PHI:GEN:_', 'PHI:GEN:F', 'SPEC:TO/inf', '-SPEC:TO/inf', '-COMP:INF', '-COMP:T/fin', '-SPEC:v', '-SPEC:C/fin', '-SPEC:Neg', 'PHI:GEN:M', '!COMP:*', 'T/fin', 'LF:does', 'ARG', 'COMP:V', '-SPEC:V', 'PHI:NUM:_', 'T', 'PF:does', 'SPEC:D', 'LANG:EN', 'FIN', 'PHI:NUM:SG', 'COMP:v', 'SPEC:*', 'COMP:T/prt', '-SPEC:N', 'PHI:DET:_', 'VAL', 'PHI:PER:_'}
does_C          ['LANG:EN']
does-           {'!PROBE:V', '-SPEC:C', 'PHI:PER:3', '-SPEC:FORCE', 'COMP:Neg', '-SPEC:T/fin', '!SPEC:D', 'PHI:GEN:_', 'PHI:GEN:F', 'SPEC:TO/inf', '-SPEC:TO/inf', '-COMP:INF', '-COMP:T/fin', '-SPEC:v', '-SPEC:C/fin', '-SPEC:Neg', 'PHI:GEN:M', '!COMP:*', 'T/fin', 'LF:does', 'ARG', 'COMP:V', '-SPEC:V', 'PHI:NUM:_', 'T', 'PF:does', 'SPEC:D', 'LANG:EN', 'FIN', 'PHI:NUM:SG', 'COMP:v', 'SPEC:*', 'COMP:T/prt', '-SPEC:N', 'PHI:DET:_', 'VAL', 'PHI:PER:_'}
dorme           ['LANG:IT']
dorme-          {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', '!SPEC:D', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-COMP:N', '-COMP:T/fin', 'LF:sleep', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'PF:dorme', 'ARG', '-COMP:V', 'PHI:PER:_'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'%SPEC:INF', 'NEG', 'PHI:NUM:_', '-SPEC:T/fin', 'PF:ei', 'FIN', '-SPEC:T', 'POL:NEG', 'SPEC:*', 'SEM:internal', 'LANG:FI', 'COMP:T/prt', '!COMP:T', 'PHI:DET:_', 'Neg/fin', 'LF:neg', 'VAL', '!COMP:*', '!SPEC:*', 'ARG', 'PHI:PER:_'}
e-              {'%SPEC:INF', 'NEG', 'PHI:NUM:_', '-SPEC:T/fin', 'PF:ei', 'FIN', '-SPEC:T', 'POL:NEG', 'SPEC:*', 'SEM:internal', 'LANG:FI', 'COMP:T/prt', '!COMP:T', 'PHI:DET:_', 'Neg/fin', 'LF:neg', 'VAL', '!COMP:*', '!SPEC:*', 'ARG', 'PHI:PER:_'}
elaa            ['LANG:FI']
ela-            {'-COMP:v', '-COMP:D', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:MA/inf', '-SPEC:T/fin', 'LF:live', 'COMP:P', 'SPEC:D', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PF:elaa', '-COMP:T/fin', 'LANG:FI', 'CLASS:INTR', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
etsii           ['LANG:FI']
etsi-           {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:D', '-SPEC:T/fin', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', 'LF:search', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'LANG:FI', 'V', 'PHI:DET:_', 'PF:etsi', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
etta            {'!PROBE:T/fin', 'FORCE', 'LF:that', 'COMP:C/fin', '-SPEC:*', 'LANG:FI', 'PF:etta', '-ARG', 'COMP:T/fin', '-VAL', '!COMP:*', 'FIN'}
flow'           {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', 'LF:flow', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'PF:flow', 'ARG', '-COMP:V', 'PHI:PER:_'}
from            {'-SPEC:*', '-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:T/fin', '-SPEC:Neg/fin', 'P', 'PHI:GEN:_', 'LANG:EN', '-SPEC:ADV', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'adjoinable', 'COMP:D', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:N', 'PHI:DET:_', '-SPEC:INF', 'TAIL:V,+SEM:directional', '-VAL', '!COMP:*', 'LF:from', 'ARG', 'PF:from', '-float', '-SPEC:V'}
gave            ['LANG:EN']
give-           {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'CLASS:DITR', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', '-COMP:FIN', 'LF:give', 'COMP:D', 'V', 'PHI:DET:_', 'SPEC:P', '+SEM:directional', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PF:give'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'LF:Giuseppe', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:N', 'PF:Giuseppe', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-COMP:v', '-SPEC:*', 'LF:want', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PF:haluaa', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', 'COMP:A/inf', '-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'SEM:internal', 'COMP:D', 'LANG:FI', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:D', 'LF:disturb', '-SPEC:T/fin', 'COMP:P', 'SPEC:D', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:FIN', 'LANG:FI', 'V', 'PHI:DET:_', 'SPEC:P', 'PF:hairitsee', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-ASP', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:IT', 'SPEC:D', 'PF:ha', 'COMP:T', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'SPEC:*', 'LF:have', 'SEM:internal', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:v', 'PF:havia', '-COMP:D', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:MA/inf', 'LF:disappear', '-SPEC:T/fin', 'COMP:P', 'SPEC:D', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'LANG:FI', 'CLASS:INTR', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '!COMP:D', '-SPEC:T/fin', 'COMP:P', '!COMP:*', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:FIN', 'COMP:D', 'LANG:FI', 'V', 'PHI:DET:_', 'PF:ihaile-', '-COMP:P', 'SPEC:P', '-VAL', 'LF:admire', 'ARG', '-COMP:V', 'PHI:PER:_'}
il              {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', '!PROBE:N', 'PF:il', 'LF:the', '-SPEC:T/fin', '-ARG', 'LANG:IT', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
i               {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', '!PROBE:N', 'PF:il', 'LF:the', '-SPEC:T/fin', '-ARG', 'LANG:IT', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
in              {'PF:in', '-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:T/fin', 'P', 'PHI:GEN:_', 'LANG:IT', 'LF:in', '-COMP:N', '-COMP:T/fin', 'PHI:PER:_', 'adjoinable', 'COMP:D', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:N', 'PHI:DET:_', '-SPEC:INF', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-SPEC:Neg/fin', '-SPEC:V'}
infermieri      {'-COMP:v', '-COMP:A', 'COMP:uR', 'PF:infermieri', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', 'LF:nurses', '-SPEC:INF', 'SPEC:A'}
is              ['LANG:EN']
be-             {'-COMP:v', '-COMP:TO/inf', '-SPEC:FORCE', 'COPULA', '-SPEC:T/fin', '-ARG', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:TO/inf', 'ASP', 'SPEC:ADV', '-COMP:N', '-COMP:T/fin', 'V', 'PF:be', 'LF:be', 'SPEC:P', '-VAL', '!COMP:*', '-COMP:V'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:v', '-COMP:D', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:MA/inf', '-SPEC:T/fin', 'COMP:P', 'SPEC:D', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'LANG:FI', 'CLASS:INTR', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'LF:sit', 'ARG', '-COMP:V', 'PF:istuu', 'PHI:PER:_'}
John            ['LANG:EN']
John-           {'-adjoinable', '-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'PF:John', 'N', '-SEM:directional', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', 'LF:John', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'PF:joka', '-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', 'LF:who', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'PF:Jukka', 'COMP:P', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:N', 'LF:Jukka', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
juosten         ['LANG:FI']
juokse-         {'-COMP:v', 'PHI:NUM:_', 'PF:juokse-', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'LANG:FI', 'V', 'PHI:DET:_', 'SPEC:P', 'LF:run', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
istuu           ['LANG:FI']
istu-           {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'LANG:FI', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'LF:sit', 'ARG', '-COMP:V', 'PF:istuu', 'PHI:PER:_'}
kaksi           {'COMP:N', 'SPEC:*', 'LF:two', 'ARG', 'LANG:FI', 'PHI:NUM:_', 'PHI:DET:_', 'NUM', '-VAL', 'COMP:n', 'TAIL:ARG,VAL,FIN', 'PF:kaksi', 'PHI:NUM:SG', 'PHI:PER:_'}
kaksi           {'COMP:n', 'COMP:N', 'LF:two', 'TAIL:ARG,ASP:BOUNDED', 'SPEC:*', 'TAIL:*POL:NEG', 'NUM', 'LANG:EN', 'PF:kaksi'}
kaksi_1         {'COMP:N', 'SPEC:*', 'LF:two', 'ARG', 'LANG:FI', 'PHI:NUM:_', 'PHI:DET:_', 'NUM', '-VAL', 'COMP:n', 'TAIL:ARG,VAL,FIN', 'PF:kaksi', 'PHI:NUM:SG', 'PHI:PER:_'}
kaksi_2         {'COMP:n', 'COMP:N', 'LF:two', 'TAIL:ARG,ASP:BOUNDED', 'SPEC:*', 'TAIL:*POL:NEG', 'NUM', 'LANG:EN', 'PF:kaksi'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'NUM', 'LF:two', 'SPEC:*', 'LANG:FI', 'COMP:n', 'PF:kaksi'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:R/D', 'N', '-SPEC:ADV', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', 'PF:kaupunki', '-SPEC:V', '-COMP:C/fin', '-COMP:P', '-SPEC:uWH', 'LF:city', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', '!COMP:A/inf', 'LF:order', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'LANG:FI', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'PF:kaske', 'ARG', '-COMP:V', 'SEM:external'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', 'PF:kello', 'LF:watch', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
kello0-         {'LF:watch', '2SPEC', 'LANG:FI', 'SPEC:D', 'PF:kello', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', 'PF:key', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', 'LF:key', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:N', 'LF:book', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'PF:kirja', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
kohti           {'-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:iR', 'TAIL:V', '-SPEC:T/fin', 'PF:kohti', 'P', 'LF:towards', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'adjoinable', 'SPEC:*', 'COMP:D', 'LANG:FI', '-SPEC:v', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:N', 'PHI:DET:_', '-SPEC:INF', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-SPEC:Neg/fin', '-SPEC:V'}
koko            {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', '!PROBE:N', 'PF:koko', '-SPEC:T/fin', '-ARG', 'D', '-COMP:T/fin', 'adjoinable', 'COMP:N', 'LANG:FI', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', 'TAIL:T', 'LF:all', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
kuka            ['LANG:FI']
kuka-           {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', 'LF:who', '-SPEC:ADV', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', 'PF:kuka', 'PHI', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
kuorsaa-        {'-COMP:v', '-COMP:D', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LF:snore', 'SPEC:ADV', 'PF:kuorsaa', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'LANG:FI', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:C', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:T/fin', '!SPEC:D', 'P', 'PF:lahella', '-COMP:N', '-COMP:T/fin', 'adjoinable', 'COMP:D', '-SPEC:v', '-SPEC:C/fin', '-COMP:C/fin', '!COMP:*', 'ARG', 'COMP:V', '-SPEC:V', '-SPEC:INF', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', 'INF', '-COMP:FORCE', 'COMP:v', 'SPEC:*', '-SPEC:iWH', 'LANG:FI', '-COMP:ADV', '-SPEC:N', 'LF:near', 'PHI:DET:_', 'VAL', '-SPEC:ADV', '!SPEC:*', '-SPEC:Neg/fin', 'PHI:PER:_'}
lahella         {'-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '!COMP:D', '-SPEC:iR', '-SPEC:T/fin', 'P', 'PF:lahella', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'adjoinable', 'SPEC:*', 'COMP:D', 'LANG:FI', '-SPEC:v', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:ADV', 'LF:near', '-SPEC:N', '-SPEC:INF', 'PHI:DET:_', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-SPEC:Neg/fin', '-SPEC:V'}
lahella_1       {'-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '!COMP:D', '-SPEC:iR', '-SPEC:T/fin', 'P', 'PF:lahella', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'adjoinable', 'SPEC:*', 'COMP:D', 'LANG:FI', '-SPEC:v', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:ADV', 'LF:near', '-SPEC:N', '-SPEC:INF', 'PHI:DET:_', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-SPEC:Neg/fin', '-SPEC:V'}
lahella_2       {'-SPEC:C', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:T/fin', '!SPEC:D', 'P', 'PF:lahella', '-COMP:N', '-COMP:T/fin', 'adjoinable', 'COMP:D', '-SPEC:v', '-SPEC:C/fin', '-COMP:C/fin', '!COMP:*', 'ARG', 'COMP:V', '-SPEC:V', '-SPEC:INF', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', 'INF', '-COMP:FORCE', 'COMP:v', 'SPEC:*', '-SPEC:iWH', 'LANG:FI', '-COMP:ADV', '-SPEC:N', 'LF:near', 'PHI:DET:_', 'VAL', '-SPEC:ADV', '!SPEC:*', '-SPEC:Neg/fin', 'PHI:PER:_'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-COMP:v', '-COMP:D', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:MA/inf', 'LF:leave', '-SPEC:T/fin', 'COMP:P', 'SPEC:D', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', 'PF:lahtea', '-COMP:N', '-COMP:T/fin', 'LANG:FI', 'CLASS:INTR', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'COMP:PP', 'ARG', '-COMP:V', 'PHI:PER:_'}
lavano          ['LANG:IT']
lava-           {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'PF:lava', 'LANG:IT', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'LF:wash', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', '!PROBE:N', 'LF:D', '-SPEC:T/fin', '-ARG', 'LANG:IT', 'D', 'PF:le', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
leaves          ['LANG:EN']
leave           {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', 'LF:leave', '-SPEC:T/fin', '!SPEC:D', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'PHI:DET:_', 'SPEC:P', 'PF:leave', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
leave-          {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', 'LF:leave', '-SPEC:T/fin', '!SPEC:D', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'V', 'PHI:DET:_', 'SPEC:P', 'PF:leave', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
like-           {'PF:like', '-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:D', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-COMP:N', '-COMP:T/fin', 'LF:like', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
likes           ['LANG:EN']
like            {'PF:like', '-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:D', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-COMP:N', '-COMP:T/fin', 'LF:like', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
little          ['LANG:EN']
little-         {'LF:little', '2SPEC', 'PF:little-', 'SPEC:D', 'LANG:EN', '0'}
lle             {'PF:P(lle)', '-SPEC:*', '-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', 'LF:for', '-SPEC:iR', '-SPEC:T/fin', 'P', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'adjoinable', 'COMP:D', 'LANG:FI', '-SPEC:v', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:N', 'PHI:DET:_', '-SPEC:INF', 'TAIL:V,+SEM:directional', '+SEM:directional', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-SPEC:Neg/fin', '-SPEC:V'}
lla             {'-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:T/fin', 'TAIL:*V', 'P', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'adjoinable', 'SPEC:*', 'COMP:D', 'LANG:FI', '-SPEC:v', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:N', 'PHI:DET:_', '-SPEC:INF', 'TAIL:T', 'LF:by', 'PF:P(lla)', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-SPEC:Neg/fin', '-SPEC:V'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', 'LF:Luisa', '-SPEC:uWH', 'PF:Luisa', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
lukemalla       ['LANG:FI']
luke-           {'-COMP:v', 'PF:luke', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'LANG:FI', 'V', 'PHI:DET:_', 'LF:read', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '!COMP:D', '-SPEC:T/fin', 'LF:find', 'COMP:P', 'PF:loyta-', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', 'LANG:FI', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
Mary            ['LANG:EN']
Mary-           {'PF:Mary', '-adjoinable', '-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', 'LF:Mary', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-adjoinable', 'LF:Merja', '-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'PF:Merja', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'COMP:v', 'ADV', 'SPEC:*', 'adjoinable', 'PF:malla', 'LANG:FI', '-SPEC:N', '-SPEC:FORCE', 'MA/inf', 'TAIL:T', 'LF:by', '-SPEC:T/fin', '-SPEC:Neg/fin'}
meren           ['LANG:FI']
mere-           {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', 'LF:ocean', 'PF:meri', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
mies            {'-COMP:v', '-COMP:A', 'PF:mies', 'SPEC:A', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'LF:man'}
mistake         {'LF:mistake', '-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', 'PF:mistake', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:v', '-COMP:A', 'PF:mika-', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LF:what', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-COMP:v', 'LF:move', 'ARG', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PF:move', '-COMP:T/fin', 'COMP:D', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '+SEM:directional', '-VAL', '!COMP:*', 'LANGN:EN', '-COMP:V', 'PHI:PER:_'}
mukavasti       ['LANG:EN']
mukava-         {'2SPEC', 'LANG:FI', 'SPEC:D', 'PF:mukavasti', '0', 'LF:comfortably'}
must            {'!PROBE:V', '-SPEC:C', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'T', 'COMP:Neg', '-SPEC:T/fin', '!SPEC:D', 'PHI:GEN:_', 'SPEC:D', 'LANG:EN', 'SPEC:TO/inf', 'FIN', '-SPEC:TO/inf', 'PHI:PER:_', '-COMP:INF', '-COMP:T/fin', 'COMP:v', 'SPEC:*', 'PF:must', '-SPEC:v', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:N', 'PHI:DET:_', 'MODAL', '-SPEC:Neg', 'VAL', '!COMP:*', 'T/fin', 'LF:must', 'COMP:V', '-SPEC:V'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', 'LANG:FI', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'LF:sell', 'PF:myy', 'ARG', '-COMP:V', 'PHI:PER:_'}
naki            ['LANG:FI']
nake-           {'-COMP:v', 'ARG', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', '-COMP:MA/tta', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', 'LANG:FI', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-COMP:V', '-VAL', '!COMP:*', '-COMP:ESSA/inf', 'PF:nake', 'LF:see', 'PHI:PER:_'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', '-ARG', '!SPEC:D', 'COMP:P', 'SPEC:TO/inf', 'LF:seem', 'ASP', 'SPEC:ADV', '-COMP:N', '-COMP:T/fin', 'SEM:internal', 'LANG:FI', 'PF:naytta', 'V', 'SPEC:P', 'VAL', '!COMP:VA/inf', '-COMP:V'}
ndo             {'COMP:v', '-COMP:T/fin', '?ARG', 'LF:ing', '-SPEC:V', '-COMP:C/fin', '-SPEC:T/fin', 'VAL', '!COMP:*', 'LANG:EN', '-COMP:FORCE', 'INF', 'PRG', 'COMP:V', 'PF:PRG'}
ne              {'-SPEC:C', '-COMP:D', 'PHI:PER:3', '-SPEC:P', 'OP', '!PROBE:N', 'LF:those', 'PF:ne', '-SPEC:T/fin', '-ARG', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'LANG:FI', '-COMP:uR', '-SPEC:MA/lla', 'PHI:NUM:PL', '-SPEC:INF', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
niiden          ['LANG:EN']
nen             {'SPEC:*', 'adjoinable', 'LANG:FI', '-SPEC:A', '-SPEC:D', 'LF:ing', 'A', 'COMP:0', 'TAIL:D', 'PF:a'}
not             {'LF:not', '-COMP:FIN', 'SPEC:*', 'Neg', '-COMP:C', '-COMP:D', 'PHI:NUM:_', 'PHI:DET:_', 'PF:not', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '!COMP:*', 'LANG:EN', 'ARG', 'POL:NEG'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PF:nukku', '-COMP:v', '-COMP:D', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:MA/inf', '-SPEC:T/fin', 'COMP:P', 'SPEC:D', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:Neg/fin', '-COMP:N', '-COMP:T/fin', 'LF:sleep', 'LANG:FI', 'CLASS:INTR', 'V', 'PHI:DET:_', '-COMP:T', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'PF:omaisuuden', 'N', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', 'LF:possessions', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
operatoria      ['LANG:IT']
operatoria-     {'SPEC:D', '2SPEC', 'LF:operation', 'LANG:IT', 'PF:operatoria', '0'}
ostaa           ['LANG:FI']
osta-           {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'LF:buy', 'COMP:P', 'PF:osta', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', 'LANG:FI', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', 'SEM:nonreferential', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', 'LF:day', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', 'PF:paiva', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-COMP:N', 'LANG:FI', 'LF:Paris', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', 'PF:Pariisi', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'PF:Pekka', '-SPEC:FORCE', 'COMP:R', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LF:Pekka', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
pelottaa        ['LANG:FI']
pelkaa-         {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'LANG:FI', 'LF:fear', 'PF:pelkaa', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
persuades       ['LANG:EN']
persuade-       {'PF:persuade', 'COMP:TO/inf', '-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'LF:persuade', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'SEM:external'}
peruuntui       ['LANG:FI']
peruuntu-       {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'LF:cancelled', 'COMP:P', 'SPEC:D', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-COMP:N', '-COMP:T/fin', 'PF:peruuntui', 'LANG:FI', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'PF:pese', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', 'LANG:FI', 'LF:wash', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
pese-           {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'PF:pese', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'LANG:FI', 'LF:wash', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
petardi         {'-COMP:v', 'LF:firecrackers', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', 'PF:petardi', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
pieni           ['LANG:FI']
pieni-          {'LF:small', 'PF:pieni-', '2SPEC', 'LANG:FI', 'SPEC:D', '0'}
poikien         ['LANG:FI']
poika-          {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', 'PF:poika', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', 'LF:boy', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', '2SPEC', 'LF:phone', 'LANG:FI', 'SPEC:D', '0'}
punainen        ['LANG:FI']
puna-           {'2SPEC', 'LF:red', 'LANG:FI', 'SPEC:D', 'PF:puna-', '0'}
presupposto     {'PF:presupposto', '-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LF:presupposition', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
primary         {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', 'LF:nurse', 'PF:primary', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
promises        ['LANG:EN']
promise-        {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'COMP:D', 'SEM:internal', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'LF:promise', 'ARG', '-COMP:V', 'PF:promise'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:v', 'PF:pyyda', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'LANG:FI', 'LF:ask', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'SEM:external'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:v', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'LANG:FI', 'PF:raukea', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'LF:terminate', '-COMP:V', 'PHI:PER:_'}
red             ['LANG:EN']
red-            {'2SPEC', 'LF:red', 'PF:red', 'SPEC:D', 'LANG:EN', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '!COMP:D', '-SPEC:T/fin', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'PF:saavutta-', 'ASP:BOUNDED', 'COMP:D', 'LANG:FI', 'LF:reach', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-COMP:v', 'LF:say', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:FORCE', 'COMP:P', 'SPEC:D', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'LANG:FI', 'V', 'PHI:DET:_', 'PF:sano-', 'SPEC:P', '-VAL', 'COMP:VA/inf', '-COMP:V', 'PHI:PER:_'}
said            ['LANG:EN']
say'            {'!COMP:FORCE', '-COMP:v', 'LF:say', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'PF:say', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
say-            {'!COMP:FORCE', '-COMP:v', 'LF:say', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'PF:say', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
sala            ['LANG:IT']
sala-           {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', 'PF:sala', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'LF:room', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', 'PF:scoppia', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:IT', 'SPEC:ADV', 'LF:explode', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
sen             {'PF:sen', '-SPEC:C', '-COMP:D', '-SPEC:P', 'TAIL:*POL:NEG', 'OP', '!PROBE:N', '-SPEC:T/fin', '-ARG', 'TAIL:ASP', 'TAIL:PHI', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'LANG:FI', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', 'LF:the/that', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
se'             {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', '!PROBE:N', 'PF:se', '-SPEC:T/fin', '-ARG', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'LANG:FI', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', 'LF:the/that', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
se              {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', '!PROBE:N', 'PF:se', '-SPEC:T/fin', '-ARG', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'LANG:FI', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', 'LF:the/that', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
se              ['LANG:FI']
sentenza        {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LF:sentence', 'LANG:IT', 'COMP:R/D', 'N', 'PF:sentenza', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
Seine           ['LANG:EN']
Seine-          {'PF:Seine', '-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', '-COMP:N', 'LF:Seine', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
sembrano        ['LANG:IT']
sembra-         {'PF:sembra', '-COMP:v', '-COMP:D', '-SPEC:FORCE', '-ASP', '-SPEC:T/fin', '-ARG', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:TO/inf', 'LF:seem', 'SPEC:ADV', '-COMP:N', '-COMP:T/fin', '!COMP:ARE/inf', 'V', 'SPEC:P', '-VAL', '-COMP:V'}
sleeps          ['LANG:EN']
sleep           {'-COMP:v', 'PF:sleep', '-COMP:D', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:MA/inf', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'LF:sleep', 'CLASS:INTR', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
sleep-          {'-COMP:v', 'PF:sleep', '-COMP:D', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:MA/inf', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'LF:sleep', 'CLASS:INTR', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:v', '-COMP:A', 'PF:sopimus', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', '!COMP:A/inf', 'COMP:R/D', 'N', '-COMP:N', 'LF:agreement', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
spinge          ['LANG:IT']
spinge-         {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:D', '-SPEC:T/fin', 'PF:spinge', 'PHI:GEN:_', 'LANG:IT', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', 'LF:push', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
ssa             {'-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', 'PF:ssa', 'TAIL:V', '-SPEC:iR', '-SPEC:T/fin', 'P', 'LF:in', '-COMP:N', '-COMP:T/fin', 'PHI:PER:_', 'adjoinable', 'SPEC:*', 'COMP:D', 'LANG:FI', '-SPEC:v', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:N', 'PHI:DET:_', '-SPEC:V', '-SPEC:INF', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-SPEC:Neg/fin', 'COMP:n/MA'}
stanno          ['LANG:IT']
sta-            {'-COMP:v', 'PHI:NUM:_', 'PF:sta', '-SPEC:FORCE', '-ASP', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:N', 'COMP:PRG', '-COMP:T/fin', 'SEM:internal', 'V', 'PHI:DET:_', 'SPEC:P', 'LF:stay', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
sti             {'ADV', 'SPEC:*', 'adjoinable', 'LANG:FI', 'PF:sti', '-SPEC:N', '-SPEC:FORCE', 'TAIL:T', 'LF:by', '-SPEC:T/fin', '-ARG', '!COMP:*', '-SPEC:Neg/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'LF:socks', '-SPEC:FORCE', 'COMP:R', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', 'PF:sukka-', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
talo            {'-COMP:v', '-COMP:A', 'PF:talo', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LF:house', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
tama            ['LANG:EN']
tama-           {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', 'PF:tama', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-SPEC:ADV', 'LF:this', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', 'PHI', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-ASP', '-SPEC:T/fin', 'PF:taytyy', '!COMP:A/inf', 'COMP:P', 'SPEC:ADV', 'FIN', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'SPEC:*', 'LANG:FI', 'V', 'PHI:DET:_', 'MODAL', 'SPEC:P', '-COMP:V', '-VAL', 'ARG', 'LF:must', 'PHI:PER:_'}
teki            ['LANG:FI']
teke-           {'-COMP:v', 'PF:teke', 'LF:make', 'ARG', 'CLASS:TR', '-SPEC:FORCE', 'PHI:NUM:_', '!COMP:D', '-SPEC:T/fin', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', 'LANG:FI', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', '-COMP:A/inf', '-COMP:V', 'PHI:PER:_'}
that            {'!PROBE:T/fin', 'LF:that', 'FORCE', 'COMP:C/fin', '-SPEC:*', 'PF:that', '-ARG', 'COMP:T/fin', '-VAL', '!COMP:*', 'LANG:EN', 'FIN'}
the             {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', '!PROBE:N', 'LF:the', '-SPEC:T/fin', '-ARG', 'LANG:EN', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'PHI:DEF:DEF', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '!COMP:*', 'PF:the', '-SPEC:Neg/fin', '-SPEC:V'}
to              {'-SPEC:*', '-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:iR', 'LF:to', '-SPEC:T/fin', '-SPEC:Neg/fin', 'P', 'PHI:GEN:_', 'LANG:EN', '-SPEC:ADV', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'adjoinable', 'COMP:D', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:N', 'PHI:DET:_', '-SPEC:INF', 'TAIL:V,+SEM:directional', '+SEM:directional', '-VAL', '!COMP:*', 'PF:to', 'ARG', '-float', '-SPEC:V'}
to_inf          {'?ARG', '-SPEC:T/fin', 'LANG:EN', '-COMP:FORCE', 'INF', 'COMP:v', '-COMP:T/fin', 'adjoinable', '-SPEC:v', 'TO/inf', 'LF:TO/inf', '-COMP:C/fin', '-VAL', '!COMP:*', 'PF:TO/inf', 'COMP:V', '-SPEC:V'}
towards         {'-SPEC:*', '-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:iR', 'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', 'P', 'PHI:GEN:_', 'LANG:EN', 'LF:towards', 'PF:towards', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'adjoinable', 'COMP:D', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:N', 'PHI:DET:_', '-SPEC:INF', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-float', '-SPEC:V'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'PF:tonaise', 'COMP:P', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'LANG:FI', 'V', 'PHI:DET:_', '-COMP:P', 'LF:nudge', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
tta             {'-SPEC:C', 'PHI:NUM:_', '-SPEC:P', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:T/fin', 'P', 'LF:without', '-COMP:N', 'PF:tta', 'ADV', '-COMP:T/fin', 'adjoinable', 'SPEC:*', 'COMP:D', 'LANG:FI', '-SPEC:v', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:N', 'PHI:DET:_', '-SPEC:V', '-SPEC:INF', 'PHI:PER:_', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-SPEC:Neg/fin', 'COMP:n/MA'}
tries           ['LANG:EN']
try-            {'LF:try', '!COMP:TO/inf', '!COMP:-ARG', '-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'SEM:internal', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'PF:try', 'ARG', '-COMP:V', 'PHI:PER:_'}
verifiche       {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', 'PF:verifiche', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', 'LF:verification', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:v', '-COMP:D', 'PHI:NUM:_', '-SPEC:FORCE', 'LF:flow', '-SPEC:T/fin', 'PF:virtaa', 'COMP:P', 'SPEC:D', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '!COMP:P', '-COMP:T/fin', 'LANG:FI', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:v', '-SPEC:*', 'LF:want', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'SEM:internal', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', '!COMP:*', 'PF:volu', '-COMP:V', 'PHI:PER:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-COMP:v', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', 'PF:voitta', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'LF:win', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'SEM:achievement', 'PHI:PER:_'}
wants           ['LANG:EN']
want-           {'COMP:TO/inf', '-COMP:v', 'PF:want', 'LF:want', 'PHI:NUM:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', 'SPEC:ADV', 'ASP', '-SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'V', 'PHI:DET:_', '-COMP:P', 'SPEC:P', '-VAL', '!COMP:*', 'ARG', '-COMP:V', 'PHI:PER:_'}
what            ['LANG:EN']
what-           {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', 'PF:what', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LF:what', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
which           {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', '!PROBE:N', '-SPEC:T/fin', '-ARG', '-SPEC:Neg/fin', 'LF:which', 'LANG:EN', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'OP:WH', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '!COMP:*', 'PF:which', '-SPEC:V'}
who             ['LANG:EN']
who-            {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', 'PF:who', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', 'LF:who', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
whether         {'!PROBE:T/fin', 'COMP:C/fin', '-SPEC:*', 'LF:whether', 'PF:whether', 'Q', 'OP', 'OP:Q', '-ARG', 'COMP:T/fin', 'LANG:EN', 'FIN', 'FORCE', 'OP:WH', '-VAL', '!COMP:*'}
yrittaa         ['LANG:FI']
yritta-         {'LF:try', '!COMP:-ARG', '-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '!COMP:A/inf', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:T/fin', 'SEM:internal', 'V', 'PF:yritta', 'PHI:DET:_', 'SPEC:P', '-VAL', 'ARG', '-COMP:V', 'PHI:PER:_'}
mina            ['LANG:EN']
mina-           {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-SPEC:ADV', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', 'LF:I', 'PF:mina', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
sina            ['LANG:EN']
sina-           {'-COMP:v', 'PF:sina', '-COMP:A', 'PHI_N', 'LF:you', 'COMP:uR', '-SPEC:FORCE', '-SPEC:P', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
han             ['LANG:EN']
han-            {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', 'PF:han', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', 'LF:s/he', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', 'LF:we', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', 'PF:me', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
te              ['LANG:EN']
te-             {'-COMP:v', '-COMP:A', 'PHI_N', 'LF:you', 'COMP:uR', '-SPEC:FORCE', '-SPEC:P', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', 'COMP:C', '-COMP:N', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'PF:te', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'COMP:R/D', 'N', '-COMP:N', 'LF:they', 'PF:he', 'LANG:FI', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
se-             {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', 'LF:it/that', '!PROBE:N', 'PF:se', '-SPEC:T/fin', '-ARG', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'LANG:FI', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
I               ['LANG:EN']
I-              {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', 'PF:I', '-SPEC:ADV', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', 'LF:I', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
you             ['LANG:EN']
you-            {'-COMP:v', '-COMP:A', 'PHI_N', 'LF:you', 'COMP:uR', '-SPEC:FORCE', '-SPEC:P', 'COMP:R', '-COMP:*', '-SPEC:T/fin', 'PF:you', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
he              ['LANG:EN']
he-             {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', '-COMP:N', 'PF:he', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LF:he', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
she             ['LANG:EN']
she-            {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', 'LF:she', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', 'PF:she', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
we              ['LANG:EN']
we-             {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', 'LF:we', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', 'PF:we', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:v', 'LF:you_pl', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', '-COMP:AUX', 'LANG:EN', 'COMP:R/D', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', 'PHI', 'COMP:C', 'PF:you_pl', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
they            ['LANG:EN']
they-           {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'PF:they', 'COMP:R/D', 'N', '-COMP:N', 'LF:they', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
it              ['LANG:EN']
it-             {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', 'LF:it/that', 'PF:it', '!PROBE:N', '-SPEC:T/fin', '-ARG', 'LANG:EN', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
io              ['LANG:EN']
io-             {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', 'PF:io', '-SPEC:uWH', 'LF:I', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
tu              ['LANG:EN']
tu-             {'-COMP:v', '-COMP:A', 'PHI_N', 'LF:you', 'COMP:uR', '-SPEC:FORCE', '-SPEC:P', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', 'PF:tu', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
lui             ['LANG:EN']
lui-            {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', 'PF:lui', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LF:he', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
lei             ['LANG:EN']
lei-            {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', 'PF:lei', '-SPEC:FORCE', '-SPEC:P', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', 'LF:she', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
noi             ['LANG:EN']
noi-            {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', 'LF:we', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', 'PF:noi', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
voi             ['LANG:EN']
voi-            {'-COMP:v', 'LF:you_pl', 'PF:voi', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
loro            ['LANG:EN']
loro-           {'-COMP:v', '-COMP:A', 'PF:loro', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', 'LF:they', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
mi              ['LANG:EN']
mi-             {'CL', '-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', 'LF:me', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', 'PF:mi(cl)', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
la              ['LANG:EN']
la-             {'CL', '-COMP:v', '-COMP:A', 'LF:her', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', 'PF:la(cl)', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
lo              ['LANG:EN']
lo-             {'CL', '-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', 'PF:lo(cl)', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', 'LF:him', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
si              ['LANG:EN']
si-             {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', 'LF:3sg', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', '-COMP:N', 'PF:si(cl)', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', 'CAL:CL', 'SPEC:A'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:v', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:IT', 'COMP:R/D', 'N', 'LF:there', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-COMP:C/fin', 'PF:ci', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:AUX', '-COMP:V', '-SPEC:INF', 'SPEC:A'}
[-n]            {'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM'}
[-t]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM'}
[-V]            {'LANG:FI', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional'}
[-mme]          {'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM'}
[-mme]          {'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM'}
[-tte]          {'PHI:DET:DEF', 'LANG:FI', 'PHI', 'PHI:PER:2', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM'}
[-vat]          {'LANG:FI', 'PHI:PER:3', 'PHI', 'PHI:NUM:PL', 'inflectional'}
[-ni]           {'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM'}
[-si]           {'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM'}
[-nsa]          {'LANG:FI', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional'}
[-an]           {'PHI', 'LANG:FI', 'inflectional', 'PHI:PER:3'}
[-nne]          {'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM'}
[-s]            {'PHI', 'PHI:GEN:M', 'PHI:GEN:F', 'PHI:PER:3', 'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
[-0]            {'PHI:PER:1', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:EN', 'PHI:PER:2', 'PHI:NUM:PL', 'inflectional', 'PHI', 'PHI:GEN:N', 'PHI:NUM:SG'}
[-o]            {'PHI:PER:1', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM'}
[-i]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:IT', 'PHI', 'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM'}
[-a]            {'PHI', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG', 'inflectional'}
[-e]            {'PHI', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG', 'inflectional'}
[-iamo]         {'PHI:PER:1', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM'}
[-te]           {'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:PER:2', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM'}
[-no]           {'PHI', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:PL', 'inflectional'}
[-nom]          {'adjoinable', 'LANG:EN', 'NOM', 'TAIL:FIN,ARG,VAL', 'inflectional'}
[-par]          {'inflectional', 'adjoinable', 'LANG:FI', 'TAIL:ARG,-VAL', 'PAR'}
[-gen]          {'-float', 'LANG:EN', 'GEN', 'TAIL:INF,ARG', 'inflectional'}
gen             {'-float', 'LANG:EN', 'GEN', 'TAIL:INF,ARG', 'inflectional'}
[-n_acc]        {'TAIL:PHI', 'n-ACC', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*POL:NEG', 'inflectional'}
[-t_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*POL:NEG', 'inflectional', 't-ACC'}
[-0_acc]        {'0_ACC', 'TAIL:*PHI', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'LANG:FI', 'TAIL:*POL:NEG', 'inflectional'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'a', 'PF:a', 'LF:A', 'LANG:X'}
b'              {'LF:B', 'PF:b', 'b', 'LANG:X'}
b''             {'b', 'LANG:EN', 'LF:B', 'PF:b', '-COMP:c'}
c''             {'SPEC:a', 'c', 'LANG:EN', 'PF:c', 'LF:C'}
c'              {'PF:c', 'LANG:X', 'LF:C', 'c'}
d'              {'LF:D', 'PF:d', 'd', 'LANG:'}
a''             ['LANG:EN']
x'              {'LF:X', 'x', 'LANG:X', 'PF:x'}
y'              {'PF:y', 'LANG:X', 'y', 'LF:Y'}
z'              {'LANG:X', 'z', 'LF:Z', 'PF:x'}
John'           {"N'", 'PF:John', 'LF:John', 'LANG:X'}
admires'        {'LF:admires', 'PF:admires', 'LANG:X', "V'"}
admires''       {'-COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', 'PF:admires', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'PHI:DET:_', 'SPEC:P', '-VAL', 'LF:admires', 'ARG', '-COMP:V', 'PHI:PER:_'}
Mary'           {'PF:Mary', "N'", 'LF:mary', 'LANG:X'}
T/fin           {'!PROBE:V', '-SPEC:C', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'T', '-SPEC:T/fin', '!SPEC:D', 'PHI:GEN:_', 'SPEC:D', 'LANG:EN', 'SPEC:TO/inf', 'FIN', '-SPEC:TO/inf', 'PHI:PER:_', '-COMP:INF', '-COMP:T/fin', 'COMP:v', 'SPEC:*', '-SPEC:v', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:N', 'PHI:DET:_', 'PF:T', '-SPEC:Neg', 'LF:T', 'VAL', '!COMP:*', 'T/fin', 'COMP:V', '-SPEC:V'}
v               {'!PROBE:V', 'ARG', 'PHI:NUM:_', 'PF:v', '-SPEC:N', 'PHI:DET:_', 'v', 'LF:v', 'PHI:GEN:_', '-VAL', 'SPEC:D', 'LANG:EN', '!COMP:*', 'ASP', 'COMP:V', 'PHI:PER:_'}
C/fin           {'!PROBE:FIN', 'COMP:Neg/fin', '-SPEC:T/fin', '-ARG', 'COMP:T/fin', 'LANG:EN', 'FIN', 'PF:C', 'C/fin', 'SPEC:*', 'C', '-SPEC:N', '-SPEC:C/fin', 'LF:C/fin', '-COMP:C/fin', 'VAL', '!COMP:*', '-COMP:T/prt'}
T               {'!PROBE:V', 'PHI:NUM:_', '-SPEC:FORCE', 'T', '-COMP:NEG', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'LANG:EN', 'FIN', 'PHI:PER:_', 'COMP:v', 'SPEC:*', 'COMP:T/prt', '-SPEC:N', 'PHI:DET:_', 'PF:T', 'LF:T', 'VAL', '!COMP:*', 'ARG', 'COMP:V', '-SPEC:V'}
T/prt           {'!PROBE:V', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'LANG:EN', 'LF:T/prt', 'COMP:V', 'FIN', 'PHI:PER:_', 'COMP:v', 'SPEC:*', 'COMP:D', 'COMP:T/prt', '-SPEC:N', 'PHI:DET:_', 'VAL', '!COMP:*', 'T/prt', '-COMP:NEG', 'PF:T/prt', '-SPEC:V'}
a0              {'-adjoinable', 'adjoinable', 'TAIL:D', '-SPEC:A', '-SPEC:D', 'A', 'COMP:0', 'LF:A', 'LANG:EN', 'PF:A'}
n               {'-COMP:A', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', '!SPEC:D', 'PHI:GEN:_', 'COMP:P', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', 'n', '-COMP:C/fin', '-SPEC:uWH', '!COMP:*', '-COMP:AUX', 'ARG', '-COMP:V', 'COMP:V', '-SPEC:V', 'SPEC:A', '-COMP:v', 'COMP:uR', '-SPEC:P', 'COMP:R', 'PHI:NUM:_', 'COMP:0', 'LANG:EN', 'COMP:R/D', 'INF', 'N', 'COMP:v', 'SPEC:*', 'PF:n', '-SPEC:N', 'PHI:DET:_', 'VAL', '-SPEC:ADV', '!SPEC:*', 'COMP:C', 'LF:n', '-SPEC:INF', 'PHI:PER:_'}
impass          {'!PROBE:V', 'LF:impass', 'PHI:NUM:_', '-SPEC:N', 'PHI:DET:_', '!COMP:*', 'v', 'PHI:GEN:_', '-VAL', 'SPEC:D', 'LANG:EN', 'ASP', 'ARG', 'PF:impass', 'COMP:V', 'PHI:PER:_'}
cau             {'!PROBE:V', 'ARG', 'PHI:NUM:_', '-SPEC:N', 'PHI:DET:_', 'LF:v/Cause', 'v', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', 'SPEC:D', 'LANG:EN', '!COMP:*', 'ASP', 'COMP:V', 'PF:Cau'}
INF             {'COMP:v', '-COMP:T/fin', 'LF:INF', '-COMP:C/fin', '-SPEC:T/fin', 'PF:INF', '!COMP:*', 'LANG:EN', '-COMP:FORCE', 'INF', 'COMP:V', '-SPEC:V'}
prtcpl          {'!PROBE:V', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'LANG:EN', 'INF', '-COMP:FORCE', 'LF:T/prt', 'COMP:V', 'FIN', 'PHI:PER:_', 'COMP:v', '-COMP:T/fin', 'SPEC:*', 'COMP:D', 'COMP:T/prt', '-SPEC:N', 'PHI:DET:_', '-COMP:C/fin', 'VAL', '!COMP:*', 'T/prt', '-COMP:NEG', 'PF:T/prt', '-SPEC:V'}
TO/inf          {'!COMP:V', '?ARG', '-SPEC:T/fin', 'LANG:EN', 'INF', '-COMP:FORCE', 'COMP:v', '-COMP:T/fin', 'adjoinable', 'TO/inf', '-SPEC:v', 'LF:TO/inf', '-COMP:C/fin', '-VAL', '!COMP:*', 'PF:TO/inf', 'COMP:V', '-SPEC:V'}
A/inf           {'LF:A/inf', '?VAL', '?ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:EN', '-COMP:FORCE', 'INF', 'PF:A/inf', 'COMP:v', '-COMP:T/fin', 'SPEC:*', '-COMP:C/fin', 'A/inf', '!COMP:*', 'COMP:V', '-SPEC:V'}
ARE/inf         {'-adjoinable', 'ARE/inf', '?ARG', '-SPEC:T/fin', 'LF:ARE/inf', 'LANG:EN', '-COMP:FORCE', 'INF', 'COMP:v', '-COMP:T/fin', 'SPEC:*', '-COMP:C/fin', 'PF:are', 'VAL', '!COMP:*', 'COMP:V', '-SPEC:V'}
ESSA/inf        {'ESSA/inf', '?VAL', '?ARG', '-SPEC:FORCE', '-SPEC:T/fin', 'LANG:EN', 'PF:essa', 'INF', '-COMP:FORCE', 'COMP:V', 'LF:while', 'COMP:v', 'ADV', '-COMP:T/fin', 'SPEC:*', 'adjoinable', '-SPEC:N', 'TAIL:T', '-COMP:C/fin', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
TUA/inf         {'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'TUA/inf', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'INF', '-COMP:FORCE', 'COMP:V', 'PHI:PER:_', 'LF:after', 'ADV', 'COMP:v', '-COMP:T/fin', 'adjoinable', 'SPEC:*', '-SPEC:N', 'PHI:DET:_', 'TAIL:T', '-COMP:C/fin', 'VAL', '!COMP:*', '!SPEC:*', 'PF:tua', '-SPEC:Neg/fin', '-SPEC:V'}
VA/inf          {'PHI:NUM:_', 'LF:VA', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', '-COMP:FORCE', 'INF', 'PHI:PER:_', 'COMP:v', '-COMP:T/fin', 'PF:vAn', 'SPEC:*', '-SPEC:N', 'PHI:DET:_', 'VA/inf', '-COMP:C/fin', 'VAL', '!COMP:*', '!SPEC:*', 'ARG', 'COMP:V', '-SPEC:V'}
MA/ssa          {'-SPEC:*', 'PHI:NUM:_', '-SPEC:FORCE', 'MA/inf', 'TAIL:V', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:V', 'COMP:v', 'ADV', 'PF:massa', 'adjoinable', '-SPEC:N', 'PHI:DET:_', 'LF:in_doing', '-VAL', 'ARG', '-SPEC:Neg/fin', 'PHI:PER:_'}
MA/tta          {'PF:matta', 'ADV', 'adjoinable', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:N', 'MA/inf', 'PHI:DET:_', 'TAIL:T', '-SPEC:T/fin', 'PHI:GEN:_', '-VAL', 'LANG:EN', 'LF:without_doing', 'ARG', '-SPEC:Neg/fin', 'PHI:PER:_'}
MA/lla          {'-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'adjoinable', 'TAIL:T', 'LF:by_doing', '-VAL', 'ARG', 'COMP:V', 'PF:malla', 'PHI:NUM:_', 'MA/inf', 'LANG:EN', 'COMP:v', 'ADV', '-SPEC:N', 'PHI:DET:_', '-SPEC:Neg/fin', 'PHI:PER:_'}
MA/inf          {'-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'adjoinable', '-VAL', 'ARG', 'COMP:V', 'PHI:NUM:_', 'PF:maan', 'MA/inf', 'TAIL:V', 'LANG:EN', 'COMP:v', 'ADV', '-SPEC:N', 'PHI:DET:_', 'LF:to_do', '-SPEC:Neg/fin', 'PHI:PER:_'}
E/inf           {'ADV', 'SPEC:*', 'adjoinable', 'LANG:FI', '-SPEC:N', '-SPEC:FORCE', 'PF:en', 'TAIL:T', 'LF:by', '-SPEC:T/fin', '-ARG', '-VAL', '-SPEC:Neg/fin'}
BE-             {'-COMP:v', '-SPEC:FORCE', 'COPULA', 'LF:BE', '-SPEC:T/fin', '-ARG', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:TO/inf', 'ASP', 'SPEC:ADV', '-COMP:N', '-COMP:T/fin', 'COMP:T/prt', 'V', 'SPEC:P', 'PF:BE', '-VAL', '!COMP:*', '-COMP:V'}
D               {'-SPEC:C', '-COMP:D', '-SPEC:P', 'OP', '!PROBE:N', 'LF:D', '-SPEC:T/fin', '-ARG', 'LANG:EN', 'D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', '!COMP:*', '-SPEC:Neg/fin', 'PF:D'}
D/rel           {'PF:D/rel', '-SPEC:C', '-COMP:D', '-SPEC:P', 'D/rel', '!PROBE:N', 'OP', 'OP:_', '-SPEC:T/fin', '-ARG', 'LANG:EN', '-COMP:T/fin', 'D', 'adjoinable', 'COMP:N', 'OP:REL', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', 'LF:D/rel', '-COMP:C/fin', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:V'}
P               {'-SPEC:*', '-SPEC:C', 'PHI:NUM:_', '-SPEC:P', 'PF:P', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:iR', '-SPEC:T/fin', 'LF:P', '-SPEC:Neg/fin', 'P', 'PHI:GEN:_', 'LANG:EN', '-COMP:N', 'PHI:PER:_', '-COMP:T/fin', 'adjoinable', 'COMP:D', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:N', 'PHI:DET:_', '-SPEC:INF', '-VAL', '!COMP:*', '-SPEC:ADV', 'ARG', '-float', '-SPEC:V'}
pro             ['LANG:EN']
pro-            {'-COMP:v', '-COMP:A', 'COMP:uR', '-SPEC:P', 'COMP:R', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LANG:EN', 'COMP:R/D', 'N', '-SPEC:ADV', '-COMP:N', 'LF:pro', '-SPEC:R', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'PHI', 'COMP:C', '-COMP:AUX', '-COMP:V', 'PF:(pro)', 'SPEC:A'}
cl              {'CL', 'RIGHT:PRG', 'LEFT:D,CL', 'LANG:EN', 'LEFT:T/fin', 'RIGHT:ARE/inf', 'inflectional'}
inc             {'LANG:EN', 'INCORPORATED', 'inflectional'}
sg              {'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:EN'}
2p              {'LANG:EN', 'PHI:PER:2', 'inflectional'}
3p              {'LANG:EN', 'inflectional', 'PHI:PER:3'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:EN'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'LANG:EN', 'NOM', 'TAIL:FIN,!COMP:*,VAL', 'inflectional'}
acc             {'LANG:EN', 'ACC', 'TAIL:v', 'inflectional'}
dat             {'TAIL:v', 'DAT', 'inflectional', 'LANG:EN'}
uC/op           {'LANG:EN', 'uC/op', 'inflectional'}
wh              {'OP:WH', 'LANG:EN', 'inflectional', 'OP:_'}
wh_             {'OP:_', 'LANG:EN', 'OP', 'FORCE:OP:WH', 'inflectional'}
top             {'LANG:EN', 'OP:TOP', 'inflectional'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
rel             {'OP:_', '-COMP:C/fin', 'adjoinable', 'OP:REL', 'SPEC:D', 'LANG:EN', 'inflectional'}
Q               {'LANG:EN', 'OP:WH', 'OP', 'inflectional', 'OP:Q'}
