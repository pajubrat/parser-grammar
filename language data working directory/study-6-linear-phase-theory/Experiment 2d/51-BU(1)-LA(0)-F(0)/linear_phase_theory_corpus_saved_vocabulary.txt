ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-COMP:T/fin', 'P', '-ARG', '-SPEC:Neg/fin', '-SPEC:N', 'COMP:ARE/inf', '-SPEC:*', '-SPEC:P', '-SPEC:C', '-VAL', '-SPEC:iR', '-SPEC:T/fin', '-COMP:N', '-COMP:uWH', 'TAIL:V', '-COMP:ADV', '-COMP:T', 'LANG:IT', '!COMP:*', '-COMP:A', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-SPEC:C/fin', 'PF:a', '-SPEC:v', '-SPEC:iWH', '-SPEC:INF', 'LF:to', 'COMP:D', '-SPEC:ADV'}
a_D             {'-SPEC:MA/lla', 'D', 'PF:D', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-COMP:P', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR', 'LF:D', 'LANG:EN'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'PF:admire', 'V', '-SPEC:Neg', '-COMP:T/fin', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', '-COMP:Neg', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'LF:admire', 'CLASS:TR', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D', 'LANG:EN'}
admire*         ['LANG:EN']
T/fin*          {'CAT:T/fin', 'NO_DET', 'NO_NUMBER', '-VAL', "PF:T/fin'", 'LF:T', '!SPEC:*', 'LANG:EN'}
v*              {'NO_DET', 'NO_NUMBER', 'LANG:EN', 'LF:v', 'CAT:v', 'PF:v', '-VAL'}
admire**        ['LANG:EN']
T/fin**         {'CAT:T/fin', 'NO_DET', 'NO_NUMBER', 'PHI:PER:3', '-VAL', "PF:T/fin''", 'NO_PERSON', 'LF:T', '!SPEC:*', 'LANG:EN'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PF:adora', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', '-COMP:v', 'PHI:PER:_', 'ASP', 'LF:admire', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
antaa           ['LANG:FI']
anta-           {'V', 'SPEC:TO/inf', 'ARG', 'PF:antaa', 'LF:give', 'CLASS:DITR', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:D', 'ASP:BOUNDED', '+SEM:directional', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', '-COMP:FIN', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'V', 'LF:ask', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', 'PF:ask', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:D', 'SEM:internal', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'COMP:D', 'LANG:EN'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'N', 'COMP:C', 'PF:avain', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'LF:key', 'COMP:D/rel', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'PF:auto', '-COMP:v', '-SEM:directional', 'LF:car', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
bank            {'LF:bank_inst', 'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'PF:bank1', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', 'FREQ:1', '-SPEC:uWH', 'LANG:EN'}
bank            {'PF:bank2', 'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', 'LF:bank_river', '-COMP:N', 'FREQ:2', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN'}
barn            {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'LF:barn', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', 'PF:barn', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN'}
city            {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'PF:city', '-COMP:v', 'LF:city', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN'}
che             ['LANG:IT']
che-            {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', 'LF:who', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'PF:che', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
chiamato        ['LANG:IT']
chiamata-       {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'LF:called', 'LANG:IT', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PF:chiamato', 'PHI:DET:_'}
claims          ['LANG:EN']
claim-          {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'LF:claim', 'PHI:PER:_', 'ASP', 'SPEC:P', '-COMP:D', 'PF:claim', '-SPEC:FORCE', 'PHI:GEN:_', 'COMP:T/fin', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
danno           {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', 'COMP:D/rel', 'PF:danno', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', 'LF:damage', '-SPEC:ADV'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'V', 'SPEC:TO/inf', 'ARG', 'PF:detest', 'COMP:ARE/inf', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'SEM:internal', 'LANG:IT', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'LF:detest', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
devono          ['LANG:EN']
deva-           {'V', 'SPEC:TO/inf', 'ARG', 'COMP:ARE/inf', '-COMP:V', '-ASP', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'LF:must', 'SPEC:D', 'SEM:internal', 'PF:deva', 'LANG:IT', '-COMP:v', 'PHI:PER:_', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
di              {'PF:di', '-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:C', 'LANG:FI', '-VAL', '-SPEC:iR', 'SPEC:*', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', '-COMP:ADV', '-COMP:T', '!COMP:*', '-COMP:A', 'LF:of', 'PHI:PER:_', '-SPEC:V', '-SPEC:FORCE', '-SPEC:C/fin', '-adjoinable', '-SPEC:v', '-SPEC:iWH', '-SPEC:INF', 'COMP:D', '-SPEC:ADV'}
does            {'PHI:NUM:SG', '-COMP:T/fin', 'ARG', 'T', '-SPEC:T/fin', 'PHI:PER:3', '!SPEC:*', 'SPEC:D', 'T/fin', 'PHI:PER:_', 'COMP:T/prt', '-SPEC:TO/inf', 'PHI:GEN:_', '-SPEC:v', 'PF:does', '!PROBE:V', 'LF:does', '-SPEC:Neg', 'SPEC:TO/inf', '-SPEC:N', '-SPEC:C', 'FIN', 'COMP:Neg', '-COMP:INF', 'SPEC:*', 'PHI:NUM:_', 'COMP:V', 'VAL', 'COMP:v', 'PHI:GEN:M', 'SPEC:FORCE', 'SPEC:C/fin', '-SPEC:V', '!COMP:*', 'PHI:GEN:F', 'PHI:DET:_', 'LANG:EN'}
does_C          ['LANG:EN']
does-           {'PHI:NUM:SG', '-COMP:T/fin', 'ARG', 'T', '-SPEC:T/fin', 'PHI:PER:3', '!SPEC:*', 'SPEC:D', 'T/fin', 'PHI:PER:_', 'COMP:T/prt', '-SPEC:TO/inf', 'PHI:GEN:_', '-SPEC:v', 'PF:does', '!PROBE:V', 'LF:does', '-SPEC:Neg', 'SPEC:TO/inf', '-SPEC:N', '-SPEC:C', 'FIN', 'COMP:Neg', '-COMP:INF', 'SPEC:*', 'PHI:NUM:_', 'COMP:V', 'VAL', 'COMP:v', 'PHI:GEN:M', 'SPEC:FORCE', 'SPEC:C/fin', '-SPEC:V', '!COMP:*', 'PHI:GEN:F', 'PHI:DET:_', 'LANG:EN'}
dorme           ['LANG:IT']
dorme-          {'V', 'LF:sleep', 'SPEC:TO/inf', 'ARG', '-COMP:V', '!SPEC:D', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PHI:PER:_', 'ASP', 'PF:dorme', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:D', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
disappeared     ['LANG:EN']
disappear-      {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', 'PF:disappear', '-COMP:v', 'PHI:PER:_', 'ASP', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:D', 'LF:disappear', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'LF:easy', '0', 'PF:easy', 'SPEC:D', '2SPEC', 'LANG:EN'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'ARG', 'LANG:FI', '%SPEC:INF', 'FIN', 'SPEC:*', 'NEG', '-SPEC:T/fin', 'PHI:NUM:_', '!SPEC:*', 'SEM:internal', 'Neg/fin', 'VAL', 'PHI:PER:_', 'PF:ei', '!COMP:T', 'COMP:T/prt', 'LF:neg', '!COMP:*', '-SPEC:T', 'POL:NEG', 'PHI:DET:_'}
e-              {'ARG', 'LANG:FI', '%SPEC:INF', 'FIN', 'SPEC:*', 'NEG', '-SPEC:T/fin', 'PHI:NUM:_', '!SPEC:*', 'SEM:internal', 'Neg/fin', 'VAL', 'PHI:PER:_', 'PF:ei', '!COMP:T', 'COMP:T/prt', 'LF:neg', '!COMP:*', '-SPEC:T', 'POL:NEG', 'PHI:DET:_'}
elaa            ['LANG:FI']
ela-            {'V', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', 'LF:live', '-COMP:v', 'PHI:PER:_', 'ASP', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:D', 'SPEC:P', 'PF:elaa', 'PHI:DET:_'}
etsii           ['LANG:FI']
etsi-           {'V', 'SPEC:TO/inf', 'ARG', 'PF:etsi', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '!COMP:D', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', 'LF:search', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
etta            {'-ARG', '-SPEC:*', '!PROBE:FIN', 'COMP:C/fin', 'LANG:FI', '-VAL', 'PF:etta', 'FIN', 'LF:that', '-SPEC:D', '!COMP:*', 'COMP:T/fin', 'FORCE'}
fell            ['LANG:EN']
fell-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PHI:PER:_', 'ASP', 'CLASS:INTR', 'LF:fell', 'SPEC:P', '-SPEC:FORCE', '-COMP:D', 'PHI:GEN:_', 'PF:fell', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
flow'           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PHI:PER:_', 'ASP', 'PF:flow', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'LF:flow', 'PHI:DET:_', 'LANG:EN'}
from            {'PF:from', '-float', '-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:*', '-SPEC:C', '-VAL', '-SPEC:iR', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', '-COMP:ADV', '-COMP:T', '!COMP:*', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'LF:from', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:ADV', '-SPEC:v', '-SPEC:iWH', '-SPEC:INF', 'PHI:GEN:_', 'COMP:D', 'LANG:EN'}
gave            ['LANG:EN']
give-           {'V', 'SPEC:TO/inf', 'ARG', 'LF:give', 'CLASS:DITR', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:D', '+SEM:directional', '-COMP:v', 'PHI:PER:_', 'ASP', 'PF:give', '-SPEC:FORCE', '-COMP:FIN', 'PHI:GEN:_', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D', 'LANG:EN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'LANG:IT', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'LF:Giuseppe', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', 'PF:Giuseppe', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'V', 'SPEC:TO/inf', 'ARG', '-SPEC:*', 'PF:haluaa', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', 'LF:want', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'SEM:internal', 'ASP:BOUNDED', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'COMP:A/inf', 'CLASS:TR', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
hairitsee       ['LANG:FI']
hairitse-       {'V', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:D', '!COMP:D', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', 'LF:disturb', '-COMP:FIN', '!COMP:*', 'SPEC:P', 'PF:hairitsee', 'COMP:D'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LF:have', '-ASP', '-VAL', 'COMP:P', 'PF:ha', 'SPEC:*', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', 'SEM:internal', 'LANG:IT', '-COMP:v', 'PHI:PER:_', '-SPEC:FORCE', 'PHI:GEN:_', 'COMP:T', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
horse           {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'PF:horse', 'COMP:D/rel', 'LF:horse', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', 'PF:havia', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'SPEC:D', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', 'ASP', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:D', 'LF:disappear', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', 'LF:Helsinki', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', 'PF:Helsinki', '-SPEC:ADV'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'PF:ihaile-', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '!COMP:D', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'LF:admire', 'CLASS:TR', '-SPEC:FORCE', '-COMP:FIN', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
il              {'-SPEC:MA/lla', 'D', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', 'LF:the', '-SPEC:C', '-SPEC:P', 'PF:il', '-SPEC:T/fin', 'COMP:N', 'LANG:IT', '-COMP:P', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR'}
i               {'-SPEC:MA/lla', 'D', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', 'LF:the', '-SPEC:C', '-SPEC:P', 'PF:il', '-SPEC:T/fin', 'COMP:N', 'LANG:IT', '-COMP:P', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR'}
in              {'-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:C', '-VAL', '-SPEC:iR', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', '-COMP:ADV', '-COMP:T', 'LANG:IT', 'PF:in', '!COMP:*', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:v', 'LF:in', '-SPEC:INF', '-SPEC:iWH', 'COMP:D', '-SPEC:ADV'}
infermieri      {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'PF:infermieri', 'COMP:D/rel', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', 'LF:nurses', '-SPEC:uWH', '-SPEC:ADV'}
is              ['LANG:EN']
be-             {'V', '-COMP:TO/inf', 'SPEC:TO/inf', '-ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'SPEC:D', '-COMP:v', 'PF:be', 'ASP', 'SPEC:P', '-SPEC:FORCE', 'COPULA', '!COMP:*', 'LF:be', 'SPEC:ADV', 'LANG:EN'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', 'LF:sit', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PF:istuu', 'PHI:PER:_', 'ASP', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:D', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
John            ['LANG:EN']
John-           {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-adjoinable', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'LF:John', 'COMP:C', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'PF:John', '-SPEC:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:EN'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', 'PF:joka', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', 'LF:who', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', 'LF:Jukka', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', 'PF:Jukka', '-SPEC:uWH', '-SPEC:ADV'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'V', 'LF:run', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'SPEC:P', 'SPEC:ADV', 'PF:juokse-', 'PHI:DET:_'}
kaksi           {'NUM', 'PHI:NUM:SG', 'PHI:PER:_', 'ARG', 'PF:kaksi', '-VAL', 'LANG:FI', 'LF:two', 'SPEC:*', 'COMP:n', 'PHI:NUM:_', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', 'COMP:N'}
kaksi           {'TAIL:ARG,ASP:BOUNDED', 'NUM', 'COMP:N', 'PF:kaksi', 'LF:two', 'SPEC:*', 'COMP:n', 'TAIL:*POL:NEG', 'LANG:EN'}
kaksi_1         {'NUM', 'PHI:NUM:SG', 'PHI:PER:_', 'ARG', 'PF:kaksi', '-VAL', 'LANG:FI', 'LF:two', 'SPEC:*', 'COMP:n', 'PHI:NUM:_', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', 'COMP:N'}
kaksi_2         {'TAIL:ARG,ASP:BOUNDED', 'NUM', 'COMP:N', 'PF:kaksi', 'LF:two', 'SPEC:*', 'COMP:n', 'TAIL:*POL:NEG', 'LANG:EN'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LF:two', 'NUM', 'SPEC:*', 'COMP:n', 'COMP:N', 'PF:kaksi', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'N', 'COMP:C', '-COMP:WH', 'PF:kaupunki', 'COMP:uR', '-SPEC:N', '-COMP:VA/inf', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:P', 'LF:city', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', 'LF:order', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '!COMP:A/inf', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'SPEC:P', 'SPEC:ADV', 'PF:kaske', 'SEM:external'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'LF:watch', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', 'PF:kello', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
kello0-         {'0', 'PF:kello', 'SPEC:D', '2SPEC', 'LF:watch', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'LF:key', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'PF:key', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'PF:kirja', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'LF:book', 'COMP:D/rel', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
knows           ['LANG:EN']
know-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PF:know', 'PHI:DET:_', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'LF:know', 'CLASS:TR', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D', 'LANG:EN'}
kohti           {'-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:C', 'LANG:FI', '-VAL', '-SPEC:iR', 'SPEC:*', 'PF:kohti', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', 'TAIL:V', '-COMP:ADV', '-COMP:T', '!COMP:*', 'LF:towards', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:INF', 'COMP:D', '-SPEC:ADV'}
koko            {'-SPEC:MA/lla', 'D', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:P', 'TAIL:T', 'LANG:FI', '-SPEC:T/fin', 'LF:all', 'COMP:N', '-COMP:P', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'PF:koko', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR'}
kuka            ['LANG:FI']
kuka-           {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', 'PHI', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'PF:kuka', 'COMP:R/D', 'LF:who', '-SPEC:ADV'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'V', 'PF:kuorsaa', '-COMP:WH', '-COMP:T/fin', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'LF:snore', '-COMP:v', 'PHI:PER:_', 'ASP', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
lahella         {'-COMP:T/fin', 'P', 'LF:near', 'ARG', '-SPEC:Neg/fin', '-SPEC:P', 'LANG:FI', '-SPEC:T/fin', '!SPEC:*', '-COMP:uWH', 'INF', '-COMP:T', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:FORCE', '-SPEC:v', '-SPEC:INF', 'COMP:D', '-SPEC:ADV', 'PF:lahella', '-SPEC:N', '-SPEC:C', '!SPEC:D', '-SPEC:iR', 'SPEC:*', '-COMP:N', 'PHI:NUM:_', 'COMP:V', '-COMP:ADV', 'VAL', 'COMP:v', '-SPEC:V', '!COMP:*', '-SPEC:iWH', '-COMP:C/fin', 'PHI:DET:_'}
lahella         {'PF:lahella', '-COMP:T/fin', 'P', 'LF:near', 'ARG', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:N', '-SPEC:C', 'LANG:FI', '-VAL', '-SPEC:v', '-SPEC:iR', 'SPEC:*', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', '!COMP:D', '-COMP:ADV', '-COMP:T', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-SPEC:C/fin', '!COMP:*', '-SPEC:iWH', '-SPEC:INF', 'COMP:D', '-SPEC:ADV'}
lahella_1       {'PF:lahella', '-COMP:T/fin', 'P', 'LF:near', 'ARG', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:N', '-SPEC:C', 'LANG:FI', '-VAL', '-SPEC:v', '-SPEC:iR', 'SPEC:*', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', '!COMP:D', '-COMP:ADV', '-COMP:T', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-SPEC:C/fin', '!COMP:*', '-SPEC:iWH', '-SPEC:INF', 'COMP:D', '-SPEC:ADV'}
lahella_2       {'-COMP:T/fin', 'P', 'LF:near', 'ARG', '-SPEC:Neg/fin', '-SPEC:P', 'LANG:FI', '-SPEC:T/fin', '!SPEC:*', '-COMP:uWH', 'INF', '-COMP:T', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:FORCE', '-SPEC:v', '-SPEC:INF', 'COMP:D', '-SPEC:ADV', 'PF:lahella', '-SPEC:N', '-SPEC:C', '!SPEC:D', '-SPEC:iR', 'SPEC:*', '-COMP:N', 'PHI:NUM:_', 'COMP:V', '-COMP:ADV', 'VAL', 'COMP:v', '-SPEC:V', '!COMP:*', '-SPEC:iWH', '-COMP:C/fin', 'PHI:DET:_'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'LF:leave', 'PHI:PER:_', 'COMP:PP', 'ASP', 'PF:lahtea', 'CLASS:INTR', '-COMP:D', '-SPEC:FORCE', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
lavano          ['LANG:IT']
lava-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LF:wash', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', '-COMP:v', 'PHI:PER:_', 'ASP', 'PF:lava', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:MA/lla', 'D', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', '-SPEC:C', 'PF:le', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', 'LANG:IT', '-COMP:P', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR', 'LF:D'}
leaves          ['LANG:EN']
leave           {'V', '-COMP:T/fin', 'SPEC:TO/inf', 'ARG', '-COMP:V', '!SPEC:D', '-VAL', 'PF:leave', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:v', 'LF:leave', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
leave-          {'V', '-COMP:T/fin', 'SPEC:TO/inf', 'ARG', '-COMP:V', '!SPEC:D', '-VAL', 'PF:leave', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:v', 'LF:leave', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
like-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'PF:like', '-VAL', 'LF:like', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '!COMP:D', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
likes           ['LANG:EN']
like            {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'PF:like', '-VAL', 'LF:like', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '!COMP:D', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
little          ['LANG:EN']
little-         {'0', 'SPEC:D', '2SPEC', 'PF:little-', 'LF:little', 'LANG:EN'}
lle             {'PF:P(lle)', '-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:*', '-SPEC:C', 'LANG:FI', '-VAL', '-SPEC:iR', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', '-COMP:ADV', '-COMP:T', 'LF:for', '+SEM:directional', '!COMP:*', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:v', '-SPEC:iWH', '-SPEC:INF', 'COMP:D', '-SPEC:ADV'}
lla             {'LF:by', '-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:C', 'TAIL:T', 'LANG:FI', '-VAL', '-SPEC:iR', 'SPEC:*', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', '-COMP:ADV', '-COMP:T', 'COMP:D', '!COMP:*', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:v', '-SPEC:iWH', '-SPEC:INF', 'TAIL:*V', 'PF:P(lla)'}
Luisa           ['LANG:IT']
Luisa-          {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'LANG:IT', '-COMP:v', '-SEM:directional', '-COMP:A', 'LF:Luisa', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'PF:Luisa', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'LF:read', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'PF:luke', 'CLASS:TR', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'V', 'PF:loyta-', 'SPEC:TO/inf', 'ARG', 'LF:find', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', '!COMP:D', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
Mary            ['LANG:EN']
Mary-           {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-adjoinable', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PF:Mary', 'COMP:R', 'LF:Mary', '-SPEC:uWH', 'LANG:EN'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-adjoinable', '-SPEC:INF', 'LF:Merja', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PF:Merja', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'ADV', 'COMP:v', 'LF:by', 'MA/inf', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'TAIL:T', 'LANG:FI', '-SPEC:FORCE', 'SPEC:*', 'PF:malla', '-SPEC:T/fin'}
meren           ['LANG:FI']
mere-           {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', 'PF:meri', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'LF:ocean', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
mies            {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', 'PF:mies', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', 'LF:man', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
mistake         {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', 'PF:mistake', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', 'LF:mistake', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', 'LF:what', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'PF:mika-', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'PF:move', 'LF:move', 'COMP:P', 'LANGN:EN', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '+SEM:directional', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', '0', 'SPEC:D', '2SPEC', 'PF:mukavasti', 'LANG:FI'}
must            {'-SPEC:Neg', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', '-SPEC:N', '-SPEC:C', 'FIN', 'COMP:Neg', 'T', '-COMP:INF', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:*', 'LF:must', '!SPEC:*', 'SPEC:D', 'T/fin', 'COMP:V', 'VAL', 'COMP:v', '!COMP:*', 'PHI:PER:_', 'SPEC:FORCE', 'MODAL', 'PF:must', 'SPEC:C/fin', '-SPEC:V', 'COMP:T/prt', '-SPEC:TO/inf', 'PHI:GEN:_', '-SPEC:v', '!PROBE:V', 'PHI:DET:_', 'LANG:EN'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'V', '-COMP:T/fin', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', '-COMP:v', '-COMP:P', 'LF:sell', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D', 'PF:myy'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', 'PF:nake', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', '-COMP:MA/ssa', '-COMP:ESSA/inf', '-COMP:v', '-COMP:P', 'PHI:PER:_', '-COMP:MA/tta', 'ASP', 'CLASS:TR', 'LF:see', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
nayttaa         ['LANG:FI']
naytta-         {'V', 'SPEC:TO/inf', 'LF:seem', '-ARG', '-COMP:V', '!SPEC:D', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'SEM:internal', 'VAL', 'PF:naytta', '-COMP:v', 'ASP', '-SPEC:FORCE', 'SPEC:P', 'SPEC:ADV', '!COMP:VA/inf'}
ndo             {'VAL', 'COMP:v', 'PF:PRG', 'LF:ing', '-COMP:T/fin', '-SPEC:V', '-COMP:C/fin', 'PRG', '-COMP:FORCE', '-SPEC:T/fin', '!COMP:*', 'INF', 'COMP:V', '?ARG', 'LANG:EN'}
ne              {'-SPEC:MA/lla', 'D', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:P', 'LANG:FI', '-SPEC:T/fin', 'PHI:PER:3', 'COMP:N', '-COMP:uR', '!COMP:*', '-COMP:P', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'LF:those', 'OP', 'PF:ne', '-SPEC:INF', 'PHI:NUM:PL'}
niiden          ['LANG:EN']
nen             {'A', 'LF:ing', 'TAIL:D', 'LANG:FI', 'COMP:0', 'PF:a', 'SPEC:*', '-SPEC:D', '-SPEC:A'}
not             {'-COMP:C', 'Neg', 'PF:not', 'PHI:PER:_', 'ARG', 'LF:not', '-VAL', '-COMP:FIN', '-COMP:D', 'SPEC:*', 'PHI:GEN:_', '-SPEC:T/fin', '!COMP:*', 'PHI:NUM:_', 'POL:NEG', 'PHI:DET:_', 'LANG:EN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'V', 'LF:sleep', '-COMP:T/fin', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:T', '-COMP:v', 'PHI:PER:_', 'ASP', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:D', '-COMP:Neg/fin', 'PF:nukku', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', 'LF:possessions', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', 'PF:omaisuuden', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
operatoria      ['LANG:IT']
operatoria-     {'LANG:IT', 'PF:operatoria', 'LF:operation', '0', 'SPEC:D', '2SPEC'}
ostaa           ['LANG:FI']
osta-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'LF:buy', 'PHI:DET:_', 'ASP:BOUNDED', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', 'PF:osta', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', 'LF:day', '-SPEC:R', '-SPEC:V', 'SEM:nonreferential', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', 'PF:paiva', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
past            {'-float', '-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', 'PF:past', '-SPEC:P', '-SPEC:*', '-SPEC:C', '-VAL', '-SPEC:iR', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'LF:past', '-COMP:uWH', 'PHI:DET:_', '-COMP:ADV', '-COMP:T', '!COMP:*', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'PHI:GEN:_', '-SPEC:v', '-SPEC:iWH', '-SPEC:INF', 'COMP:D', 'LANG:EN'}
Pariisia        ['LANG:FI']
Pariisi-        {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', 'LF:Paris', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', 'PF:Pariisi', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', 'PF:Pekka', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'LF:Pekka', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:D', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', 'LF:fear', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'PF:pelkaa'}
persuades       ['LANG:EN']
persuade-       {'V', 'SPEC:TO/inf', 'ARG', 'COMP:TO/inf', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'LF:persuade', 'PHI:NUM:_', 'PF:persuade', 'PHI:DET:_', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'SEM:external', 'LANG:EN'}
peruuntui       ['LANG:FI']
peruuntu-       {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', 'PF:peruuntui', '-COMP:v', 'LF:cancelled', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LF:wash', 'LANG:FI', '-VAL', 'PF:pese_asp', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
pese-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LF:wash', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PF:pese', 'PHI:DET:_', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
petardi         {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', 'PF:petardi', '-COMP:N', 'COMP:R', 'COMP:D/rel', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:firecrackers', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
pieni           ['LANG:FI']
pieni-          {'0', 'SPEC:D', '2SPEC', 'PF:pieni-', 'LF:small', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'N', 'COMP:C', '-COMP:WH', 'LF:boy', 'COMP:uR', '-SPEC:N', '-COMP:VA/inf', '-SPEC:P', '-COMP:V', 'LANG:FI', 'PF:poika', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', 'LF:phone', '0', 'SPEC:D', '2SPEC', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'LF:red', '0', '2SPEC', 'SPEC:D', 'PF:puna-', 'LANG:FI'}
presupposto     {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'LANG:IT', '-COMP:v', 'LF:presupposition', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'PF:presupposto', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
primary         {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', 'PF:primary', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'LF:nurse', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
promises        ['LANG:EN']
promise-        {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:D', 'SEM:internal', 'PF:promise', '-COMP:v', 'PHI:PER:_', 'ASP', 'SPEC:P', '-SPEC:FORCE', 'PHI:GEN:_', 'LF:promise', 'SPEC:ADV', 'COMP:D', 'LANG:EN'}
problem         {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LF:problem', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', 'PF:problem', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN'}
pyytaa          ['LANG:FI']
pyyta-          {'V', 'PF:pyyda', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:D', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'SEM:external', 'LF:ask'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'V', '-COMP:T/fin', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', 'LF:race', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PHI:PER:_', 'ASP', 'CLASS:INTR', 'SPEC:P', '-SPEC:FORCE', '-COMP:D', 'PF:race', 'PHI:GEN:_', 'LAMG:EN', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
raukesi         ['LANG:FI']
raukea-         {'V', 'SPEC:TO/inf', 'ARG', 'LF:terminate', '-COMP:V', 'LANG:FI', 'PF:raukea', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
red             ['LANG:EN']
red-            {'PF:red', 'LF:red', '0', 'SPEC:D', '2SPEC', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '!COMP:D', 'ASP:BOUNDED', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'PF:saavutta-', 'ASP', 'CLASS:TR', 'LF:reach', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'V', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', 'LF:say', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:D', 'COMP:D', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', 'PF:sano-', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'COMP:VA/inf', 'COMP:FORCE'}
said            ['LANG:EN']
say'            {'V', 'SPEC:TO/inf', 'ARG', '!COMP:FORCE', '-COMP:V', '-VAL', 'COMP:P', 'LF:say', '-SPEC:T/fin', '-COMP:N', 'PF:say', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
say-            {'V', 'SPEC:TO/inf', 'ARG', '!COMP:FORCE', '-COMP:V', '-VAL', 'COMP:P', 'LF:say', '-SPEC:T/fin', '-COMP:N', 'PF:say', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
sala            ['LANG:IT']
sala-           {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'LANG:IT', '-COMP:v', 'LF:room', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', 'PF:sala', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
scoppiati       ['LANG:IT']
scoppia-        {'V', 'LF:explode', 'PF:scoppia', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'LANG:IT', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
sentenza        {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', 'PF:sentenza', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'LANG:IT', '-COMP:v', '-COMP:A', 'LF:sentence', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
Seine           ['LANG:EN']
Seine-          {'N', 'LF:Seine', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'PF:Seine', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN'}
sembrano        ['LANG:IT']
sembra-         {'V', 'SPEC:TO/inf', 'LF:seem', '-ARG', '-COMP:V', '-ASP', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', '!COMP:ARE/inf', 'SPEC:D', '-COMP:v', '-COMP:D', '-SPEC:FORCE', 'PF:sembra', 'SPEC:P', 'SPEC:ADV', 'LANG:EN'}
sleeps          ['LANG:EN']
sleep           {'V', 'LF:sleep', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'PF:sleep', 'COMP:P', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PHI:PER:_', 'ASP', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:D', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
sleep-          {'V', 'LF:sleep', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'PF:sleep', 'COMP:P', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PHI:PER:_', 'ASP', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:D', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
solution        {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'PF:solution', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:solution', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', '!COMP:A/inf', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', 'PF:sopimus', '-SPEC:INF', 'LF:agreement', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
spinge          ['LANG:IT']
spinge-         {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '!COMP:D', 'LANG:IT', 'LF:push', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'PF:spinge', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
ssa             {'-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:C', 'LANG:FI', '-VAL', '-SPEC:iR', 'SPEC:*', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', 'TAIL:V', '-COMP:ADV', '-COMP:T', 'PF:ssa', '!COMP:*', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'COMP:n/MA', '-SPEC:C/fin', '-SPEC:v', 'LF:in', '-SPEC:INF', '-SPEC:iWH', 'COMP:D', '-SPEC:ADV'}
stanno          ['LANG:IT']
sta-            {'V', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', '-COMP:V', '-ASP', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', 'SEM:internal', '-COMP:v', 'COMP:PRG', 'PHI:PER:_', '-SPEC:FORCE', 'PHI:GEN:_', 'PF:sta', 'SPEC:P', 'LF:stay', 'PHI:DET:_', 'LANG:EN'}
sti             {'ADV', 'LF:by', '-ARG', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'TAIL:T', 'LANG:FI', '-SPEC:FORCE', 'SPEC:*', 'PF:sti', '-SPEC:T/fin', '!COMP:*'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'PF:sukka-', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'LF:socks', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
surprised       ['LANG:EN']
surprise-       {'V', '-COMP:T/fin', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'PF:surprise', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'LF:surprise', 'CLASS:TR', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D', 'LANG:EN'}
talo            {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:house', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'PF:talo'}
tama            ['LANG:EN']
tama-           {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', 'PHI', '-SPEC:N', 'PF:tama', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', '-SPEC:INF', 'LF:this', '-SPEC:uWH', '-SPEC:ADV'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-ASP', 'LANG:FI', '-VAL', 'FIN', 'SPEC:*', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'LF:must', '!COMP:A/inf', '-COMP:v', 'PHI:PER:_', 'MODAL', 'PF:taytyy', '-SPEC:FORCE', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_'}
teki            ['LANG:FI']
teke-           {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '!COMP:D', 'ASP:BOUNDED', '-COMP:v', '-COMP:P', 'PF:teke', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'LF:make', '-COMP:A/inf', 'COMP:D'}
that            {'-ARG', '-SPEC:*', '!PROBE:FIN', 'PF:that', '-VAL', 'COMP:C/fin', 'FIN', 'LF:that', '!COMP:*', 'COMP:T/fin', 'FORCE', 'LANG:EN'}
the             {'-SPEC:MA/lla', 'D', 'PHI:DEF:DEF', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', 'LF:the', '-SPEC:C', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', 'PF:the', '-COMP:P', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR', 'LANG:EN'}
to              {'-float', '-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:*', '-VAL', '-SPEC:T/fin', '-COMP:uWH', 'TAIL:V', '-COMP:T', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:FORCE', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:v', '-SPEC:INF', 'COMP:D', '-SPEC:ADV', '-SPEC:N', '-SPEC:C', '-SPEC:iR', '-COMP:N', 'PHI:NUM:_', '-COMP:ADV', 'PF:to', '+SEM:directional', '-SPEC:V', '!COMP:*', '-SPEC:iWH', 'LF:to', 'PHI:DET:_', 'LANG:EN'}
to_inf          {'TO/inf', '-COMP:T/fin', '-VAL', '-SPEC:v', 'LF:TO/inf', '-SPEC:T/fin', 'COMP:V', 'INF', 'COMP:v', '!COMP:*', 'adjoinable', '-SPEC:V', '-COMP:FORCE', '?ARG', 'PF:TO/inf', '-COMP:C/fin', 'LANG:EN'}
towards         {'-float', '-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:*', '-SPEC:C', '-VAL', '-SPEC:iR', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', 'TAIL:V', '-COMP:ADV', '-COMP:T', '!COMP:*', 'LF:towards', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-SPEC:C/fin', 'PF:towards', '-SPEC:ADV', 'PHI:GEN:_', '-SPEC:v', '-SPEC:iWH', '-SPEC:INF', 'COMP:D', 'LANG:EN'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '-SPEC:T/fin', 'PF:tonaise', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'LF:nudge', 'CLASS:TR', '-SPEC:FORCE', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D'}
tta             {'LF:without', '-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:C', 'LANG:FI', '-VAL', '-SPEC:iR', 'PF:tta', 'SPEC:*', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', '-COMP:ADV', '-COMP:T', 'ADV', '!COMP:*', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'COMP:n/MA', '-SPEC:C/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:INF', 'COMP:D', '-SPEC:ADV'}
tries           ['LANG:EN']
try-            {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', 'SEM:internal', '!COMP:TO/inf', 'PF:try', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'LF:try', '!COMP:-ARG', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
verifiche       {'N', 'PF:verifiche', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:R', 'LF:verification', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', '-SPEC:ADV'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', 'LANG:FI', '-VAL', 'COMP:P', '!COMP:P', '-SPEC:T/fin', '-COMP:MA/inf', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PHI:PER:_', 'ASP', 'CLASS:INTR', '-COMP:D', '-SPEC:FORCE', 'PF:virtaa', 'SPEC:P', 'SPEC:ADV', 'LF:flow', 'PHI:DET:_'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'V', 'SPEC:TO/inf', 'ARG', '-SPEC:*', '-COMP:V', '-VAL', 'PF:volu', 'COMP:P', 'LF:want', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'SEM:internal', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', 'LF:win', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'SEM:achievement', 'ASP', 'CLASS:TR', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'PF:voitta', 'COMP:D', 'LANG:EN'}
wants           ['LANG:EN']
want-           {'V', 'ARG', '-COMP:V', 'COMP:TO/inf', '-VAL', 'COMP:P', 'LF:want', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', '-COMP:P', 'PHI:PER:_', 'ASP', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:TO/inf', 'PF:want', 'PHI:GEN:_', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'COMP:D', 'LANG:EN'}
what            ['LANG:EN']
what-           {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', 'LF:what', '-COMP:N', 'COMP:D/rel', 'PF:what', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:EN'}
which           {'-SPEC:MA/lla', 'D', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:P', '-SPEC:T/fin', 'LF:which', 'COMP:N', '-COMP:P', '!PROBE:N', 'adjoinable', '-SPEC:V', 'OP:WH', '-COMP:D', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR', 'PF:which', 'LANG:EN'}
who             ['LANG:EN']
who-            {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'PF:who', '-SPEC:INF', 'COMP:R/D', 'LF:who', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:EN'}
whether         {'Q', 'LF:whether', '-ARG', '-SPEC:*', '!PROBE:FIN', '-VAL', 'FIN', 'FORCE', 'PF:whether', 'OP:WH', 'OP', '!COMP:*', 'COMP:T/fin', 'OP:Q', 'COMP:C/fin', 'LANG:EN'}
yrittaa         ['LANG:FI']
yritta-         {'PF:yritta', 'V', 'SPEC:TO/inf', 'ARG', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', 'SEM:internal', '!COMP:A/inf', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'LF:try', '!COMP:-ARG', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
mina            ['LANG:EN']
mina-           {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'PF:mina', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'LF:I', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
sina            ['LANG:EN']
sina-           {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'LANG:FI', 'PF:sina', 'COMP:P', '-SPEC:T/fin', '-COMP:v', '-COMP:A', 'LF:you', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
han             ['LANG:EN']
han-            {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', 'LF:s/he', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', 'PF:han', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', 'LF:we', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'PF:me', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
te              ['LANG:EN']
te-             {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', '-COMP:v', '-COMP:A', 'LF:you', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', 'PF:te', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'LANG:FI', 'COMP:P', '-SPEC:T/fin', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', 'PF:he', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'LF:they', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
se              {'-SPEC:MA/lla', 'D', '-COMP:T/fin', 'LF:the/that', '-ARG', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:P', 'PF:se', 'LANG:FI', '-SPEC:T/fin', 'COMP:N', '-COMP:P', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR'}
sen             {'-SPEC:MA/lla', 'D', '-COMP:T/fin', 'LF:the/that', '-ARG', '-SPEC:Neg/fin', 'TAIL:ASP', '-SPEC:C', '-SPEC:P', 'LANG:FI', '-SPEC:T/fin', 'TAIL:*POL:NEG', 'COMP:N', '-COMP:P', 'PF:sen', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'TAIL:PHI', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR'}
I               ['LANG:EN']
I-              {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:v', 'PF:I', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'LF:I', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:EN'}
you             ['LANG:EN']
you-            {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:v', '-COMP:A', 'LF:you', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'PF:you', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:EN'}
he              ['LANG:EN']
he-             {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', 'LF:he', 'PF:he', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:EN'}
she             ['LANG:EN']
she-            {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'LF:she', 'PHI_N', '-SPEC:V', 'COMP:R', 'PF:she', '-COMP:C/fin', '-SPEC:uWH', 'LANG:EN'}
we              ['LANG:EN']
we-             {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', 'LF:we', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'PF:we', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:EN'}
you_pl          ['LANG:EN']
you_pl-         {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', 'PHI', '-SPEC:N', '-SPEC:P', '-COMP:V', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', 'COMP:D/rel', 'PF:you_pl', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', 'LF:you_pl', 'LANG:EN'}
they            ['LANG:EN']
they-           {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', 'PF:they', '-COMP:N', 'COMP:D/rel', 'LF:they', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:EN'}
it              ['LANG:EN']
it-             {'-SPEC:MA/lla', 'D', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-COMP:P', '!PROBE:N', 'adjoinable', 'LF:it/that', '-SPEC:V', '-COMP:D', 'PF:it', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR', 'LANG:EN'}
io              ['LANG:EN']
io-             {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'LF:I', '-SPEC:V', 'PHI_N', 'PF:io', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
tu              ['LANG:EN']
tu-             {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', 'LF:you', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'PF:tu', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
lui             ['LANG:EN']
lui-            {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', 'PF:lui', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', 'LF:he', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
lei             ['LANG:EN']
lei-            {'N', '-COMP:WH', 'COMP:uR', 'PF:lei', '-SPEC:P', 'COMP:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'LF:she', 'PHI_N', '-SPEC:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
noi             ['LANG:EN']
noi-            {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', '-SPEC:T/fin', 'LF:we', 'LANG:IT', 'PF:noi', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
voi             ['LANG:EN']
voi-            {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'PF:voi', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', '-SPEC:uWH', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', 'LF:you_pl', 'SPEC:A'}
loro            ['LANG:EN']
loro-           {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'LF:they', 'PF:loro', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
mi              ['LANG:EN']
mi-             {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'CL', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'LF:me', 'PF:mi(cl)', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
la              ['LANG:EN']
la-             {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'CL', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'LF:her', '-SPEC:V', 'PHI_N', 'PF:la(cl)', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
lo              ['LANG:EN']
lo-             {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', 'CL', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'PF:lo(cl)', 'PHI_N', '-SPEC:V', 'LF:him', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
si              ['LANG:EN']
si-             {'N', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'COMP:P', '-SPEC:T/fin', 'CAL:CL', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'PF:si(cl)', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', 'LF:3sg', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'N', 'LF:there', '-COMP:WH', 'COMP:uR', '-SPEC:P', 'PF:ci', 'COMP:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', '-COMP:*', '-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:N', 'COMP:D/rel', '-SPEC:V', 'PHI_N', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A'}
[-n]            {'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-t]            {'PHI:PER:2', 'LANG:FI', 'PHI:NUM:SG', 'PHI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-V]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional', 'LANG:FI'}
[-mme]          {'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-mme]          {'LANG:FI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI:DET:DEF'}
[-tte]          {'PHI:PER:2', 'LANG:FI', 'PHI:NUM:PL', 'PHI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-vat]          {'PHI:PER:3', 'PHI', 'PHI:NUM:PL', 'inflectional', 'LANG:FI'}
[-ni]           {'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-si]           {'PHI:PER:2', 'LANG:FI', 'PHI:NUM:SG', 'PHI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-nsa]          {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional', 'LANG:FI'}
[-an]           {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'PHI:DET:DET', 'inflectional', 'LANG:FI'}
[-nne]          {'PHI:PER:2', 'LANG:FI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-s]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI:GEN:M', 'PHI', 'PHI:GEN:F', 'inflectional', 'LANG:EN'}
[-0]            {'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:GEN:N', 'PHI:PER:3', 'PHI:NUM:PL', 'inflectional', 'LANG:EN'}
[-o]            {'LANG:IT', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-i]            {'LANG:IT', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-a]            {'LANG:IT', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:DET:DEF'}
[-e]            {'LANG:IT', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:DET:DEF'}
[-iamo]         {'LANG:IT', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-te]           {'LANG:IT', 'PHI:PER:2', 'PHI:NUM:PL', 'PHI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF'}
[-no]           {'LANG:IT', 'PHI:PER:3', 'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:DET:DEF'}
[-nom]          {'NOM', 'TAIL:FIN,ARG,VAL', 'adjoinable', 'inflectional', 'LANG:EN'}
[-par]          {'PAR', 'TAIL:ARG,-VAL', 'adjoinable', 'inflectional', 'LANG:FI'}
[-gen]          {'-float', 'TAIL:INF,ARG', 'GEN', 'inflectional', 'LANG:EN'}
gen             {'-float', 'TAIL:INF,ARG', 'GEN', 'inflectional', 'LANG:EN'}
[-n_acc]        {'TAIL:PHI', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'n-ACC', 'adjoinable', 'inflectional', 'LANG:FI'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'TAIL:*POL:NEG', 'adjoinable', 'inflectional', 'LANG:FI'}
[-0_acc]        {'TAIL:*PHI', 'TAIL:ARG,ASP:BOUNDED', '0_ACC', 'TAIL:*POL:NEG', 'adjoinable', 'inflectional', 'LANG:FI'}
asp             {'inflectional', 'ASP:BOUNDED', 'LANG:EN'}
a'              {'LF:A', 'PF:a', 'LANG:X', 'a'}
b'              {'LANG:X', 'PF:b', 'b', 'LF:B'}
b''             {'PF:b', '-COMP:c', 'b', 'LF:B', 'LANG:EN'}
c''             {'LF:C', 'PF:c', 'LANG:EN', 'SPEC:a', 'c'}
c'              {'LF:C', 'LANG:X', 'PF:c', 'c'}
d'              {'LANG:', 'PF:d', 'd', 'LF:D'}
a''             ['LANG:EN']
x'              {'PF:x', 'LANG:X', 'x', 'LF:X'}
y'              {'LF:Y', 'y', 'LANG:X', 'PF:y'}
z'              {'LF:Z', 'PF:x', 'z', 'LANG:X'}
John'           {'PF:John', 'LF:John', 'LANG:X', "N'"}
admires'        {"V'", 'PF:admires', 'LANG:X', 'LF:admires'}
admires''       {'V', 'LF:admires', 'SPEC:TO/inf', 'ARG', 'PF:admires', '-COMP:V', '-VAL', 'COMP:P', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'SPEC:D', '-COMP:v', 'PHI:PER:_', 'ASP', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LANG:EN'}
Mary'           {'LF:mary', 'LANG:X', "N'", 'PF:Mary'}
T/fin           {'PF:T', '-SPEC:Neg', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', '-SPEC:N', '-SPEC:C', '-SPEC:v', 'FIN', '-COMP:INF', 'T', 'SPEC:*', '-SPEC:T/fin', 'PHI:NUM:_', '!SPEC:*', 'SPEC:D', 'COMP:V', 'T/fin', 'VAL', 'COMP:v', '!COMP:*', 'PHI:PER:_', 'SPEC:FORCE', 'SPEC:C/fin', '-SPEC:V', 'COMP:T/prt', '-SPEC:TO/inf', 'PHI:GEN:_', 'LF:T', '!PROBE:V', 'PHI:DET:_', 'LANG:EN'}
v               {'PHI:PER:_', 'ARG', '-SPEC:N', 'ASP', 'COMP:V', 'SPEC:D', 'PF:v', '-VAL', 'v', 'PHI:GEN:_', 'PHI:NUM:_', '!COMP:*', 'LF:v', '!PROBE:V', 'PHI:DET:_', 'LANG:EN'}
C/fin           {'-ARG', '-SPEC:N', '!PROBE:FIN', 'C', 'FIN', 'SPEC:*', '-SPEC:T/fin', 'VAL', '!COMP:*', 'C/fin', '-COMP:T/prt', 'COMP:Neg/fin', '-SPEC:C/fin', 'PF:C', 'COMP:T/fin', '-COMP:C/fin', 'LF:C/fin', 'LANG:EN'}
T               {'PF:T', 'ARG', '-SPEC:N', '-COMP:NEG', 'FIN', 'SPEC:*', 'T', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:V', 'SPEC:D', 'VAL', 'COMP:v', '!COMP:*', 'PHI:PER:_', '-SPEC:V', 'COMP:T/prt', '-SPEC:FORCE', 'PHI:GEN:_', 'LF:T', '!PROBE:V', 'PHI:DET:_', 'LANG:EN'}
T/prt           {'ARG', '-SPEC:N', '-COMP:NEG', 'FIN', 'T/prt', 'SPEC:*', 'T', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'LF:T/prt', 'PF:T/prt', 'COMP:V', 'SPEC:D', 'VAL', 'COMP:v', 'PHI:PER:_', '-SPEC:V', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'PHI:GEN:_', '!COMP:*', '!PROBE:V', 'COMP:D', 'LANG:EN'}
a0              {'-SPEC:A', 'A', 'TAIL:D', 'COMP:0', '-SPEC:D', '-adjoinable', 'LF:A', 'PF:A', 'LANG:EN'}
n               {'N', '-COMP:WH', 'ARG', 'COMP:uR', 'PF:n', '-SPEC:P', 'COMP:0', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', 'PHI:DET:_', '!SPEC:*', 'INF', '-COMP:v', '-COMP:A', 'PHI:PER:_', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'COMP:C', 'n', '-SPEC:N', '-COMP:VA/inf', '-COMP:V', '!SPEC:D', 'LF:n', 'SPEC:*', '-COMP:N', 'PHI:NUM:_', 'COMP:V', 'COMP:D/rel', 'VAL', 'COMP:v', '!COMP:*', '-SPEC:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:EN'}
impass          {'LF:impass', 'PHI:PER:_', 'ARG', '-SPEC:N', 'ASP', 'SPEC:D', 'PF:impass', '-VAL', 'v', 'PHI:GEN:_', 'PHI:NUM:_', '!COMP:*', 'COMP:V', '!PROBE:V', 'PHI:DET:_', 'LANG:EN'}
cau             {'PHI:PER:_', 'ARG', '-SPEC:N', 'ASP', 'SPEC:D', '-VAL', 'LF:v/Cause', 'PF:Cau', 'v', 'PHI:GEN:_', 'PHI:NUM:_', '!COMP:*', 'COMP:V', '!PROBE:V', 'PHI:DET:_', 'LANG:EN'}
INF             {'COMP:v', 'LF:INF', '-COMP:T/fin', 'PF:INF', '-SPEC:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '!COMP:*', 'COMP:V', 'INF', 'LANG:EN'}
prtcpl          {'-COMP:T/fin', 'ARG', '-SPEC:N', '-COMP:NEG', 'FIN', 'T/prt', 'T', 'SPEC:*', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'LF:T/prt', 'PF:T/prt', 'SPEC:D', 'INF', 'COMP:V', 'VAL', 'COMP:v', 'PHI:PER:_', '-SPEC:V', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:FORCE', 'PHI:GEN:_', '!COMP:*', '!PROBE:V', '-COMP:C/fin', 'COMP:D', 'LANG:EN'}
TO/inf          {'PF:TO/inf', 'TO/inf', '-COMP:T/fin', '-VAL', '!COMP:V', '-COMP:C/fin', 'LF:TO/inf', '-SPEC:T/fin', 'COMP:V', 'INF', 'COMP:v', '!COMP:*', 'adjoinable', '-SPEC:V', '-COMP:FORCE', '-SPEC:v', '?ARG', 'LANG:EN'}
A/inf           {'LF:A/inf', '-COMP:T/fin', '-SPEC:Neg/fin', '?VAL', 'SPEC:*', '-SPEC:T/fin', 'A/inf', 'COMP:V', 'INF', 'COMP:v', '-SPEC:V', '-COMP:FORCE', 'PF:A/inf', '?ARG', '!COMP:*', '-COMP:C/fin', 'LANG:EN'}
ARE/inf         {'-COMP:T/fin', 'PF:are', 'SPEC:*', '-SPEC:T/fin', 'COMP:V', 'INF', 'VAL', 'COMP:v', 'LF:ARE/inf', '-SPEC:V', 'ARE/inf', '-COMP:FORCE', '?ARG', '-adjoinable', '!COMP:*', '-COMP:C/fin', 'LANG:EN'}
ESSA/inf        {'LF:while', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', '?VAL', 'TAIL:T', '-COMP:C/fin', 'ESSA/inf', 'SPEC:*', 'PF:essa', '-SPEC:T/fin', 'COMP:V', 'INF', 'ADV', 'COMP:v', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-COMP:FORCE', '!COMP:*', '?ARG', 'LANG:EN'}
TUA/inf         {'TUA/inf', '-COMP:T/fin', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', 'TAIL:T', 'LF:after', 'SPEC:*', '-SPEC:T/fin', 'PHI:NUM:_', '!SPEC:*', 'COMP:V', 'INF', 'ADV', 'VAL', 'PF:tua', 'COMP:v', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', '-COMP:FORCE', 'PHI:GEN:_', '!COMP:*', '-COMP:C/fin', 'PHI:DET:_', 'LANG:EN'}
VA/inf          {'VA/inf', '-COMP:T/fin', 'ARG', '-SPEC:N', 'SPEC:*', '-SPEC:T/fin', 'PHI:NUM:_', '!SPEC:*', 'COMP:V', 'PF:vAn', 'INF', 'VAL', 'COMP:v', 'PHI:PER:_', '-SPEC:V', 'LF:VA', '-COMP:FORCE', 'PHI:GEN:_', '!COMP:*', '-COMP:C/fin', 'PHI:DET:_', 'LANG:EN'}
MA/ssa          {'MA/inf', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', 'MA/ssa', '-SPEC:*', '-VAL', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:V', 'TAIL:V', 'ADV', 'PF:massa', 'COMP:v', 'PHI:PER:_', 'adjoinable', '-SPEC:FORCE', 'LF:in_doing', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN'}
MA/tta          {'ADV', 'MA/inf', 'PHI:PER:_', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'LF:without_doing', 'TAIL:T', '-VAL', '-SPEC:FORCE', 'PF:matta', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:EN'}
MA/lla          {'MA/inf', 'ARG', '-SPEC:Neg/fin', 'TAIL:T', '-VAL', '-SPEC:T/fin', 'ADV', 'PHI:PER:_', 'adjoinable', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:N', 'PHI:NUM:_', 'LF:by_doing', 'COMP:V', 'COMP:v', 'PF:malla', 'PHI:DET:_', 'LANG:EN'}
MA/inf          {'MA/inf', 'ARG', '-SPEC:Neg/fin', '-VAL', 'PF:maan', '-SPEC:T/fin', 'TAIL:V', 'ADV', 'PHI:PER:_', 'adjoinable', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:N', 'PHI:NUM:_', 'COMP:V', 'COMP:v', 'LF:to_do', 'PHI:DET:_', 'LANG:EN'}
E/inf           {'ADV', 'LF:by', 'PF:en', '-ARG', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'TAIL:T', '-VAL', 'LANG:FI', '-SPEC:FORCE', 'SPEC:*', '-SPEC:T/fin'}
BE-             {'V', '-COMP:T/fin', 'SPEC:TO/inf', '-ARG', '-COMP:V', '-VAL', 'COMP:P', 'LF:BE', 'PF:BE', '-SPEC:T/fin', '-COMP:N', 'SPEC:D', '-COMP:v', 'ASP', 'COMP:T/prt', '-SPEC:FORCE', 'COPULA', '!COMP:*', 'SPEC:P', 'SPEC:ADV', 'LANG:EN'}
D               {'-SPEC:MA/lla', 'D', 'PF:D', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-COMP:P', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR', 'LF:D', 'LANG:EN'}
D/rel           {'-SPEC:MA/lla', 'D', '-COMP:T/fin', '-ARG', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:P', 'OP:REL', '-SPEC:T/fin', 'OP:_', 'inflectional', 'D/rel', 'COMP:N', '!PROBE:N', 'adjoinable', '-SPEC:V', '-COMP:D', 'LF:D/rel', 'PF:D/rel', 'OP', '!COMP:*', '-SPEC:INF', '-COMP:uR', '-COMP:C/fin', 'LANG:EN'}
P               {'-float', '-COMP:T/fin', 'P', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:*', '-SPEC:C', '-VAL', '-SPEC:iR', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:uWH', 'PHI:DET:_', '-COMP:ADV', 'LF:P', '-COMP:T', '!COMP:*', '-COMP:A', 'PHI:PER:_', 'adjoinable', '-SPEC:V', 'PF:P', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'PHI:GEN:_', '-SPEC:v', '-SPEC:iWH', '-SPEC:INF', 'COMP:D', 'LANG:EN'}
pro             ['LANG:EN']
pro-            {'N', 'COMP:C', '-COMP:WH', '-COMP:VA/inf', 'COMP:uR', 'PHI', '-SPEC:N', '-SPEC:P', '-COMP:V', 'LF:pro', '-COMP:C/fin', 'COMP:P', 'SPEC:A', '-SPEC:T/fin', '-COMP:N', 'COMP:D/rel', 'PF:(pro)', '-COMP:v', '-COMP:A', '-SPEC:R', '-SPEC:V', '-COMP:AUX', 'COMP:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:ADV', 'COMP:R', '-SPEC:INF', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN'}
cl              {'RIGHT:ARE/inf', 'LEFT:T/fin', 'CL', 'RIGHT:PRG', 'LEFT:D,CL', 'inflectional', 'LANG:EN'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'PHI:NUM:SG', 'inflectional', 'LANG:EN'}
pl              {'PHI:NUM:PL', 'inflectional', 'LANG:EN'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'PHI:PER:2', 'inflectional', 'LANG:EN'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'PHI:HUM:HUM', 'inflectional', 'LANG:EN'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:EN'}
m               {'LANG:EN', 'inflectional', 'PHI:GEN:M'}
f               {'PHI:GEN:F', 'inflectional', 'LANG:EN'}
nom             {'NOM', 'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'LANG:EN'}
acc             {'TAIL:v', 'inflectional', 'ACC', 'LANG:EN'}
dat             {'TAIL:v', 'DAT', 'inflectional', 'LANG:EN'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'OP:_', 'LANG:EN', 'inflectional', 'OP:WH'}
wh_             {'OP', 'OP:_', 'FORCE:OP:WH', 'inflectional', 'LANG:EN'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'OP:FOC', 'inflectional', 'LANG:EN'}
C/op            {'OP:C/OP', 'inflectional', 'LANG:EN'}
Q               {'OP', 'LANG:EN', 'OP:Q', 'inflectional', 'OP:WH'}
