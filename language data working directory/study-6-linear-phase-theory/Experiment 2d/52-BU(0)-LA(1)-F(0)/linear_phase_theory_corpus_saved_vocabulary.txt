ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', 'TAIL:V', '-SPEC:V', '-SPEC:INF', 'COMP:D', 'PF:a', '!COMP:*', 'LANG:IT', '-SPEC:*', '-SPEC:T/fin', '-SPEC:v', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'adjoinable', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'LF:to', '-ARG', '-SPEC:P', '-SPEC:iR', 'P', 'COMP:ARE/inf'}
a_D             {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:C', 'adjoinable', 'D', 'LF:D', '-ARG', '-SPEC:P', 'PF:D', '!PROBE:N'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:N', '-COMP:T/fin', '-SPEC:Neg', 'COMP:D', '!COMP:*', 'LANG:EN', 'PF:admire', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'CLASS:TR', 'LF:admire', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:Neg', '-COMP:P', 'V', 'ARG', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
admire*         ['LANG:EN']
T/fin*          {'-VAL', 'LF:T', 'LANG:EN', 'NO_NUMBER', '!SPEC:*', "PF:T/fin'", 'NO_DET', 'CAT:T/fin'}
v*              {'LANG:EN', '-VAL', 'NO_NUMBER', 'LF:v', 'NO_DET', 'PF:v', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'-VAL', 'NO_PERSON', "PF:T/fin''", 'LF:T', 'PHI:PER:3', 'LANG:EN', 'NO_NUMBER', '!SPEC:*', 'NO_DET', 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:N', '-COMP:T/fin', 'COMP:D', 'LANG:IT', '-SPEC:T/fin', 'PF:adora', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'LF:admire', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
antaa           ['LANG:FI']
anta-           {'-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'CLASS:DITR', 'COMP:D', '!COMP:*', 'SPEC:D', '-SPEC:T/fin', 'PF:antaa', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'PHI:PER:_', '-COMP:FIN', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '+SEM:directional', 'LF:give', 'V', 'ARG', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'PF:ask', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LF:ask', 'PHI:GEN:_', 'SEM:internal', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
ask-            {'PF:ask', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LF:ask', 'PHI:GEN:_', 'SEM:internal', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SEM:directional', 'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', 'PF:avain', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'LF:key', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', 'N', 'LANG:FI', 'SPEC:A', '-COMP:V', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SEM:directional', 'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', 'LF:car', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'PF:auto', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
city            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', 'LF:city', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'PF:city', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
che             ['LANG:IT']
che-            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', 'LF:who', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:WH', '-COMP:v', '-SPEC:R', 'PF:che', 'COMP:P'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:N', '-COMP:T/fin', 'LANG:IT', '-SPEC:T/fin', 'PF:chiamato', '-SPEC:FORCE', '-COMP:V', 'PHI:GEN:_', '-VAL', 'LF:called', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
danno           {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', 'PF:danno', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'LF:damage', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:N', '-COMP:T/fin', 'COMP:D', 'LANG:IT', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'SEM:internal', '-VAL', 'PF:detest', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'LF:detest', 'ARG', 'V', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:ARE/inf', 'COMP:P'}
devono          ['LANG:EN']
deva-           {'-COMP:N', '-COMP:T/fin', '-ASP', 'SPEC:D', 'LANG:IT', '-SPEC:T/fin', 'PF:deva', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'SEM:internal', 'LF:must', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'SPEC:TO/inf', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:ARE/inf', 'COMP:P'}
di              {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'LANG:FI', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', '-adjoinable', 'PF:di', 'LF:of', 'P'}
does            {'COMP:Neg', '-SPEC:C/fin', 'COMP:v', '-SPEC:V', '!COMP:*', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', 'PHI:GEN:_', '-SPEC:N', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:M', 'ARG', 'COMP:V', 'PF:does', 'T/fin', 'LF:does', '-COMP:T/fin', '-SPEC:TO/inf', '-SPEC:Neg', 'T', 'PHI:PER:3', '!SPEC:D', '-SPEC:FORCE', '-SPEC:C', 'FIN', 'PHI:NUM:SG', '!PROBE:V', 'VAL', 'PHI:GEN:F', 'SPEC:TO/inf', 'COMP:T/prt', '-COMP:INF'}
does_C          ['LANG:EN']
does-           {'COMP:Neg', '-SPEC:C/fin', 'COMP:v', '-SPEC:V', '!COMP:*', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', 'PHI:GEN:_', '-SPEC:N', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:M', 'ARG', 'COMP:V', 'PF:does', 'T/fin', 'LF:does', '-COMP:T/fin', '-SPEC:TO/inf', '-SPEC:Neg', 'T', 'PHI:PER:3', '!SPEC:D', '-SPEC:FORCE', '-SPEC:C', 'FIN', 'PHI:NUM:SG', '!PROBE:V', 'VAL', 'PHI:GEN:F', 'SPEC:TO/inf', 'COMP:T/prt', '-COMP:INF'}
dorme           ['LANG:IT']
dorme-          {'-COMP:N', '-COMP:T/fin', 'LF:sleep', 'PF:dorme', 'LANG:EN', '-SPEC:T/fin', '!SPEC:D', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'Neg/fin', 'LF:neg', '%SPEC:INF', '!COMP:*', 'POL:NEG', '-SPEC:T/fin', 'SPEC:*', '!SPEC:*', '-SPEC:T', 'LANG:FI', 'PF:ei', 'SEM:internal', 'FIN', 'PHI:PER:_', 'PHI:DET:_', 'VAL', 'NEG', 'PHI:NUM:_', 'ARG', 'COMP:T/prt', '!COMP:T'}
e-              {'Neg/fin', 'LF:neg', '%SPEC:INF', '!COMP:*', 'POL:NEG', '-SPEC:T/fin', 'SPEC:*', '!SPEC:*', '-SPEC:T', 'LANG:FI', 'PF:ei', 'SEM:internal', 'FIN', 'PHI:PER:_', 'PHI:DET:_', 'VAL', 'NEG', 'PHI:NUM:_', 'ARG', 'COMP:T/prt', '!COMP:T'}
elaa            ['LANG:FI']
ela-            {'-COMP:N', '-COMP:D', '-COMP:T/fin', 'SPEC:D', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'CLASS:INTR', 'PHI:PER:_', 'PF:elaa', 'ASP', 'SPEC:TO/inf', 'PHI:NUM:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:MA/inf', 'PHI:DET:_', 'LF:live', '-COMP:v', 'SPEC:P', 'COMP:P'}
etsii           ['LANG:FI']
etsi-           {'-COMP:N', '-COMP:T/fin', 'COMP:D', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'LF:search', '-VAL', '!COMP:D', 'PF:etsi', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
etta            {'FIN', '-VAL', 'COMP:C/fin', 'PF:etta', 'COMP:T/fin', '-ARG', '!COMP:*', '-SPEC:*', 'LF:that', '!PROBE:T/fin', 'LANG:FI', 'FORCE'}
flow'           {'-COMP:N', '-COMP:T/fin', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', 'LF:flow', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', 'PF:flow', '-COMP:v', 'SPEC:P', 'COMP:P'}
from            {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'LF:from', 'COMP:D', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', '-SPEC:v', '-SPEC:*', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-float', '-SPEC:iWH', '-SPEC:C', 'adjoinable', 'PHI:GEN:_', '-SPEC:ADV', '-VAL', 'PF:from', '-COMP:uWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', 'P', 'TAIL:V,+SEM:directional'}
gave            ['LANG:EN']
give-           {'-COMP:N', '-COMP:T/fin', 'CLASS:DITR', 'COMP:D', '!COMP:*', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', 'PHI:PER:_', '-COMP:FIN', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '+SEM:directional', 'LF:give', 'PF:give', 'V', 'ARG', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SEM:directional', 'COMP:R', '-COMP:N', 'PF:Giuseppe', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'LF:Giuseppe', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', 'N', 'SPEC:A', '-COMP:V', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', 'LF:want', '!COMP:*', '-SPEC:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'SEM:internal', 'CLASS:TR', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'PF:haluaa', 'V', 'SPEC:ADV', 'PHI:DET:_', 'COMP:A/inf', '-COMP:v', 'SPEC:P', 'COMP:P'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:N', '-COMP:T/fin', 'SPEC:D', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', '!COMP:D', 'LF:disturb', 'PHI:PER:_', '-COMP:FIN', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', 'PF:hairitsee', '-COMP:v', 'SPEC:P', 'COMP:P'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PF:ha', '-COMP:N', '-COMP:T/fin', 'LF:have', '-ASP', 'SPEC:D', 'LANG:IT', 'SPEC:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SEM:internal', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'SPEC:TO/inf', 'ARG', 'V', 'SPEC:ADV', 'COMP:T', 'SPEC:P', 'COMP:P'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:N', '-COMP:D', '-COMP:T/fin', 'SPEC:D', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', '-VAL', 'CLASS:INTR', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:MA/inf', 'PF:havia', '-COMP:v', 'SPEC:P', 'LF:disappear'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:N', '-COMP:T/fin', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'CLASS:TR', 'LF:admire', '-VAL', '!COMP:D', 'PHI:PER:_', 'PF:ihaile-', '-COMP:FIN', 'ASP', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
il              {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', 'LANG:IT', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:C', 'adjoinable', 'D', '-ARG', '-SPEC:P', 'LF:the', '!PROBE:N', 'PF:il'}
i               {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', 'LANG:IT', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:C', 'adjoinable', 'D', '-ARG', '-SPEC:P', 'LF:the', '!PROBE:N', 'PF:il'}
in              {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:V', 'PF:in', '-SPEC:INF', 'COMP:D', '!COMP:*', 'LANG:IT', '-SPEC:T/fin', '-SPEC:v', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'PHI:GEN:_', 'adjoinable', 'LF:in', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', 'P'}
infermieri      {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'LF:nurses', '-COMP:v', '-SPEC:R', '-COMP:WH', 'PF:infermieri', 'COMP:P'}
is              ['LANG:EN']
be-             {'-COMP:N', 'LF:be', '-COMP:T/fin', '!COMP:*', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'SPEC:P', 'COPULA', '-VAL', '-ARG', 'ASP', 'SPEC:TO/inf', 'PF:be', 'V', 'SPEC:ADV', '-COMP:v', '-COMP:TO/inf', 'COMP:P'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:N', '-COMP:D', '-COMP:T/fin', 'PF:istuu', 'SPEC:D', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'CLASS:INTR', 'PHI:PER:_', 'ASP', 'LF:sit', 'SPEC:TO/inf', 'PHI:NUM:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
John            ['LANG:EN']
John-           {'-SEM:directional', 'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LF:John', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', '-COMP:v', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-adjoinable', 'PF:John', '-SPEC:R', '-COMP:WH', 'COMP:P'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LF:who', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'PF:joka', 'COMP:P'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SEM:directional', 'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'LF:Jukka', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', 'N', 'LANG:FI', 'SPEC:A', 'PF:Jukka', '-COMP:V', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
juosten         ['LANG:FI']
juokse-         {'-COMP:N', '-COMP:T/fin', '-SPEC:T/fin', 'LF:run', 'PF:juokse-', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
istuu           ['LANG:FI']
istu-           {'-COMP:N', '-COMP:T/fin', 'PF:istuu', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'PHI:PER:_', 'ASP', 'LF:sit', 'SPEC:TO/inf', 'PHI:NUM:_', 'ARG', 'V', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
kaksi           {'PHI:NUM:SG', '-VAL', 'COMP:N', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'LF:two', 'NUM', 'COMP:n', 'SPEC:*', 'PF:kaksi', 'TAIL:ARG,VAL,FIN', 'LANG:FI'}
kaksi           {'TAIL:*POL:NEG', 'COMP:N', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'NUM', 'LANG:EN', 'COMP:n', 'PF:kaksi', 'SPEC:*'}
kaksi_1         {'PHI:NUM:SG', '-VAL', 'COMP:N', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'LF:two', 'NUM', 'COMP:n', 'SPEC:*', 'PF:kaksi', 'TAIL:ARG,VAL,FIN', 'LANG:FI'}
kaksi_2         {'TAIL:*POL:NEG', 'COMP:N', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'NUM', 'LANG:EN', 'COMP:n', 'PF:kaksi', 'SPEC:*'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LF:two', 'NUM', 'COMP:n', 'COMP:N', 'PF:kaksi', 'SPEC:*', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', 'LF:city', '-SPEC:INF', '-SPEC:T/fin', 'PF:kaupunki', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:P', '-COMP:v', '-SPEC:R', '-COMP:WH'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'LF:order', '-COMP:N', '-COMP:T/fin', 'PF:kaske', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', '!COMP:A/inf', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'SEM:external', 'COMP:P'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LF:watch', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', 'PF:kello', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
kello0-         {'SPEC:D', '2SPEC', 'PF:kello', 'LANG:FI', 'LF:watch', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'LF:key', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', 'N', 'SPEC:A', '-COMP:V', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', 'PF:key', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SEM:directional', 'COMP:R', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'PF:kirja', '-COMP:v', 'LF:book', '-COMP:WH', 'COMP:P'}
kohti           {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', 'TAIL:V', '-SPEC:V', '-SPEC:INF', 'COMP:D', '!COMP:*', 'LF:towards', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'LANG:FI', 'adjoinable', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', 'PF:kohti', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', 'P'}
koko            {'COMP:N', '-COMP:D', '-COMP:T/fin', 'PF:koko', 'TAIL:T', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'LANG:FI', 'adjoinable', '-SPEC:C', 'D', '-ARG', '-SPEC:P', '!PROBE:N', 'LF:all'}
kuka            ['LANG:FI']
kuka-           {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LF:who', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', 'PF:kuka', 'N', 'LANG:FI', 'SPEC:A', '-COMP:V', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'PHI', 'COMP:P'}
kuorsaa-        {'-COMP:N', '-COMP:T/fin', '-COMP:D', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'LF:snore', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', '-COMP:WH', 'PF:kuorsaa', 'COMP:P'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:C/fin', 'COMP:v', '-SPEC:V', '-COMP:FORCE', '-COMP:C/fin', 'COMP:D', '!COMP:*', 'LF:near', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', '!SPEC:*', 'LANG:FI', 'adjoinable', '-SPEC:ADV', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'PF:lahella', 'COMP:V', 'P', '-COMP:N', '-COMP:T/fin', '-SPEC:INF', '-COMP:ADV', '!SPEC:D', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'INF', '-SPEC:iR', 'VAL', '-COMP:uWH'}
lahella         {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'COMP:D', '!COMP:*', 'LF:near', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'LANG:FI', 'adjoinable', '-SPEC:ADV', '-VAL', '-COMP:uWH', '!COMP:D', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', 'PF:lahella', 'P'}
lahella_1       {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'COMP:D', '!COMP:*', 'LF:near', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'LANG:FI', 'adjoinable', '-SPEC:ADV', '-VAL', '-COMP:uWH', '!COMP:D', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', 'PF:lahella', 'P'}
lahella_2       {'-SPEC:C/fin', 'COMP:v', '-SPEC:V', '-COMP:FORCE', '-COMP:C/fin', 'COMP:D', '!COMP:*', 'LF:near', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', '!SPEC:*', 'LANG:FI', 'adjoinable', '-SPEC:ADV', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'PF:lahella', 'COMP:V', 'P', '-COMP:N', '-COMP:T/fin', '-SPEC:INF', '-COMP:ADV', '!SPEC:D', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'INF', '-SPEC:iR', 'VAL', '-COMP:uWH'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'COMP:PP', '-COMP:N', '-COMP:D', '-COMP:T/fin', 'SPEC:D', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', '-VAL', 'CLASS:INTR', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:MA/inf', '-COMP:v', 'SPEC:P', 'PF:lahtea', 'LF:leave'}
lavano          ['LANG:IT']
lava-           {'-COMP:N', '-COMP:T/fin', 'LF:wash', 'COMP:D', '!COMP:*', 'LANG:IT', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', 'PF:lava', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', 'PF:le', '-SPEC:INF', 'OP', '!COMP:*', 'LANG:IT', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:C', 'adjoinable', 'D', 'LF:D', '-ARG', '-SPEC:P', '!PROBE:N'}
leaves          ['LANG:EN']
leave           {'PF:leave', '-COMP:N', '-COMP:T/fin', 'LANG:EN', '-SPEC:T/fin', 'LF:leave', '!SPEC:D', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
leave-          {'PF:leave', '-COMP:N', '-COMP:T/fin', 'LANG:EN', '-SPEC:T/fin', '!SPEC:D', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'COMP:P', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'LF:leave'}
like-           {'-COMP:N', '-COMP:T/fin', 'LF:like', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'PF:like', '-VAL', '!COMP:D', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
likes           ['LANG:EN']
like            {'-COMP:N', '-COMP:T/fin', 'LF:like', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'PF:like', '-VAL', '!COMP:D', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
little          ['LANG:EN']
little-         {'SPEC:D', 'PF:little-', 'LANG:EN', '2SPEC', 'LF:little', '0'}
lle             {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'COMP:D', '!COMP:*', '-SPEC:*', '-SPEC:T/fin', '-SPEC:v', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'LANG:FI', 'adjoinable', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', '+SEM:directional', 'ARG', 'LF:for', 'PF:P(lle)', 'P', 'TAIL:V,+SEM:directional'}
lla             {'LF:by', '-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', 'TAIL:T', '-SPEC:V', '-SPEC:INF', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'LANG:FI', 'adjoinable', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', 'TAIL:*V', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', 'PF:P(lla)', 'P'}
Luisa           ['LANG:IT']
Luisa-          {'-SEM:directional', 'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'PF:Luisa', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LF:Luisa', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
lukemalla       ['LANG:FI']
luke-           {'-COMP:N', '-COMP:T/fin', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'CLASS:TR', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'LF:read', 'PHI:DET:_', 'PF:luke', '-COMP:v', 'SPEC:P', 'COMP:P'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', '!COMP:*', 'PF:loyta-', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'CLASS:TR', '-VAL', '!COMP:D', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'PHI:DET:_', 'LF:find', '-COMP:v', 'SPEC:P', 'COMP:P'}
Mary            ['LANG:EN']
Mary-           {'-SEM:directional', 'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', 'PF:Mary', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', 'LF:Mary', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-adjoinable', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SEM:directional', 'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', 'PF:Merja', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'LF:Merja', '-SPEC:P', '-adjoinable', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LF:by', 'MA/inf', 'PF:malla', '-SPEC:N', 'COMP:v', 'TAIL:T', '-SPEC:T/fin', 'SPEC:*', 'ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', 'LANG:FI', 'adjoinable'}
meren           ['LANG:FI']
mere-           {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', 'LF:ocean', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'PF:meri', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
mies            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'LF:man', 'PF:mies', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
mistake         {'COMP:R', '-COMP:N', '-SPEC:R', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LF:mistake', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', 'PF:mistake', '-COMP:WH', 'COMP:P'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', 'LF:what', '-SPEC:N', '-SPEC:P', 'PF:mika-', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-COMP:N', '-COMP:T/fin', 'LANGN:EN', 'LF:move', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'CLASS:TR', 'PF:move', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '+SEM:directional', '-COMP:P', 'V', 'ARG', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
mukavasti       ['LANG:EN']
mukava-         {'SPEC:D', '2SPEC', 'LF:comfortably', 'LANG:FI', 'PF:mukavasti', '0'}
must            {'COMP:Neg', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:TO/inf', '-SPEC:Neg', 'COMP:v', '-SPEC:V', 'T', '!COMP:*', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-SPEC:v', '!SPEC:D', 'SPEC:*', '-SPEC:FORCE', '-SPEC:C', 'PF:must', 'PHI:GEN:_', 'LF:must', 'FIN', '-SPEC:N', '!PROBE:V', 'PHI:PER:_', 'PHI:DET:_', 'VAL', 'SPEC:TO/inf', 'PHI:NUM:_', 'ARG', 'COMP:T/prt', 'MODAL', '-COMP:INF', 'COMP:V', 'T/fin'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'CLASS:TR', '-VAL', 'PHI:PER:_', 'LF:sell', 'ASP', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'PF:myy', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
naki            ['LANG:FI']
nake-           {'-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'PF:nake', '-COMP:MA/tta', 'COMP:D', '-COMP:ESSA/inf', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'CLASS:TR', '-VAL', 'PHI:PER:_', 'ASP', 'LF:see', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:N', '-COMP:T/fin', 'PF:naytta', '-SPEC:T/fin', '!SPEC:D', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '!COMP:VA/inf', 'SEM:internal', '-ARG', 'ASP', 'VAL', 'SPEC:TO/inf', 'V', 'SPEC:ADV', 'LF:seem', '-COMP:v', 'SPEC:P', 'COMP:P'}
ndo             {'-COMP:T/fin', 'INF', 'COMP:v', '-COMP:C/fin', 'VAL', '-COMP:FORCE', '-SPEC:V', 'PF:PRG', 'PRG', 'LF:ing', 'LANG:EN', '!COMP:*', '-SPEC:T/fin', '?ARG', 'COMP:V'}
ne              {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', 'PHI:PER:3', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:NUM:PL', '-SPEC:MA/lla', 'LANG:FI', '-SPEC:C', 'adjoinable', 'LF:those', 'D', 'PF:ne', '-ARG', '-SPEC:P', '!PROBE:N'}
niiden          ['LANG:EN']
nen             {'-SPEC:A', 'A', 'PF:a', 'COMP:0', 'LF:ing', '-SPEC:D', 'SPEC:*', 'TAIL:D', 'LANG:FI', 'adjoinable'}
not             {'-VAL', '-COMP:D', 'PHI:PER:_', '-COMP:FIN', 'LF:not', 'PHI:NUM:_', 'PF:not', 'PHI:DET:_', 'ARG', '!COMP:*', 'POL:NEG', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', '-COMP:C', 'PHI:GEN:_', 'Neg'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PF:nukku', '-COMP:N', '-COMP:T/fin', '-COMP:D', '-COMP:Neg/fin', 'LF:sleep', 'SPEC:D', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'CLASS:INTR', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:T', 'ARG', 'V', 'SPEC:ADV', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'PF:omaisuuden', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'LF:possessions', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
operatoria      ['LANG:IT']
operatoria-     {'SPEC:D', 'LANG:IT', 'LF:operation', '2SPEC', 'PF:operatoria', '0'}
ostaa           ['LANG:FI']
osta-           {'-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PF:osta', 'LANG:FI', 'CLASS:TR', '-VAL', 'PHI:PER:_', 'ASP', 'LF:buy', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', 'PF:paiva', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', 'SEM:nonreferential', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'LF:day', 'COMP:P'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'PF:Pariisi', 'LF:Paris', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SEM:directional', 'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:P', 'COMP:C', '-SPEC:N', '-SPEC:P', 'PF:Pekka', '-COMP:v', '-SPEC:R', '-COMP:WH', 'LF:Pekka'}
pelottaa        ['LANG:FI']
pelkaa-         {'-COMP:N', '-COMP:T/fin', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'SPEC:P', 'LANG:FI', 'CLASS:TR', 'PF:pelkaa', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'LF:fear', 'COMP:P'}
persuades       ['LANG:EN']
persuade-       {'-COMP:N', '-COMP:T/fin', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'COMP:P', '-VAL', 'PF:persuade', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'LF:persuade', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'SEM:external', 'COMP:TO/inf'}
peruuntui       ['LANG:FI']
peruuntu-       {'-COMP:N', '-COMP:T/fin', 'PF:peruuntui', 'SPEC:D', '-SPEC:T/fin', 'LF:cancelled', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-COMP:N', '-COMP:T/fin', 'PF:pese', 'ASP:BOUNDED', 'LF:wash', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'CLASS:TR', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
pese-           {'-COMP:N', '-COMP:T/fin', 'PF:pese', 'LF:wash', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'CLASS:TR', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
petardi         {'COMP:R', '-COMP:N', 'LF:firecrackers', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PF:petardi', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', '2SPEC', 'PF:pieni-', 'LF:small', 'LANG:FI', '0'}
poikien         ['LANG:FI']
poika-          {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', 'LF:boy', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'PF:poika', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
puhelinta       ['LANG:FI']
puhelin-        {'SPEC:D', '2SPEC', 'PF:puhelin', 'LF:phone', 'LANG:FI', '0'}
punainen        ['LANG:FI']
puna-           {'SPEC:D', '2SPEC', 'LF:red', 'PF:puna-', 'LANG:FI', '0'}
presupposto     {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LF:presupposition', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'PF:presupposto', 'COMP:R/D', '-COMP:AUX', 'N', 'SPEC:A', '-COMP:V', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
primary         {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'LF:nurse', 'PF:primary', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
promises        ['LANG:EN']
promise-        {'-COMP:N', '-COMP:T/fin', 'COMP:D', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'SEM:internal', 'PF:promise', '-VAL', 'LF:promise', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:N', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LF:ask', 'LANG:FI', '-VAL', 'PHI:PER:_', 'PF:pyyda', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'SEM:external', 'COMP:P'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:N', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'LF:terminate', 'PF:raukea', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
red             ['LANG:EN']
red-            {'PF:red', 'SPEC:D', 'LANG:EN', 'LF:red', '2SPEC', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'CLASS:TR', '-VAL', '!COMP:D', 'PF:saavutta-', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'LF:reach', 'COMP:P'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-COMP:N', '-COMP:T/fin', 'SPEC:D', 'PF:sano-', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'COMP:FORCE', '-VAL', 'COMP:VA/inf', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'LF:say', 'COMP:P'}
said            ['LANG:EN']
say'            {'-COMP:N', '-COMP:T/fin', 'PF:say', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', '!COMP:FORCE', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'LF:say', 'COMP:P'}
say-            {'-COMP:N', '-COMP:T/fin', 'PF:say', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', '!COMP:FORCE', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'LF:say', 'COMP:P'}
sala            ['LANG:IT']
sala-           {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', 'LF:room', '-SPEC:ADV', 'COMP:C', 'PF:sala', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:N', '-COMP:T/fin', 'LANG:IT', '-SPEC:T/fin', 'LF:explode', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', 'PF:scoppia', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
sen             {'TAIL:PHI', 'TAIL:*POL:NEG', 'COMP:N', '-COMP:D', '-COMP:T/fin', 'LF:the/that', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PF:sen', '-SPEC:MA/lla', 'LANG:FI', 'TAIL:ASP', '-SPEC:C', 'adjoinable', 'D', '-ARG', '-SPEC:P', '!PROBE:N'}
se'             {'COMP:N', '-COMP:D', '-COMP:T/fin', 'LF:the/that', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'LANG:FI', '-SPEC:C', 'adjoinable', 'D', '-ARG', '-SPEC:P', '!PROBE:N', 'PF:se'}
se              {'COMP:N', '-COMP:D', '-COMP:T/fin', 'LF:the/that', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'LANG:FI', '-SPEC:C', 'adjoinable', 'D', '-ARG', '-SPEC:P', '!PROBE:N', 'PF:se'}
se              ['LANG:FI']
sentenza        {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LF:sentence', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', '-COMP:v', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'PF:sentenza', '-SPEC:R', '-COMP:WH', 'COMP:P'}
Seine           ['LANG:EN']
Seine-          {'COMP:R', '-COMP:N', '-SPEC:C/fin', 'PF:Seine', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'LF:Seine', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:N', '-COMP:D', '-COMP:T/fin', 'PF:sembra', '-ASP', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '!COMP:ARE/inf', '-SPEC:FORCE', '-COMP:V', '-VAL', '-ARG', 'SPEC:TO/inf', 'V', 'SPEC:ADV', 'LF:seem', '-COMP:v', 'SPEC:P', 'COMP:P'}
sleeps          ['LANG:EN']
sleep           {'-COMP:N', '-COMP:D', '-COMP:T/fin', 'LF:sleep', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', 'CLASS:INTR', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', 'PF:sleep', '-COMP:MA/inf', '-COMP:v', 'SPEC:P', 'COMP:P'}
sleep-          {'-COMP:N', '-COMP:D', '-COMP:T/fin', 'LF:sleep', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', 'CLASS:INTR', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', 'PF:sleep', '-COMP:MA/inf', '-COMP:v', 'SPEC:P', 'COMP:P'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', 'LF:agreement', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'PF:sopimus', '!COMP:A/inf', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
spinge          ['LANG:IT']
spinge-         {'-COMP:N', '-COMP:T/fin', 'LANG:IT', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-VAL', '!COMP:D', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-COMP:P', 'SPEC:TO/inf', 'ARG', 'V', 'PF:spinge', 'SPEC:ADV', 'PHI:DET:_', 'LF:push', '-COMP:v', 'SPEC:P'}
ssa             {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', 'TAIL:V', '-SPEC:V', '-SPEC:INF', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'LANG:FI', 'adjoinable', 'LF:in', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'PHI:PER:_', 'PF:ssa', '-SPEC:P', '-SPEC:iR', 'COMP:n/MA', 'PHI:NUM:_', 'ARG', 'PHI:DET:_', 'P'}
stanno          ['LANG:IT']
sta-            {'-COMP:N', 'COMP:PRG', '-COMP:T/fin', '-ASP', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'SPEC:P', 'PHI:GEN:_', 'PF:sta', 'SEM:internal', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'SPEC:TO/inf', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'LF:stay', 'COMP:P'}
sti             {'LF:by', '-SPEC:N', 'TAIL:T', '-ARG', 'adjoinable', '!COMP:*', '-SPEC:T/fin', 'SPEC:*', 'ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', 'LANG:FI', 'PF:sti'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'PF:sukka-', 'LF:socks', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
talo            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', 'PF:talo', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', 'LF:house', 'N', 'LANG:FI', 'SPEC:A', '-COMP:V', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
tama            ['LANG:EN']
tama-           {'COMP:R', '-COMP:N', 'LF:this', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', 'PHI', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'PF:tama', 'COMP:P'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:N', '-COMP:T/fin', '-ASP', 'SPEC:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'LF:must', 'FIN', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'SPEC:TO/inf', 'ARG', 'V', '!COMP:A/inf', 'SPEC:ADV', 'MODAL', '-COMP:v', 'SPEC:P', 'PF:taytyy', 'COMP:P'}
teki            ['LANG:FI']
teke-           {'PF:teke', '-COMP:N', '-COMP:T/fin', '-COMP:A/inf', 'ASP:BOUNDED', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'CLASS:TR', '-VAL', '!COMP:D', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'PHI:DET:_', 'LF:make', '-COMP:v', 'SPEC:P', 'COMP:P'}
that            {'FIN', '-VAL', 'COMP:C/fin', 'PF:that', 'COMP:T/fin', '-ARG', '!COMP:*', 'LANG:EN', '-SPEC:*', '!PROBE:T/fin', 'LF:that', 'FORCE'}
the             {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', 'PHI:DEF:DEF', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:C', 'adjoinable', 'D', 'PF:the', '-ARG', 'LF:the', '-SPEC:P', '!PROBE:N'}
to              {'-COMP:N', 'PF:to', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'COMP:D', '!COMP:*', 'LANG:EN', '-SPEC:*', '-SPEC:T/fin', '-SPEC:v', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-float', '-SPEC:iWH', '-SPEC:C', 'adjoinable', 'PHI:GEN:_', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'LF:to', 'PHI:PER:_', '-SPEC:P', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', '+SEM:directional', 'ARG', 'P', 'TAIL:V,+SEM:directional'}
to_inf          {'-COMP:T/fin', 'COMP:v', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:V', '!COMP:*', 'TO/inf', 'LANG:EN', '-SPEC:T/fin', '-SPEC:v', '?ARG', 'adjoinable', '-VAL', 'INF', 'LF:TO/inf', 'COMP:V', 'PF:TO/inf'}
towards         {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', 'TAIL:V', '-SPEC:V', '-SPEC:INF', 'COMP:D', '!COMP:*', 'LF:towards', 'LANG:EN', '-SPEC:T/fin', '-SPEC:v', '-SPEC:*', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-float', '-SPEC:iWH', '-SPEC:C', 'adjoinable', 'PHI:GEN:_', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', 'PF:towards', 'P'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-COMP:N', '-COMP:T/fin', 'COMP:D', '!COMP:*', '-SPEC:T/fin', 'LF:nudge', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'CLASS:TR', 'PF:tonaise', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', '-COMP:P', 'ARG', 'V', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', 'SPEC:P', 'COMP:P'}
tta             {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'COMP:D', '!COMP:*', '-SPEC:T/fin', '-SPEC:v', 'SPEC:*', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:C', 'LANG:FI', 'adjoinable', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', '-SPEC:iR', 'PF:tta', 'COMP:n/MA', 'PHI:NUM:_', 'ARG', 'PHI:DET:_', 'LF:without', 'ADV', 'P'}
tries           ['LANG:EN']
try-            {'-COMP:N', '-COMP:T/fin', 'LF:try', 'SPEC:D', '!COMP:TO/inf', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'SEM:internal', 'PF:try', '-VAL', '!COMP:-ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
verifiche       {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', 'LF:verification', '-COMP:v', '-SPEC:R', '-COMP:WH', 'PF:verifiche', 'COMP:P'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:N', '-COMP:D', '-COMP:T/fin', 'SPEC:D', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'LF:flow', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', 'PF:virtaa', '-COMP:v', 'SPEC:P', '!COMP:P', 'COMP:P'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:N', '-COMP:T/fin', 'LF:want', '!COMP:*', 'LANG:EN', '-SPEC:*', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'SEM:internal', '-VAL', 'PF:volu', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-COMP:N', '-COMP:T/fin', 'ASP:BOUNDED', 'COMP:D', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'PF:voitta', 'CLASS:TR', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'LF:win', '-COMP:P', 'V', 'ARG', 'SPEC:ADV', 'PHI:DET:_', 'SEM:achievement', '-COMP:v', 'SPEC:P', 'COMP:P'}
wants           ['LANG:EN']
want-           {'-COMP:N', '-COMP:T/fin', '-SPEC:TO/inf', 'COMP:D', 'LF:want', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'CLASS:TR', 'COMP:P', '-VAL', 'PF:want', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-COMP:P', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:TO/inf'}
what            ['LANG:EN']
what-           {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'PF:what', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', 'LF:what', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
which           {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', 'PF:which', '-SPEC:INF', 'OP', '!COMP:*', 'LF:which', 'LANG:EN', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:C', 'adjoinable', 'D', 'OP:WH', '-ARG', '-SPEC:P', '!PROBE:N'}
who             ['LANG:EN']
who-            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', 'LF:who', 'PF:who', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
whether         {'LF:whether', 'COMP:T/fin', 'OP', '!COMP:*', 'LANG:EN', '-SPEC:*', 'PF:whether', 'FORCE', 'FIN', 'OP:WH', '-VAL', 'OP:Q', '-ARG', 'Q', '!PROBE:T/fin', 'COMP:C/fin'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:N', '-COMP:T/fin', 'PF:yritta', 'LF:try', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'SEM:internal', '-VAL', '!COMP:-ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', '!COMP:A/inf', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
mina            ['LANG:EN']
mina-           {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'PF:mina', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', '-COMP:*', 'SPEC:A', 'LF:I', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
sina            ['LANG:EN']
sina-           {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', 'LF:you', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', 'PF:sina', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
han             ['LANG:EN']
han-            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LF:s/he', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', 'PF:han', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'PF:me', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', 'N', 'LANG:FI', '-COMP:*', 'SPEC:A', '-COMP:V', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', 'LF:we', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
te              ['LANG:EN']
te-             {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', 'LF:you', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', 'PF:te', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:R', '-COMP:N', '-SPEC:C/fin', 'LF:they', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'LANG:FI', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PF:he', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
se-             {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'LANG:FI', '-SPEC:C', 'adjoinable', 'D', '-ARG', '-SPEC:P', 'LF:it/that', '!PROBE:N', 'PF:se'}
I               ['LANG:EN']
I-              {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', 'LF:I', '-SPEC:ADV', 'COMP:C', 'PF:I', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
you             ['LANG:EN']
you-            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', 'LF:you', '-COMP:A', 'PF:you', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', 'N', '-COMP:*', 'SPEC:A', '-COMP:V', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
he              ['LANG:EN']
he-             {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PF:he', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'LF:he', 'COMP:P'}
she             ['LANG:EN']
she-            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', 'LF:she', '-COMP:v', '-SPEC:R', '-COMP:WH', 'PF:she', 'COMP:P'}
we              ['LANG:EN']
we-             {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', 'LF:we', 'PF:we', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'PF:you_pl', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', 'LF:you_pl', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'PHI', 'COMP:P'}
they            ['LANG:EN']
they-           {'COMP:R', '-COMP:N', '-SPEC:C/fin', 'LF:they', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:WH', '-COMP:v', '-SPEC:R', 'PF:they', 'COMP:P'}
it              ['LANG:EN']
it-             {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', 'PF:it', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:C', 'adjoinable', 'D', '-ARG', '-SPEC:P', 'LF:it/that', '!PROBE:N'}
io              ['LANG:EN']
io-             {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', 'PF:io', 'LF:I', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
tu              ['LANG:EN']
tu-             {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', 'LF:you', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', 'PF:tu', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
lui             ['LANG:EN']
lui-            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', 'PF:lui', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'LF:he', 'COMP:P'}
lei             ['LANG:EN']
lei-            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'PF:lei', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', 'LF:she', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
noi             ['LANG:EN']
noi-            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', 'PF:noi', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', 'LF:we', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
voi             ['LANG:EN']
voi-            {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', 'LF:you_pl', '-SPEC:ADV', 'COMP:C', 'PF:voi', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
loro            ['LANG:EN']
loro-           {'COMP:R', '-COMP:N', '-SPEC:C/fin', 'LF:they', 'PF:loro', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
mi              ['LANG:EN']
mi-             {'COMP:R', '-COMP:N', 'CL', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', 'LF:me', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'PF:mi(cl)', 'COMP:P'}
la              ['LANG:EN']
la-             {'COMP:R', '-COMP:N', 'CL', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', 'PF:la(cl)', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'LF:her', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
lo              ['LANG:EN']
lo-             {'COMP:R', '-COMP:N', 'CL', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', 'LF:him', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'PF:lo(cl)', 'COMP:P'}
si              ['LANG:EN']
si-             {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'CAL:CL', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', 'LF:3sg', '-SPEC:N', 'PHI_N', '-SPEC:P', 'PF:si(cl)', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:R', '-COMP:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', '-COMP:*', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', 'PHI_N', '-SPEC:P', 'PF:ci', 'LF:there', '-COMP:v', '-SPEC:R', '-COMP:WH', 'COMP:P'}
[-n]            {'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:1', 'inflectional', 'PHI'}
[-t]            {'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:PER:2'}
[-V]            {'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional', 'PHI'}
[-mme]          {'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI'}
[-mme]          {'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional'}
[-tte]          {'PHI:DET:DEF', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI', 'PHI:PER:2'}
[-vat]          {'LANG:FI', 'PHI:PER:3', 'PHI:NUM:PL', 'inflectional', 'PHI'}
[-ni]           {'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:1', 'inflectional', 'PHI'}
[-si]           {'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:PER:2'}
[-nsa]          {'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional', 'PHI'}
[-an]           {'LANG:FI', 'PHI:PER:3', 'inflectional', 'PHI'}
[-nne]          {'PHI:DET:DEF', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI:PER:2'}
[-s]            {'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', 'inflectional', 'PHI:GEN:F', 'PHI', 'PHI:GEN:M'}
[-0]            {'PHI:GEN:N', 'PHI:NUM:SG', 'inflectional', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI:PER:1', 'LANG:EN', 'PHI:NUM:PL', 'PHI'}
[-o]            {'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:1', 'inflectional', 'PHI'}
[-i]            {'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:PER:2'}
[-a]            {'PHI:DET:DEF', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:IT', 'inflectional', 'PHI'}
[-e]            {'PHI:DET:DEF', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:IT', 'inflectional', 'PHI'}
[-iamo]         {'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI'}
[-te]           {'PHI:DET:DEF', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI', 'PHI:PER:2'}
[-no]           {'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:PL', 'inflectional', 'PHI'}
[-nom]          {'LANG:EN', 'NOM', 'TAIL:FIN,ARG,VAL', 'inflectional', 'adjoinable'}
[-par]          {'TAIL:ARG,-VAL', 'LANG:FI', 'inflectional', 'adjoinable', 'PAR'}
[-gen]          {'LANG:EN', 'GEN', '-float', 'inflectional', 'TAIL:INF,ARG'}
gen             {'LANG:EN', 'GEN', '-float', 'inflectional', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:PHI', 'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'n-ACC', 'inflectional', 'adjoinable'}
[-t_acc]        {'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'inflectional', 'adjoinable'}
[-0_acc]        {'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:*PHI', 'TAIL:ARG,ASP:BOUNDED', '0_ACC', 'inflectional', 'adjoinable'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'a', 'LANG:X', 'LF:A', 'PF:a'}
b'              {'LANG:X', 'LF:B', 'PF:b', 'b'}
b''             {'LF:B', 'LANG:EN', '-COMP:c', 'PF:b', 'b'}
c''             {'LANG:EN', 'PF:c', 'c', 'LF:C', 'SPEC:a'}
c'              {'LANG:X', 'LF:C', 'PF:c', 'c'}
d'              {'LF:D', 'LANG:', 'd', 'PF:d'}
a''             ['LANG:EN']
x'              {'LANG:X', 'x', 'PF:x', 'LF:X'}
y'              {'y', 'LANG:X', 'LF:Y', 'PF:y'}
z'              {'LANG:X', 'z', 'PF:x', 'LF:Z'}
John'           {'PF:John', 'LANG:X', "N'", 'LF:John'}
admires'        {'LANG:X', 'PF:admires', 'LF:admires', "V'"}
admires''       {'-COMP:N', '-COMP:T/fin', 'SPEC:D', 'LANG:EN', 'LF:admires', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'PF:admires', '-VAL', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'V', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
Mary'           {'LANG:X', 'PF:Mary', "N'", 'LF:mary'}
T/fin           {'-COMP:T/fin', '-SPEC:C/fin', '-SPEC:TO/inf', '-SPEC:Neg', 'COMP:v', '-SPEC:V', 'T', 'PF:T', 'LF:T', '!COMP:*', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', '-SPEC:v', '!SPEC:D', 'SPEC:*', '-SPEC:FORCE', '-SPEC:C', 'PHI:GEN:_', 'FIN', '-SPEC:N', '!PROBE:V', 'PHI:PER:_', 'PHI:DET:_', 'VAL', 'SPEC:TO/inf', 'PHI:NUM:_', 'ARG', 'COMP:T/prt', '-COMP:INF', 'COMP:V', 'T/fin'}
v               {'-VAL', 'COMP:V', '-SPEC:N', '!PROBE:V', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'v', 'PHI:DET:_', 'ARG', '!COMP:*', 'SPEC:D', 'LANG:EN', 'LF:v', 'PHI:GEN:_', 'PF:v'}
C/fin           {'C', 'LF:C/fin', 'C/fin', '-SPEC:C/fin', 'COMP:T/fin', '-COMP:C/fin', '!COMP:*', 'LANG:EN', '!PROBE:FIN', 'SPEC:*', '-SPEC:T/fin', 'COMP:Neg/fin', 'FIN', '-SPEC:N', '-ARG', 'VAL', '-COMP:T/prt', 'PF:C'}
T               {'T', 'COMP:v', '-SPEC:V', 'PF:T', 'LF:T', '!COMP:*', 'SPEC:D', 'LANG:EN', '-SPEC:T/fin', 'SPEC:*', '-SPEC:FORCE', 'PHI:GEN:_', 'FIN', '-COMP:NEG', '-SPEC:N', '!PROBE:V', 'PHI:PER:_', 'PHI:DET:_', 'VAL', 'PHI:NUM:_', 'ARG', 'COMP:T/prt', 'COMP:V'}
T/prt           {'COMP:V', 'T', 'COMP:v', '-SPEC:V', 'COMP:D', '!COMP:*', 'SPEC:D', 'LANG:EN', 'LF:T/prt', 'SPEC:*', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:GEN:_', 'PF:T/prt', 'FIN', '-COMP:NEG', '-SPEC:N', '!PROBE:V', 'PHI:PER:_', 'PHI:DET:_', 'VAL', 'PHI:NUM:_', 'ARG', 'COMP:T/prt', 'T/prt'}
a0              {'-SPEC:A', 'A', 'PF:A', 'COMP:0', '-adjoinable', 'LANG:EN', '-SPEC:D', 'LF:A', 'TAIL:D', 'adjoinable'}
n               {'-SPEC:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', 'COMP:v', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', 'SPEC:*', 'n', 'N', '!SPEC:*', 'SPEC:A', 'PHI:GEN:_', '-SPEC:ADV', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'COMP:V', '-COMP:WH', '-SPEC:R', 'COMP:P', 'COMP:R', '-COMP:N', '-SPEC:INF', 'COMP:0', '-COMP:A', '!SPEC:D', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', '-SPEC:FORCE', 'COMP:C', 'INF', 'VAL', 'LF:n', '-COMP:v', 'PF:n'}
impass          {'-VAL', '-SPEC:N', 'PF:impass', 'LF:impass', '!PROBE:V', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'v', 'PHI:DET:_', 'ARG', '!COMP:*', 'SPEC:D', 'LANG:EN', 'COMP:V', 'PHI:GEN:_'}
cau             {'-VAL', '-SPEC:N', '!PROBE:V', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'PF:Cau', 'v', 'ARG', '!COMP:*', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', 'COMP:V', 'LF:v/Cause', 'PHI:GEN:_'}
INF             {'PF:INF', '-COMP:T/fin', 'COMP:V', 'INF', 'COMP:v', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:V', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', 'LF:INF'}
prtcpl          {'-COMP:T/fin', 'COMP:V', 'T', '-COMP:FORCE', 'COMP:v', '-SPEC:V', '-COMP:C/fin', 'COMP:D', '!COMP:*', 'SPEC:D', 'LANG:EN', 'LF:T/prt', 'SPEC:*', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:GEN:_', 'PF:T/prt', 'FIN', '-COMP:NEG', '-SPEC:N', 'INF', '!PROBE:V', 'PHI:PER:_', 'VAL', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', 'COMP:T/prt', 'T/prt'}
TO/inf          {'-COMP:T/fin', 'COMP:v', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:V', '!COMP:*', 'TO/inf', 'LANG:EN', '-SPEC:T/fin', '-SPEC:v', '?ARG', 'adjoinable', '-VAL', 'INF', 'LF:TO/inf', '!COMP:V', 'COMP:V', 'PF:TO/inf'}
A/inf           {'-COMP:T/fin', 'PF:A/inf', 'A/inf', 'COMP:v', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:V', '?VAL', '!COMP:*', 'LANG:EN', 'SPEC:*', '-SPEC:T/fin', '?ARG', '-SPEC:Neg/fin', 'INF', 'LF:A/inf', 'COMP:V'}
ARE/inf         {'-COMP:T/fin', 'ARE/inf', 'COMP:v', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:V', '!COMP:*', 'LANG:EN', 'SPEC:*', '-SPEC:T/fin', '?ARG', 'INF', 'PF:are', 'VAL', '-adjoinable', 'COMP:V', 'LF:ARE/inf'}
ESSA/inf        {'-COMP:T/fin', 'TAIL:T', '-COMP:FORCE', 'COMP:v', '-COMP:C/fin', '?VAL', '-SPEC:V', '!COMP:*', 'LANG:EN', 'SPEC:*', '-SPEC:T/fin', '?ARG', 'PF:essa', '-SPEC:Neg/fin', '-SPEC:FORCE', 'LF:while', 'adjoinable', '-SPEC:N', 'INF', 'ADV', 'COMP:V', 'ESSA/inf'}
TUA/inf         {'-COMP:T/fin', 'TAIL:T', '-COMP:FORCE', 'COMP:v', '-COMP:C/fin', '-SPEC:V', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', 'SPEC:*', '-SPEC:Neg/fin', '-SPEC:FORCE', '!SPEC:*', 'PHI:GEN:_', 'adjoinable', 'TUA/inf', '-SPEC:N', 'INF', 'PHI:PER:_', 'LF:after', 'VAL', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', 'ADV', 'COMP:V', 'PF:tua'}
VA/inf          {'-COMP:T/fin', 'COMP:v', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:V', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', 'SPEC:*', 'VA/inf', '!SPEC:*', 'PHI:GEN:_', '-SPEC:N', 'INF', 'PHI:PER:_', 'PHI:DET:_', 'PF:vAn', 'VAL', 'PHI:NUM:_', 'ARG', 'LF:VA', 'COMP:V'}
MA/ssa          {'TAIL:V', 'COMP:v', 'LANG:EN', '-SPEC:*', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:FORCE', 'PHI:GEN:_', 'LF:in_doing', 'adjoinable', 'MA/inf', '-VAL', '-SPEC:N', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'ADV', 'COMP:V', 'PF:massa'}
MA/tta          {'PF:matta', 'MA/inf', '-VAL', '-SPEC:N', 'TAIL:T', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'LF:without_doing', 'LANG:EN', '-SPEC:T/fin', 'ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', 'PHI:GEN:_', 'adjoinable'}
MA/lla          {'PF:malla', 'COMP:v', 'LANG:EN', '-SPEC:T/fin', 'PHI:GEN:_', 'adjoinable', 'LF:by_doing', 'MA/inf', '-VAL', '-SPEC:N', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'COMP:V', 'TAIL:T', '-SPEC:Neg/fin', '-SPEC:FORCE', 'ADV'}
MA/inf          {'COMP:v', 'LANG:EN', '-SPEC:T/fin', 'PHI:GEN:_', 'adjoinable', 'PF:maan', 'MA/inf', '-VAL', '-SPEC:N', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'COMP:V', 'TAIL:V', 'LF:to_do', '-SPEC:Neg/fin', '-SPEC:FORCE', 'ADV'}
E/inf           {'LF:by', '-VAL', '-SPEC:N', '-ARG', 'TAIL:T', '-SPEC:Neg/fin', '-SPEC:T/fin', 'SPEC:*', 'ADV', 'PF:en', '-SPEC:FORCE', 'LANG:FI', 'adjoinable'}
BE-             {'-COMP:N', '-COMP:T/fin', '!COMP:*', 'SPEC:D', 'LF:BE', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', '-SPEC:FORCE', 'COPULA', '-VAL', '-ARG', 'ASP', 'SPEC:TO/inf', 'COMP:T/prt', 'V', 'PF:BE', 'SPEC:ADV', '-COMP:v', 'SPEC:P', 'COMP:P'}
D               {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', '-SPEC:INF', 'OP', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:C', 'adjoinable', 'D', 'LF:D', '-ARG', '-SPEC:P', 'PF:D', '!PROBE:N'}
D/rel           {'COMP:N', '-COMP:D', '-COMP:T/fin', '-COMP:uR', '-SPEC:V', '-COMP:C/fin', '-SPEC:INF', 'OP', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', '-SPEC:Neg/fin', 'D/rel', '-SPEC:MA/lla', '-SPEC:C', 'adjoinable', 'D', '-ARG', '-SPEC:P', 'OP:REL', 'OP:_', '!PROBE:N', 'LF:D/rel', 'PF:D/rel'}
P               {'-COMP:N', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:V', 'PF:P', '-SPEC:INF', 'COMP:D', '!COMP:*', 'LANG:EN', '-SPEC:T/fin', '-SPEC:v', '-SPEC:*', '-COMP:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-float', '-SPEC:iWH', '-SPEC:C', 'LF:P', 'adjoinable', 'PHI:GEN:_', '-SPEC:ADV', '-VAL', '-COMP:uWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:P', '-SPEC:iR', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', 'P'}
pro             ['LANG:EN']
pro-            {'COMP:R', '-COMP:N', '-SPEC:C/fin', 'PF:(pro)', '-SPEC:uWH', '-SPEC:V', '-COMP:C/fin', 'LF:pro', '-SPEC:INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:A', 'COMP:uR', 'COMP:R/D', '-COMP:AUX', '-COMP:V', 'N', 'SPEC:A', '-SPEC:FORCE', '-SPEC:ADV', 'COMP:C', '-SPEC:N', '-SPEC:P', '-COMP:v', '-SPEC:R', '-COMP:WH', 'PHI', 'COMP:P'}
cl              {'LANG:EN', 'CL', 'LEFT:D,CL', 'RIGHT:ARE/inf', 'inflectional', 'RIGHT:PRG', 'LEFT:T/fin'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
pl              {'PHI:NUM:PL', 'LANG:EN', 'inflectional'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:EN', 'inflectional'}
indef           {'PHI:DET:INDEF', 'LANG:EN', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:EN', 'inflectional'}
m               {'LANG:EN', 'inflectional', 'PHI:GEN:M'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'LANG:EN', 'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'NOM'}
acc             {'TAIL:v', 'LANG:EN', 'ACC', 'inflectional'}
dat             {'DAT', 'TAIL:v', 'LANG:EN', 'inflectional'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'LANG:EN', 'OP:WH', 'inflectional', 'OP:_'}
wh_             {'FORCE:OP:WH', 'LANG:EN', 'inflectional', 'OP', 'OP:_'}
top             {'LANG:EN', 'inflectional', 'OP:TOP'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
rel             {'SPEC:D', 'LANG:EN', 'inflectional', '-COMP:C/fin', 'OP:REL', 'adjoinable', 'OP:_'}
Q               {'LANG:EN', 'OP:WH', 'OP:Q', 'inflectional', 'OP'}
