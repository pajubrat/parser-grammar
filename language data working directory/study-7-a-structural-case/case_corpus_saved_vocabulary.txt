ï»¿dummy        {'LANG:FI', 'dummy'}
a               {'-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:*', '-SPEC:Neg/fin', 'adjoinable', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', '-SPEC:iWH', 'LF:to', 'COMP:ARE/inf', '-ARG', 'LANG:IT', '-SPEC:iR', '-COMP:uWH', '-SPEC:P', 'P', 'PF:a', '-VAL', '!COMP:*', '-SPEC:INF', '-SPEC:v', '-COMP:ADV'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'LF:admire', 'SPEC:P', 'PHI:DET:_', '-COMP:T', 'PF:admire', '-COMP:Neg', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'COMP:D', 'LANG:FI', '-SPEC:Neg', 'CLASS:TR', 'V', '-VAL', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'LF:admire', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:NUM:_', 'PF:adora', 'ASP', 'SPEC:ADV', 'LANG:IT', 'ARG', 'SPEC:TO/inf', 'COMP:D', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
anta-           {'-COMP:v', '-SPEC:FORCE', 'PF:antaa', 'ASP:BOUNDED', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', '-COMP:FIN', 'ARG', 'SPEC:TO/inf', '+SEM:directional', 'PHI:PER:_', 'CLASS:DITR', 'LANG:FI', '-VAL', '!COMP:*', 'V', '-COMP:V', '-COMP:P', 'COMP:P', 'LF:give'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SEM:internal', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'COMP:D', '-VAL', 'LF:ask', 'V', 'PF:ask', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
ask-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SEM:internal', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'COMP:D', '-VAL', 'LF:ask', 'V', 'PF:ask', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
avain_0acc      ['LANG:FI']
avain_nom       ['LANG:FI']
avain           ['LANG:FI']
avaimen_acc     ['LANG:FI']
avaimen         ['LANG:FI']
avaimet         ['LANG:FI']
avainta         ['LANG:FI']
avain-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', '-SEM:directional', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'LF:key', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'PF:avain', '-COMP:ADV'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:v', '-SPEC:FORCE', 'LF:car', 'N', '-COMP:N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', '-SEM:directional', 'PF:auto', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
city            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', 'PF:city', 'LANG:EN', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:R/D', '-SPEC:ADV', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', 'LF:city', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
danno           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'SPEC:A', '-COMP:WH', 'COMP:P', '-SPEC:R', '-SPEC:P', 'PF:danno', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'LF:damage', '-COMP:ADV'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:v', '-SPEC:FORCE', 'LF:detest', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'PHI:GEN:_', '-COMP:T', '-SPEC:T/fin', 'SEM:external', 'PHI:NUM:_', 'ASP', 'PF:detest', 'SPEC:ADV', 'LANG:IT', 'ARG', 'SPEC:TO/inf', 'COMP:D', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
devono          ['LANG:FI']
deva-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'PHI:GEN:_', '-COMP:T', '-ASP', '-SPEC:T/fin', 'SPEC:D', 'PHI:NUM:_', 'PF:deva', 'COMP:ARE/inf', 'SEM:internal', 'SPEC:ADV', 'LANG:IT', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-VAL', 'V', '-COMP:V', 'LF:must', 'PHI:PER:_'}
di              {'-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', 'PF:di', '-SPEC:T/fin', 'PHI:DET:_', 'SPEC:*', '-SPEC:Neg/fin', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', 'PHI:NUM:_', '-SPEC:iWH', 'ARG', '-SPEC:iR', '-COMP:uWH', '-SPEC:P', 'P', 'PHI:PER:_', 'LANG:FI', '-VAL', '!COMP:*', '-SPEC:INF', '-adjoinable', '-SPEC:v', 'LF:of', '-COMP:ADV'}
does            {'-SPEC:FORCE', 'PF:does', '-SPEC:V', '!PROBE:V', 'PHI:GEN:F', 'LANG:EN', 'PHI:DET:_', 'COMP:Neg', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:*', 'PHI:NUM:SG', '-SPEC:v', 'VAL', 'SPEC:D', 'COMP:v', '-SPEC:N', '-SPEC:C/fin', 'PHI:NUM:_', 'LF:does', '!SPEC:*', 'PHI:GEN:M', '!SPEC:D', 'T', 'ARG', 'SPEC:TO/inf', 'T/fin', 'PHI:PER:_', 'COMP:D', 'COMP:V', '!COMP:*', 'COMP:T/prt', 'FIN', 'PHI:PER:3'}
does_C          ['LANG:EN']
does-           {'-SPEC:FORCE', 'PF:does', '-SPEC:V', '!PROBE:V', 'PHI:GEN:F', 'LANG:EN', 'PHI:DET:_', 'COMP:Neg', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:*', 'PHI:NUM:SG', '-SPEC:v', 'VAL', 'SPEC:D', 'COMP:v', '-SPEC:N', '-SPEC:C/fin', 'PHI:NUM:_', 'LF:does', '!SPEC:*', 'PHI:GEN:M', '!SPEC:D', 'T', 'ARG', 'SPEC:TO/inf', 'T/fin', 'PHI:PER:_', 'COMP:D', 'COMP:V', '!COMP:*', 'COMP:T/prt', 'FIN', 'PHI:PER:3'}
dorme           ['LANG:IT']
dorme-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PF:dorme', 'PHI:NUM:_', 'LF:sleep', 'ASP', 'SPEC:ADV', '!SPEC:D', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'NEG', 'PHI:DET:_', 'POL:NEG', '-SPEC:T/fin', 'SPEC:*', '!COMP:T', '%SPEC:INF', 'PF:ei', 'VAL', 'PHI:NUM:_', 'LF:neg', 'Neg/fin', '!SPEC:*', 'SEM:internal', 'ARG', '-SPEC:T', 'LANG:FI', '!COMP:*', 'COMP:T/prt', 'FIN', 'PHI:PER:_'}
e-              {'NEG', 'PHI:DET:_', 'POL:NEG', '-SPEC:T/fin', 'SPEC:*', '!COMP:T', '%SPEC:INF', 'PF:ei', 'VAL', 'PHI:NUM:_', 'LF:neg', 'Neg/fin', '!SPEC:*', 'SEM:internal', 'ARG', '-SPEC:T', 'LANG:FI', '!COMP:*', 'COMP:T/prt', 'FIN', 'PHI:PER:_'}
etsii           ['LANG:FI']
etsi-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', '!COMP:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PF:etsi', 'ARG', 'SPEC:TO/inf', 'LANG:FI', 'COMP:D', '-VAL', 'V', 'LF:search', 'COMP:P', 'PHI:PER:_', '-COMP:V'}
etta            {'!PROBE:T/fin', 'LANG:FI', 'FORCE', 'COMP:C/fin', '-VAL', '-SPEC:*', '!COMP:*', 'LF:that', 'COMP:T/fin', 'PF:ettÃ¤', 'FIN', '-ARG'}
flow'           {'-COMP:v', '-SPEC:FORCE', 'LF:flow', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', 'PF:flow', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
from            {'-SPEC:FORCE', '-SPEC:V', 'TAIL:V,+SEM:directional', '-COMP:N', '-SPEC:C', 'LANG:EN', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:*', '-SPEC:Neg/fin', 'adjoinable', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', 'PHI:NUM:_', '-SPEC:iWH', 'ARG', '-SPEC:iR', '+SEM:directional', 'LF:from', '-COMP:uWH', '-SPEC:P', 'P', 'PF:from', '-VAL', '!COMP:*', '-SPEC:INF', '-SPEC:v', 'PHI:PER:_', '-COMP:ADV'}
gave            ['LANG:EN']
give-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'PF:give', 'SPEC:ADV', '-COMP:FIN', 'ARG', 'SPEC:TO/inf', '+SEM:directional', 'PHI:PER:_', 'CLASS:DITR', '-VAL', '!COMP:*', 'V', '-COMP:V', '-COMP:P', 'COMP:P', 'LF:give'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', '-SEM:directional', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', 'PF:Giuseppe', '-COMP:V', 'COMP:P', 'LF:Giuseppe', '-COMP:ADV'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'ASP:BOUNDED', 'PF:haluaa', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', '-SPEC:*', 'PHI:NUM:_', 'COMP:A/inf', 'ASP', 'SEM:internal', 'LF:want', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'COMP:D', 'LANG:FI', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'LF:disturb', '!COMP:D', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', '-COMP:FIN', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'PF:hairitsee', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'PHI:GEN:_', '-ASP', '-SPEC:T/fin', 'COMP:T', 'SPEC:D', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', 'LANG:IT', 'ARG', 'SPEC:TO/inf', 'LF:have', '-VAL', 'V', '-COMP:V', 'PF:ha', 'COMP:P', 'PHI:PER:_'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', 'CLASS:INTR', 'PF:havia', '-SPEC:T/fin', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:D', 'LANG:FI', '-VAL', 'LF:disappear', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'LF:admire', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', '!COMP:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', '-COMP:FIN', 'ARG', 'SPEC:TO/inf', 'PF:ihaile-', 'LANG:FI', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
il              {'!PROBE:N', '-COMP:T/fin', '-SPEC:V', '-SPEC:C', '-SPEC:T/fin', '-SPEC:MA/lla', 'OP', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'D', 'PF:il', '-ARG', 'LANG:IT', '-SPEC:P', '-SPEC:D', 'LF:the', '-COMP:D', '!COMP:*', 'COMP:N', '-COMP:uR', '-SPEC:INF'}
is              ['LANG:EN']
be-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'SPEC:D', 'ASP', '-ARG', 'SPEC:ADV', 'LF:be', 'SPEC:TO/inf', 'COPULA', 'PF:be', '-VAL', '!COMP:*', 'V', '-COMP:TO/inf', '-COMP:V', 'COMP:P'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:v', '-SPEC:FORCE', 'PF:istuu', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', 'CLASS:INTR', '-SPEC:T/fin', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:D', 'LANG:FI', '-VAL', 'V', 'LF:sit', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
John            ['LANG:EN']
John-           {'-COMP:v', '-SPEC:FORCE', 'PF:John', 'N', '-COMP:N', '-SPEC:V', 'LANG:EN', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:R/D', '-SPEC:ADV', '-SEM:directional', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:ADV', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', 'LF:John', '-adjoinable', 'COMP:P', '-COMP:V'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', '-SEM:directional', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', 'LF:Jukka', 'PF:Jukka', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
juosten         ['LANG:FI']
juokse-         {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:run', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'PF:juokse-', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
istuu           ['LANG:FI']
istu-           {'-COMP:v', '-SPEC:FORCE', 'PF:istuu', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'V', 'LF:sit', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
kaksi           {'COMP:n', 'ARG', 'PHI:DET:_', 'LF:two', 'TAIL:ARG,VAL,FIN', 'SPEC:*', 'PHI:NUM:SG', 'LANG:FI', '-VAL', 'COMP:N', 'PHI:NUM:_', 'NUM', 'PF:kaksi', 'PHI:PER:_'}
kaksi           {'COMP:n', 'LF:two', 'SPEC:*', 'TAIL:*POL:NEG', 'LANG:FI', 'COMP:N', 'NUM', 'PF:kaksi', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'COMP:n', 'NUM', 'LF:two', 'PF:kaksi', 'SPEC:*', 'LANG:FI'}
kaupunkia       ['LANG:FI']
kaupunki        {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', 'LF:city', '-COMP:AUX', 'PF:kaupunki', '-COMP:V', '-COMP:P', '-COMP:ADV'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'LF:order', 'SPEC:P', 'PF:kaske', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'SEM:external', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '!COMP:A/inf', 'LANG:FI', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'PF:kello', 'COMP:uR', '-COMP:AUX', 'LF:watch', '-COMP:V', 'COMP:P', '-COMP:ADV'}
kello0-         {'PF:kello', 'SPEC:D', '0', 'LF:watch', '2SPEC', 'LANG:FI'}
key             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', 'PF:key', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LF:key', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
keta            ['LANG:FI']
keta            ['LANG:FI']
keta-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:who', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'PF:keta', 'LANG:FI', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', '-SEM:directional', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'PF:kirja', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'LF:book', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
kohti           {'-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:T/fin', 'SPEC:*', '-SPEC:Neg/fin', 'adjoinable', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', 'PHI:NUM:_', '-SPEC:iWH', 'ARG', '-SPEC:iR', 'PF:kohti', '-COMP:uWH', '-SPEC:P', 'P', 'LANG:FI', '-VAL', '!COMP:*', 'TAIL:V', '-SPEC:INF', '-SPEC:v', 'LF:towards', 'PHI:PER:_', '-COMP:ADV'}
koko            {'!PROBE:N', '-COMP:T/fin', '-SPEC:V', '-SPEC:C', '-SPEC:T/fin', '-SPEC:MA/lla', 'OP', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:N', 'D', 'LF:all', '-ARG', 'PF:koko', 'TAIL:T', '-SPEC:P', '-SPEC:D', '-COMP:D', 'LANG:FI', '!COMP:*', 'COMP:N', '-COMP:uR', '-SPEC:INF'}
kenen           ['LANG:FI']
kuka            ['LANG:FI']
kuka-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:who', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'PF:kuka', 'COMP:uR', 'PHI', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
kuorsaa-        {'LF:snore', '-COMP:v', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:WH', '-COMP:D', 'LANG:FI', '-VAL', 'PF:kuorsaa', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:V', '-COMP:N', '-SPEC:C', '-SPEC:T/fin', '-COMP:FORCE', 'INF', 'VAL', '-SPEC:Neg/fin', 'adjoinable', 'PHI:NUM:_', '-SPEC:iWH', 'ARG', '-SPEC:iR', '-COMP:uWH', 'PF:lahella', 'P', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:ADV', 'PHI:DET:_', 'SPEC:*', 'LF:near', 'COMP:v', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', '!SPEC:*', '-COMP:C/fin', '!SPEC:D', '-SPEC:P', 'LANG:FI', 'COMP:V', '!COMP:*', '-SPEC:INF', '-SPEC:v', 'PHI:PER:_', '-COMP:ADV'}
lahella         {'-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:T/fin', 'SPEC:*', 'LF:near', '!COMP:D', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:C/fin', '-SPEC:N', 'PHI:NUM:_', '-SPEC:iWH', 'ARG', '-SPEC:iR', '-COMP:uWH', '-SPEC:P', 'PF:lahella', 'P', 'LANG:FI', '-VAL', '!COMP:*', '-SPEC:INF', '-SPEC:v', 'PHI:PER:_', '-COMP:ADV'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', 'CLASS:INTR', 'COMP:PP', '-SPEC:T/fin', 'PF:lahtea', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:D', 'LANG:FI', '-VAL', 'V', 'LF:leave', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
lavano          ['LANG:IT']
lava-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'PF:lava', 'SPEC:P', 'PHI:DET:_', 'PHI:GEN:_', '-COMP:T', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'LANG:IT', 'ARG', 'SPEC:TO/inf', 'COMP:D', '-VAL', 'LF:wash', '!COMP:*', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!PROBE:N', '-COMP:T/fin', '-SPEC:V', '-SPEC:C', '-SPEC:T/fin', '-SPEC:MA/lla', 'OP', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'D', '-ARG', 'LANG:IT', 'LF:D', '-SPEC:P', '-SPEC:D', '-COMP:D', '!COMP:*', 'COMP:N', '-COMP:uR', '-SPEC:INF', 'PF:le'}
leaves          ['LANG:EN']
leave           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:NUM:_', 'PF:leave', 'ASP', 'SPEC:ADV', '!SPEC:D', 'ARG', 'SPEC:TO/inf', '-VAL', 'V', 'LF:leave', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
leave-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:NUM:_', 'PF:leave', 'ASP', 'SPEC:ADV', '!SPEC:D', 'ARG', 'SPEC:TO/inf', '-VAL', 'V', 'LF:leave', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
like-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:like', '!COMP:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PF:like', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
likes           ['LANG:EN']
like            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:like', '!COMP:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PF:like', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
little          ['LANG:EN']
little-         {'LF:little', 'PF:little-', 'SPEC:D', '0', 'LANG:EN', '2SPEC'}
lle             {'-SPEC:FORCE', 'PF:P(lle)', '-SPEC:V', 'TAIL:V,+SEM:directional', '-COMP:N', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'PHI:DET:_', 'SPEC:*', '-SPEC:Neg/fin', 'adjoinable', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', 'PHI:NUM:_', '-SPEC:iWH', 'ARG', '-SPEC:iR', '+SEM:directional', '-COMP:uWH', 'LF:for', '-SPEC:P', 'P', 'LANG:FI', '-VAL', '!COMP:*', '-SPEC:INF', '-SPEC:v', 'PHI:PER:_', '-COMP:ADV'}
lla             {'-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:T/fin', 'SPEC:*', '-SPEC:Neg/fin', 'adjoinable', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', 'PHI:NUM:_', '-SPEC:iWH', 'LF:by', 'TAIL:*V', 'ARG', '-SPEC:iR', 'TAIL:T', '-COMP:uWH', '-SPEC:P', 'P', 'LANG:FI', '-VAL', 'PF:P(lla)', '!COMP:*', '-SPEC:INF', '-SPEC:v', 'PHI:PER:_', '-COMP:ADV'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', '-SEM:directional', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:ADV', 'LF:Luisa', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', 'PF:Luisa'}
lukemalla       ['LANG:FI']
luke-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'LF:read', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PF:luke', 'LANG:FI', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'ASP:BOUNDED', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', '!COMP:D', 'PHI:NUM:_', 'ASP', 'LF:find', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'LANG:FI', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'PF:loyta-', 'PHI:PER:_'}
Mary            ['LANG:EN']
Mary-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', 'PF:Mary', 'LANG:EN', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:R/D', '-SPEC:ADV', '-SEM:directional', 'LF:Mary', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', '-adjoinable', 'COMP:P', '-COMP:ADV'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', 'LF:Merja', '-SPEC:T/fin', 'COMP:R/D', '-SEM:directional', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'PF:Merja', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', '-adjoinable', 'COMP:P', '-COMP:ADV'}
Merjalle        ['LANG:FI']
Merjalla        ['LANG:FI']
malla           {'-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:*', 'LANG:FI', 'COMP:v', 'MA/inf', '-SPEC:Neg/fin', 'ADV', '-SPEC:N', 'adjoinable', 'PF:malla', 'LF:by'}
meren           ['LANG:FI']
mere-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PF:meri', '-COMP:C/fin', '-SPEC:uWH', 'LF:ocean', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
mistake         {'-COMP:v', 'LF:mistake', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', 'PF:mistake', '-COMP:AUX', '-COMP:V', 'COMP:P', '-COMP:ADV'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', 'PF:mika-', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'LF:what', '-COMP:WH', 'SPEC:A', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-COMP:v', '-SPEC:FORCE', 'LANGN:EN', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'PHI:GEN:_', '-COMP:T', '-SPEC:T/fin', 'PF:move', 'PHI:NUM:_', 'ASP', 'LF:move', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '+SEM:directional', 'COMP:D', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
mukavasti       ['LANG:FI']
mukava-         {'SPEC:*', 'COMP:0', 'LANG:FI', 'PF:mukavasti', 'adjoinable', 'A', 'TAIL:D', '-SPEC:A', 'LF:comfortably'}
must            {'-SPEC:FORCE', '-SPEC:V', '!PROBE:V', 'PHI:DET:_', 'LANG:EN', 'PHI:GEN:_', 'COMP:Neg', '-SPEC:T/fin', 'SPEC:*', '-SPEC:v', 'VAL', 'SPEC:D', 'COMP:v', '-SPEC:N', '-SPEC:C/fin', 'PHI:NUM:_', 'MODAL', '!SPEC:*', '!SPEC:D', 'T', 'ARG', 'SPEC:TO/inf', 'T/fin', 'COMP:D', 'COMP:V', '!COMP:*', 'COMP:T/prt', 'FIN', 'LF:must', 'PHI:PER:_', 'PF:must'}
naki            ['LANG:FI']
nake-           {'-COMP:v', '-SPEC:FORCE', 'PF:nake', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'LF:see', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', '-COMP:ESSA/inf', 'SPEC:TO/inf', '-COMP:MA/inf', 'LANG:FI', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:v', '-SPEC:FORCE', 'PF:naytta', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SEM:internal', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'V', '!COMP:VA/inf', '-COMP:V', 'COMP:P', 'PHI:PER:_', 'LF:seem'}
ne              {'!PROBE:N', 'PF:ne', '-COMP:T/fin', '-SPEC:V', '-SPEC:C', '-SPEC:T/fin', '-SPEC:MA/lla', 'OP', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'D', '-ARG', 'PHI:NUM:PL', '-SPEC:P', '-SPEC:D', '-COMP:D', 'LANG:FI', '!COMP:*', 'COMP:N', '-COMP:uR', '-SPEC:INF', 'LF:those', 'PHI:PER:3'}
niiden          ['LANG:FI']
nen             {'LF:ing', 'SPEC:*', 'COMP:0', 'PF:a', 'LANG:FI', 'adjoinable', 'A', 'TAIL:D', '-SPEC:A'}
not             {'PF:not', 'Neg', 'ARG', 'PHI:DET:_', 'LANG:EN', 'PHI:GEN:_', 'POL:NEG', '-SPEC:T/fin', 'SPEC:*', '-COMP:D', '-VAL', '-COMP:C', '!COMP:*', 'PHI:NUM:_', 'LF:not', 'PHI:PER:_', '-COMP:FIN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:v', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', 'CLASS:INTR', '-SPEC:T/fin', '-COMP:Neg/fin', 'SPEC:D', 'PHI:NUM:_', 'PF:nukku', 'LF:sleep', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:D', 'LANG:FI', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
ostaa           ['LANG:FI']
osta-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LF:buy', '-COMP:P', 'LANG:FI', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', 'PF:osta', 'COMP:P', 'PHI:PER:_'}
paivan          ['LANG:FI']
paivaa          ['LANG:FI']
paiva           ['LANG:FI']
paiva-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'PF:paiva', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:ADV', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', 'SEM:nonreferential', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', 'LF:day', 'COMP:P', '-COMP:V'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'PF:Pariisi', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', 'LF:Paris', '-COMP:ADV'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekka-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', '-SEM:directional', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', 'PF:Pekka', '-SPEC:uWH', 'LF:Pekka', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
pelottaa        ['LANG:FI']
pelkaa-         {'-COMP:v', '-SPEC:FORCE', 'LF:fear', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PF:pelkaa', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
persuades       ['LANG:EN']
persuade-       {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:TO/inf', 'LF:persuade', 'SEM:external', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_', 'PF:persuade'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'ASP:BOUNDED', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PF:pese', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'CLASS:TR', 'LF:wash', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
pese-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PF:pese', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'CLASS:TR', 'LF:wash', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
pieni           ['LANG:FI']
pieni-          {'LF:small', 'SPEC:D', '0', 'PF:pieni-', '2SPEC', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:boy', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', 'PF:poika', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
puhelinta       ['LANG:FI']
puhelin-        {'SPEC:D', 'LF:phone', '0', '2SPEC', 'PF:puhelin', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'SPEC:D', '0', 'LF:red', 'PF:puna-', '2SPEC', 'LANG:FI'}
presupposto     {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'PF:presupposto', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'LF:presupposition', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
promises        ['LANG:EN']
promise-        {'LF:promise', '-COMP:v', '-SPEC:FORCE', 'PF:promise', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SEM:internal', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'COMP:D', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PF:pyyda', 'LANG:FI', '-VAL', 'LF:ask', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
raukesi         ['LANG:FI']
raukea-         {'PF:raukea', '-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'V', '-COMP:V', 'LF:terminate', 'COMP:P', 'PHI:PER:_'}
red             ['LANG:EN']
red-            {'SPEC:D', 'PF:red', '0', 'LANG:EN', 'LF:red', '2SPEC'}
saavuttaa       ['LANG:FI']
saavutta-       {'-COMP:v', '-SPEC:FORCE', 'PF:saavutta-', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', '!COMP:D', 'PHI:NUM:_', 'LF:reach', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'COMP:VA/inf', 'SPEC:D', 'PHI:NUM:_', 'LF:say', 'ASP', 'SPEC:ADV', 'COMP:FORCE', 'PF:sano-', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
said            ['LANG:EN']
say'            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:FORCE', 'SPEC:D', 'PHI:NUM:_', 'PF:say', 'LF:say', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
say-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:FORCE', 'SPEC:D', 'PHI:NUM:_', 'PF:say', 'LF:say', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
sen             {'!PROBE:N', '-COMP:T/fin', '-SPEC:V', '-SPEC:C', '-SPEC:T/fin', '-SPEC:MA/lla', 'OP', 'TAIL:*POL:NEG', 'LF:the/that', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'adjoinable', '-ARG', 'PF:sen', '-SPEC:P', '-SPEC:D', '-COMP:D', 'LANG:FI', '!COMP:*', 'COMP:N', '-COMP:uR', '-SPEC:INF', 'TAIL:ASP', 'TAIL:PHI'}
se'             {'!PROBE:N', '-COMP:T/fin', '-SPEC:V', 'PF:se', '-SPEC:C', '-SPEC:T/fin', '-SPEC:MA/lla', 'OP', 'LF:the/that', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'adjoinable', '-ARG', '-SPEC:P', '-SPEC:D', '-COMP:D', 'LANG:FI', '!COMP:*', 'COMP:N', '-COMP:uR', '-SPEC:INF'}
sentenza        {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'PF:sentenza', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LF:sentence', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
Seine           ['LANG:FI']
Seine-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'PF:Seine', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:Seine', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:v', '-SPEC:FORCE', 'PF:sembra', '-COMP:N', 'SPEC:P', '-COMP:T', '-ASP', '-SPEC:T/fin', '-ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:D', 'LANG:FI', '-VAL', '-R', 'V', '-COMP:V', 'COMP:P', 'LF:seem', '!COMP:ARE/inf'}
sleeps          ['LANG:EN']
sleep           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', 'LF:sleep', 'ASP', 'SPEC:ADV', 'PF:sleep', 'ARG', 'SPEC:TO/inf', '-COMP:D', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
sleep-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', 'LF:sleep', 'ASP', 'SPEC:ADV', 'PF:sleep', 'ARG', 'SPEC:TO/inf', '-COMP:D', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
sono            ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'LF:agreement', 'COMP:R/D', 'PF:sopimus', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '!COMP:A/inf', 'LANG:FI', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
spinge          ['LANG:IT']
spinge-         {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'PHI:GEN:_', '-COMP:T', '-SPEC:T/fin', '!COMP:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'LANG:IT', 'PF:spinge', 'ARG', 'SPEC:TO/inf', '-VAL', 'V', 'LF:push', '-COMP:V', '-COMP:P', 'PHI:PER:_'}
ssa             {'-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-COMP:T/fin', 'COMP:n/MA', '-SPEC:ADV', '-SPEC:T/fin', 'PHI:DET:_', 'SPEC:*', '-SPEC:Neg/fin', 'adjoinable', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', 'PHI:NUM:_', '-SPEC:iWH', 'PF:ssa', 'ARG', '-SPEC:iR', '-COMP:uWH', '-SPEC:P', 'P', 'LANG:FI', '-VAL', '!COMP:*', 'LF:in', 'TAIL:V', '-SPEC:INF', '-SPEC:v', 'PHI:PER:_', '-COMP:ADV'}
stanno          ['LANG:IT']
sta-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-ASP', '-SPEC:T/fin', 'SPEC:D', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', 'LF:stay', 'ARG', 'SPEC:TO/inf', 'COMP:PRG', 'LANG:FI', '-VAL', 'V', 'PF:sta', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
sti             {'-SPEC:FORCE', '!COMP:A', '-SPEC:T/fin', 'SPEC:*', 'LANG:FI', '-SPEC:Neg/fin', 'PF:sti', 'ADV', '-SPEC:N', 'adjoinable', '-ARG', 'LF:by'}
sukkaa          ['LANG:FI']
sukan           ['LANG:FI']
sukat           ['LANG:FI']
sukka-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'PF:sukka-', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'LF:socks', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
talo            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'LF:house', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', 'PF:talo'}
tama            ['LANG:FI']
tama-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'PF:tama', '-COMP:D', 'LANG:FI', 'COMP:uR', 'PHI', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'LF:this', 'COMP:P', '-COMP:ADV'}
tassa           ['LANG:FI']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-ASP', '-SPEC:T/fin', 'SPEC:*', 'PHI:NUM:_', 'MODAL', 'SPEC:ADV', 'PF:taytyy', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:A/inf', 'LANG:FI', '-VAL', 'V', '-COMP:V', 'FIN', 'LF:must', 'PHI:PER:_'}
teki            ['LANG:FI']
teke-           {'-COMP:v', 'LF:make', '-SPEC:FORCE', 'PF:teke', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', '!COMP:D', 'PHI:NUM:_', '-COMP:A/inf', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
that            {'LANG:EN', 'PF:that', '!PROBE:T/fin', 'FORCE', 'COMP:C/fin', '-VAL', '-SPEC:*', '!COMP:*', 'LF:that', 'COMP:T/fin', 'FIN', '-ARG'}
the             {'!PROBE:N', '-COMP:T/fin', '-SPEC:V', '-SPEC:C', 'LANG:EN', '-SPEC:T/fin', '-SPEC:MA/lla', 'OP', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'D', '-ARG', '-SPEC:INF', '-SPEC:P', '-SPEC:D', 'LF:the', '-COMP:D', '!COMP:*', 'COMP:N', 'PF:the', '-COMP:uR', 'PHI:DEF:DEF'}
to              {'-SPEC:FORCE', '-SPEC:V', 'TAIL:V,+SEM:directional', '-COMP:N', '-SPEC:C', 'LANG:EN', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:*', '-SPEC:Neg/fin', 'adjoinable', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', 'PHI:NUM:_', '-SPEC:iWH', 'LF:to', 'ARG', '-SPEC:iR', '+SEM:directional', '-COMP:uWH', '-SPEC:P', 'P', '-VAL', '!COMP:*', '-SPEC:INF', 'PF:to', '-SPEC:v', 'PHI:PER:_', '-COMP:ADV'}
to_inf          {'LF:TO/inf', 'PF:TO/inf', 'LANG:EN', 'SPEC:*', 'TO/inf'}
towards         {'-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:*', '-SPEC:Neg/fin', 'adjoinable', '!COMP:D', '-SPEC:C/fin', 'PF:towards', '-SPEC:N', '-SPEC:iWH', 'PHI:NUM:_', 'ARG', '-SPEC:iR', '-COMP:uWH', '-SPEC:P', 'P', '-VAL', '!COMP:*', 'TAIL:V', '-SPEC:INF', '-SPEC:v', 'LF:towards', 'PHI:PER:_', '-COMP:ADV'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', 'PF:tonaise', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', 'LF:nudge', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
tta             {'-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-COMP:T/fin', 'COMP:n/MA', '-SPEC:ADV', '-SPEC:T/fin', 'PHI:DET:_', 'SPEC:*', 'PF:tta', '-SPEC:Neg/fin', 'adjoinable', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', 'PHI:NUM:_', '-SPEC:iWH', 'LF:without', 'ARG', '-SPEC:iR', '-COMP:uWH', '-SPEC:P', 'P', 'LANG:FI', '-VAL', '!COMP:*', 'ADV', '-SPEC:INF', '-SPEC:v', 'PHI:PER:_', '-COMP:ADV'}
tries           ['LANG:EN']
try-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', '!COMP:-ARG', 'ASP', 'SEM:internal', 'SPEC:ADV', '!COMP:TO/inf', 'ARG', 'SPEC:TO/inf', 'PF:try', '-VAL', 'V', 'LF:try', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
verifiche       {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', 'LF:verification', '-SPEC:T/fin', 'COMP:R/D', 'PF:verifiche', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:v', '-SPEC:FORCE', 'LF:flow', '-COMP:N', '!COMP:P', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:D', 'LANG:FI', '-VAL', 'V', '-COMP:V', 'PF:virtaa', 'PHI:PER:_'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', '-SPEC:*', 'PHI:NUM:_', 'ASP', 'SEM:internal', 'LF:want', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:FI', '-VAL', '!COMP:*', 'V', '-COMP:V', 'COMP:P', 'PF:volu'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-COMP:v', 'SEM:achievement', '-SPEC:FORCE', '-COMP:N', 'ASP:BOUNDED', 'SPEC:P', 'PHI:DET:_', '-COMP:T', '-SPEC:T/fin', 'LF:win', 'PF:voitta', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'LANG:FI', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
wants           ['LANG:EN']
want-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:TO/inf', 'PHI:NUM:_', 'ASP', 'LF:want', 'SPEC:ADV', 'PF:want', 'ARG', 'SPEC:TO/inf', '-VAL', 'CLASS:TR', 'V', '!COMP:*', '-COMP:V', '-COMP:P', 'COMP:P', 'PHI:PER:_'}
what            ['LANG:EN']
what-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LF:what', '-COMP:WH', 'SPEC:A', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', 'PF:what', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
which           {'!PROBE:N', '-COMP:T/fin', '-SPEC:V', '-SPEC:C', 'LANG:EN', '-SPEC:T/fin', 'PF:which', '-SPEC:MA/lla', 'LF:which', 'OP', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'D', 'OP:WH', '-ARG', '-SPEC:P', '-SPEC:D', '-COMP:D', '!COMP:*', 'COMP:N', '-COMP:uR', '-SPEC:INF'}
who             ['LANG:EN']
who-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:who', 'PF:who', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
whether         {'LANG:EN', 'OP', '!PROBE:T/fin', '-SPEC:*', 'OP:WH', '-ARG', 'PF:whether', 'LF:whether', 'FORCE', 'COMP:C/fin', '-VAL', '!COMP:*', 'Q', 'OP:Q', 'COMP:T/fin', 'FIN'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', '!COMP:-ARG', 'ASP', 'SEM:internal', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:A/inf', '-VAL', 'V', 'LF:try', '-COMP:V', 'PF:yritta', 'PHI:PER:_'}
mina            ['LANG:FI']
mina-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:I', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'PF:mina', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
sina            ['LANG:FI']
sina-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', 'PF:sina', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LF:you', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
han             ['LANG:FI']
han-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'PF:han', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', 'LF:s/he', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
hanet           ['LANG:FI']
me              ['LANG:FI']
me-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:we', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'PF:me', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
te              ['LANG:FI']
te-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LF:you', 'PF:te', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
he_FI           ['LANG:FI']
heidan          ['LANG:FI']
he-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', 'LF:they', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', 'PF:he', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
he-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'LF:he', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', 'PF:he', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
se              ['LANG:FI']
se-             {'!PROBE:N', '-COMP:T/fin', '-SPEC:V', 'PF:se', '-SPEC:C', '-SPEC:T/fin', '-SPEC:MA/lla', 'OP', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'D', '-ARG', 'LF:it/that', '-SPEC:P', '-SPEC:D', '-COMP:D', 'LANG:FI', '!COMP:*', 'COMP:N', '-COMP:uR', '-SPEC:INF'}
I               ['LANG:FI']
I-              {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:I', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'PF:I', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
you             ['LANG:FI']
you-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', 'PF:you', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LF:you', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
he              ['LANG:FI']
she             ['LANG:FI']
she-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'PF:she', 'LF:she', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
we              ['LANG:FI']
we-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:we', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', 'PF:we', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
you_pl          ['LANG:FI']
you_pl-         {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:you_pl', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'PF:you_pl', '-COMP:D', 'COMP:uR', 'PHI', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
they            ['LANG:FI']
they-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', 'LF:they', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'PF:they', '-COMP:WH', 'SPEC:A', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
it              ['LANG:EN']
it-             {'!PROBE:N', '-COMP:T/fin', '-SPEC:V', '-SPEC:C', 'LANG:EN', '-SPEC:T/fin', '-SPEC:MA/lla', 'OP', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'D', '-ARG', 'LF:it/that', '-SPEC:P', '-SPEC:D', 'PF:it', '-COMP:D', '!COMP:*', 'COMP:N', '-COMP:uR', '-SPEC:INF'}
io              ['LANG:FI']
io-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', 'PF:io', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:I', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
tu              ['LANG:FI']
tu-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'LF:you', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'PF:tu', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
lui             ['LANG:FI']
lui-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'LF:he', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', 'PF:lui', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
lei             ['LANG:FI']
lei-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LF:she', '-SPEC:INF', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', 'PF:lei', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
noi             ['LANG:FI']
noi-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:we', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:ADV', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', 'PF:noi', '-COMP:*'}
voi             ['LANG:FI']
voi-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:you_pl', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', 'PF:voi', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
loro            ['LANG:EN']
loro-           {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', 'LF:they', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'PF:loro', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
mi              ['LANG:FI']
mi-             {'-COMP:N', 'PF:mi(cl)', 'N', '-SPEC:V', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', 'PHI_N', 'CL', 'LANG:IT', '-COMP:WH', '-COMP:V', 'COMP:P', '-COMP:*', '-COMP:v', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LF:me', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:ADV'}
la              ['LANG:FI']
la-             {'-COMP:N', 'N', '-SPEC:V', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', 'PHI_N', 'CL', 'LANG:IT', '-COMP:WH', 'LF:her', '-COMP:V', 'COMP:P', '-COMP:*', '-COMP:v', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PF:la(cl)', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:ADV'}
lo              ['LANG:FI']
lo-             {'-COMP:N', 'N', '-SPEC:V', '-SPEC:T/fin', 'COMP:R/D', 'COMP:R', 'PHI_N', '-SPEC:INF', 'CL', 'LANG:IT', 'PF:lo(cl)', '-COMP:WH', '-COMP:V', 'COMP:P', '-COMP:*', '-COMP:v', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', 'LF:him', '-COMP:ADV'}
si              ['LANG:FI']
si-             {'-COMP:N', 'N', '-SPEC:V', '-SPEC:T/fin', 'COMP:R/D', 'LF:3sg', 'COMP:R', 'PF:si(cl)', 'PHI_N', 'LANG:IT', '-COMP:WH', '-COMP:V', 'COMP:P', '-COMP:*', '-COMP:v', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'CAL:CL', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:ADV'}
gli             ['LANG:FI']
gli             ['LANG:FI']
ci              ['LANG:FI']
ci-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:there', 'COMP:R', 'PF:ci', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', 'PHI_N', '-COMP:C/fin', '-SPEC:uWH', 'LANG:IT', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'COMP:uR', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV', '-COMP:*'}
[-n]            {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:1', 'inflectional', 'PHI:NUM:SG', 'LANG:FI'}
[-t]            {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:NUM:SG', 'LANG:FI'}
[-V]            {'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG', 'LANG:FI'}
[-mme]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI', 'PHI:NUM:PL', 'inflectional', 'LANG:FI'}
[-mme]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:NUM:PL', 'inflectional', 'LANG:FI'}
[-tte]          {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:PL', 'inflectional', 'LANG:FI'}
[-vat]          {'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'inflectional', 'LANG:FI'}
[-ni]           {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:1', 'inflectional', 'PHI:NUM:SG', 'LANG:FI'}
[-si]           {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:NUM:SG', 'LANG:FI'}
[-nsa]          {'PHI', 'PHI:PER:3', 'inflectional', 'LANG:FI'}
[-an]           {'PHI', 'PHI:PER:3', 'inflectional', 'LANG:FI'}
[-nne]          {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'LANG:FI'}
[-s]            {'PHI', 'PHI:GEN:F', 'LANG:EN', 'PHI:GEN:M', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-0]            {'PHI:DET:DEF', 'LANG:EN', 'PHI:NUM:PL', 'PHI:PER:1', 'inflectional', 'PHI:NUM:SG', 'PHI:GEN:N', 'PHI', 'PHI:PER:3', 'PHI:PER:2'}
[-o]            {'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'PHI:PER:1', 'inflectional', 'PHI:NUM:SG'}
[-i]            {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'inflectional', 'PHI:NUM:SG'}
[-a]            {'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-e]            {'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-iamo]         {'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:IT', 'PHI:PER:1', 'PHI', 'PHI:NUM:PL', 'inflectional'}
[-te]           {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'PHI:NUM:PL', 'inflectional'}
[-no]           {'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'inflectional'}
[-nom]          {'NOM', 'adjoinable', 'TAIL:FIN,ARG,VAL', 'inflectional', 'LANG:FI'}
[-par]          {'PAR', 'adjoinable', 'TAIL:ARG,-VAL', 'inflectional', 'LANG:FI'}
[-gen]          {'GEN', 'TAIL:INF,ARG', '-adjoinable', 'inflectional', 'LANG:FI'}
[-n_acc]        {'adjoinable', 'TAIL:PHI', 'LANG:FI', 'n-ACC', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG'}
[-t_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'inflectional', 't-ACC', 'TAIL:*POL:NEG'}
[-0_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*PHI', 'LANG:FI', 'inflectional', '0_ACC', 'TAIL:*POL:NEG'}
asp             {'ASP:BOUNDED', 'inflectional', 'LANG:FI'}
a'              {'LF:A', 'a', 'LANG:X', 'PF:a'}
b'              {'PF:b', 'LF:B', 'b', 'LANG:X'}
b''             {'PF:b', 'b', 'LF:B', '-COMP:c', 'LANG:FI'}
c''             {'LF:C', 'SPEC:a', 'c', 'PF:c', 'LANG:FI'}
c'              {'LF:C', 'LANG:X', 'c', 'PF:c'}
d'              {'LANG:', 'PF:d', 'd', 'LF:D'}
a''             ['LANG:FI']
x'              {'PF:x', 'LANG:X', 'LF:X', 'x'}
y'              {'LANG:X', 'PF:y', 'LF:Y', 'y'}
z'              {'PF:x', 'LF:Z', 'z', 'LANG:X'}
John'           {'LF:John', "N'", 'PF:John', 'LANG:X'}
admires'        {'PF:admires', 'LANG:X', "V'", 'LF:admires'}
admires''       {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'LANG:EN', '-COMP:T', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:admires', 'PF:admires', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-VAL', 'V', '-COMP:V', 'COMP:P', 'PHI:PER:_'}
Mary'           {'LF:mary', "N'", 'LANG:X', 'PF:Mary'}
T/fin           {'-SPEC:FORCE', '-SPEC:V', '!PROBE:V', 'PHI:DET:_', '-SPEC:T/fin', 'FIN', 'SPEC:*', 'VAL', 'COMP:v', 'SPEC:D', 'PF:T', '-SPEC:N', '-SPEC:C/fin', 'PHI:NUM:_', '!SPEC:*', 'T', 'LF:T', 'ARG', 'SPEC:TO/inf', 'T/fin', 'LANG:FI', 'COMP:D', 'COMP:V', '!COMP:*', 'COMP:T/prt', '-SPEC:v', 'PHI:PER:_'}
v               {'!PROBE:V', 'ARG', 'PHI:DET:_', 'PF:v', 'LF:v', 'PHI:PER:_', 'LANG:FI', '-VAL', 'COMP:V', '!COMP:*', 'SPEC:D', '-SPEC:N', 'PHI:NUM:_', 'ASP', 'v'}
v*              {'LF:v*', 'v*', '!PROBE:V', 'ARG', 'PHI:DET:_', 'PF:v*', 'PHI:PER:_', 'LANG:FI', '-VAL', 'COMP:V', 'SEM:external', '!COMP:*', 'SPEC:D', '-SPEC:N', 'PHI:NUM:_', 'ASP', 'v'}
C/fin           {'-SPEC:T/fin', 'SPEC:*', 'C', 'VAL', '-SPEC:C/fin', '-SPEC:N', '-COMP:C/fin', '!PROBE:FIN', '-ARG', 'C/fin', 'PF:C', 'LF:C/fin', 'LANG:FI', '-COMP:T/prt', '!COMP:*', 'COMP:T/fin', 'COMP:Neg/fin', 'FIN'}
T               {'-SPEC:FORCE', '-SPEC:V', '!PROBE:V', 'PHI:DET:_', '-SPEC:T/fin', 'SPEC:*', 'COMP:v', 'VAL', 'SPEC:D', 'PF:T', '-SPEC:N', 'PHI:NUM:_', '!SPEC:*', 'T', 'LF:T', 'ARG', 'LANG:FI', 'COMP:D', 'COMP:V', '!COMP:*', '-COMP:NEG', 'COMP:T/prt', 'FIN', 'PHI:PER:_'}
T/prt           {'-SPEC:FORCE', '-SPEC:V', '!PROBE:V', 'PHI:DET:_', '-SPEC:T/fin', 'SPEC:*', 'VAL', 'COMP:v', 'SPEC:D', '-SPEC:N', 'PHI:NUM:_', '!SPEC:*', 'T', 'ARG', 'PHI:PER:_', 'LANG:FI', 'LF:T/prt', 'COMP:D', 'COMP:V', '!COMP:*', '-COMP:NEG', 'COMP:T/prt', 'FIN', 'T/prt', 'PF:T/prt'}
a0              {'LF:A', 'SPEC:*', 'COMP:0', 'LANG:FI', 'PF:A', 'adjoinable', 'A', 'TAIL:D', '-SPEC:A'}
n               {'-COMP:N', 'N', '-SPEC:V', '-SPEC:T/fin', 'COMP:R/D', 'INF', 'VAL', 'PHI:NUM:_', 'COMP:R', 'ARG', '-COMP:WH', '-COMP:V', 'COMP:P', '-COMP:v', 'PF:n', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:ADV', 'PHI:DET:_', 'COMP:0', 'SPEC:*', 'COMP:v', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '!SPEC:*', '-SPEC:uWH', '!SPEC:D', 'SPEC:A', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:V', 'n', 'COMP:uR', '!COMP:*', '-COMP:AUX', '-SPEC:INF', 'PHI:PER:_', 'LF:n', '-COMP:ADV'}
impass          {'PF:impass', '!PROBE:V', 'ARG', 'LF:impass', 'PHI:DET:_', 'PHI:PER:_', 'LANG:FI', '-VAL', 'COMP:V', '!COMP:*', 'SPEC:D', '-SPEC:N', 'PHI:NUM:_', 'ASP', 'v'}
cau             {'!PROBE:V', 'ARG', 'PHI:DET:_', 'PF:Cau', 'LF:v/Cause', 'PHI:PER:_', 'LANG:FI', '-VAL', 'COMP:V', '!COMP:*', 'SPEC:D', '-SPEC:N', 'PHI:NUM:_', 'ASP', 'v'}
INF             {'-SPEC:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:FORCE', 'LANG:FI', 'INF', 'COMP:V', 'COMP:v', '!COMP:*', 'LF:INF', 'PF:INF'}
prtcpl          {'-SPEC:FORCE', '-SPEC:V', '!PROBE:V', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:FORCE', 'SPEC:*', 'INF', 'VAL', 'COMP:v', 'SPEC:D', '-SPEC:N', 'PHI:NUM:_', '-COMP:C/fin', '!SPEC:*', 'T', 'ARG', 'PHI:PER:_', 'LF:T/prt', 'LANG:FI', 'COMP:D', 'COMP:V', '!COMP:*', '-COMP:NEG', 'COMP:T/prt', 'FIN', 'T/prt', 'PF:T/prt'}
TO/inf          {'LF:TO/inf', '-SPEC:V', '?ARG', '-SPEC:T/fin', '-COMP:FORCE', 'PF:TO/inf', 'INF', 'COMP:v', 'adjoinable', '-COMP:C/fin', 'TO/inf', 'LANG:FI', '-VAL', 'COMP:V', '!COMP:*', '-SPEC:v'}
A/inf           {'-SPEC:V', '?ARG', '-SPEC:T/fin', 'PF:A/inf', '-COMP:FORCE', 'SPEC:*', 'INF', '?VAL', 'COMP:v', 'LF:A/inf', '-SPEC:Neg/fin', '-COMP:C/fin', 'A/inf', 'LANG:FI', 'COMP:V', '!COMP:*'}
ARE/inf         {'PF:are', '-SPEC:V', '?ARG', 'LF:ARE/inf', '-SPEC:T/fin', '-COMP:FORCE', 'INF', 'LANG:FI', 'VAL', 'COMP:V', 'adjoinable', 'COMP:v', 'ARE/inf', '!COMP:*', '-COMP:C/fin'}
ESSA/inf        {'-SPEC:FORCE', '-SPEC:V', '?ARG', '-SPEC:T/fin', '-COMP:FORCE', 'SPEC:*', 'INF', '?VAL', 'COMP:v', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', '-COMP:C/fin', 'LF:while', 'LANG:FI', 'ESSA/inf', 'COMP:V', '!COMP:*', 'ADV', 'PF:essa'}
TUA/inf         {'TUA/inf', '-SPEC:FORCE', '-SPEC:V', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:FORCE', 'SPEC:*', 'INF', 'PF:tua', 'COMP:v', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'PHI:NUM:_', '!SPEC:*', '-COMP:C/fin', 'LF:after', 'ARG', 'CAL', 'LANG:FI', 'COMP:V', '!COMP:*', 'ADV', 'PHI:PER:_'}
VA/inf          {'-SPEC:V', 'VA/inf', '?ARG', 'LF:VA', '-SPEC:T/fin', '-COMP:FORCE', 'SPEC:*', 'INF', 'VAL', 'COMP:v', '-SPEC:N', '-COMP:C/fin', 'PF:vAn', 'LANG:FI', 'COMP:V', '!COMP:*'}
MA/ssa          {'-SPEC:FORCE', 'PHI:DET:_', '-SPEC:T/fin', 'SPEC:*', 'COMP:v', '-SPEC:Neg/fin', 'adjoinable', 'PF:massa', '-SPEC:N', 'PHI:NUM:_', 'ARG', 'LF:in_doing', 'LANG:FI', 'COMP:V', 'MA/inf', '-VAL', 'ADV', 'TAIL:V', 'PHI:PER:_'}
MA/tta          {'-SPEC:FORCE', 'ARG', 'PHI:DET:_', '-SPEC:T/fin', 'LF:without_doing', 'SPEC:*', 'LANG:FI', '-VAL', 'MA/inf', '-SPEC:Neg/fin', 'adjoinable', 'ADV', '-SPEC:N', 'PHI:NUM:_', 'PF:matta', 'PHI:PER:_'}
MA/lla          {'-SPEC:FORCE', 'PHI:DET:_', '-SPEC:T/fin', 'SPEC:*', 'COMP:v', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:N', 'PHI:NUM:_', 'PF:malla', 'ARG', 'TAIL:T', 'LANG:FI', 'COMP:V', 'MA/inf', 'LF:by_doing', '-VAL', 'ADV', 'PHI:PER:_'}
E/inf           {'-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:*', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:N', 'ADV', 'PF:en', 'adjoinable', '-ARG', 'LF:by'}
ndo             {'-SPEC:V', '-SPEC:T/fin', '-COMP:FORCE', 'INF', 'VAL', 'PHI:NUM:_', 'ARG', 'PRG', 'PF:PRG', 'PHI:DET:_', 'LF:ing', 'SPEC:*', 'COMP:v', '-COMP:C/fin', '!SPEC:*', 'LANG:FI', 'COMP:V', '!COMP:*', 'PHI:PER:_'}
BE-             {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', '-COMP:T', '-SPEC:T/fin', 'SPEC:D', 'PF:BE', 'ASP', '-ARG', 'SPEC:ADV', 'LF:BE', 'SPEC:TO/inf', 'COPULA', 'LANG:FI', '-VAL', '!COMP:*', 'V', '-COMP:V', 'COMP:P'}
D               {'!PROBE:N', '-COMP:T/fin', '-SPEC:V', '-SPEC:C', '-SPEC:T/fin', '-SPEC:MA/lla', 'OP', '-SPEC:Neg/fin', '-SPEC:N', 'adjoinable', 'D', '-ARG', 'LF:D', '-SPEC:P', '-SPEC:D', 'PF:D', 'LANG:FI', '-COMP:D', '!COMP:*', 'COMP:N', '-COMP:uR', '-SPEC:INF'}
P               {'-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:T/fin', 'SPEC:*', '-SPEC:Neg/fin', 'adjoinable', '!COMP:D', '-SPEC:C/fin', '-SPEC:N', 'LF:P', '-SPEC:iWH', 'PHI:NUM:_', 'ARG', '-SPEC:iR', '-COMP:uWH', '-SPEC:P', 'P', 'LANG:FI', 'PF:P', '-VAL', '!COMP:*', '-SPEC:INF', '-SPEC:v', 'PHI:PER:_', '-COMP:ADV'}
pro             ['LANG:FI']
pro-            {'-COMP:v', '-SPEC:FORCE', '-COMP:N', 'N', 'PF:(pro)', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R/D', 'LF:pro', 'COMP:R', '-SPEC:N', '-SPEC:C/fin', '-COMP:A', '-COMP:C/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-COMP:D', 'LANG:FI', 'COMP:uR', 'PHI', '-COMP:AUX', '-SPEC:INF', '-COMP:V', 'COMP:P', '-COMP:ADV'}
cl              {'CL', 'LEFT:T/fin', 'RIGHT:PRG', 'LEFT:D,CL', 'RIGHT:ARE/inf', 'inflectional', 'LANG:FI'}
inc             {'LANG:FI', 'inflectional', 'INCORPORATED'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:FI'}
pl              {'PHI:NUM:PL', 'inflectional', 'LANG:FI'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:FI'}
2p              {'PHI:PER:2', 'inflectional', 'LANG:FI'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:FI'}
def             {'PHI:DET:DEF', 'inflectional', 'LANG:FI'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:FI'}
hum             {'PHI:HUM:HUM', 'inflectional', 'LANG:FI'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:FI'}
m               {'PHI:GEN:M', 'inflectional', 'LANG:FI'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:FI'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'LANG:FI'}
acc             {'LANG:FI', 'inflectional', 'TAIL:ARG,-VAL'}
uC/op           {'uC/op', 'inflectional', 'LANG:FI'}
wh              {'OP:WH', 'OP:_', 'inflectional', 'LANG:FI'}
wh_             {'FORCE:OP:WH', '!SPEC:OP:_', 'OP:_', 'OP', 'inflectional', 'LANG:FI'}
top             {'OP:TOP', 'inflectional', 'LANG:FI'}
foc             {'OP:FOC', 'inflectional', 'LANG:FI'}
C/op            {'OP:C/OP', 'inflectional', 'LANG:FI'}
rel             {'OP:REL', 'inflectional', 'LANG:FI'}
Q               {'OP:Q', 'OP:WH', 'OP', 'inflectional', 'LANG:FI'}
