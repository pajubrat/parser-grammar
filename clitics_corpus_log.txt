

\========================================================================
# 1
['lavano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "lava" and reconstructed it = [T/fin [v [lava D{N}]]]
					Extracted head "Luisa" from D and created [T/fin [v [lava [D Luisa]]]]
					=[T/fin [v [lava [D Luisa]]]]
				2. Feature processing:
					=[T/fin [v [lava [D Luisa]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [lava [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [lava [D Luisa]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [v [lava [D Luisa]]]]
			= [T/fin [v [lava [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [lava [D Luisa]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [D Luisa]]]]
		Grammar: [T/fin [v [lava [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 2
['loro', 'lavano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D loro] T/fin{v}]

10.
		Consume "lava"

		[[D loro] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=[[D loro] T/fin{v,V}]

11.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[D loro] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D loro] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D loro] [T/fin{v,V} D]]

17.
		Consume "Luisa"

		[[D loro] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{v,V} D{N}]]

18.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [v{V} D{N}]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [v [lava D{N}]]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [v [lava [D Luisa]]]]]
					=[[D loro] [T/fin [v [lava [D Luisa]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [v [lava [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [v [lava [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [T/fin [[D loro] [v [lava [D Luisa]]]]]]
					=[[D loro]:3 [T/fin [__:3 [v [lava [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:3 [T/fin [__:3 [v [lava [D Luisa]]]]]]
			= [[D loro] [T/fin [[D loro] [v [lava [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:3 [T/fin [__:3 [v [lava [D Luisa]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D Luisa])', 'v([D loro])']
!--->		Tests passed (with 18/153 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [lava [D Luisa]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [v [lava [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 3
['loro', 'devono', 'lavare', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] deva]

9.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] deva] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] are] due to bad left branch.
		Exploring solution number (1) =[deva are]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [deva are]]

10.
		Consume "v"

		[[D loro] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [deva are{v}]]

11.
		Consume "lava"

		[[D loro] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [deva are{v,V}]]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [deva are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [deva [are [v lava]]] as left branch because it constitutes illicit structure.
				Prioritize [lava D] due to complement selection.
				[[D loro] [deva are{v,V}]] + D = -197]
				[deva are{v,V}] + D = -194]
				are{v,V} + D = 106]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[deva are{v,V}]; D]
			3. [[[D loro] [deva are{v,V}]]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[[D loro] [deva [are{v,V} D]]]

18.
		Consume "Luisa"

		[[D loro] [deva [are{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [deva [are{v,V} D{N}]]]

19.
	>>>	Trying candidate parse [[D loro] [deva [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [deva [are{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [deva [are{v,V} D{N}]]].
						Extracted head "v{V}" and reconstructed it = [[D loro] [deva [are [v{V} D{N}]]]]
						Extracted head "lava" and reconstructed it = [[D loro] [deva [are [v [lava D{N}]]]]]
					Extracted head "Luisa" from D and created [[D loro] [deva [are [v [lava [D Luisa]]]]]]
					=[[D loro] [deva [are [v [lava [D Luisa]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [deva [are [v [lava [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [deva [are [v [lava [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [deva [[D loro] [are [v [lava [D Luisa]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:8 from memory buffer into Spec of v
					Result [[D loro]:8 [deva [__:8 [are [__:8 [v [lava [D Luisa]]]]]]]]
					=[[D loro]:8 [deva [__:8 [are [__:8 [v [lava [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:N from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:8 [deva [__:8 [are [__:8 [v [lava [D Luisa]]]]]]]]
			= [[D loro] [deva [[D loro] [are [[D loro] [v [lava [D Luisa]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:8 [deva [__:8 [are [__:8 [v [lava [D Luisa]]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. deva 4. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. [D loro] 4. deva 5. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D Luisa])', 'v([D loro])']
!--->		Tests passed (with 19/189 operations) <------------------------------------
		Solution:
		[[D loro] [deva [[D loro] [are [[D loro] [v [lava [D Luisa]]]]]]]]
		Grammar: [[D loro]:1 [deva [__:1 [are [__:1 [v [lava [D Luisa]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [INF [__:1 [v [V [D N]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
deva: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
lava: [V, v, INF, TT/fin]
D: [D, V, v, INF, TT/fin]
Luisa: [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 4
['loro', 'hanno', 'lavato', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

14.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

15.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

16.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 112]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

22.
		Consume "Luisa"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [T/prt{v,V} D{N}]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v{V} D{N}]]]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [lava D{N}]]]]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
					=[[D loro] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D Luisa]]]]]]]]
					=[[D loro]:14 [T/fin [__:14 [ha [T/prt [v [lava [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[D loro]:14 [T/fin [__:14 [ha [T/prt [v [lava [D Luisa]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:14 [T/fin [__:14 [ha [T/prt [v [lava [D Luisa]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				T/prt with ['PHI:PER:_'] was associated at LF with:
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Person feature is missing', 'ha([D loro])', 'lava([D Luisa])', 'v([D loro])']
!--->		Tests passed (with 23/212 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [T [v [V [D N]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 5
['io', 'ho', 'lavato', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word ha-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] T/fin]

10.
		Consume "ha"

		[[D io] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D io] T/fin{V}]

11.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D io] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D io] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D io] [T/fin{V} T/prt]]

15.
		Consume "v"

		[[D io] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D io] [T/fin{V} T/prt{v}]]

16.
		Consume "lava"

		[[D io] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D io] [T/fin{V} T/prt{v,V}]]

17.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D io] [T/fin [[D io] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D io] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 112]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D io] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D io] [T/fin{V} [T/prt{v,V} D]]]

23.
		Consume "Luisa"

		[[D io] [T/fin{V} [T/prt{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [T/fin{V} [T/prt{v,V} D{N}]]]

24.
	>>>	Trying candidate parse [[D io] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [T/fin{V} [T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [T/fin{V} [T/prt{v,V} D{N}]]].
						Extracted head "ha" and reconstructed it = [[D io] [T/fin [ha [T/prt{v,V} D{N}]]]]
						Extracted head "v{V}" and reconstructed it = [[D io] [T/fin [ha [T/prt [v{V} D{N}]]]]]
						Extracted head "lava" and reconstructed it = [[D io] [T/fin [ha [T/prt [v [lava D{N}]]]]]]
					Extracted head "Luisa" from D and created [[D io] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
					=[[D io] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
				2. Feature processing:
					=[[D io] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of ha
					Result [[D io] [T/fin [[D io] [ha [T/prt [v [lava [D Luisa]]]]]]]]
					=[[D io]:19 [T/fin [__:19 [ha [T/prt [v [lava [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[D io]:19 [T/fin [__:19 [ha [T/prt [v [lava [D Luisa]]]]]]]]
			= [[D io] [T/fin [[D io] [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:19 [T/fin [__:19 [ha [T/prt [v [lava [D Luisa]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				T/prt with ['PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['T/prt([D io])', 'ha([D io])', 'lava([D Luisa])', 'v([D io])']
!--->		Tests passed (with 24/215 operations) <------------------------------------
		Solution:
		[[D io] [T/fin [[D io] [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Grammar: [[D io]:1 [T/fin [__:1 [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [T [v [V [D N]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
io: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 6
['loro', 'hanno', 'voluto', 'lavare', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

11.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

12.
		Consume "volu"

		[[D loro] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

13.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] are] due to bad left branch.
				Reject [[T/fin [ha [T/prt [v volu]]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} are]]]

14.
		Consume "v"

		[[D loro] [T/fin{V} [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} [T/prt{v,V} are{v}]]]

15.
		Consume "lava"

		[[D loro] [T/fin{V} [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]]

16.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v lava]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T/prt{v,V} are{v,V}], D] because the operation breaks up an existing selectional dependency.
				"lava" lacks complement.
				Avoid [T/prt [v [volu [are [v lava]]]]] as left branch because it constitutes illicit structure.
				Prioritize [lava D] due to complement selection.
				Avoid are{v,V} because it could break words.
				[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]] + D = -197]
				[T/fin{V} [T/prt{v,V} are{v,V}]] + D = -194]
				[T/prt{v,V} are{v,V}] + D = -191]
				are{v,V} + D = 12]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[T/prt{v,V} are{v,V}]; D]
			3. [[T/fin{V} [T/prt{v,V} are{v,V}]]; D]
			4. [[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D]]]]

22.
		Consume "Luisa"

		[[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D]]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [T/prt{v,V} [are{v,V} D{N}]]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v{V} [are{v,V} D{N}]]]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [volu [are{v,V} D{N}]]]]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [volu [are [v{V} D{N}]]]]]]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [volu [are [v [lava D{N}]]]]]]]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]
					=[[D loro] [T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]]
					=[[D loro]:25 [T/fin [__:25 [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:25 [T/fin [__:25 [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:25 [T/fin [__:25 [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				are with ['PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['T/prt([D loro])', 'are([D loro])', 'ha([D loro])', 'lava([D Luisa])', 'v([D loro])', 'volu([D loro])']
!--->		Tests passed (with 23/255 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [T [v [V [INF [v [V [D N]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
are: [INF, V, v, T, V, TT/fin]
v: [v, INF, V, v, T, V, TT/fin]
lava: [V, v, INF, V, v, T, V, TT/fin]
D: [D, V, v, INF, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 7
['loro', 'stanno', 'lavando', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "sta"

		[[D loro] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D loro] T/fin{V}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D loro] T/fin{V}] + PRG = -98]
				T/fin{V} + PRG = 104]
		Ranking completed:
			1. [T/fin{V}; PRG]
			2. [[[D loro] T/fin{V}]; PRG]
		Exploring solution number (1) =[T/fin{V} PRG]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} PRG]]

11.
		Consume "v"

		[[D loro] [T/fin{V} PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D loro] [T/fin{V} PRG{v}]]

12.
		Consume "lava"

		[[D loro] [T/fin{V} PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D loro] [T/fin{V} PRG{v,V}]]

13.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} PRG{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [sta [PRG [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [sta [PRG [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [lava D] due to complement selection.
				Avoid PRG{v,V} because it could break words.
				[[D loro] [T/fin{V} PRG{v,V}]] + D = -197]
				[T/fin{V} PRG{v,V}] + D = -194]
				PRG{v,V} + D = 9]
		Ranking completed:
			1. [PRG{v,V}; D]
			2. [[T/fin{V} PRG{v,V}]; D]
			3. [[[D loro] [T/fin{V} PRG{v,V}]]; D]
		Exploring solution number (1) =[PRG{v,V} D]
			Transferring PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRG{v,V}
				2. Feature processing:
					=PRG{v,V}
				3. Floater movement reconstruction:
					=PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRG{v,V} probing for CAT:V failed.
				"PRG{v,V}" lacks complement.
					=PRG{v,V}
				5. Agreement reconstruction:
					=PRG{v,V}
			=[[D loro] [T/fin{V} [PRG{v,V} D]]]

19.
		Consume "Luisa"

		[[D loro] [T/fin{V} [PRG{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{V} [PRG{v,V} D{N}]]]

20.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [PRG{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [PRG{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [PRG{v,V} D{N}]]].
						Extracted head "sta" and reconstructed it = [[D loro] [T/fin [sta [PRG{v,V} D{N}]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [sta [PRG [v{V} D{N}]]]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [sta [PRG [v [lava D{N}]]]]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [sta [PRG [v [lava [D Luisa]]]]]]]
					=[[D loro] [T/fin [sta [PRG [v [lava [D Luisa]]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [sta [PRG [v [lava [D Luisa]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [sta [PRG [v [lava [D Luisa]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] [sta [PRG [v [lava [D Luisa]]]]]]]]
					=[[D loro]:30 [T/fin [__:30 [sta [PRG [v [lava [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:30 [T/fin [__:30 [sta [PRG [v [lava [D Luisa]]]]]]]]
			= [[D loro] [T/fin [[D loro] [sta [PRG [v [lava [D Luisa]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:30 [T/fin [__:30 [sta [PRG [v [lava [D Luisa]]]]]]]] into Conceptual-Intentional system...
				sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRG with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRG([D loro])', 'lava([D Luisa])', 'sta([D loro])', 'v([D loro])']
!--->		Tests passed (with 20/201 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [sta [PRG [v [lava [D Luisa]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [sta [PRG [v [lava [D Luisa]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF [v [V [D N]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
sta: [V, TT/fin]
PRG: [INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
D: [D, V, v, INF, V, TT/fin]
Luisa: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 8
['loro', 'sembrano', 'lavare', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word sembra-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sembra-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "sembra"

		[[D loro] T/fin] + sembra
			Filtering out impossible merge sites...
			Sink "sembra" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sembra]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] T/fin{V}] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin sembra]] are] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} are]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} are]]

11.
		Consume "v"

		[[D loro] [T/fin{V} are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} are{v}]]

12.
		Consume "lava"

		[[D loro] [T/fin{V} are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} are{v,V}]]

13.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [sembra [[D loro] [are [[D loro] [v lava]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [sembra [are [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [lava D] due to complement selection.
				Avoid are{v,V} because it could break words.
				[[D loro] [T/fin{V} are{v,V}]] + D = -197]
				[T/fin{V} are{v,V}] + D = -194]
				are{v,V} + D = 9]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[T/fin{V} are{v,V}]; D]
			3. [[[D loro] [T/fin{V} are{v,V}]]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[[D loro] [T/fin{V} [are{v,V} D]]]

19.
		Consume "Luisa"

		[[D loro] [T/fin{V} [are{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{V} [are{v,V} D{N}]]]

20.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [are{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [are{v,V} D{N}]]].
						Extracted head "sembra" and reconstructed it = [[D loro] [T/fin [sembra [are{v,V} D{N}]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [sembra [are [v{V} D{N}]]]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [sembra [are [v [lava D{N}]]]]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [sembra [are [v [lava [D Luisa]]]]]]]
					=[[D loro] [T/fin [sembra [are [v [lava [D Luisa]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [T/fin [sembra [are [v [lava [D Luisa]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [sembra [are [v [lava [D Luisa]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [T/fin [sembra [[D loro] [are [v [lava [D Luisa]]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:35 from memory buffer into Spec of v
					Result [[D loro]:35 [T/fin [sembra [__:35 [are [__:35 [v [lava [D Luisa]]]]]]]]]
					=[[D loro]:35 [T/fin [sembra [__:35 [are [__:35 [v [lava [D Luisa]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:35 [T/fin [sembra [__:35 [are [__:35 [v [lava [D Luisa]]]]]]]]]
			= [[D loro] [T/fin [sembra [[D loro] [are [[D loro] [v [lava [D Luisa]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:35 [T/fin [sembra [__:35 [are [__:35 [v [lava [D Luisa]]]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. [D loro] 4. T/fin 5. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D Luisa])', 'v([D loro])']
!--->		Tests passed (with 20/197 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [sembra [[D loro] [are [[D loro] [v [lava [D Luisa]]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [sembra [__:1 [are [__:1 [v [lava [D Luisa]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [V [__:1 [INF [__:1 [v [V [D N]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sembra:['!COMP:ARE/inf', '-ARG', '-COMP:D', '-COMP:N', '-COMP:V', '-R', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:seem', 'PF:sembra', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sembra:['!COMP:ARE/inf', '-ARG', '-COMP:D', '-COMP:N', '-COMP:V', '-R', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:seem', 'PF:sembra', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
sembra: [V, TT/fin]
__: [D, V, TT/fin]
__: [N, D, V, TT/fin]
are: [INF, V, TT/fin]
__: [D, INF, V, TT/fin]
__: [N, D, INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
D: [D, V, v, INF, V, TT/fin]
Luisa: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 9
['io', 'adoro', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] T/fin]

10.
		Consume "v"

		[[D io] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D io] T/fin{v}]

11.
		Consume "adora"

		[[D io] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D io] T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D io] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D io] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D io] [T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D io] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D io] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D io] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D io] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D io] [T/fin [v [adora [D Luisa]]]]]
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of v
					Result [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
					=[[D io]:39 [T/fin [__:39 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:39 [T/fin [__:39 [v [adora [D Luisa]]]]]]
			= [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:39 [T/fin [__:39 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v([D io])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Grammar: [[D io]:1 [T/fin [__:1 [v [adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
io: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 10
['tu', 'adori', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word tu-#D#sg#2p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '2p$', 'sg$', 'D$', 'tu-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "tu"

		D + tu
			Filtering out impossible merge sites...
			Sink "tu" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*tu]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-i].
		Next word contains multiple morphemes ['[-i]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "tu" from D and created [D tu]
					Reconstructing head movement for D{N}.
					Extracted head "tu" from D and created [D tu]
					D was opened into [D tu].
					=[D tu]
				2. Feature processing:
					=[D tu]
				3. Floater movement reconstruction:
					=[D tu]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D tu]
				5. Agreement reconstruction:
					=[D tu]
			=[[D tu] T/fin]

10.
		Consume "v"

		[[D tu] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D tu] T/fin{v}]

11.
		Consume "adora"

		[[D tu] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D tu] T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D tu] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D tu] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D tu] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D tu] [T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D tu] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D tu] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D tu] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D tu] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D tu] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D tu] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D tu] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D tu] [T/fin [v [adora [D Luisa]]]]]
					=[[D tu] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D tu] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D tu] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D tu " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D tu] from memory buffer into Spec of v
					Result [[D tu] [T/fin [[D tu] [v [adora [D Luisa]]]]]]
					=[[D tu]:42 [T/fin [__:42 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:2 from the edge of T/fin.
					=[[D tu]:42 [T/fin [__:42 [v [adora [D Luisa]]]]]]
			= [[D tu] [T/fin [[D tu] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D tu]:42 [T/fin [__:42 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tu]    (alternatives: 2. T/fin 3. [D tu] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D tu] 3. T/fin 4. [D tu] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v([D tu])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D tu] [T/fin [[D tu] [v [adora [D Luisa]]]]]]
		Grammar: [[D tu]:1 [T/fin [__:1 [v [adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL', 'null']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL', 'null']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
tu: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['lui', 'adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lui-#D#sg#3p#def#hum#m.
		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lui-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "lui"

		D + lui
			Filtering out impossible merge sites...
			Sink "lui" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lui]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-a].
		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lui" from D and created [D lui]
					Reconstructing head movement for D{N}.
					Extracted head "lui" from D and created [D lui]
					D was opened into [D lui].
					=[D lui]
				2. Feature processing:
					=[D lui]
				3. Floater movement reconstruction:
					=[D lui]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lui]
				5. Agreement reconstruction:
					=[D lui]
			=[[D lui] T/fin]

10.
		Consume "v"

		[[D lui] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D lui] T/fin{v}]

11.
		Consume "adora"

		[[D lui] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D lui] T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D lui] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D lui] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D lui] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D lui] [T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D lui] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D lui] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D lui] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D lui] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lui] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D lui] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D lui] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D lui] [T/fin [v [adora [D Luisa]]]]]
					=[[D lui] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D lui] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D lui] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lui " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D lui] from memory buffer into Spec of v
					Result [[D lui] [T/fin [[D lui] [v [adora [D Luisa]]]]]]
					=[[D lui]:45 [T/fin [__:45 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:M from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D lui]:45 [T/fin [__:45 [v [adora [D Luisa]]]]]]
			= [[D lui] [T/fin [[D lui] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D lui]:45 [T/fin [__:45 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lui]    (alternatives: 2. T/fin 3. [D lui] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D lui] 3. T/fin 4. [D lui] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v([D lui])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D lui] [T/fin [[D lui] [v [adora [D Luisa]]]]]]
		Grammar: [[D lui]:1 [T/fin [__:1 [v [adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
lui: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 12
['lei', 'adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lei-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lei-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "lei"

		D + lei
			Filtering out impossible merge sites...
			Sink "lei" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lei]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-a].
		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lei" from D and created [D lei]
					Reconstructing head movement for D{N}.
					Extracted head "lei" from D and created [D lei]
					D was opened into [D lei].
					=[D lei]
				2. Feature processing:
					=[D lei]
				3. Floater movement reconstruction:
					=[D lei]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lei]
				5. Agreement reconstruction:
					=[D lei]
			=[[D lei] T/fin]

10.
		Consume "v"

		[[D lei] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D lei] T/fin{v}]

11.
		Consume "adora"

		[[D lei] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D lei] T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D lei] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D lei] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D lei] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D lei] [T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D lei] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D lei] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D lei] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D lei] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lei] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D lei] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D lei] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D lei] [T/fin [v [adora [D Luisa]]]]]
					=[[D lei] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D lei] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D lei] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lei " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D lei] from memory buffer into Spec of v
					Result [[D lei] [T/fin [[D lei] [v [adora [D Luisa]]]]]]
					=[[D lei]:48 [T/fin [__:48 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:F from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D lei]:48 [T/fin [__:48 [v [adora [D Luisa]]]]]]
			= [[D lei] [T/fin [[D lei] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D lei]:48 [T/fin [__:48 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lei]    (alternatives: 2. T/fin 3. [D lei] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D lei] 3. T/fin 4. [D lei] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v([D lei])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D lei] [T/fin [[D lei] [v [adora [D Luisa]]]]]]
		Grammar: [[D lei]:1 [T/fin [__:1 [v [adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
lei: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 13
['noi', 'adoriamo', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word noi-#D#pl#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'pl$', 'D$', 'noi-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "noi"

		D + noi
			Filtering out impossible merge sites...
			Sink "noi" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*noi]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-iamo].
		Next word contains multiple morphemes ['[-iamo]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "noi" from D and created [D noi]
					Reconstructing head movement for D{N}.
					Extracted head "noi" from D and created [D noi]
					D was opened into [D noi].
					=[D noi]
				2. Feature processing:
					=[D noi]
				3. Floater movement reconstruction:
					=[D noi]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D noi]
				5. Agreement reconstruction:
					=[D noi]
			=[[D noi] T/fin]

10.
		Consume "v"

		[[D noi] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D noi] T/fin{v}]

11.
		Consume "adora"

		[[D noi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D noi] T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D noi] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D noi] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D noi] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D noi] [T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D noi] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D noi] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D noi] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D noi] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D noi] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D noi] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D noi] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D noi] [T/fin [v [adora [D Luisa]]]]]
					=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D noi " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D noi] from memory buffer into Spec of v
					Result [[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
					=[[D noi]:51 [T/fin [__:51 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D noi]:51 [T/fin [__:51 [v [adora [D Luisa]]]]]]
			= [[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D noi]:51 [T/fin [__:51 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D noi]    (alternatives: 2. T/fin 3. [D noi] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D noi] 3. T/fin 4. [D noi] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v([D noi])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Grammar: [[D noi]:1 [T/fin [__:1 [v [adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
noi: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 14
['voi', 'adorate', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word voi-#D#pl#2p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '2p$', 'pl$', 'D$', 'voi-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "voi"

		D + voi
			Filtering out impossible merge sites...
			Sink "voi" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*voi]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-te].
		Next word contains multiple morphemes ['[-te]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "voi" from D and created [D voi]
					Reconstructing head movement for D{N}.
					Extracted head "voi" from D and created [D voi]
					D was opened into [D voi].
					=[D voi]
				2. Feature processing:
					=[D voi]
				3. Floater movement reconstruction:
					=[D voi]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D voi]
				5. Agreement reconstruction:
					=[D voi]
			=[[D voi] T/fin]

10.
		Consume "v"

		[[D voi] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D voi] T/fin{v}]

11.
		Consume "adora"

		[[D voi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D voi] T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D voi] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D voi] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D voi] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D voi] [T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D voi] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D voi] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D voi] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D voi] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D voi] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D voi] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D voi] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D voi] [T/fin [v [adora [D Luisa]]]]]
					=[[D voi] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D voi] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D voi] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D voi " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D voi] from memory buffer into Spec of v
					Result [[D voi] [T/fin [[D voi] [v [adora [D Luisa]]]]]]
					=[[D voi]:54 [T/fin [__:54 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:2 from the edge of T/fin.
					=[[D voi]:54 [T/fin [__:54 [v [adora [D Luisa]]]]]]
			= [[D voi] [T/fin [[D voi] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D voi]:54 [T/fin [__:54 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D voi]    (alternatives: 2. T/fin 3. [D voi] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D voi] 3. T/fin 4. [D voi] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v([D voi])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D voi] [T/fin [[D voi] [v [adora [D Luisa]]]]]]
		Grammar: [[D voi]:1 [T/fin [__:1 [v [adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL', 'null']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL', 'null']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
voi: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['loro', 'adorano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word adora-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D loro] T/fin{v}]

10.
		Consume "adora"

		[[D loro] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D loro] T/fin{v,V}]

11.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D loro] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D loro] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D loro] [T/fin{v,V} D]]

17.
		Consume "Luisa"

		[[D loro] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{v,V} D{N}]]

18.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D loro] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [v [adora [D Luisa]]]]]
					=[[D loro] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [T/fin [[D loro] [v [adora [D Luisa]]]]]]
					=[[D loro]:57 [T/fin [__:57 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:57 [T/fin [__:57 [v [adora [D Luisa]]]]]]
			= [[D loro] [T/fin [[D loro] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:57 [T/fin [__:57 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v([D loro])']
!--->		Tests passed (with 18/151 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [adora [D Luisa]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [v [adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 16
['io', 'sono', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word sono-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'sono-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] T/fin]

10.
		Consume "BE"

		[[D io] T/fin] + BE
			Filtering out impossible merge sites...
			Sink "BE" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*BE]
			=[[D io] T/fin{V}]

11.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D io] T/fin{V}] + D = -98]
				T/fin{V} + D = 104]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D io] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D io] [T/fin{V} D]]

17.
		Consume "Luisa"

		[[D io] [T/fin{V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [T/fin{V} D{N}]]

18.
	>>>	Trying candidate parse [[D io] [T/fin{V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [T/fin{V} D{N}]].
						Extracted head "BE" and reconstructed it = [[D io] [T/fin [BE D{N}]]]
					Extracted head "Luisa" from D and created [[D io] [T/fin [BE [D Luisa]]]]
					=[[D io] [T/fin [BE [D Luisa]]]]
				2. Feature processing:
					=[[D io] [T/fin [BE [D Luisa]]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [BE [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of BE
					Result [[D io] [T/fin [[D io] [BE [D Luisa]]]]]
					=[[D io]:60 [T/fin [__:60 [BE [D Luisa]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:60 [T/fin [__:60 [BE [D Luisa]]]]]
			= [[D io] [T/fin [[D io] [BE [D Luisa]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:60 [T/fin [__:60 [BE [D Luisa]]]]] into Conceptual-Intentional system...
				BE with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['BE([D Luisa])']
!--->		Tests passed (with 18/142 operations) <------------------------------------
		Solution:
		[[D io] [T/fin [[D io] [BE [D Luisa]]]]]
		Grammar: [[D io]:1 [T/fin [__:1 [BE [D Luisa]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [D N]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
BE:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:BE', 'PF:BE', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
BE:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:BE', 'PF:BE', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
io: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
BE: [V, TT/fin]
D: [D, V, TT/fin]
Luisa: [N, D, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 17
['adoro', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "adora" and reconstructed it = [T/fin [v [adora D{N}]]]
					Extracted head "Luisa" from D and created [T/fin [v [adora [D Luisa]]]]
					=[T/fin [v [adora [D Luisa]]]]
				2. Feature processing:
					=[T/fin [v [adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [adora [D Luisa]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[T/fin [v [adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [adora [D Luisa]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [T/fin [v [adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 18
['adori', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-i].
		Next word contains multiple morphemes ['[-i]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "adora" and reconstructed it = [T/fin [v [adora D{N}]]]
					Extracted head "Luisa" from D and created [T/fin [v [adora [D Luisa]]]]
					=[T/fin [v [adora [D Luisa]]]]
				2. Feature processing:
					=[T/fin [v [adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [adora [D Luisa]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:2 from the edge of T/fin.
					=[T/fin [v [adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [adora [D Luisa]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [T/fin [v [adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 19
['adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-a].
		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "adora" and reconstructed it = [T/fin [v [adora D{N}]]]
					Extracted head "Luisa" from D and created [T/fin [v [adora [D Luisa]]]]
					=[T/fin [v [adora [D Luisa]]]]
				2. Feature processing:
					=[T/fin [v [adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [adora [D Luisa]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [v [adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [adora [D Luisa]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [T/fin [v [adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 20
['adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-a].
		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "adora" and reconstructed it = [T/fin [v [adora D{N}]]]
					Extracted head "Luisa" from D and created [T/fin [v [adora [D Luisa]]]]
					=[T/fin [v [adora [D Luisa]]]]
				2. Feature processing:
					=[T/fin [v [adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [adora [D Luisa]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [v [adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [adora [D Luisa]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [T/fin [v [adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 21
['adoriamo', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-iamo].
		Next word contains multiple morphemes ['[-iamo]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "adora" and reconstructed it = [T/fin [v [adora D{N}]]]
					Extracted head "Luisa" from D and created [T/fin [v [adora [D Luisa]]]]
					=[T/fin [v [adora [D Luisa]]]]
				2. Feature processing:
					=[T/fin [v [adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [adora [D Luisa]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[T/fin [v [adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [adora [D Luisa]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [T/fin [v [adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 22
['adorate', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-te].
		Next word contains multiple morphemes ['[-te]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "adora" and reconstructed it = [T/fin [v [adora D{N}]]]
					Extracted head "Luisa" from D and created [T/fin [v [adora [D Luisa]]]]
					=[T/fin [v [adora [D Luisa]]]]
				2. Feature processing:
					=[T/fin [v [adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [adora [D Luisa]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:2 from the edge of T/fin.
					=[T/fin [v [adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [adora [D Luisa]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [T/fin [v [adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 23
['adorano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "adora" and reconstructed it = [T/fin [v [adora D{N}]]]
					Extracted head "Luisa" from D and created [T/fin [v [adora [D Luisa]]]]
					=[T/fin [v [adora [D Luisa]]]]
				2. Feature processing:
					=[T/fin [v [adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [adora [D Luisa]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [v [adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [adora [D Luisa]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['adora([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [T/fin [v [adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 24
['lavano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "lava" and reconstructed it = [T/fin [v [lava D{N}]]]
					Extracted head "Luisa" from D and created [T/fin [v [lava [D Luisa]]]]
					=[T/fin [v [lava [D Luisa]]]]
				2. Feature processing:
					=[T/fin [v [lava [D Luisa]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [lava [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [lava [D Luisa]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [v [lava [D Luisa]]]]
			= [T/fin [v [lava [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [lava [D Luisa]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [D Luisa]]]]
		Grammar: [T/fin [v [lava [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 25
['devono', 'lavare', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=deva

3.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		deva + are
			Filtering out impossible merge sites...
		Exploring solution number (1) =[deva are]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[deva are]

4.
		Consume "v"

		[deva are] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[deva are{v}]

5.
		Consume "lava"

		[deva are{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[deva are{v,V}]

6.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva are{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [deva [are [v lava]]] as left branch because it constitutes illicit structure.
				Prioritize [lava D] due to complement selection.
				[deva are{v,V}] + D = -197]
				are{v,V} + D = 104]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[deva are{v,V}]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[deva [are{v,V} D]]

12.
		Consume "Luisa"

		[deva [are{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[deva [are{v,V} D{N}]]

13.
	>>>	Trying candidate parse [deva [are{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [deva [are{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [deva [are{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [deva [are [v{V} D{N}]]]
						Extracted head "lava" and reconstructed it = [deva [are [v [lava D{N}]]]]
					Extracted head "Luisa" from D and created [deva [are [v [lava [D Luisa]]]]]
					=[deva [are [v [lava [D Luisa]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[deva [are [v [lava [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[deva [are [v [lava [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[deva [are [v [lava [D Luisa]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[deva [are [v [lava [D Luisa]]]]]
			= [deva [are [v [lava [D Luisa]]]]]
		Checking LF-interface conditions.
			Trying to transfer [deva [are [v [lava [D Luisa]]]]] into Conceptual-Intentional system...
				are with ['PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. deva    (alternatives: )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. deva    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['are(deva)', 'lava([D Luisa])', 'v(deva)']
!--->		Tests passed (with 13/133 operations) <------------------------------------
		Solution:
		[deva [are [v [lava [D Luisa]]]]]
		Grammar: [deva [are [v [lava [D Luisa]]]]]
		Spellout TT/finP = [TT/fin [INF [v [V [D N]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

deva: [TT/fin]
are: [INF, TT/fin]
v: [v, INF, TT/fin]
lava: [V, v, INF, TT/fin]
D: [D, V, v, INF, TT/fin]
Luisa: [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 26
['hanno', 'lavato', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} T/prt]

8.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

9.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} T/prt{v,V}]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[T/fin{V} T/prt{v,V}] + D = -197]
				T/prt{v,V} + D = 108]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [T/prt{v,V} D]]

16.
		Consume "Luisa"

		[T/fin{V} [T/prt{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{V} [T/prt{v,V} D{N}]]

17.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{V} [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} D{N}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} D{N}]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} D{N}]]]]
						Extracted head "lava" and reconstructed it = [T/fin [ha [T/prt [v [lava D{N}]]]]]
					Extracted head "Luisa" from D and created [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
					=[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
			= [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [ha [T/prt [v [lava [D Luisa]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				T/prt with ['PHI:PER:_'] was associated at LF with:
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Person feature is missing', 'ha(T/fin)', 'lava([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 17/152 operations) <------------------------------------
		Solution:
		[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
		Grammar: [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
		Spellout TT/finP = [TT/fin [V [T [v [V [D N]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 27
['ho', 'lavato', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} T/prt]

8.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

9.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} T/prt{v,V}]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[T/fin{V} T/prt{v,V}] + D = -197]
				T/prt{v,V} + D = 108]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [T/prt{v,V} D]]

16.
		Consume "Luisa"

		[T/fin{V} [T/prt{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{V} [T/prt{v,V} D{N}]]

17.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{V} [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} D{N}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} D{N}]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} D{N}]]]]
						Extracted head "lava" and reconstructed it = [T/fin [ha [T/prt [v [lava D{N}]]]]]
					Extracted head "Luisa" from D and created [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
					=[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
			= [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [ha [T/prt [v [lava [D Luisa]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				T/prt with ['PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['T/prt(T/fin)', 'ha(T/fin)', 'lava([D Luisa])', 'v(T/fin)']
!--->		Tests passed (with 17/153 operations) <------------------------------------
		Solution:
		[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
		Grammar: [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
		Spellout TT/finP = [TT/fin [V [T [v [V [D N]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 28
['hanno', 'voluto', 'lavare', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} T/prt]

5.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

6.
		Consume "volu"

		[T/fin{V} T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[T/fin{V} T/prt{v,V}]

7.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[T/fin{V} T/prt{v,V}] + are
			Filtering out impossible merge sites...
				Reject [[T/fin [ha [T/prt [v volu]]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [T/prt{v,V} are]]

8.
		Consume "v"

		[T/fin{V} [T/prt{v,V} are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[T/fin{V} [T/prt{v,V} are{v}]]

9.
		Consume "lava"

		[T/fin{V} [T/prt{v,V} are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[T/fin{V} [T/prt{v,V} are{v,V}]]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} [T/prt{v,V} are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T/prt{v,V} are{v,V}], D] because the operation breaks up an existing selectional dependency.
				"lava" lacks complement.
				Avoid [T/prt [v [volu [are [v lava]]]]] as left branch because it constitutes illicit structure.
				Prioritize [lava D] due to complement selection.
				Avoid are{v,V} because it could break words.
				[T/fin{V} [T/prt{v,V} are{v,V}]] + D = -197]
				[T/prt{v,V} are{v,V}] + D = -194]
				are{v,V} + D = 9]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[T/prt{v,V} are{v,V}]; D]
			3. [[T/fin{V} [T/prt{v,V} are{v,V}]]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[T/fin{V} [T/prt{v,V} [are{v,V} D]]]

16.
		Consume "Luisa"

		[T/fin{V} [T/prt{v,V} [are{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]]

17.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} [are{v,V} D{N}]]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} [are{v,V} D{N}]]]]]
						Extracted head "volu" and reconstructed it = [T/fin [ha [T/prt [v [volu [are{v,V} D{N}]]]]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v [volu [are [v{V} D{N}]]]]]]]
						Extracted head "lava" and reconstructed it = [T/fin [ha [T/prt [v [volu [are [v [lava D{N}]]]]]]]]
					Extracted head "Luisa" from D and created [T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
					=[T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
			= [T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				are with ['PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['T/prt(T/fin)', 'are(T/fin)', 'ha(T/fin)', 'lava([D Luisa])', 'v(T/fin)', 'volu(T/fin)']
!--->		Tests passed (with 17/194 operations) <------------------------------------
		Solution:
		[T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
		Grammar: [T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
		Spellout TT/finP = [TT/fin [V [T [v [V [INF [v [V [D N]]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
are: [INF, V, v, T, V, TT/fin]
v: [v, INF, V, v, T, V, TT/fin]
lava: [V, v, INF, V, v, T, V, TT/fin]
D: [D, V, v, INF, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 29
['stanno', 'lavando', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=T/fin{V}

4.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		T/fin{V} + PRG
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} PRG]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} PRG]

5.
		Consume "v"

		[T/fin{V} PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[T/fin{V} PRG{v}]

6.
		Consume "lava"

		[T/fin{V} PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[T/fin{V} PRG{v,V}]

7.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} PRG{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [sta [PRG [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [lava D] due to complement selection.
				Avoid PRG{v,V} because it could break words.
				[T/fin{V} PRG{v,V}] + D = -197]
				PRG{v,V} + D = 6]
		Ranking completed:
			1. [PRG{v,V}; D]
			2. [[T/fin{V} PRG{v,V}]; D]
		Exploring solution number (1) =[PRG{v,V} D]
			Transferring PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRG{v,V}
				2. Feature processing:
					=PRG{v,V}
				3. Floater movement reconstruction:
					=PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRG{v,V} probing for CAT:V failed.
				"PRG{v,V}" lacks complement.
					=PRG{v,V}
				5. Agreement reconstruction:
					=PRG{v,V}
			=[T/fin{V} [PRG{v,V} D]]

13.
		Consume "Luisa"

		[T/fin{V} [PRG{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{V} [PRG{v,V} D{N}]]

14.
	>>>	Trying candidate parse [T/fin{V} [PRG{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [T/fin{V} [PRG{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [PRG{v,V} D{N}]].
						Extracted head "sta" and reconstructed it = [T/fin [sta [PRG{v,V} D{N}]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [sta [PRG [v{V} D{N}]]]]
						Extracted head "lava" and reconstructed it = [T/fin [sta [PRG [v [lava D{N}]]]]]
					Extracted head "Luisa" from D and created [T/fin [sta [PRG [v [lava [D Luisa]]]]]]
					=[T/fin [sta [PRG [v [lava [D Luisa]]]]]]
				2. Feature processing:
					=[T/fin [sta [PRG [v [lava [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [PRG [v [lava [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [sta [PRG [v [lava [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [sta [PRG [v [lava [D Luisa]]]]]]
			= [T/fin [sta [PRG [v [lava [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [sta [PRG [v [lava [D Luisa]]]]]] into Conceptual-Intentional system...
				sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRG with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRG(T/fin)', 'lava([D Luisa])', 'sta(T/fin)', 'v(T/fin)']
!--->		Tests passed (with 14/142 operations) <------------------------------------
		Solution:
		[T/fin [sta [PRG [v [lava [D Luisa]]]]]]
		Grammar: [T/fin [sta [PRG [v [lava [D Luisa]]]]]]
		Spellout TT/finP = [TT/fin [V [INF [v [V [D N]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
sta: [V, TT/fin]
PRG: [INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
D: [D, V, v, INF, V, TT/fin]
Luisa: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 30
['Pekka', 'ihailee', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word Pekka-#D#nom#sg#3p#def#hum#def.
		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.
		Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'NOM', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

8.
		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Decomposing a polymorphemic word ihaile-#v#T/fin#[-V].
		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
					=[D Pekka]
				2. Feature processing:
					=[D Pekka]
				3. Floater movement reconstruction:
					=[D Pekka]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Pekka]
				5. Agreement reconstruction:
					=[D Pekka]
			=[[D Pekka] T/fin]

11.
		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

12.
		Consume "ihaile-"

		[[D Pekka] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*ihaile-]
			=[[D Pekka] T/fin{v,V}]

13.
		Decomposing a polymorphemic word Merja-#D#par#sg#3p#def#hum#def.
		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.
		Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'PAR', 'TAIL:ARG,-VAL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Pekka] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 158]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Pekka] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D Pekka] [T/fin{v,V} D]]

20.
		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [T/fin{v,V} D{N}]]

21.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D Pekka] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} D{N}]]]
						Extracted head "ihaile-" and reconstructed it = [[D Pekka] [T/fin [v [ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D Pekka] [T/fin [v [ihaile- [D Merja-]]]]]
					=[[D Pekka] [T/fin [v [ihaile- [D Merja-]]]]]
				2. Feature processing:
					=[[D Pekka] [T/fin [v [ihaile- [D Merja-]]]]]
				3. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:3 [T/fin [<DP>:3 [v [ihaile- [D Merja-]]]]]]
					=[<D Pekka>:3 [T/fin [<DP>:3 [v [ihaile- [D Merja-]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[<D Pekka>:3 [T/fin [<DP>:3 [v [ihaile- [D Merja-]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:3.
					=[<D Pekka>:3 [T/fin [<DP>:3 [v [ihaile- [D Merja-]]]]]]
			= [<D Pekka> [T/fin [<D Pekka> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:3 [T/fin [<DP>:3 [v [ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D Pekka> 3. T/fin 4. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['ihaile-([D Merja-])', 'v(<D Pekka>)']
!--->		Tests passed (with 21/160 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [ihaile- [D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PAR', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PAR', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 31
['Merjaa', 'ihailee', 'Pekka']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word Merja-#D#par#sg#3p#def#hum#def.
		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.
		Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'PAR', 'TAIL:ARG,-VAL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

8.
		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=D{N}

9.
		Decomposing a polymorphemic word ihaile-#v#T/fin#[-V].
		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
					=[D Merja-]
				2. Feature processing:
					=[D Merja-]
				3. Floater movement reconstruction:
					=[D Merja-]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Merja-]
				5. Agreement reconstruction:
					=[D Merja-]
			=[[D Merja-] T/fin]

11.
		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Merja-] T/fin{v}]

12.
		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*ihaile-]
			=[[D Merja-] T/fin{v,V}]

13.
		Decomposing a polymorphemic word Pekka-#D#nom#sg#3p#def#hum#def.
		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.
		Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'NOM', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Merja-] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Merja-] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D Merja-] [T/fin{v,V} D]]

20.
		Consume "Pekka"

		[[D Merja-] [T/fin{v,V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D Merja-] [T/fin{v,V} D{N}]]

21.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D Merja-] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D Merja-] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D Merja-] [T/fin [v{V} D{N}]]]
						Extracted head "ihaile-" and reconstructed it = [[D Merja-] [T/fin [v [ihaile- D{N}]]]]
					Extracted head "Pekka" from D and created [[D Merja-] [T/fin [v [ihaile- [D Pekka]]]]]
					=[[D Merja-] [T/fin [v [ihaile- [D Pekka]]]]]
				2. Feature processing:
					=[[D Merja-] [T/fin [v [ihaile- [D Pekka]]]]]
				3. Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Merja->:6 [T/fin [v [<DP>:6 [ihaile- [D Pekka]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<D Pekka> was made an adjunct.
					Dropping <D Pekka>
						Floater <D Pekka> dropped.
						 = [<D Merja->:6 [T/fin [<DP>:7 [v [<DP>:6 [ihaile- <D Pekka>:7]]]]]]
					=[<D Merja->:6 [T/fin [<DP>:7 [v [<DP>:6 [ihaile- <D Pekka>:7]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[<D Merja->:6 [T/fin [<DP>:7 [v [<DP>:6 [ihaile- <D Pekka>:7]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:7.
					=[<D Merja->:6 [T/fin [<DP>:7 [v [<DP>:6 [ihaile- <D Pekka>:7]]]]]]
			= [<D Merja-> [T/fin [<D Pekka> [v [<D Merja-> [ihaile- <D Pekka>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merja->:6 [T/fin [<DP>:7 [v [<DP>:6 [ihaile- <D Pekka>:7]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Merja-> )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D Pekka> 4. T/fin 5. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['ihaile-(<D Merja->)', 'v(<D Pekka>)']
!--->		Tests passed (with 21/162 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D Pekka> [v [<D Merja-> [ihaile- <D Pekka>]]]]]]
		Grammar: [<D Merja->:1 [T/fin [<DP>:2 [v [<DP>:1 [ihaile- <D Pekka>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PAR', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PAR', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PAR', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PAR', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

D: [D]
Merja-: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
__: [D, v, TT/fin]
__: [N, D, v, TT/fin]
ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Pekka: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 32
['Pekka', 'haluaa', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word Pekka-#D#nom#sg#3p#def#hum#def.
		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.
		Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'NOM', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

8.
		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Decomposing a polymorphemic word halua-#v#T/fin#[-V].
		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
					=[D Pekka]
				2. Feature processing:
					=[D Pekka]
				3. Floater movement reconstruction:
					=[D Pekka]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Pekka]
				5. Agreement reconstruction:
					=[D Pekka]
			=[[D Pekka] T/fin]

11.
		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

12.
		Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*haluaa]
			=[[D Pekka] T/fin{v,V}]

13.
		Decomposing a polymorphemic word lahte-#A/inf.
		Next word contains multiple morphemes ['A/inf$', 'lahte-']
		Consume "A/inf"

		[[D Pekka] T/fin{v,V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} A/inf]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D Pekka] [T/fin{v,V} A/inf]]

14.
		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[D Pekka] [T/fin{v,V} A/inf{V}]]

15.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} A/inf{V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D Pekka] [T/fin{v,V} A/inf{V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [T/fin{v,V} A/inf{V}]].
						Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} A/inf{V}]]]
						Extracted head "haluaa" and reconstructed it = [[D Pekka] [T/fin [v [haluaa A/inf{V}]]]]
					Extracted head "lahtea" from A/inf and created [[D Pekka] [T/fin [v [haluaa [A/inf lahtea]]]]]
					=[[D Pekka] [T/fin [v [haluaa [A/inf lahtea]]]]]
				2. Feature processing:
					Solving feature ambiguite for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
					=[[D Pekka] [T/fin [v [haluaa [A/inf lahtea]]]]]
				3. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:9 [T/fin [<DP>:9 [v [haluaa [A/inf lahtea]]]]]]
					=[<D Pekka>:9 [T/fin [<DP>:9 [v [haluaa [A/inf lahtea]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[<D Pekka>:9 [T/fin [<DP>:9 [v [haluaa [A/inf lahtea]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:9.
					=[<D Pekka>:9 [T/fin [<DP>:9 [v [haluaa [A/inf lahtea]]]]]]
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:9 [T/fin [<DP>:9 [v [haluaa [A/inf lahtea]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['haluaa(<D Pekka>)', 'lahtea(<D Pekka>)', 'v(<D Pekka>)']
!--->		Tests passed (with 15/140 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [haluaa [A/inf lahtea]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
haluaa: [V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 33
['Pekka', 'kaskee', 'Merjan', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word Pekka-#D#nom#sg#3p#def#hum#def.
		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.
		Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'NOM', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

8.
		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Decomposing a polymorphemic word kaske-#v*#T/fin#[-V].
		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v*$', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
					=[D Pekka]
				2. Feature processing:
					=[D Pekka]
				3. Floater movement reconstruction:
					=[D Pekka]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Pekka]
				5. Agreement reconstruction:
					=[D Pekka]
			=[[D Pekka] T/fin]

11.
		Consume "v*"

		[[D Pekka] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v*]
			=[[D Pekka] T/fin{v}]

12.
		Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into v* because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*kaske]
			=[[D Pekka] T/fin{v,V}]

13.
		Decomposing a polymorphemic word Merja-#D#gen#sg#3p#def#hum#def.
		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.
		Consume "gen$"
		Storing inflectional feature ['-', 'GEN', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				Avoid [<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D Pekka] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 56]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Pekka] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D Pekka] [T/fin{v,V} D]]

20.
		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [T/fin{v,V} D{N}]]

21.
		Decomposing a polymorphemic word lahte-#A/inf.
		Next word contains multiple morphemes ['A/inf$', 'lahte-']
		Consume "A/inf"

		[[D Pekka] [T/fin{v,V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v* [kaske <D Merja->]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [v* [kaske <D Merja->]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[D{N} A/inf]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
					=[D Merja-]
				2. Feature processing:
					=[D Merja-]
				3. Floater movement reconstruction:
					=[D Merja-]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Merja-]
				5. Agreement reconstruction:
					=[D Merja-]
			=[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]]

22.
		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]]

23.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]].
						Extracted head "v*{V}" and reconstructed it = [[D Pekka] [T/fin [v*{V} [[D Merja-] A/inf{V}]]]]
						Extracted head "kaske" and reconstructed it = [[D Pekka] [T/fin [v* [kaske [[D Merja-] A/inf{V}]]]]]
					Extracted head "lahtea" from A/inf and created [[D Pekka] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
					=[[D Pekka] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
					=[[D Pekka] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				3. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:13 [T/fin [<DP>:13 [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Pekka>:13 [T/fin [<DP>:13 [v* [kaske [<D Merja->:14 [A/inf [<DP>:14 lahtea]]]]]]]]
					=[<D Pekka>:13 [T/fin [<DP>:13 [v* [kaske [<D Merja->:14 [A/inf [<DP>:14 lahtea]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[<D Pekka>:13 [T/fin [<DP>:13 [v* [kaske [<D Merja->:14 [A/inf [<DP>:14 lahtea]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:13.
					A/inf has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					A/inf acquired PHI:NUM:SG by phi-Agree from <DP>:14.
					A/inf acquired PHI:PER:3 by phi-Agree from <DP>:14.
					=[<D Pekka>:13 [T/fin [<DP>:13 [v* [kaske [<D Merja->:14 [A/inf [<DP>:14 lahtea]]]]]]]]
			= [<D Pekka> [T/fin [<D Pekka> [v* [kaske [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:13 [T/fin [<DP>:13 [v* [kaske [<D Merja->:14 [A/inf [<DP>:14 lahtea]]]]]]]] into Conceptual-Intentional system...
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Generic', 'lahtea(<D Merja->)', 'v*(<D Pekka>)']
!--->		Tests passed (with 23/204 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v* [kaske [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v* [kaske [<D Merja->:2 [A/inf [<DP>:2 lahtea]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'GEN', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'GEN', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'NOM', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'GEN', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'GEN', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v*: [v, TT/fin]
kaske: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
__: [D, INF, V, v, TT/fin]
__: [N, D, INF, V, v, TT/fin]
lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 34
['io', 'adori', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-i].
		Next word contains multiple morphemes ['[-i]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] T/fin]

10.
		Consume "v"

		[[D io] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D io] T/fin{v}]

11.
		Consume "adora"

		[[D io] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D io] T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D io] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D io] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D io] [T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D io] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D io] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D io] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D io] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D io] [T/fin [v [adora [D Luisa]]]]]
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of v
					Result [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
					=[[D io]:63 [T/fin [__:63 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:63 [T/fin [__:63 [v [adora [D Luisa]]]]]]
			= [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:63 [T/fin [__:63 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] T/fin{v,V}] D]
			Transferring [[D io] T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] T/fin{v,V}].
					Extracted head "v{V}" from T/fin and created [[D io] [T/fin v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "adora" from v and created [[D io] [T/fin [v adora]]]
					=[[D io] [T/fin [v adora]]]
				2. Feature processing:
					=[[D io] [T/fin [v adora]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [v adora]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of v
					Result [[D io] [T/fin [[D io] [v adora]]]]
					=[[D io]:64 [T/fin [__:64 [v adora]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:64 [T/fin [__:64 [v adora]]]]
			=[[[D io]:64 [T/fin [__:64 [v adora]]]] D]

20.
		Consume "Luisa"

		[[[D io] [T/fin [[D io] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D io]:64 [T/fin [__:64 [v adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D io] [T/fin [[D io] [v adora]]]] D{N}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io]:64 [T/fin [__:64 [v adora]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io]:64 [T/fin [__:64 [v adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D io]:64 [T/fin [__:64 [v adora]]]] [D Luisa]]
					=[[[D io]:64 [T/fin [__:64 [v adora]]]] [D Luisa]]
				2. Feature processing:
					=[[[D io]:64 [T/fin [__:64 [v adora]]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D io]:64 [T/fin [__:64 [v adora]]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [[D io]:64 [T/fin [__:64 [v adora]]]].
					Extraposition will be tried on [[[D io]:64 [T/fin [__:64 [v adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D io]:64 [T/fin [__:64 [v adora]]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D io]:64 [T/fin [__:64 [v adora]]]] <D Luisa>]
			= [[[D io] [T/fin [[D io] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D io]:64 [T/fin [__:64 [v adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adori".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 35
['io', 'adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-a].
		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] T/fin]

10.
		Consume "v"

		[[D io] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D io] T/fin{v}]

11.
		Consume "adora"

		[[D io] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D io] T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D io] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D io] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D io] [T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D io] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D io] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D io] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D io] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D io] [T/fin [v [adora [D Luisa]]]]]
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of v
					Result [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
					=[[D io]:67 [T/fin [__:67 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:67 [T/fin [__:67 [v [adora [D Luisa]]]]]]
			= [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:67 [T/fin [__:67 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] T/fin{v,V}] D]
			Transferring [[D io] T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] T/fin{v,V}].
					Extracted head "v{V}" from T/fin and created [[D io] [T/fin v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "adora" from v and created [[D io] [T/fin [v adora]]]
					=[[D io] [T/fin [v adora]]]
				2. Feature processing:
					=[[D io] [T/fin [v adora]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [v adora]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of v
					Result [[D io] [T/fin [[D io] [v adora]]]]
					=[[D io]:68 [T/fin [__:68 [v adora]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:68 [T/fin [__:68 [v adora]]]]
			=[[[D io]:68 [T/fin [__:68 [v adora]]]] D]

20.
		Consume "Luisa"

		[[[D io] [T/fin [[D io] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D io]:68 [T/fin [__:68 [v adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D io] [T/fin [[D io] [v adora]]]] D{N}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io]:68 [T/fin [__:68 [v adora]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io]:68 [T/fin [__:68 [v adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D io]:68 [T/fin [__:68 [v adora]]]] [D Luisa]]
					=[[[D io]:68 [T/fin [__:68 [v adora]]]] [D Luisa]]
				2. Feature processing:
					=[[[D io]:68 [T/fin [__:68 [v adora]]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D io]:68 [T/fin [__:68 [v adora]]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [[D io]:68 [T/fin [__:68 [v adora]]]].
					Extraposition will be tried on [[[D io]:68 [T/fin [__:68 [v adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D io]:68 [T/fin [__:68 [v adora]]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D io]:68 [T/fin [__:68 [v adora]]]] <D Luisa>]
			= [[[D io] [T/fin [[D io] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D io]:68 [T/fin [__:68 [v adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 36
['io', 'adorate', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-te].
		Next word contains multiple morphemes ['[-te]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] T/fin]

10.
		Consume "v"

		[[D io] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D io] T/fin{v}]

11.
		Consume "adora"

		[[D io] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D io] T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D io] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D io] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D io] [T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D io] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D io] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D io] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D io] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D io] [T/fin [v [adora [D Luisa]]]]]
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of v
					Result [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
					=[[D io]:71 [T/fin [__:71 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:71 [T/fin [__:71 [v [adora [D Luisa]]]]]]
			= [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:71 [T/fin [__:71 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] T/fin{v,V}] D]
			Transferring [[D io] T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] T/fin{v,V}].
					Extracted head "v{V}" from T/fin and created [[D io] [T/fin v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "adora" from v and created [[D io] [T/fin [v adora]]]
					=[[D io] [T/fin [v adora]]]
				2. Feature processing:
					=[[D io] [T/fin [v adora]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [v adora]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of v
					Result [[D io] [T/fin [[D io] [v adora]]]]
					=[[D io]:72 [T/fin [__:72 [v adora]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:72 [T/fin [__:72 [v adora]]]]
			=[[[D io]:72 [T/fin [__:72 [v adora]]]] D]

20.
		Consume "Luisa"

		[[[D io] [T/fin [[D io] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D io]:72 [T/fin [__:72 [v adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D io] [T/fin [[D io] [v adora]]]] D{N}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io]:72 [T/fin [__:72 [v adora]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io]:72 [T/fin [__:72 [v adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D io]:72 [T/fin [__:72 [v adora]]]] [D Luisa]]
					=[[[D io]:72 [T/fin [__:72 [v adora]]]] [D Luisa]]
				2. Feature processing:
					=[[[D io]:72 [T/fin [__:72 [v adora]]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D io]:72 [T/fin [__:72 [v adora]]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [[D io]:72 [T/fin [__:72 [v adora]]]].
					Extraposition will be tried on [[[D io]:72 [T/fin [__:72 [v adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D io]:72 [T/fin [__:72 [v adora]]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D io]:72 [T/fin [__:72 [v adora]]]] <D Luisa>]
			= [[[D io] [T/fin [[D io] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D io]:72 [T/fin [__:72 [v adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adorate".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 37
['io', 'adorano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] T/fin]

10.
		Consume "v"

		[[D io] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D io] T/fin{v}]

11.
		Consume "adora"

		[[D io] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*adora]
			=[[D io] T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D io] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D io] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D io] [T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D io] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D io] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D io] [T/fin [v{V} D{N}]]]
						Extracted head "adora" and reconstructed it = [[D io] [T/fin [v [adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D io] [T/fin [v [adora [D Luisa]]]]]
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [v [adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of v
					Result [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
					=[[D io]:75 [T/fin [__:75 [v [adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:75 [T/fin [__:75 [v [adora [D Luisa]]]]]]
			= [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:75 [T/fin [__:75 [v [adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] T/fin{v,V}] D]
			Transferring [[D io] T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] T/fin{v,V}].
					Extracted head "v{V}" from T/fin and created [[D io] [T/fin v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "adora" from v and created [[D io] [T/fin [v adora]]]
					=[[D io] [T/fin [v adora]]]
				2. Feature processing:
					=[[D io] [T/fin [v adora]]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin [v adora]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of v
					Result [[D io] [T/fin [[D io] [v adora]]]]
					=[[D io]:76 [T/fin [__:76 [v adora]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:76 [T/fin [__:76 [v adora]]]]
			=[[[D io]:76 [T/fin [__:76 [v adora]]]] D]

20.
		Consume "Luisa"

		[[[D io] [T/fin [[D io] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D io]:76 [T/fin [__:76 [v adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D io] [T/fin [[D io] [v adora]]]] D{N}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io]:76 [T/fin [__:76 [v adora]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io]:76 [T/fin [__:76 [v adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D io]:76 [T/fin [__:76 [v adora]]]] [D Luisa]]
					=[[[D io]:76 [T/fin [__:76 [v adora]]]] [D Luisa]]
				2. Feature processing:
					=[[[D io]:76 [T/fin [__:76 [v adora]]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D io]:76 [T/fin [__:76 [v adora]]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [[D io]:76 [T/fin [__:76 [v adora]]]].
					Extraposition will be tried on [[[D io]:76 [T/fin [__:76 [v adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D io]:76 [T/fin [__:76 [v adora]]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D io]:76 [T/fin [__:76 [v adora]]]] <D Luisa>]
			= [[[D io] [T/fin [[D io] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D io]:76 [T/fin [__:76 [v adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adorano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 38
['loro', 'hanno', 'lavata', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

17.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

18.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

19.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 112]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
				An EPP-head "T/prt{v,V}" lacks specifier.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

25.
		Consume "Luisa"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [T/prt{v,V} D{N}]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v{V} D{N}]]]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [lava D{N}]]]]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
					=[[D loro] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D Luisa]]]]]]]]
				An EPP-head "T/prt" lacks specifier.
					Extraposition will be tried on [[D loro]:81 [T/fin [__:81 [ha [T/prt [v [lava [D Luisa]]]]]]]].
					=[[D loro]:81 [T/fin [__:81 [ha [T/prt [v [lava [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:81 [T/fin [__:81 [ha [T/prt [v [lava [D Luisa]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v lava]]]]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]]

27.
		Consume "Luisa"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]].
					Extracted head "Luisa" from D and created [[D loro] [[T/fin [ha [T/prt [v lava]]]] [D Luisa]]]
					=[[D loro] [[T/fin [ha [T/prt [v lava]]]] [D Luisa]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [T/prt [v lava]]]] [D Luisa]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [T/prt [v lava]]]] [D Luisa]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
				D has unacceptable specifier [D loro].
				D has unacceptable specifier [T/fin [ha [T/prt [v lava]]]].
					Extraposition will be tried on [[D loro] [[T/fin [ha [T/prt [v lava]]]] [D Luisa]]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				[D loro] has no thematic role.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[D loro] [[T/fin [ha [T/prt [v lava]]]] <D Luisa>]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:GEN:_']
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro] [[T/fin [ha [T/prt [v lava]]]] <D Luisa>]]
			= [[D loro] [[T/fin [ha [T/prt [v lava]]]] <D Luisa>]]
		Checking LF-interface conditions.
				[D loro] has no thematic role.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
D: [D]
Luisa: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [T/prt [v lava]]]]]
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]]
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]].
					=[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]]
			=[[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] D]

29.
		Consume "Luisa"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] [D Luisa]]
					=[[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] [D Luisa]]
				2. Feature processing:
					=[[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
				D has unacceptable specifier [[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]].
					Extraposition will be tried on [[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] <D Luisa>]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:82 [T/fin [__:82 [ha [T/prt [v lava]]]]]] <D Luisa>]
			= [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] <D Luisa>]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
D: [D]
Luisa: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:83 [T/fin [__:83 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:83 [T/fin [__:83 ha]]]
			=[[[D loro]:83 [T/fin [__:83 ha]]] T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:83 [T/fin [__:83 ha]]] T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:83 [T/fin [__:83 ha]]] T/prt{v,V}]

33.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:83 [T/fin [__:83 ha]]].
				"lava" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:83 [T/fin [__:83 ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 206]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:83 [T/fin [__:83 ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
				An EPP-head "T/prt{v,V}" lacks specifier.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt{v,V} D]]

39.
		Consume "Luisa"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt{v,V} D{N}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:83 [T/fin [__:83 ha]]] [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:83 [T/fin [__:83 ha]]] [T/prt{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v{V} D{N}]]]
						Extracted head "lava" and reconstructed it = [[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v [lava D{N}]]]]
					Extracted head "Luisa" from D and created [[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v [lava [D Luisa]]]]]
					=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v [lava [D Luisa]]]]]
				2. Feature processing:
					=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v [lava [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v [lava [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:83 [T/fin [__:83 ha]]].
					Extraposition will be tried on [[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v [lava [D Luisa]]]]].
					=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v [lava [D Luisa]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v [lava [D Luisa]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [lava [D Luisa]]]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:83 [T/fin [__:83 ha]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]
D: [D, V, v, T]
Luisa: [N, D, V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:83 [T/fin [__:83 ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:83 [T/fin [__:83 ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:83 [T/fin [__:83 ha]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:83 [T/fin [__:83 ha]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]]
					=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:83 [T/fin [__:83 ha]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]].
					=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]]
			=[[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] D]

41.
		Consume "Luisa"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] D{N}]

42.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] D{N}].
					Extracted head "Luisa" from D and created [[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] [D Luisa]]
					=[[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] [D Luisa]]
				2. Feature processing:
					=[[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt has unacceptable specifier [[D loro]:83 [T/fin [__:83 ha]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				T/prt has unacceptable specifier [[D loro]:83 [T/fin [__:83 ha]]].
				"lava" lacks complement.
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] <D Luisa>]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:83 [T/fin [__:83 ha]]] [T/prt [v lava]]] <D Luisa>]
			= [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] <D Luisa>]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:83 [T/fin [__:83 ha]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]
D: [D]
Luisa: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 39
['loro', 'Luisa', 'lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

13.
		Consume "Luisa"

		[[D loro] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] D{N}]

14.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D loro] <D Luisa>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [[D Luisa] T/fin]]

16.
		Consume "v"

		[[D loro] [[D Luisa] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D loro] [[D Luisa] T/fin{v}]]

17.
		Consume "lava"

		[[D loro] [[D Luisa] T/fin{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=[[D loro] [[D Luisa] T/fin{v,V}]]

18.
	>>>	Trying candidate parse [[D loro] [[D Luisa] T/fin{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D Luisa] T/fin{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D Luisa] T/fin{v,V}]].
					Extracted head "v{V}" from T/fin and created [[D loro] [[D Luisa] [T/fin v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[D Luisa] [T/fin [v lava]]]]
					=[[D loro] [[D Luisa] [T/fin [v lava]]]]
				2. Feature processing:
					=[[D loro] [[D Luisa] [T/fin [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D Luisa] [T/fin [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "T/fin".
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					New head was spawned due to multiple specifiers at T/fin but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[D loro] [? [[D Luisa] [T/fin [[D Luisa] [v lava]]]]]]
					Dropping [D N](=D loro ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:85 [? [[D Luisa]:84 [T/fin [__:84 [v [lava __:85]]]]]]]
					Remaining items in memory buffer: []
					An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[D loro]:85 [? [[D Luisa]:84 [T/fin [__:84 [v [lava __:85]]]]]]].
					=[[D loro]:85 [? [[D Luisa]:84 [T/fin [__:84 [v [lava __:85]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:F from the edge of T/fin.
					Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:85 [? [[D Luisa]:84 [T/fin [__:84 [v [lava __:85]]]]]]]
			= [[D loro] [? [[D Luisa] [T/fin [[D Luisa] [v [lava [D loro]]]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/fin: [TT/fin, ?]
__: [D, TT/fin, ?]
__: [N, D, TT/fin, ?]
v: [v, TT/fin, ?]
lava: [V, v, TT/fin, ?]
__: [D, V, v, TT/fin, ?]
__: [N, D, V, v, TT/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 40
['loro', 'Luisa', 'devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

13.
		Consume "Luisa"

		[[D loro] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] D{N}]

14.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		[[D loro] D{N}] + deva
			Filtering out impossible merge sites...
				Reject [[[D loro] <D Luisa>] deva] due to bad left branch.
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [[D Luisa] deva]]

16.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [[D Luisa] deva]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[D Luisa] [deva [D loro]]]] are] due to bad left branch.
				Reject [[[D Luisa] deva] are] due to bad left branch.
		Exploring solution number (1) =[deva are]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [[D Luisa] [deva are]]]

17.
		Consume "v"

		[[D loro] [[D Luisa] [deva are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [[D Luisa] [deva are{v}]]]

18.
		Consume "lava"

		[[D loro] [[D Luisa] [deva are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [[D Luisa] [deva are{v,V}]]]

19.
	>>>	Trying candidate parse [[D loro] [[D Luisa] [deva are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D Luisa] [deva are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D Luisa] [deva are{v,V}]]].
					Extracted head "v{V}" from are and created [[D loro] [[D Luisa] [deva [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[D Luisa] [deva [are [v lava]]]]]
					=[[D loro] [[D Luisa] [deva [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [[D Luisa] [deva [are [v lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D Luisa] [deva [are [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "deva".
					Moving "D loro " into memory buffer from SPEC of "deva".
					New head was spawned due to multiple specifiers at deva but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of are
					Result [[D loro] [? [[D Luisa] [deva [[D Luisa] [are [v lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N], [D N]]
					Dropping constituent __:87 from memory buffer into Spec of v
					Result [[D loro] [? [[D Luisa]:87 [deva [__:87 [are [__:87 [v lava]]]]]]]]
					Dropping [D N](=D loro ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:89 [? [[D Luisa]:87 [deva [__:87 [are [__:87 [v [lava __:89]]]]]]]]]
					Remaining items in memory buffer: []
					An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[D loro]:89 [? [[D Luisa]:87 [deva [__:87 [are [__:87 [v [lava __:89]]]]]]]]].
					=[[D loro]:89 [? [[D Luisa]:87 [deva [__:87 [are [__:87 [v [lava __:89]]]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:F from the edge of deva.
					Feature PHI:NUM:SG was not matched in deva and was marked as bad.
					deva acquired PHI:NUM:SG from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:89 [? [[D Luisa]:87 [deva [__:87 [are [__:87 [v [lava __:89]]]]]]]]]
			= [[D loro] [? [[D Luisa] [deva [[D Luisa] [are [[D Luisa] [v [lava [D loro]]]]]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
deva: [TT/fin, ?]
__: [D, TT/fin, ?]
__: [N, D, TT/fin, ?]
are: [INF, TT/fin, ?]
__: [D, INF, TT/fin, ?]
__: [N, D, INF, TT/fin, ?]
v: [v, INF, TT/fin, ?]
lava: [V, v, INF, TT/fin, ?]
__: [D, V, v, INF, TT/fin, ?]
__: [N, D, V, v, INF, TT/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 41
['loro', 'hanno', 'Luisa', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 104]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

16.
		Consume "Luisa"

		[[D loro] [T/fin{V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{V} D{N}]]

17.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} D{N}]] + are
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + are = -98]
				[T/fin{V} D{N}] + are = -96]
				D{N} + are = 106]
		Ranking completed:
			1. [D{N}; are]
			2. [[T/fin{V} D{N}]; are]
			3. [[[D loro] [T/fin{V} D{N}]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [T/fin{V} [[D Luisa] are]]]

18.
		Consume "v"

		[[D loro] [T/fin{V} [[D Luisa] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} [[D Luisa] are{v}]]]

19.
		Consume "lava"

		[[D loro] [T/fin{V} [[D Luisa] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} [[D Luisa] are{v,V}]]]

20.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D Luisa] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D Luisa] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D Luisa] are{v,V}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [[D Luisa] are{v,V}]]]]
					Extracted head "v{V}" from are and created [[D loro] [T/fin [ha [[D Luisa] [are v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [[D Luisa] [are [v lava]]]]]]
					=[[D loro] [T/fin [ha [[D Luisa] [are [v lava]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [T/fin [ha [[D Luisa] [are [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [[D Luisa] [are [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [[D Luisa] [are [v lava]]]]]]]
					Moving "D Luisa " into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[D loro]:94 [T/fin [__:94 [ha [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:94 [T/fin [__:94 [ha [[D Luisa]:95 [are [__:95 [v lava]]]]]]]].
					=[[D loro]:94 [T/fin [__:94 [ha [[D Luisa]:95 [are [__:95 [v lava]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:94 [T/fin [__:94 [ha [[D Luisa]:95 [are [__:95 [v lava]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]
		Checking LF-interface conditions.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
Luisa: [N, D, V, TT/fin]
are: [INF, V, TT/fin]
__: [D, INF, V, TT/fin]
__: [N, D, INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] are]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "Luisa" from D and created [T/fin [ha [D Luisa]]]
					=[T/fin [ha [D Luisa]]]
				2. Feature processing:
					=[T/fin [ha [D Luisa]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D Luisa]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D Luisa]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D Luisa].
					=[T/fin [ha [D Luisa]]]
			=[[D loro] [[T/fin [ha [D Luisa]]] are]]

21.
		Consume "v"

		[[D loro] [[T/fin [ha [D Luisa]]] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [[T/fin [ha [D Luisa]]] are{v}]]

22.
		Consume "lava"

		[[D loro] [[T/fin [ha [D Luisa]]] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [[T/fin [ha [D Luisa]]] are{v,V}]]

23.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D Luisa]]] are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [D Luisa]]] are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [D Luisa]]] are{v,V}]].
					Extracted head "v{V}" from are and created [[D loro] [[T/fin [ha [D Luisa]]] [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [D Luisa]]] [are [v lava]]]]
					=[[D loro] [[T/fin [ha [D Luisa]]] [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [[T/fin [ha [D Luisa]]] [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [D Luisa]]] [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D Luisa " into memory buffer from SPEC of "are".
					Moving "D loro " into memory buffer from SPEC of "are".
					New head was spawned due to multiple specifiers at are but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [D Luisa]]] [are [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				are has unacceptable specifier [T/fin [ha [D Luisa]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:96 [? [[T/fin [ha [D Luisa]]] [are [__:96 [v lava]]]]]].
					=[[D loro]:96 [? [[T/fin [ha [D Luisa]]] [are [__:96 [v lava]]]]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL by phi-Agree from __:96.
					are acquired PHI:PER:3 by phi-Agree from __:96.
					=[[D loro]:96 [? [[T/fin [ha [D Luisa]]] [are [__:96 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D Luisa]]] [are [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				are has unacceptable specifier [T/fin [ha [D Luisa]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
Luisa: [N, D, V, TT/fin, ?]
are: [INF, ?]
__: [D, INF, ?]
__: [N, D, INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] are]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha D{N}]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [ha [D Luisa]]]]
					=[[D loro] [T/fin [ha [D Luisa]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [D Luisa]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [D Luisa]]]]]
					=[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]]
			=[[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] are]

24.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] are] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] are{v}]

25.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] are{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] are{v,V}]

26.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] are{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] are{v,V}].
					Extracted head "v{V}" from are and created [[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] [are v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] [are [v lava]]]
					=[[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] [are [v lava]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] [are [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] [are [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D Luisa " into memory buffer from SPEC of "are".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				are has unacceptable specifier [[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] [are [v lava]]].
					=[[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] [are [v lava]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]] [are [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] [are [v lava]]]
		Checking LF-interface conditions.
				are has unacceptable specifier [[D loro]:97 [T/fin [__:97 [ha [D Luisa]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
Luisa: [N, D, V, TT/fin]
are: [INF]
v: [v, INF]
lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:98 [T/fin [__:98 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:98 [T/fin [__:98 ha]]]
			=[[[D loro]:98 [T/fin [__:98 ha]]] D]

27.
		Consume "Luisa"

		[[[D loro] [T/fin [[D loro] ha]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D loro]:98 [T/fin [__:98 ha]]] D{N}]

28.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + are
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:98 [T/fin [__:98 ha]]] D{N}] + are = 1]
				D{N} + are = 2]
		Ranking completed:
			1. [D{N}; are]
			2. [[[[D loro]:98 [T/fin [__:98 ha]]] D{N}]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[[D loro]:98 [T/fin [__:98 ha]]] [[D Luisa] are]]

29.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D Luisa] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:98 [T/fin [__:98 ha]]] [[D Luisa] are{v}]]

30.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D Luisa] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:98 [T/fin [__:98 ha]]] [[D Luisa] are{v,V}]]

31.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D Luisa] are{v,V}]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:98 [T/fin [__:98 ha]]] [[D Luisa] are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:98 [T/fin [__:98 ha]]] [[D Luisa] are{v,V}]].
					Extracted head "v{V}" from are and created [[[D loro]:98 [T/fin [__:98 ha]]] [[D Luisa] [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:98 [T/fin [__:98 ha]]] [[D Luisa] [are [v lava]]]]
					=[[[D loro]:98 [T/fin [__:98 ha]]] [[D Luisa] [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:98 [T/fin [__:98 ha]]] [[D Luisa] [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:98 [T/fin [__:98 ha]]] [[D Luisa] [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "are".
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "are".
					New head was spawned due to multiple specifiers at are but its category is unknown!
					Memory buffer: [[D N], [[D N] [TT/fin [[D N] V]]]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[[D loro]:98 [T/fin [__:98 ha]]] [? [[D Luisa] [are [[D Luisa] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:98 [T/fin [__:98 ha]]] [? [[D Luisa]:99 [are [__:99 [v lava]]]]]].
					=[[[D loro]:98 [T/fin [__:98 ha]]] [? [[D Luisa]:99 [are [__:99 [v lava]]]]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[[D loro]:98 [T/fin [__:98 ha]]] [? [[D Luisa]:99 [are [__:99 [v lava]]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [? [[D Luisa] [are [[D Luisa] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
are: [INF, ?]
__: [D, INF, ?]
__: [N, D, INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:98 [T/fin [__:98 ha]]] D{N}] are]
			Transferring [[[D loro]:98 [T/fin [__:98 ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:98 [T/fin [__:98 ha]]] D{N}].
					Extracted head "Luisa" from D and created [[[D loro]:98 [T/fin [__:98 ha]]] [D Luisa]]
					=[[[D loro]:98 [T/fin [__:98 ha]]] [D Luisa]]
				2. Feature processing:
					=[[[D loro]:98 [T/fin [__:98 ha]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D loro]:98 [T/fin [__:98 ha]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [[D loro]:98 [T/fin [__:98 ha]]].
					Extraposition will be tried on [[[D loro]:98 [T/fin [__:98 ha]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>]
			=[[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] are]

32.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] are] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] are{v}]

33.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] are{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] are{v,V}]

34.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] are{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] are{v,V}].
					Extracted head "v{V}" from are and created [[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] [are v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] [are [v lava]]]
					=[[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] [are [v lava]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] [are [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] [are [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D Luisa " into memory buffer from SPEC of "are".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				are has unacceptable specifier [[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] [are [v lava]]].
					=[[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] [are [v lava]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>] [are [v lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] [are [v lava]]]
		Checking LF-interface conditions.
				are has unacceptable specifier [[[D loro]:98 [T/fin [__:98 ha]]] <D Luisa>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D]
Luisa: [N, D]
are: [INF]
v: [v, INF]
lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 42
['loro', 'Luisa', 'hanno', 'voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

13.
		Consume "Luisa"

		[[D loro] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] D{N}]

14.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D loro] <D Luisa>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [[D Luisa] T/fin]]

16.
		Consume "ha"

		[[D loro] [[D Luisa] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] [[D Luisa] T/fin{V}]]

17.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] [[D Luisa] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[D Luisa] [T/fin [[D Luisa] ha]]]]] T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D Luisa] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D Luisa] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [[D Luisa] [T/fin{V} T/prt]]]

18.
		Consume "v"

		[[D loro] [[D Luisa] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[D Luisa] [T/fin{V} T/prt{v}]]]

19.
		Consume "volu"

		[[D loro] [[D Luisa] [T/fin{V} T/prt{v}]]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [[D Luisa] [T/fin{V} T/prt{v,V}]]]

20.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [[D Luisa] [T/fin{V} T/prt{v,V}]]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[D Luisa] [T/fin [[D Luisa] [ha [[D loro] [T/prt [[D loro] [v volu]]]]]]]]]] are] due to bad left branch.
				Reject [[[D Luisa] [T/fin [[D Luisa] [ha [T/prt [v volu]]]]]] are] due to bad left branch.
				Reject [[T/fin [ha [T/prt [v volu]]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are]]]]

21.
		Consume "v"

		[[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are{v}]]]]

22.
		Consume "lava"

		[[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are{v,V}]]]]

23.
	>>>	Trying candidate parse [[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are{v,V}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are{v,V}]]]].
						Extracted head "ha" and reconstructed it = [[D loro] [[D Luisa] [T/fin [ha [T/prt{v,V} are{v,V}]]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [[D Luisa] [T/fin [ha [T/prt [v{V} are{v,V}]]]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [[D Luisa] [T/fin [ha [T/prt [v [volu are{v,V}]]]]]]]
					Extracted head "v{V}" from are and created [[D loro] [[D Luisa] [T/fin [ha [T/prt [v [volu [are v{V}]]]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[D Luisa] [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]]]
					=[[D loro] [[D Luisa] [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [[D Luisa] [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D Luisa] [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "T/fin".
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					New head was spawned due to multiple specifiers at T/fin but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of ha
					Result [[D loro] [? [[D Luisa] [T/fin [[D Luisa] [ha [T/prt [v [volu [are [v lava]]]]]]]]]]]
					Dropping constituent [D loro] from memory buffer into Spec of T/prt
					Result [[D loro] [? [[D Luisa]:107 [T/fin [__:107 [ha [[D loro] [T/prt [v [volu [are [v lava]]]]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping constituent __:108 from memory buffer into Spec of v
					Result [[D loro]:108 [? [[D Luisa]:107 [T/fin [__:107 [ha [__:108 [T/prt [__:108 [v [volu [are [v lava]]]]]]]]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:108 [? [[D Luisa]:107 [T/fin [__:107 [ha [__:108 [T/prt [__:108 [v [volu [are [v lava]]]]]]]]]]]]].
					=[[D loro]:108 [? [[D Luisa]:107 [T/fin [__:107 [ha [__:108 [T/prt [__:108 [v [volu [are [v lava]]]]]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:F from the edge of T/fin.
					Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:N from the edge of T/prt.
					T/prt acquired PHI:NUM:PL from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:108 [? [[D Luisa]:107 [T/fin [__:107 [ha [__:108 [T/prt [__:108 [v [volu [are [v lava]]]]]]]]]]]]]
			= [[D loro] [? [[D Luisa] [T/fin [[D Luisa] [ha [[D loro] [T/prt [[D loro] [v [volu [are [v lava]]]]]]]]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/fin: [TT/fin, ?]
__: [D, TT/fin, ?]
__: [N, D, TT/fin, ?]
ha: [V, TT/fin, ?]
__: [D, V, TT/fin, ?]
__: [N, D, V, TT/fin, ?]
T/prt: [T, V, TT/fin, ?]
__: [D, T, V, TT/fin, ?]
__: [N, D, T, V, TT/fin, ?]
v: [v, T, V, TT/fin, ?]
volu: [V, v, T, V, TT/fin, ?]
are: [INF, V, v, T, V, TT/fin, ?]
v: [v, INF, V, v, T, V, TT/fin, ?]
lava: [V, v, INF, V, v, T, V, TT/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Luisa] T/fin{V}] T/prt]
			Transferring [[D Luisa] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D Luisa] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D Luisa] [T/fin ha]]
					=[[D Luisa] [T/fin ha]]
				2. Feature processing:
					=[[D Luisa] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D Luisa] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of ha
					Result [[D Luisa] [T/fin [[D Luisa] ha]]]
					=[[D Luisa]:110 [T/fin [__:110 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:F from the edge of T/fin.
					Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D Luisa]:110 [T/fin [__:110 ha]]]
			=[[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] T/prt]]

24.
		Consume "v"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] T/prt{v}]]

25.
		Consume "volu"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] T/prt{v,V}]]

26.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt [[D loro] [v volu]]]]]] are] due to bad left branch.
				Reject [[[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt [v volu]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt{v,V} are]]]

27.
		Consume "v"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt{v,V} are{v}]]]

28.
		Consume "lava"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt{v,V} are{v,V}]]]

29.
	>>>	Trying candidate parse [[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt{v,V} are{v,V}]]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt{v,V} are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt{v,V} are{v,V}]]].
						Extracted head "v{V}" and reconstructed it = [[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt [v{V} are{v,V}]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt [v [volu are{v,V}]]]]]
					Extracted head "v{V}" from are and created [[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt [v [volu [are v{V}]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt [v [volu [are [v lava]]]]]]]
					=[[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt [v [volu [are [v lava]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt [v [volu [are [v lava]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt [v [volu [are [v lava]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa T/fin __ha " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[[D N] [TT/fin [[D N] V]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt [[D loro] [v [volu [are [v lava]]]]]]]]]
					Dropping constituent [[D Luisa]:110 [T/fin [__:110 ha]]] from memory buffer into Spec of are
					Result [[D loro]:112 [? [[[D Luisa]:110 [T/fin [__:110 ha]]] [T/prt [__:112 [v [volu [[[D Luisa]:110 [T/fin [__:110 ha]]] [are [v lava]]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [[D Luisa]:110 [T/fin [__:110 ha]]]:113.
				are has unacceptable specifier __:113.
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:112 [? [[[D Luisa]:110 [T/fin [__:110 ha]]]:113 [T/prt [__:112 [v [volu [__:113 [are [v lava]]]]]]]]]].
					=[[D loro]:112 [? [[[D Luisa]:110 [T/fin [__:110 ha]]]:113 [T/prt [__:112 [v [volu [__:113 [are [v lava]]]]]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from __:112.
					T/prt acquired PHI:GEN:N by phi-Agree from __:112.
					T/prt acquired PHI:NUM:PL by phi-Agree from __:112.
					T/prt acquired PHI:PER:3 by phi-Agree from __:112.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:112 [? [[[D Luisa]:110 [T/fin [__:110 ha]]]:113 [T/prt [__:112 [v [volu [__:113 [are [v lava]]]]]]]]]]
			= [[D loro] [? [[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt [[D loro] [v [volu [[[D Luisa] [T/fin [[D Luisa] ha]]] [are [v lava]]]]]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [[D Luisa]:110 [T/fin [__:110 ha]]]:113.
				are has unacceptable specifier __:113.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/fin: [TT/fin, ?]
__: [D, TT/fin, ?]
__: [N, D, TT/fin, ?]
ha: [V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
volu: [V, v, T, ?]
__: [D, V, v, T, ?]
__: [N, D, V, v, T, ?]
__: [TT/fin, V, v, T, ?]
__: [D, TT/fin, V, v, T, ?]
__: [N, D, TT/fin, V, v, T, ?]
__: [V, TT/fin, V, v, T, ?]
are: [INF, V, v, T, ?]
v: [v, INF, V, v, T, ?]
lava: [V, v, INF, V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 43
['loro', 'hanno', 'Luisa', 'voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 104]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

16.
		Consume "Luisa"

		[[D loro] [T/fin{V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{V} D{N}]]

17.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [T/fin{V} [[D Luisa] T/prt]]]

18.
		Consume "v"

		[[D loro] [T/fin{V} [[D Luisa] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D Luisa] T/prt{v}]]]

19.
		Consume "volu"

		[[D loro] [T/fin{V} [[D Luisa] T/prt{v}]]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [T/fin{V} [[D Luisa] T/prt{v,V}]]]

20.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} [[D Luisa] T/prt{v,V}]]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin [[D loro] [ha [[D Luisa] [T/prt [[D Luisa] [v volu]]]]]]]] are] due to bad left branch.
				Reject [[T/fin [ha [[D Luisa] [T/prt [[D Luisa] [v volu]]]]]] are] due to bad left branch.
				Reject [[[D Luisa] [T/prt [[D Luisa] [v volu]]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are]]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are{v}]]]]

22.
		Consume "lava"

		[[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are{v,V}]]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are{v,V}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are{v,V}]]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [[D Luisa] [T/prt{v,V} are{v,V}]]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [[D Luisa] [T/prt [v{V} are{v,V}]]]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [T/fin [ha [[D Luisa] [T/prt [v [volu are{v,V}]]]]]]]
					Extracted head "v{V}" from are and created [[D loro] [T/fin [ha [[D Luisa] [T/prt [v [volu [are v{V}]]]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [[D Luisa] [T/prt [v [volu [are [v lava]]]]]]]]]
					=[[D loro] [T/fin [ha [[D Luisa] [T/prt [v [volu [are [v lava]]]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [T/fin [ha [[D Luisa] [T/prt [v [volu [are [v lava]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [[D Luisa] [T/prt [v [volu [are [v lava]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [[D Luisa] [T/prt [v [volu [are [v lava]]]]]]]]]]
					Moving "D Luisa " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[D loro]:122 [T/fin [__:122 [ha [[D Luisa] [T/prt [[D Luisa] [v [volu [are [v lava]]]]]]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:122 [T/fin [__:122 [ha [[D Luisa]:123 [T/prt [__:123 [v [volu [are [v lava]]]]]]]]]]].
					=[[D loro]:122 [T/fin [__:122 [ha [[D Luisa]:123 [T/prt [__:123 [v [volu [are [v lava]]]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:122 [T/fin [__:122 [ha [[D Luisa]:123 [T/prt [__:123 [v [volu [are [v lava]]]]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D Luisa] [T/prt [[D Luisa] [v [volu [are [v lava]]]]]]]]]]]
		Checking LF-interface conditions.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
Luisa: [N, D, V, TT/fin]
T/prt: [T, V, TT/fin]
__: [D, T, V, TT/fin]
__: [N, D, T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
are: [INF, V, v, T, V, TT/fin]
v: [v, INF, V, v, T, V, TT/fin]
lava: [V, v, INF, V, v, T, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] T/prt]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "Luisa" from D and created [T/fin [ha [D Luisa]]]
					=[T/fin [ha [D Luisa]]]
				2. Feature processing:
					=[T/fin [ha [D Luisa]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D Luisa]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D Luisa]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D Luisa].
					=[T/fin [ha [D Luisa]]]
			=[[D loro] [[T/fin [ha [D Luisa]]] T/prt]]

24.
		Consume "v"

		[[D loro] [[T/fin [ha [D Luisa]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha [D Luisa]]] T/prt{v}]]

25.
		Consume "volu"

		[[D loro] [[T/fin [ha [D Luisa]]] T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [[T/fin [ha [D Luisa]]] T/prt{v,V}]]

26.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [[T/fin [ha [D Luisa]]] T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[T/fin [ha [D Luisa]]] [T/prt [[D loro] [v volu]]]]]] are] due to bad left branch.
				Reject [[[T/fin [ha [D Luisa]]] [T/prt [v volu]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [[T/fin [ha [D Luisa]]] [T/prt{v,V} are]]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D Luisa]]] [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [[T/fin [ha [D Luisa]]] [T/prt{v,V} are{v}]]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D Luisa]]] [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [[T/fin [ha [D Luisa]]] [T/prt{v,V} are{v,V}]]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D Luisa]]] [T/prt{v,V} are{v,V}]]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [D Luisa]]] [T/prt{v,V} are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [D Luisa]]] [T/prt{v,V} are{v,V}]]].
						Extracted head "v{V}" and reconstructed it = [[D loro] [[T/fin [ha [D Luisa]]] [T/prt [v{V} are{v,V}]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [[T/fin [ha [D Luisa]]] [T/prt [v [volu are{v,V}]]]]]
					Extracted head "v{V}" from are and created [[D loro] [[T/fin [ha [D Luisa]]] [T/prt [v [volu [are v{V}]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [D Luisa]]] [T/prt [v [volu [are [v lava]]]]]]]
					=[[D loro] [[T/fin [ha [D Luisa]]] [T/prt [v [volu [are [v lava]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [[T/fin [ha [D Luisa]]] [T/prt [v [volu [are [v lava]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [D Luisa]]] [T/prt [v [volu [are [v lava]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D Luisa " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [D Luisa]]] [T/prt [[D loro] [v [volu [are [v lava]]]]]]]]]
					Dropping constituent [T/fin [ha [D Luisa]]] from memory buffer into Spec of are
					Result [[D loro]:125 [? [[T/fin [ha [D Luisa]]] [T/prt [__:125 [v [volu [[T/fin [ha [D Luisa]]] [are [v lava]]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[TT/fin [V [D N]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D Luisa]]]:126.
				are has unacceptable specifier __:126.
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:125 [? [[T/fin [ha [D Luisa]]]:126 [T/prt [__:125 [v [volu [__:126 [are [v lava]]]]]]]]]].
					=[[D loro]:125 [? [[T/fin [ha [D Luisa]]]:126 [T/prt [__:125 [v [volu [__:126 [are [v lava]]]]]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from __:125.
					T/prt acquired PHI:GEN:N by phi-Agree from __:125.
					T/prt acquired PHI:NUM:PL by phi-Agree from __:125.
					T/prt acquired PHI:PER:3 by phi-Agree from __:125.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:125 [? [[T/fin [ha [D Luisa]]]:126 [T/prt [__:125 [v [volu [__:126 [are [v lava]]]]]]]]]]
			= [[D loro] [? [[T/fin [ha [D Luisa]]] [T/prt [[D loro] [v [volu [[T/fin [ha [D Luisa]]] [are [v lava]]]]]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D Luisa]]]:126.
				are has unacceptable specifier __:126.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
Luisa: [N, D, V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
volu: [V, v, T, ?]
__: [TT/fin, V, v, T, ?]
__: [V, TT/fin, V, v, T, ?]
__: [D, V, TT/fin, V, v, T, ?]
__: [N, D, V, TT/fin, V, v, T, ?]
are: [INF, V, v, T, ?]
v: [v, INF, V, v, T, ?]
lava: [V, v, INF, V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha D{N}]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [ha [D Luisa]]]]
					=[[D loro] [T/fin [ha [D Luisa]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [D Luisa]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [D Luisa]]]]]
					=[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]]
			=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] T/prt{v}]

31.
		Consume "volu"

		[[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] T/prt{v,V}]

32.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] T/prt{v,V}] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] [T/prt [v volu]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt{v,V} are]]

33.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] [T/prt{v,V} are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt{v,V} are{v}]]

34.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] [T/prt{v,V} are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt{v,V} are{v,V}]]

35.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] [T/prt{v,V} are{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt{v,V} are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt{v,V} are{v,V}]].
						Extracted head "v{V}" and reconstructed it = [[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt [v{V} are{v,V}]]]
						Extracted head "volu" and reconstructed it = [[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt [v [volu are{v,V}]]]]
					Extracted head "v{V}" from are and created [[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt [v [volu [are v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt [v [volu [are [v lava]]]]]]
					=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt [v [volu [are [v lava]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt [v [volu [are [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt [v [volu [are [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D Luisa " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
					Dropping constituent [[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] from memory buffer into Spec of are
					Result [[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [T/prt [v [volu [[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]] [are [v lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unacceptable specifier [[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]]:128.
				are has unacceptable specifier __:128.
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]]:128 [T/prt [v [volu [__:128 [are [v lava]]]]]]].
					=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]]:128 [T/prt [v [volu [__:128 [are [v lava]]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]]:128 [T/prt [v [volu [__:128 [are [v lava]]]]]]]
			= [[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] [T/prt [v [volu [[[D loro] [T/fin [[D loro] [ha [D Luisa]]]]] [are [v lava]]]]]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:127 [T/fin [__:127 [ha [D Luisa]]]]]:128.
				are has unacceptable specifier __:128.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
Luisa: [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
volu: [V, v, T]
__: [D, V, v, T]
__: [N, D, V, v, T]
__: [TT/fin, V, v, T]
__: [D, TT/fin, V, v, T]
__: [N, D, TT/fin, V, v, T]
__: [V, TT/fin, V, v, T]
__: [D, V, TT/fin, V, v, T]
__: [N, D, V, TT/fin, V, v, T]
are: [INF, V, v, T]
v: [v, INF, V, v, T]
lava: [V, v, INF, V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:129 [T/fin [__:129 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:129 [T/fin [__:129 ha]]]
			=[[[D loro]:129 [T/fin [__:129 ha]]] D]

36.
		Consume "Luisa"

		[[[D loro] [T/fin [[D loro] ha]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D loro]:129 [T/fin [__:129 ha]]] D{N}]

37.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:129 [T/fin [__:129 ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:129 [T/fin [__:129 ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D Luisa] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] T/prt{v}]]

39.
		Consume "volu"

		[[[D loro] [T/fin [[D loro] ha]]] [[D Luisa] T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] T/prt{v,V}]]

40.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] [T/fin [[D loro] ha]]] [[D Luisa] T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] ha]]] [? [[D Luisa] [T/prt [[D Luisa] [v volu]]]]]] are] due to bad left branch.
				Reject [[[D Luisa] [T/prt [[D Luisa] [v volu]]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt{v,V} are]]]

41.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D Luisa] [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt{v,V} are{v}]]]

42.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D Luisa] [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt{v,V} are{v,V}]]]

43.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D Luisa] [T/prt{v,V} are{v,V}]]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt{v,V} are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt{v,V} are{v,V}]]].
						Extracted head "v{V}" and reconstructed it = [[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt [v{V} are{v,V}]]]]
						Extracted head "volu" and reconstructed it = [[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt [v [volu are{v,V}]]]]]
					Extracted head "v{V}" from are and created [[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt [v [volu [are v{V}]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt [v [volu [are [v lava]]]]]]]
					=[[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt [v [volu [are [v lava]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt [v [volu [are [v lava]]]]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:129 [T/fin [__:129 ha]]] [[D Luisa] [T/prt [v [volu [are [v lava]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "T/prt".
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [[D N] [TT/fin [[D N] V]]]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[[D loro]:129 [T/fin [__:129 ha]]] [? [[D Luisa] [T/prt [[D Luisa] [v [volu [are [v lava]]]]]]]]]
					Dropping constituent [[D loro]:129 [T/fin [__:129 ha]]] from memory buffer into Spec of are
					Result [[[D loro]:129 [T/fin [__:129 ha]]] [? [[D Luisa]:132 [T/prt [__:132 [v [volu [[[D loro]:129 [T/fin [__:129 ha]]] [are [v lava]]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
					An uninterpretable grammatical head without lexical category was detected.
				are has unacceptable specifier __:133.
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:129 [T/fin [__:129 ha]]]:133 [? [[D Luisa]:132 [T/prt [__:132 [v [volu [__:133 [are [v lava]]]]]]]]]].
					=[[[D loro]:129 [T/fin [__:129 ha]]]:133 [? [[D Luisa]:132 [T/prt [__:132 [v [volu [__:133 [are [v lava]]]]]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:129 [T/fin [__:129 ha]]]:133 [? [[D Luisa]:132 [T/prt [__:132 [v [volu [__:133 [are [v lava]]]]]]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [? [[D Luisa] [T/prt [[D Luisa] [v [volu [[[D loro] [T/fin [[D loro] ha]]] [are [v lava]]]]]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				are has unacceptable specifier __:133.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
volu: [V, v, T, ?]
__: [D, V, v, T, ?]
__: [N, D, V, v, T, ?]
__: [TT/fin, V, v, T, ?]
__: [D, TT/fin, V, v, T, ?]
__: [N, D, TT/fin, V, v, T, ?]
__: [V, TT/fin, V, v, T, ?]
are: [INF, V, v, T, ?]
v: [v, INF, V, v, T, ?]
lava: [V, v, INF, V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:129 [T/fin [__:129 ha]]] D{N}] T/prt]
			Transferring [[[D loro]:129 [T/fin [__:129 ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:129 [T/fin [__:129 ha]]] D{N}].
					Extracted head "Luisa" from D and created [[[D loro]:129 [T/fin [__:129 ha]]] [D Luisa]]
					=[[[D loro]:129 [T/fin [__:129 ha]]] [D Luisa]]
				2. Feature processing:
					=[[[D loro]:129 [T/fin [__:129 ha]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D loro]:129 [T/fin [__:129 ha]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [[D loro]:129 [T/fin [__:129 ha]]].
					Extraposition will be tried on [[[D loro]:129 [T/fin [__:129 ha]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>]
			=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] T/prt]

44.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] T/prt{v}]

45.
		Consume "volu"

		[[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] T/prt{v,V}]

46.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] T/prt{v,V}] + are
			Filtering out impossible merge sites...
				Reject [[[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] [T/prt [v volu]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt{v,V} are]]

47.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] [T/prt{v,V} are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt{v,V} are{v}]]

48.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] [T/prt{v,V} are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt{v,V} are{v,V}]]

49.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] [T/prt{v,V} are{v,V}]] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt{v,V} are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt{v,V} are{v,V}]].
						Extracted head "v{V}" and reconstructed it = [[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt [v{V} are{v,V}]]]
						Extracted head "volu" and reconstructed it = [[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt [v [volu are{v,V}]]]]
					Extracted head "v{V}" from are and created [[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt [v [volu [are v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt [v [volu [are [v lava]]]]]]
					=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt [v [volu [are [v lava]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt [v [volu [are [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt [v [volu [are [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D Luisa " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
					Dropping constituent [[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] from memory buffer into Spec of are
					Result [[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [T/prt [v [volu [[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>] [are [v lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unacceptable specifier [[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>]:134.
				are has unacceptable specifier __:134.
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>]:134 [T/prt [v [volu [__:134 [are [v lava]]]]]]].
					=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>]:134 [T/prt [v [volu [__:134 [are [v lava]]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>]:134 [T/prt [v [volu [__:134 [are [v lava]]]]]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] [T/prt [v [volu [[[[D loro] [T/fin [[D loro] ha]]] <D Luisa>] [are [v lava]]]]]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[D loro]:129 [T/fin [__:129 ha]]] <D Luisa>]:134.
				are has unacceptable specifier __:134.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D]
Luisa: [N, D]
T/prt: [T]
v: [v, T]
volu: [V, v, T]
__: [D, V, v, T]
__: [N, D, V, v, T]
__: [TT/fin, V, v, T]
__: [D, TT/fin, V, v, T]
__: [N, D, TT/fin, V, v, T]
__: [V, TT/fin, V, v, T]
__: [D, V, v, T]
__: [N, D, V, v, T]
are: [INF, V, v, T]
v: [v, INF, V, v, T]
lava: [V, v, INF, V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 44
['loro', 'hanno', 'voluto', 'Luisa', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

11.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

12.
		Consume "volu"

		[[D loro] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

13.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"volu" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"volu" lacks complement.
				Avoid [T/fin [ha [T/prt [v volu]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 9]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

19.
		Consume "Luisa"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

20.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + are
			Filtering out impossible merge sites...
				Reject [[T D] are] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + are = -98]
				[T/fin{V} [T/prt{v,V} D{N}]] + are = -96]
				D{N} + are = 106]
		Ranking completed:
			1. [D{N}; are]
			2. [[T/fin{V} [T/prt{v,V} D{N}]]; are]
			3. [[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are]]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are{v}]]]]

22.
		Consume "lava"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are{v,V}]]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are{v,V}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are{v,V}]]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [T/prt{v,V} [[D Luisa] are{v,V}]]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v{V} [[D Luisa] are{v,V}]]]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [volu [[D Luisa] are{v,V}]]]]]]]
					Extracted head "v{V}" from are and created [[D loro] [T/fin [ha [T/prt [v [volu [[D Luisa] [are v{V}]]]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [T/prt [v [volu [[D Luisa] [are [v lava]]]]]]]]]
					=[[D loro] [T/fin [ha [T/prt [v [volu [[D Luisa] [are [v lava]]]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [T/fin [ha [T/prt [v [volu [[D Luisa] [are [v lava]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v [volu [[D Luisa] [are [v lava]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [[D Luisa] [are [v lava]]]]]]]]]]
					Moving "D Luisa " into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[D loro]:141 [T/fin [__:141 [ha [T/prt [v [volu [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:141 [T/fin [__:141 [ha [T/prt [v [volu [[D Luisa]:142 [are [__:142 [v lava]]]]]]]]]]].
					=[[D loro]:141 [T/fin [__:141 [ha [T/prt [v [volu [[D Luisa]:142 [are [__:142 [v lava]]]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:141 [T/fin [__:141 [ha [T/prt [v [volu [[D Luisa]:142 [are [__:142 [v lava]]]]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]]]]
		Checking LF-interface conditions.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]
are: [INF, V, v, T, V, TT/fin]
__: [D, INF, V, v, T, V, TT/fin]
__: [N, D, INF, V, v, T, V, TT/fin]
v: [v, INF, V, v, T, V, TT/fin]
lava: [V, v, INF, V, v, T, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} [T/prt{v,V} D{N}]] are]
			Transferring [T/fin{V} [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} D{N}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} D{N}]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} D{N}]]]]
						Extracted head "volu" and reconstructed it = [T/fin [ha [T/prt [v [volu D{N}]]]]]
					Extracted head "Luisa" from D and created [T/fin [ha [T/prt [v [volu [D Luisa]]]]]]
					=[T/fin [ha [T/prt [v [volu [D Luisa]]]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v [volu [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [volu [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [T/prt [v [volu [D Luisa]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v [volu [D Luisa]]]]]]
			=[[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] are]]

24.
		Consume "v"

		[[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] are{v}]]

25.
		Consume "lava"

		[[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] are{v,V}]]

26.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] are{v,V}]].
					Extracted head "v{V}" from are and created [[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] [are [v lava]]]]
					=[[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha T/prt v volu D Luisa " into memory buffer from SPEC of "are".
					Moving "D loro " into memory buffer from SPEC of "are".
					New head was spawned due to multiple specifiers at are but its category is unknown!
					Memory buffer: [[TT/fin [V [T [v [V [D N]]]]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] [are [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				are has unacceptable specifier [T/fin [ha [T/prt [v [volu [D Luisa]]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:143 [? [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] [are [__:143 [v lava]]]]]].
					=[[D loro]:143 [? [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] [are [__:143 [v lava]]]]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL by phi-Agree from __:143.
					are acquired PHI:PER:3 by phi-Agree from __:143.
					=[[D loro]:143 [? [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] [are [__:143 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [T/prt [v [volu [D Luisa]]]]]] [are [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				are has unacceptable specifier [T/fin [ha [T/prt [v [volu [D Luisa]]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
T/prt: [T, V, TT/fin, ?]
v: [v, T, V, TT/fin, ?]
volu: [V, v, T, V, TT/fin, ?]
D: [D, V, v, T, V, TT/fin, ?]
Luisa: [N, D, V, v, T, V, TT/fin, ?]
are: [INF, ?]
__: [D, INF, ?]
__: [N, D, INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] are]
			Transferring [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [T/prt{v,V} D{N}]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v{V} D{N}]]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [volu D{N}]]]]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [ha [T/prt [v [volu [D Luisa]]]]]]]
					=[[D loro] [T/fin [ha [T/prt [v [volu [D Luisa]]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v [volu [D Luisa]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v [volu [D Luisa]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D Luisa]]]]]]]]
					=[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]]
			=[[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] are]

27.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D Luisa]]]]]]]] are] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] are{v}]

28.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D Luisa]]]]]]]] are{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] are{v,V}]

29.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D Luisa]]]]]]]] are{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] are{v,V}].
					Extracted head "v{V}" from are and created [[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] [are v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] [are [v lava]]]
					=[[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] [are [v lava]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] [are [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] [are [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha T/prt v volu D Luisa " into memory buffer from SPEC of "are".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [T [v [V [D N]]]]]]]]]
				are has unacceptable specifier [[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] [are [v lava]]].
					=[[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] [are [v lava]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]] [are [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D Luisa]]]]]]]] [are [v lava]]]
		Checking LF-interface conditions.
				are has unacceptable specifier [[D loro]:144 [T/fin [__:144 [ha [T/prt [v [volu [D Luisa]]]]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]
are: [INF]
v: [v, INF]
lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "volu" from v and created [T/fin [ha [T/prt [v volu]]]]
					=[T/fin [ha [T/prt [v volu]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v volu]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v volu]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"volu" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v volu]]]].
					=[T/fin [ha [T/prt [v volu]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v volu]]]]
			=[[D loro] [[T/fin [ha [T/prt [v volu]]]] D]]

30.
		Consume "Luisa"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [[T/fin [ha [T/prt [v volu]]]] D{N}]]

31.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[T/fin [ha [T/prt [v volu]]]] <D Luisa>]] are] due to bad left branch.
				Reject [[[T/fin [ha [T/prt [v volu]]]] <D Luisa>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] are]]]

32.
		Consume "v"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] are{v}]]]

33.
		Consume "lava"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] are{v,V}]]]

34.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] are{v,V}]]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] are{v,V}]]].
					Extracted head "v{V}" from are and created [[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] [are [v lava]]]]]
					=[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] [are [v lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D Luisa] [are [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "are".
					Moving "T/fin ha T/prt v volu " into memory buffer from SPEC of "are".
					New head was spawned due to multiple specifiers at are but its category is unknown!
					Moving "D loro " into memory buffer from SPEC of "are".
					New head was spawned due to multiple specifiers at are but its category is unknown!
					Memory buffer: [[D N], [TT/fin [V [T [v V]]]], [D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [T/prt [v volu]]]] [? [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]
					Dropping [D N](=D loro ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:146 [? [[T/fin [ha [T/prt [v volu]]]] [? [[D Luisa]:145 [are [__:145 [v [lava __:146]]]]]]]]]
					Remaining items in memory buffer: [[TT/fin [V [T [v V]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				"volu" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[D loro]:146 [? [[T/fin [ha [T/prt [v volu]]]] [? [[D Luisa]:145 [are [__:145 [v [lava __:146]]]]]]]]].
					=[[D loro]:146 [? [[T/fin [ha [T/prt [v volu]]]] [? [[D Luisa]:145 [are [__:145 [v [lava __:146]]]]]]]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:146 [? [[T/fin [ha [T/prt [v volu]]]] [? [[D Luisa]:145 [are [__:145 [v [lava __:146]]]]]]]]]
			= [[D loro] [? [[T/fin [ha [T/prt [v volu]]]] [? [[D Luisa] [are [[D Luisa] [v [lava [D loro]]]]]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				"volu" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
T/prt: [T, V, TT/fin, ?]
v: [v, T, V, TT/fin, ?]
volu: [V, v, T, V, TT/fin, ?]
?: [?, ?]
D: [D, ?, ?]
Luisa: [N, D, ?, ?]
are: [INF, ?, ?]
__: [D, INF, ?, ?]
__: [N, D, INF, ?, ?]
v: [v, INF, ?, ?]
lava: [V, v, INF, ?, ?]
__: [D, V, v, INF, ?, ?]
__: [N, D, V, v, INF, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "volu" from v and created [[D loro] [T/fin [ha [T/prt [v volu]]]]]
					=[[D loro] [T/fin [ha [T/prt [v volu]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v volu]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v volu]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]]
				"volu" lacks complement.
					Extraposition will be tried on [[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]].
					=[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]]
			=[[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] D]

35.
		Consume "Luisa"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] D{N}]

36.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] D{N}] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] <D Luisa>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [[D Luisa] are]]

37.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] [[D Luisa] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [[D Luisa] are{v}]]

38.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] [[D Luisa] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [[D Luisa] are{v,V}]]

39.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] [[D Luisa] are{v,V}]] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [[D Luisa] are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [[D Luisa] are{v,V}]].
					Extracted head "v{V}" from are and created [[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [[D Luisa] [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [[D Luisa] [are [v lava]]]]
					=[[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [[D Luisa] [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [[D Luisa] [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [[D Luisa] [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "are".
					Moving "D loro T/fin __ha T/prt v volu " into memory buffer from SPEC of "are".
					New head was spawned due to multiple specifiers at are but its category is unknown!
					Memory buffer: [[D N], [[D N] [TT/fin [[D N] [V [T [v V]]]]]]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [? [[D Luisa] [are [[D Luisa] [v lava]]]]]]
				"volu" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [? [[D Luisa]:148 [are [__:148 [v lava]]]]]].
					=[[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [? [[D Luisa]:148 [are [__:148 [v lava]]]]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[[D loro]:147 [T/fin [__:147 [ha [T/prt [v volu]]]]]] [? [[D Luisa]:148 [are [__:148 [v lava]]]]]]
			= [[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] [? [[D Luisa] [are [[D Luisa] [v lava]]]]]]
		Checking LF-interface conditions.
				"volu" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
are: [INF, ?]
__: [D, INF, ?]
__: [N, D, INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:149 [T/fin [__:149 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:149 [T/fin [__:149 ha]]]
			=[[[D loro]:149 [T/fin [__:149 ha]]] T/prt]

40.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:149 [T/fin [__:149 ha]]] T/prt{v}]

41.
		Consume "volu"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[[D loro]:149 [T/fin [__:149 ha]]] T/prt{v,V}]

42.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:149 [T/fin [__:149 ha]]].
				"volu" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				[[[D loro]:149 [T/fin [__:149 ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 104]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:149 [T/fin [__:149 ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt{v,V} D]]

48.
		Consume "Luisa"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt{v,V} D{N}]]

49.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [volu [D Luisa]]]]] are] due to bad left branch.
			Ranking remaining sites...
				Avoid D{N} because it could break words.
				[T/prt{v,V} D{N}] + are = 1]
				D{N} + are = -96]
		Ranking completed:
			1. [[T/prt{v,V} D{N}]; are]
			2. [D{N}; are]
		Exploring solution number (1) =[[T/prt{v,V} D{N}] are]
			Transferring [T/prt{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/prt [v{V} D{N}]]
						Extracted head "volu" and reconstructed it = [T/prt [v [volu D{N}]]]
					Extracted head "Luisa" from D and created [T/prt [v [volu [D Luisa]]]]
					=[T/prt [v [volu [D Luisa]]]]
				2. Feature processing:
					=[T/prt [v [volu [D Luisa]]]]
				3. Floater movement reconstruction:
					=[T/prt [v [volu [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/prt [v [volu [D Luisa]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [v [volu [D Luisa]]]]
			=[[[D loro]:149 [T/fin [__:149 ha]]] [[T/prt [v [volu [D Luisa]]]] are]]

50.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [D Luisa]]]] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:149 [T/fin [__:149 ha]]] [[T/prt [v [volu [D Luisa]]]] are{v}]]

51.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [D Luisa]]]] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:149 [T/fin [__:149 ha]]] [[T/prt [v [volu [D Luisa]]]] are{v,V}]]

52.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [D Luisa]]]] are{v,V}]] (6.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:149 [T/fin [__:149 ha]]] [[T/prt [v [volu [D Luisa]]]] are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:149 [T/fin [__:149 ha]]] [[T/prt [v [volu [D Luisa]]]] are{v,V}]].
					Extracted head "v{V}" from are and created [[[D loro]:149 [T/fin [__:149 ha]]] [[T/prt [v [volu [D Luisa]]]] [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:149 [T/fin [__:149 ha]]] [[T/prt [v [volu [D Luisa]]]] [are [v lava]]]]
					=[[[D loro]:149 [T/fin [__:149 ha]]] [[T/prt [v [volu [D Luisa]]]] [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:149 [T/fin [__:149 ha]]] [[T/prt [v [volu [D Luisa]]]] [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:149 [T/fin [__:149 ha]]] [[T/prt [v [volu [D Luisa]]]] [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/prt v volu D Luisa " into memory buffer from SPEC of "are".
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "are".
					New head was spawned due to multiple specifiers at are but its category is unknown!
					Memory buffer: [[T [v [V [D N]]]], [[D N] [TT/fin [[D N] V]]]]
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:149 [T/fin [__:149 ha]]] [? [[T/prt [v [volu [D Luisa]]]] [are [v lava]]]]].
					=[[[D loro]:149 [T/fin [__:149 ha]]] [? [[T/prt [v [volu [D Luisa]]]] [are [v lava]]]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:149 [T/fin [__:149 ha]]] [? [[T/prt [v [volu [D Luisa]]]] [are [v lava]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [? [[T/prt [v [volu [D Luisa]]]] [are [v lava]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:IT']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
?: [?]
T/prt: [T, ?]
v: [v, T, ?]
volu: [V, v, T, ?]
D: [D, V, v, T, ?]
Luisa: [N, D, V, v, T, ?]
are: [INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt{v,V} [[D Luisa] are]]]

53.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D Luisa] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt{v,V} [[D Luisa] are{v}]]]

54.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D Luisa] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt{v,V} [[D Luisa] are{v,V}]]]

55.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D Luisa] are{v,V}]]] (7.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt{v,V} [[D Luisa] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt{v,V} [[D Luisa] are{v,V}]]].
						Extracted head "v{V}" and reconstructed it = [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v{V} [[D Luisa] are{v,V}]]]]
						Extracted head "volu" and reconstructed it = [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v [volu [[D Luisa] are{v,V}]]]]]
					Extracted head "v{V}" from are and created [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v [volu [[D Luisa] [are v{V}]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v [volu [[D Luisa] [are [v lava]]]]]]]
					=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v [volu [[D Luisa] [are [v lava]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v [volu [[D Luisa] [are [v lava]]]]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v [volu [[D Luisa] [are [v lava]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
					Moving "D Luisa " into memory buffer from SPEC of "are".
					Memory buffer: [[D N], [[D N] [TT/fin [[D N] V]]]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v [volu [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]
				T/prt has unacceptable specifier [[D loro]:149 [T/fin [__:149 ha]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v [volu [[D Luisa]:150 [are [__:150 [v lava]]]]]]]].
					=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v [volu [[D Luisa]:150 [are [__:150 [v lava]]]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v [volu [[D Luisa]:150 [are [__:150 [v lava]]]]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [volu [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:149 [T/fin [__:149 ha]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T]
v: [v, T]
volu: [V, v, T]
D: [D, V, v, T]
Luisa: [N, D, V, v, T]
are: [INF, V, v, T]
__: [D, INF, V, v, T]
__: [N, D, INF, V, v, T]
v: [v, INF, V, v, T]
lava: [V, v, INF, V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:149 [T/fin [__:149 ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:149 [T/fin [__:149 ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:149 [T/fin [__:149 ha]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "volu" from v and created [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]]
					=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]]
				2. Feature processing:
					=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]]
				3. Floater movement reconstruction:
					=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:149 [T/fin [__:149 ha]]].
				"volu" lacks complement.
					Extraposition will be tried on [[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]].
					=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]]
			=[[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] D]

56.
		Consume "Luisa"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] D{N}]

57.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] D{N}] + are
			Filtering out impossible merge sites...
				Reject [[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] <D Luisa>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [[D Luisa] are]]

58.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] [[D Luisa] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [[D Luisa] are{v}]]

59.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] [[D Luisa] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [[D Luisa] are{v,V}]]

60.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] [[D Luisa] are{v,V}]] (8.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [[D Luisa] are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [[D Luisa] are{v,V}]].
					Extracted head "v{V}" from are and created [[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [[D Luisa] [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [[D Luisa] [are [v lava]]]]
					=[[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [[D Luisa] [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [[D Luisa] [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [[D Luisa] [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "are".
					Moving "D loro T/fin __ha T/prt v volu " into memory buffer from SPEC of "are".
					New head was spawned due to multiple specifiers at are but its category is unknown!
					Memory buffer: [[D N], [[[D N] [TT/fin [[D N] V]]] [T [v V]]]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [? [[D Luisa] [are [[D Luisa] [v lava]]]]]]
				T/prt has unacceptable specifier [[D loro]:149 [T/fin [__:149 ha]]].
				"volu" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [? [[D Luisa]:151 [are [__:151 [v lava]]]]]].
					=[[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [? [[D Luisa]:151 [are [__:151 [v lava]]]]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[[[D loro]:149 [T/fin [__:149 ha]]] [T/prt [v volu]]] [? [[D Luisa]:151 [are [__:151 [v lava]]]]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] [? [[D Luisa] [are [[D Luisa] [v lava]]]]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:149 [T/fin [__:149 ha]]].
				"volu" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T]
v: [v, T]
volu: [V, v, T]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
are: [INF, ?]
__: [D, INF, ?]
__: [N, D, INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 45
['loro', 'Luisa', 'stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

13.
		Consume "Luisa"

		[[D loro] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] D{N}]

14.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D loro] <D Luisa>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [[D Luisa] T/fin]]

16.
		Consume "sta"

		[[D loro] [[D Luisa] T/fin]] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=[[D loro] [[D Luisa] T/fin{V}]]

17.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D loro] [[D Luisa] T/fin{V}]] + PRG
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[D Luisa] [T/fin [[D Luisa] sta]]]]] PRG] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D Luisa] T/fin{V}] + PRG = -98]
				T/fin{V} + PRG = 104]
		Ranking completed:
			1. [T/fin{V}; PRG]
			2. [[[D Luisa] T/fin{V}]; PRG]
		Exploring solution number (1) =[T/fin{V} PRG]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [[D Luisa] [T/fin{V} PRG]]]

18.
		Consume "v"

		[[D loro] [[D Luisa] [T/fin{V} PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D loro] [[D Luisa] [T/fin{V} PRG{v}]]]

19.
		Consume "lava"

		[[D loro] [[D Luisa] [T/fin{V} PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D loro] [[D Luisa] [T/fin{V} PRG{v,V}]]]

20.
	>>>	Trying candidate parse [[D loro] [[D Luisa] [T/fin{V} PRG{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D Luisa] [T/fin{V} PRG{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D Luisa] [T/fin{V} PRG{v,V}]]].
						Extracted head "sta" and reconstructed it = [[D loro] [[D Luisa] [T/fin [sta PRG{v,V}]]]]
					Extracted head "v{V}" from PRG and created [[D loro] [[D Luisa] [T/fin [sta [PRG v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[D Luisa] [T/fin [sta [PRG [v lava]]]]]]
					=[[D loro] [[D Luisa] [T/fin [sta [PRG [v lava]]]]]]
				2. Feature processing:
					=[[D loro] [[D Luisa] [T/fin [sta [PRG [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D Luisa] [T/fin [sta [PRG [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "T/fin".
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					New head was spawned due to multiple specifiers at T/fin but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of sta
					Result [[D loro] [? [[D Luisa] [T/fin [[D Luisa] [sta [PRG [v lava]]]]]]]]
					Dropping constituent [D loro] from memory buffer into Spec of PRG
					Result [[D loro] [? [[D Luisa]:155 [T/fin [__:155 [sta [[D loro] [PRG [v lava]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "PRG".
					Memory buffer: [[D N]]
					Dropping constituent __:156 from memory buffer into Spec of v
					Result [[D loro]:156 [? [[D Luisa]:155 [T/fin [__:155 [sta [__:156 [PRG [__:156 [v lava]]]]]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:156 [? [[D Luisa]:155 [T/fin [__:155 [sta [__:156 [PRG [__:156 [v lava]]]]]]]]]].
					=[[D loro]:156 [? [[D Luisa]:155 [T/fin [__:155 [sta [__:156 [PRG [__:156 [v lava]]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:F from the edge of T/fin.
					Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:N from the edge of PRG.
					PRG acquired PHI:NUM:PL from the edge of PRG.
					PRG acquired PHI:PER:3 from the edge of PRG.
					=[[D loro]:156 [? [[D Luisa]:155 [T/fin [__:155 [sta [__:156 [PRG [__:156 [v lava]]]]]]]]]]
			= [[D loro] [? [[D Luisa] [T/fin [[D Luisa] [sta [[D loro] [PRG [[D loro] [v lava]]]]]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/fin: [TT/fin, ?]
__: [D, TT/fin, ?]
__: [N, D, TT/fin, ?]
sta: [V, TT/fin, ?]
__: [D, V, TT/fin, ?]
__: [N, D, V, TT/fin, ?]
PRG: [INF, V, TT/fin, ?]
__: [D, INF, V, TT/fin, ?]
__: [N, D, INF, V, TT/fin, ?]
v: [v, INF, V, TT/fin, ?]
lava: [V, v, INF, V, TT/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Luisa] T/fin{V}] PRG]
			Transferring [[D Luisa] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D Luisa] T/fin{V}].
					Extracted head "sta" from T/fin and created [[D Luisa] [T/fin sta]]
					=[[D Luisa] [T/fin sta]]
				2. Feature processing:
					=[[D Luisa] [T/fin sta]]
				3. Floater movement reconstruction:
					=[[D Luisa] [T/fin sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of sta
					Result [[D Luisa] [T/fin [[D Luisa] sta]]]
					=[[D Luisa]:158 [T/fin [__:158 sta]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:F from the edge of T/fin.
					Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D Luisa]:158 [T/fin [__:158 sta]]]
			=[[D loro] [[[D Luisa]:158 [T/fin [__:158 sta]]] PRG]]

21.
		Consume "v"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] sta]]] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D loro] [[[D Luisa]:158 [T/fin [__:158 sta]]] PRG{v}]]

22.
		Consume "lava"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] sta]]] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D loro] [[[D Luisa]:158 [T/fin [__:158 sta]]] PRG{v,V}]]

23.
	>>>	Trying candidate parse [[D loro] [[[D Luisa] [T/fin [[D Luisa] sta]]] PRG{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[[D Luisa]:158 [T/fin [__:158 sta]]] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[[D Luisa]:158 [T/fin [__:158 sta]]] PRG{v,V}]].
					Extracted head "v{V}" from PRG and created [[D loro] [[[D Luisa]:158 [T/fin [__:158 sta]]] [PRG v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[[D Luisa]:158 [T/fin [__:158 sta]]] [PRG [v lava]]]]
					=[[D loro] [[[D Luisa]:158 [T/fin [__:158 sta]]] [PRG [v lava]]]]
				2. Feature processing:
					=[[D loro] [[[D Luisa]:158 [T/fin [__:158 sta]]] [PRG [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[[D Luisa]:158 [T/fin [__:158 sta]]] [PRG [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa T/fin __sta " into memory buffer from SPEC of "PRG".
					Moving "D loro " into memory buffer from SPEC of "PRG".
					New head was spawned due to multiple specifiers at PRG but its category is unknown!
					Memory buffer: [[[D N] [TT/fin [[D N] V]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[[D Luisa]:158 [T/fin [__:158 sta]]] [PRG [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				PRG has unacceptable specifier [[D Luisa]:158 [T/fin [__:158 sta]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:159 [? [[[D Luisa]:158 [T/fin [__:158 sta]]] [PRG [__:159 [v lava]]]]]].
					=[[D loro]:159 [? [[[D Luisa]:158 [T/fin [__:158 sta]]] [PRG [__:159 [v lava]]]]]]
				5. Agreement reconstruction:
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF by phi-Agree from __:159.
					PRG acquired PHI:GEN:N by phi-Agree from __:159.
					PRG acquired PHI:NUM:PL by phi-Agree from __:159.
					PRG acquired PHI:PER:3 by phi-Agree from __:159.
					=[[D loro]:159 [? [[[D Luisa]:158 [T/fin [__:158 sta]]] [PRG [__:159 [v lava]]]]]]
			= [[D loro] [? [[[D Luisa] [T/fin [[D Luisa] sta]]] [PRG [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				PRG has unacceptable specifier [[D Luisa]:158 [T/fin [__:158 sta]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/fin: [TT/fin, ?]
__: [D, TT/fin, ?]
__: [N, D, TT/fin, ?]
sta: [V, TT/fin, ?]
PRG: [INF, ?]
__: [D, INF, ?]
__: [N, D, INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 46
['loro', 'stanno', 'Luisa', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "sta"

		[[D loro] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 104]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

16.
		Consume "Luisa"

		[[D loro] [T/fin{V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{V} D{N}]]

17.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D loro] [T/fin{V} D{N}]] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + PRG = -98]
				[T/fin{V} D{N}] + PRG = -96]
				D{N} + PRG = 106]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[T/fin{V} D{N}]; PRG]
			3. [[[D loro] [T/fin{V} D{N}]]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [T/fin{V} [[D Luisa] PRG]]]

18.
		Consume "v"

		[[D loro] [T/fin{V} [[D Luisa] PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D loro] [T/fin{V} [[D Luisa] PRG{v}]]]

19.
		Consume "lava"

		[[D loro] [T/fin{V} [[D Luisa] PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D loro] [T/fin{V} [[D Luisa] PRG{v,V}]]]

20.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D Luisa] PRG{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D Luisa] PRG{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D Luisa] PRG{v,V}]]].
						Extracted head "sta" and reconstructed it = [[D loro] [T/fin [sta [[D Luisa] PRG{v,V}]]]]
					Extracted head "v{V}" from PRG and created [[D loro] [T/fin [sta [[D Luisa] [PRG v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [sta [[D Luisa] [PRG [v lava]]]]]]
					=[[D loro] [T/fin [sta [[D Luisa] [PRG [v lava]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [sta [[D Luisa] [PRG [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [sta [[D Luisa] [PRG [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] [sta [[D Luisa] [PRG [v lava]]]]]]]
					Moving "D Luisa " into memory buffer from SPEC of "PRG".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[D loro]:164 [T/fin [__:164 [sta [[D Luisa] [PRG [[D Luisa] [v lava]]]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:164 [T/fin [__:164 [sta [[D Luisa]:165 [PRG [__:165 [v lava]]]]]]]].
					=[[D loro]:164 [T/fin [__:164 [sta [[D Luisa]:165 [PRG [__:165 [v lava]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:F from the edge of PRG.
					PRG acquired PHI:NUM:SG from the edge of PRG.
					PRG acquired PHI:PER:3 from the edge of PRG.
					=[[D loro]:164 [T/fin [__:164 [sta [[D Luisa]:165 [PRG [__:165 [v lava]]]]]]]]
			= [[D loro] [T/fin [[D loro] [sta [[D Luisa] [PRG [[D Luisa] [v lava]]]]]]]]
		Checking LF-interface conditions.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
sta: [V, TT/fin]
D: [D, V, TT/fin]
Luisa: [N, D, V, TT/fin]
PRG: [INF, V, TT/fin]
__: [D, INF, V, TT/fin]
__: [N, D, INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] PRG]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "sta" and reconstructed it = [T/fin [sta D{N}]]
					Extracted head "Luisa" from D and created [T/fin [sta [D Luisa]]]
					=[T/fin [sta [D Luisa]]]
				2. Feature processing:
					=[T/fin [sta [D Luisa]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [D Luisa]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [sta [D Luisa]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D Luisa].
					=[T/fin [sta [D Luisa]]]
			=[[D loro] [[T/fin [sta [D Luisa]]] PRG]]

21.
		Consume "v"

		[[D loro] [[T/fin [sta [D Luisa]]] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D loro] [[T/fin [sta [D Luisa]]] PRG{v}]]

22.
		Consume "lava"

		[[D loro] [[T/fin [sta [D Luisa]]] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D loro] [[T/fin [sta [D Luisa]]] PRG{v,V}]]

23.
	>>>	Trying candidate parse [[D loro] [[T/fin [sta [D Luisa]]] PRG{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [sta [D Luisa]]] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [sta [D Luisa]]] PRG{v,V}]].
					Extracted head "v{V}" from PRG and created [[D loro] [[T/fin [sta [D Luisa]]] [PRG v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [sta [D Luisa]]] [PRG [v lava]]]]
					=[[D loro] [[T/fin [sta [D Luisa]]] [PRG [v lava]]]]
				2. Feature processing:
					=[[D loro] [[T/fin [sta [D Luisa]]] [PRG [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [sta [D Luisa]]] [PRG [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin sta D Luisa " into memory buffer from SPEC of "PRG".
					Moving "D loro " into memory buffer from SPEC of "PRG".
					New head was spawned due to multiple specifiers at PRG but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [sta [D Luisa]]] [PRG [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				PRG has unacceptable specifier [T/fin [sta [D Luisa]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:166 [? [[T/fin [sta [D Luisa]]] [PRG [__:166 [v lava]]]]]].
					=[[D loro]:166 [? [[T/fin [sta [D Luisa]]] [PRG [__:166 [v lava]]]]]]
				5. Agreement reconstruction:
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF by phi-Agree from __:166.
					PRG acquired PHI:GEN:N by phi-Agree from __:166.
					PRG acquired PHI:NUM:PL by phi-Agree from __:166.
					PRG acquired PHI:PER:3 by phi-Agree from __:166.
					=[[D loro]:166 [? [[T/fin [sta [D Luisa]]] [PRG [__:166 [v lava]]]]]]
			= [[D loro] [? [[T/fin [sta [D Luisa]]] [PRG [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				PRG has unacceptable specifier [T/fin [sta [D Luisa]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
sta: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
Luisa: [N, D, V, TT/fin, ?]
PRG: [INF, ?]
__: [D, INF, ?]
__: [N, D, INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] PRG]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "sta" and reconstructed it = [[D loro] [T/fin [sta D{N}]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [sta [D Luisa]]]]
					=[[D loro] [T/fin [sta [D Luisa]]]]
				2. Feature processing:
					=[[D loro] [T/fin [sta [D Luisa]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [sta [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] [sta [D Luisa]]]]]
					=[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]]
			=[[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] PRG]

24.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [sta [D Luisa]]]]] PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] PRG{v}]

25.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [sta [D Luisa]]]]] PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] PRG{v,V}]

26.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [sta [D Luisa]]]]] PRG{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] PRG{v,V}].
					Extracted head "v{V}" from PRG and created [[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] [PRG v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] [PRG [v lava]]]
					=[[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] [PRG [v lava]]]
				2. Feature processing:
					=[[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] [PRG [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] [PRG [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __sta D Luisa " into memory buffer from SPEC of "PRG".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				PRG has unacceptable specifier [[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] [PRG [v lava]]].
					=[[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] [PRG [v lava]]]
				5. Agreement reconstruction:
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]] [PRG [v lava]]]
			= [[[D loro] [T/fin [[D loro] [sta [D Luisa]]]]] [PRG [v lava]]]
		Checking LF-interface conditions.
				PRG has unacceptable specifier [[D loro]:167 [T/fin [__:167 [sta [D Luisa]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
sta: [V, TT/fin]
D: [D, V, TT/fin]
Luisa: [N, D, V, TT/fin]
PRG: [INF]
v: [v, INF]
lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "sta" from T/fin and created [[D loro] [T/fin sta]]
					=[[D loro] [T/fin sta]]
				2. Feature processing:
					=[[D loro] [T/fin sta]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] sta]]]
					=[[D loro]:168 [T/fin [__:168 sta]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:168 [T/fin [__:168 sta]]]
			=[[[D loro]:168 [T/fin [__:168 sta]]] D]

27.
		Consume "Luisa"

		[[[D loro] [T/fin [[D loro] sta]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D loro]:168 [T/fin [__:168 sta]]] D{N}]

28.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[[D loro] [T/fin [[D loro] sta]]] D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:168 [T/fin [__:168 sta]]] D{N}] + PRG = 1]
				D{N} + PRG = 2]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[[[D loro]:168 [T/fin [__:168 sta]]] D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[[D loro]:168 [T/fin [__:168 sta]]] [[D Luisa] PRG]]

29.
		Consume "v"

		[[[D loro] [T/fin [[D loro] sta]]] [[D Luisa] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[[D loro]:168 [T/fin [__:168 sta]]] [[D Luisa] PRG{v}]]

30.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] sta]]] [[D Luisa] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[[D loro]:168 [T/fin [__:168 sta]]] [[D Luisa] PRG{v,V}]]

31.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] sta]]] [[D Luisa] PRG{v,V}]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:168 [T/fin [__:168 sta]]] [[D Luisa] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:168 [T/fin [__:168 sta]]] [[D Luisa] PRG{v,V}]].
					Extracted head "v{V}" from PRG and created [[[D loro]:168 [T/fin [__:168 sta]]] [[D Luisa] [PRG v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:168 [T/fin [__:168 sta]]] [[D Luisa] [PRG [v lava]]]]
					=[[[D loro]:168 [T/fin [__:168 sta]]] [[D Luisa] [PRG [v lava]]]]
				2. Feature processing:
					=[[[D loro]:168 [T/fin [__:168 sta]]] [[D Luisa] [PRG [v lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:168 [T/fin [__:168 sta]]] [[D Luisa] [PRG [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "PRG".
					Moving "D loro T/fin __sta " into memory buffer from SPEC of "PRG".
					New head was spawned due to multiple specifiers at PRG but its category is unknown!
					Memory buffer: [[D N], [[D N] [TT/fin [[D N] V]]]]
					Dropping constituent [D Luisa] from memory buffer into Spec of v
					Result [[[D loro]:168 [T/fin [__:168 sta]]] [? [[D Luisa] [PRG [[D Luisa] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:168 [T/fin [__:168 sta]]] [? [[D Luisa]:169 [PRG [__:169 [v lava]]]]]].
					=[[[D loro]:168 [T/fin [__:168 sta]]] [? [[D Luisa]:169 [PRG [__:169 [v lava]]]]]]
				5. Agreement reconstruction:
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:F from the edge of PRG.
					PRG acquired PHI:NUM:SG from the edge of PRG.
					PRG acquired PHI:PER:3 from the edge of PRG.
					=[[[D loro]:168 [T/fin [__:168 sta]]] [? [[D Luisa]:169 [PRG [__:169 [v lava]]]]]]
			= [[[D loro] [T/fin [[D loro] sta]]] [? [[D Luisa] [PRG [[D Luisa] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
sta: [V, TT/fin]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
PRG: [INF, ?]
__: [D, INF, ?]
__: [N, D, INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:168 [T/fin [__:168 sta]]] D{N}] PRG]
			Transferring [[[D loro]:168 [T/fin [__:168 sta]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:168 [T/fin [__:168 sta]]] D{N}].
					Extracted head "Luisa" from D and created [[[D loro]:168 [T/fin [__:168 sta]]] [D Luisa]]
					=[[[D loro]:168 [T/fin [__:168 sta]]] [D Luisa]]
				2. Feature processing:
					=[[[D loro]:168 [T/fin [__:168 sta]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D loro]:168 [T/fin [__:168 sta]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [[D loro]:168 [T/fin [__:168 sta]]].
					Extraposition will be tried on [[[D loro]:168 [T/fin [__:168 sta]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>]
			=[[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] PRG]

32.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] sta]]] <D Luisa>] PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] PRG{v}]

33.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] sta]]] <D Luisa>] PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] PRG{v,V}]

34.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] sta]]] <D Luisa>] PRG{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] PRG{v,V}].
					Extracted head "v{V}" from PRG and created [[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] [PRG v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] [PRG [v lava]]]
					=[[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] [PRG [v lava]]]
				2. Feature processing:
					=[[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] [PRG [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] [PRG [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __sta D Luisa " into memory buffer from SPEC of "PRG".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				PRG has unacceptable specifier [[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] [PRG [v lava]]].
					=[[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] [PRG [v lava]]]
				5. Agreement reconstruction:
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>] [PRG [v lava]]]
			= [[[[D loro] [T/fin [[D loro] sta]]] <D Luisa>] [PRG [v lava]]]
		Checking LF-interface conditions.
				PRG has unacceptable specifier [[[D loro]:168 [T/fin [__:168 sta]]] <D Luisa>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
sta: [V, TT/fin]
D: [D]
Luisa: [N, D]
PRG: [INF]
v: [v, INF]
lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 47
['loro', 'mi#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#lavano.
		Next word contains multiple morphemes ['lavano_', 'mi']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D loro] T/fin{v}]

11.
		Consume "lava"

		[[D loro] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=[[D loro] T/fin{v,V}]

12.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[D loro] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 158]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D loro] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D loro] [T/fin{v,V} D]]

20.
		Consume "mi(cl)"

		[[D loro] [T/fin{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{v,V} D{N}]]

21.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
			Clitic D{N} left-incorporated to T/fin{v,V}
			Clitic D{N} left-incorporated to T/fin{v,V}
		Reconstructing...
			Transferring [[D loro] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [v{V} D{N}]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [v [lava D{N}]]]]
					Extracted head "mi(cl)" from D and created [[D loro] [T/fin [v [lava [D mi(cl)]]]]]
					=[[D loro] [T/fin [v [lava [D mi(cl)]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [v [lava [D mi(cl)]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [v [lava [D mi(cl)]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [T/fin [[D loro] [v [lava [D mi(cl)]]]]]]
					=[[D loro]:3 [T/fin [__:3 [v [lava [D mi(cl)]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:3 [T/fin [__:3 [v [lava [D mi(cl)]]]]]]
			= [[D loro] [T/fin [[D loro] [v [lava [D mi(cl)]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:3 [T/fin [__:3 [v [lava [D mi(cl)]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D mi(cl)])', 'v([D loro])']
!--->		Tests passed (with 21/164 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [lava [D mi(cl)]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [v [lava [D mi(cl)]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
mi(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 48
['mi#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#lavano.
		Next word contains multiple morphemes ['lavano_', 'mi']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

5.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=T/fin{v,V}

6.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

14.
		Consume "mi(cl)"

		[T/fin{v,V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{v,V} D{N}]

15.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
			Clitic D{N} left-incorporated to T/fin{v,V}
			Clitic D{N} left-incorporated to T/fin{v,V}
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "lava" and reconstructed it = [T/fin [v [lava D{N}]]]
					Extracted head "mi(cl)" from D and created [T/fin [v [lava [D mi(cl)]]]]
					=[T/fin [v [lava [D mi(cl)]]]]
				2. Feature processing:
					=[T/fin [v [lava [D mi(cl)]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [lava [D mi(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [lava [D mi(cl)]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [v [lava [D mi(cl)]]]]
			= [T/fin [v [lava [D mi(cl)]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [lava [D mi(cl)]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D mi(cl)])', 'v(T/fin)']
!--->		Tests passed (with 15/106 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [D mi(cl)]]]]
		Grammar: [T/fin [v [lava [D mi(cl)]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
mi(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 49
['loro', 'la#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word la#lavano.
		Next word contains multiple morphemes ['lavano_', 'la']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D loro] T/fin{v}]

11.
		Consume "lava"

		[[D loro] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=[[D loro] T/fin{v,V}]

12.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[D loro] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 158]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D loro] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D loro] [T/fin{v,V} D]]

20.
		Consume "la(cl)"

		[[D loro] [T/fin{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [T/fin{v,V} D{N}]]

21.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
			Clitic D{N} left-incorporated to T/fin{v,V}
			Clitic D{N} left-incorporated to T/fin{v,V}
		Reconstructing...
			Transferring [[D loro] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [v{V} D{N}]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [v [lava D{N}]]]]
					Extracted head "la(cl)" from D and created [[D loro] [T/fin [v [lava [D la(cl)]]]]]
					=[[D loro] [T/fin [v [lava [D la(cl)]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [v [lava [D la(cl)]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [v [lava [D la(cl)]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [T/fin [[D loro] [v [lava [D la(cl)]]]]]]
					=[[D loro]:6 [T/fin [__:6 [v [lava [D la(cl)]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:6 [T/fin [__:6 [v [lava [D la(cl)]]]]]]
			= [[D loro] [T/fin [[D loro] [v [lava [D la(cl)]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:6 [T/fin [__:6 [v [lava [D la(cl)]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D la(cl)])', 'v([D loro])']
!--->		Tests passed (with 21/164 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [lava [D la(cl)]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [v [lava [D la(cl)]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
la(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 50
['la#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#lavano.
		Next word contains multiple morphemes ['lavano_', 'la']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

5.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=T/fin{v,V}

6.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

14.
		Consume "la(cl)"

		[T/fin{v,V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[T/fin{v,V} D{N}]

15.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
			Clitic D{N} left-incorporated to T/fin{v,V}
			Clitic D{N} left-incorporated to T/fin{v,V}
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "lava" and reconstructed it = [T/fin [v [lava D{N}]]]
					Extracted head "la(cl)" from D and created [T/fin [v [lava [D la(cl)]]]]
					=[T/fin [v [lava [D la(cl)]]]]
				2. Feature processing:
					=[T/fin [v [lava [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [lava [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [lava [D la(cl)]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [v [lava [D la(cl)]]]]
			= [T/fin [v [lava [D la(cl)]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [lava [D la(cl)]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D la(cl)])', 'v(T/fin)']
!--->		Tests passed (with 15/106 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [D la(cl)]]]]
		Grammar: [T/fin [v [lava [D la(cl)]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
la(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 51
['loro', 'lo#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word lo#lavano.
		Next word contains multiple morphemes ['lavano_', 'lo']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D loro] T/fin{v}]

11.
		Consume "lava"

		[[D loro] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=[[D loro] T/fin{v,V}]

12.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[D loro] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 158]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D loro] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D loro] [T/fin{v,V} D]]

20.
		Consume "lo(cl)"

		[[D loro] [T/fin{v,V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [T/fin{v,V} D{N}]]

21.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
			Clitic D{N} left-incorporated to T/fin{v,V}
			Clitic D{N} left-incorporated to T/fin{v,V}
		Reconstructing...
			Transferring [[D loro] [T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [v{V} D{N}]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [v [lava D{N}]]]]
					Extracted head "lo(cl)" from D and created [[D loro] [T/fin [v [lava [D lo(cl)]]]]]
					=[[D loro] [T/fin [v [lava [D lo(cl)]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [v [lava [D lo(cl)]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [v [lava [D lo(cl)]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [T/fin [[D loro] [v [lava [D lo(cl)]]]]]]
					=[[D loro]:9 [T/fin [__:9 [v [lava [D lo(cl)]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:9 [T/fin [__:9 [v [lava [D lo(cl)]]]]]]
			= [[D loro] [T/fin [[D loro] [v [lava [D lo(cl)]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:9 [T/fin [__:9 [v [lava [D lo(cl)]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D lo(cl)])', 'v([D loro])']
!--->		Tests passed (with 21/164 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [lava [D lo(cl)]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [v [lava [D lo(cl)]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
lo(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 52
['lo#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lo#lavano.
		Next word contains multiple morphemes ['lavano_', 'lo']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

5.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=T/fin{v,V}

6.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} D]

14.
		Consume "lo(cl)"

		[T/fin{v,V} D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[T/fin{v,V} D{N}]

15.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
			Clitic D{N} left-incorporated to T/fin{v,V}
			Clitic D{N} left-incorporated to T/fin{v,V}
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
						Extracted head "lava" and reconstructed it = [T/fin [v [lava D{N}]]]
					Extracted head "lo(cl)" from D and created [T/fin [v [lava [D lo(cl)]]]]
					=[T/fin [v [lava [D lo(cl)]]]]
				2. Feature processing:
					=[T/fin [v [lava [D lo(cl)]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [lava [D lo(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [v [lava [D lo(cl)]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [v [lava [D lo(cl)]]]]
			= [T/fin [v [lava [D lo(cl)]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [lava [D lo(cl)]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D lo(cl)])', 'v(T/fin)']
!--->		Tests passed (with 15/106 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [D lo(cl)]]]]
		Grammar: [T/fin [v [lava [D lo(cl)]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
lo(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 53
['loro', 'lavano#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word lavano#mi.
		Next word contains multiple morphemes ['mi_', 'lavano']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

16.
		Consume "mi(cl)"

		[[D loro] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] D{N}]

17.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D loro] <D mi(cl)>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [[D mi(cl)] T/fin]]

19.
		Consume "v"

		[[D loro] [[D mi(cl)] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D loro] [[D mi(cl)] T/fin{v}]]

20.
		Consume "lava"

		[[D loro] [[D mi(cl)] T/fin{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=[[D loro] [[D mi(cl)] T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[D loro] [[D mi(cl)] T/fin{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 54
['lavano#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lavano#mi.
		Next word contains multiple morphemes ['mi_', 'lavano']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] T/fin]

13.
		Consume "v"

		[[D mi(cl)] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D mi(cl)] T/fin{v}]

14.
		Consume "lava"

		[[D mi(cl)] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=[[D mi(cl)] T/fin{v,V}]

15.
	>>>	Trying candidate parse [[D mi(cl)] T/fin{v,V}] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 55
['loro#mi', 'lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#mi.
		Next word contains multiple morphemes ['mi_', 'loro']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

16.
		Consume "loro"

		[[D mi(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D mi(cl)] D{N}]

17.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D mi(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] <D loro>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D mi(cl)] [[D loro] T/fin]]

19.
		Consume "v"

		[[D mi(cl)] [[D loro] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D mi(cl)] [[D loro] T/fin{v}]]

20.
		Consume "lava"

		[[D mi(cl)] [[D loro] T/fin{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=[[D mi(cl)] [[D loro] T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] T/fin{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 56
['mi#loro', 'lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#loro.
		Next word contains multiple morphemes ['loro_', 'mi']
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

8.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

16.
		Consume "mi(cl)"

		[[D loro] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] D{N}]

17.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D loro] <D mi(cl)>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [[D mi(cl)] T/fin]]

19.
		Consume "v"

		[[D loro] [[D mi(cl)] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D loro] [[D mi(cl)] T/fin{v}]]

20.
		Consume "lava"

		[[D loro] [[D mi(cl)] T/fin{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=[[D loro] [[D mi(cl)] T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[D loro] [[D mi(cl)] T/fin{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 57
['loro', 'mi#hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [[D mi(cl)] T/prt{v,V}]]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [[D mi(cl)] [T/prt v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]]
					=[[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v lava]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:14 [T/fin [__:14 [ha [[D mi(cl)]:15 [T/prt [v [lava __:15]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:14 [T/fin [__:14 [ha [[D mi(cl)]:15 [T/prt [v [lava __:15]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:1 from the edge of T/prt.
					=[[D loro]:14 [T/fin [__:14 [ha [[D mi(cl)]:15 [T/prt [v [lava __:15]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:14 [T/fin [__:14 [ha [[D mi(cl)]:15 [T/prt [v [lava __:15]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/prt 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['ha([[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]])', 'lava([D mi(cl)])', 'v(T/prt)']
!--->		Tests passed (with 26/235 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [ha [[D mi(cl)]:2 [T/prt [v [lava __:2]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [T [v [V __:2]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
__: [D, V, v, T, V, TT/fin]
__: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 58
['loro', 'la#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

11.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "la(cl)"

		[[D loro] [T/fin{V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt]]]

27.
		Consume "v"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]]

28.
		Consume "lava"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]]

29.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [[D la(cl)] T/prt{v,V}]]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [[D la(cl)] [T/prt v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]]
					=[[D loro] [T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [[D la(cl)] [T/prt [v lava]]]]]]]
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:20 [T/fin [__:20 [ha [[D la(cl)]:21 [T/prt [v [lava __:21]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:20 [T/fin [__:20 [ha [[D la(cl)]:21 [T/prt [v [lava __:21]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[D loro]:20 [T/fin [__:20 [ha [[D la(cl)]:21 [T/prt [v [lava __:21]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:20 [T/fin [__:20 [ha [[D la(cl)]:21 [T/prt [v [lava __:21]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D la(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/prt 3. [D la(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['ha([[D la(cl)] [T/prt [v [lava [D la(cl)]]]]])', 'lava([D la(cl)])', 'v(T/prt)']
!--->		Tests passed (with 29/241 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [ha [[D la(cl)]:2 [T/prt [v [lava __:2]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [T [v [V __:2]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
__: [D, V, v, T, V, TT/fin]
__: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 59
['mi#hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

5.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "mi(cl)"

		[T/fin{V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + T/prt = -98]
				D{N} + T/prt = 104]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[T/fin{V} [[D mi(cl)] T/prt]]

18.
		Consume "v"

		[T/fin{V} [[D mi(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} [[D mi(cl)] T/prt{v}]]

19.
		Consume "lava"

		[T/fin{V} [[D mi(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} [[D mi(cl)] T/prt{v,V}]]

20.
	>>>	Trying candidate parse [T/fin{V} [[D mi(cl)] T/prt{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [T/fin{V} [[D mi(cl)] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D mi(cl)] T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [[D mi(cl)] T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [[D mi(cl)] [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]
					=[T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]
				2. Feature processing:
					=[T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [ha [[D mi(cl)]:170 [T/prt [v [lava __:170]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [ha [[D mi(cl)]:170 [T/prt [v [lava __:170]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:170.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:1 from the edge of T/prt.
					=[T/fin [ha [[D mi(cl)]:170 [T/prt [v [lava __:170]]]]]]
			= [T/fin [ha [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [ha [[D mi(cl)]:170 [T/prt [v [lava __:170]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/prt 3. [D mi(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['ha([[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]])', 'lava([D mi(cl)])', 'v(T/prt)']
!--->		Tests passed (with 20/178 operations) <------------------------------------
		Solution:
		[T/fin [ha [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]
		Grammar: [T/fin [ha [[D mi(cl)]:1 [T/prt [v [lava __:1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [T [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
__: [D, V, v, T, V, TT/fin]
__: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 60
['la#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

5.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "la(cl)"

		[T/fin{V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + T/prt = -98]
				D{N} + T/prt = 104]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[T/fin{V} [[D la(cl)] T/prt]]

21.
		Consume "v"

		[T/fin{V} [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} [[D la(cl)] T/prt{v}]]

22.
		Consume "lava"

		[T/fin{V} [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} [[D la(cl)] T/prt{v,V}]]

23.
	>>>	Trying candidate parse [T/fin{V} [[D la(cl)] T/prt{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [T/fin{V} [[D la(cl)] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D la(cl)] T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [[D la(cl)] T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [[D la(cl)] [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]
					=[T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]
				2. Feature processing:
					=[T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [ha [[D la(cl)]:171 [T/prt [v [lava __:171]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [ha [[D la(cl)]:171 [T/prt [v [lava __:171]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)]:171.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[T/fin [ha [[D la(cl)]:171 [T/prt [v [lava __:171]]]]]]
			= [T/fin [ha [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [ha [[D la(cl)]:171 [T/prt [v [lava __:171]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D la(cl)] 3. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/prt 3. [D la(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['ha([[D la(cl)] [T/prt [v [lava [D la(cl)]]]]])', 'lava([D la(cl)])', 'v(T/prt)']
!--->		Tests passed (with 23/184 operations) <------------------------------------
		Solution:
		[T/fin [ha [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]
		Grammar: [T/fin [ha [[D la(cl)]:1 [T/prt [v [lava __:1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [T [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
__: [D, V, v, T, V, TT/fin]
__: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 61
['lo#hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lo#hanno.
		Next word contains multiple morphemes ['hanno_', 'lo']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

5.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "lo(cl)"

		[T/fin{V} D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + T/prt = -98]
				D{N} + T/prt = 104]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[T/fin{V} [[D lo(cl)] T/prt]]

18.
		Consume "v"

		[T/fin{V} [[D lo(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} [[D lo(cl)] T/prt{v}]]

19.
		Consume "lava"

		[T/fin{V} [[D lo(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} [[D lo(cl)] T/prt{v,V}]]

20.
	>>>	Trying candidate parse [T/fin{V} [[D lo(cl)] T/prt{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [T/fin{V} [[D lo(cl)] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D lo(cl)] T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [[D lo(cl)] T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [[D lo(cl)] [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [[D lo(cl)] [T/prt [v lava]]]]]
					=[T/fin [ha [[D lo(cl)] [T/prt [v lava]]]]]
				2. Feature processing:
					=[T/fin [ha [[D lo(cl)] [T/prt [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [[D lo(cl)] [T/prt [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [ha [[D lo(cl)]:172 [T/prt [v [lava __:172]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [ha [[D lo(cl)]:172 [T/prt [v [lava __:172]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)]:172.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[T/fin [ha [[D lo(cl)]:172 [T/prt [v [lava __:172]]]]]]
			= [T/fin [ha [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [ha [[D lo(cl)]:172 [T/prt [v [lava __:172]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D lo(cl)] 3. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/prt 3. [D lo(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['ha([[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]])', 'lava([D lo(cl)])', 'v(T/prt)']
!--->		Tests passed (with 20/178 operations) <------------------------------------
		Solution:
		[T/fin [ha [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]]]
		Grammar: [T/fin [ha [[D lo(cl)]:1 [T/prt [v [lava __:1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [T [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
__: [D, V, v, T, V, TT/fin]
__: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 62
['loro', 'mi#devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#devono.
		Next word contains multiple morphemes ['devono_', 'mi']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] deva]

10.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [deva D]]

18.
		Consume "mi(cl)"

		[[D loro] [deva D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[deva <D loro>] <D mi(cl)>]] are] due to bad left branch.
				Reject [[deva <D mi(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [deva [[D mi(cl)] are]]]

20.
		Consume "v"

		[[D loro] [deva [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [deva [[D mi(cl)] are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [deva [[D mi(cl)] are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] left-incorporated to deva
		Reconstructing...
			Transferring [[D loro] [deva [[D mi(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [deva [[D mi(cl)] are{v,V}]]].
					Extracted head "v{V}" from are and created [[D loro] [deva [[D mi(cl)] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [deva [[D mi(cl)] [are [v lava]]]]]
					=[[D loro] [deva [[D mi(cl)] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [deva [[D mi(cl)] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D mi(cl)] failed to tail [-VAL][ARG]
					Dropping [D mi(cl)]
						<D mi(cl)> was made an adjunct.
						Floater <D mi(cl)> dropped.
						 = [[D loro] [deva [<D mi(cl)>:1 [are [v [<DP>:1 lava]]]]]]
					=[[D loro] [deva [<D mi(cl)>:1 [are [v [<DP>:1 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [deva [<D mi(cl)>:1 [[D loro] [are [v [<DP>:1 lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:23 from memory buffer into Spec of v
					Result [[D loro]:23 [deva [<D mi(cl)>:1 [__:23 [are [__:23 [v [<DP>:1 lava]]]]]]]]
					=[[D loro]:23 [deva [<D mi(cl)>:1 [__:23 [are [__:23 [v [<DP>:1 lava]]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:N from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:23 [deva [<D mi(cl)>:1 [__:23 [are [__:23 [v [<DP>:1 lava]]]]]]]]
			= [[D loro] [deva [<D mi(cl)> [[D loro] [are [[D loro] [v [<D mi(cl)> lava]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:23 [deva [<D mi(cl)>:1 [__:23 [are [__:23 [v [<DP>:1 lava]]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. <D mi(cl)> 4. deva 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mi(cl)>    (alternatives: 2. [D loro] 3. [D loro] 4. <D mi(cl)> 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D mi(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/193 operations) <------------------------------------
		Solution:
		[[D loro] [deva [<D mi(cl)> [[D loro] [are [[D loro] [v [<D mi(cl)> lava]]]]]]]]
		Grammar: [[D loro]:1 [deva [<D mi(cl)>:2 [__:1 [are [__:1 [v [<DP>:2 lava]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [__:1 [INF [__:1 [v [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
deva: [TT/fin]
D: [D, TT/fin]
mi(cl): [N, D, TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 63
['loro', 'devono', 'lavare#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] deva]

9.
		Decomposing a polymorphemic word lavare#mi.
		Next word contains multiple morphemes ['mi_', 'lavare']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [deva D]]

18.
		Consume "mi(cl)"

		[[D loro] [deva D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[deva <D loro>] <D mi(cl)>]] are] due to bad left branch.
				Reject [[deva <D mi(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [deva [[D mi(cl)] are]]]

20.
		Consume "v"

		[[D loro] [deva [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [deva [[D mi(cl)] are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [deva [[D mi(cl)] are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] right-incorporated to [[D mi(cl)] are{v,V}]
		Reconstructing...
			Transferring [[D loro] [deva [[D mi(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [deva [[D mi(cl)] are{v,V}]]].
					Extracted head "v{V}" from are and created [[D loro] [deva [[D mi(cl)] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [deva [[D mi(cl)] [are [v lava]]]]]
					=[[D loro] [deva [[D mi(cl)] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [deva [[D mi(cl)] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D mi(cl)] failed to tail [-VAL][ARG]
					Dropping [D mi(cl)]
						<D mi(cl)> was made an adjunct.
						Floater <D mi(cl)> dropped.
						 = [[D loro] [deva [<D mi(cl)>:2 [are [v [<DP>:2 lava]]]]]]
					=[[D loro] [deva [<D mi(cl)>:2 [are [v [<DP>:2 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [deva [<D mi(cl)>:2 [[D loro] [are [v [<DP>:2 lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:26 from memory buffer into Spec of v
					Result [[D loro]:26 [deva [<D mi(cl)>:2 [__:26 [are [__:26 [v [<DP>:2 lava]]]]]]]]
					=[[D loro]:26 [deva [<D mi(cl)>:2 [__:26 [are [__:26 [v [<DP>:2 lava]]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:N from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:26 [deva [<D mi(cl)>:2 [__:26 [are [__:26 [v [<DP>:2 lava]]]]]]]]
			= [[D loro] [deva [<D mi(cl)> [[D loro] [are [[D loro] [v [<D mi(cl)> lava]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:26 [deva [<D mi(cl)>:2 [__:26 [are [__:26 [v [<DP>:2 lava]]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. <D mi(cl)> 4. deva 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mi(cl)>    (alternatives: 2. [D loro] 3. [D loro] 4. <D mi(cl)> 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D mi(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/193 operations) <------------------------------------
		Solution:
		[[D loro] [deva [<D mi(cl)> [[D loro] [are [[D loro] [v [<D mi(cl)> lava]]]]]]]]
		Grammar: [[D loro]:1 [deva [<D mi(cl)>:2 [__:1 [are [__:1 [v [<DP>:2 lava]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [__:1 [INF [__:1 [v [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
deva: [TT/fin]
D: [D, TT/fin]
mi(cl): [N, D, TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 64
['loro', 'la#devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word la#devono.
		Next word contains multiple morphemes ['devono_', 'la']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] deva]

10.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [deva D]]

18.
		Consume "la(cl)"

		[[D loro] [deva D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[deva <D loro>] <D la(cl)>]] are] due to bad left branch.
				Reject [[deva <D la(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [deva [[D la(cl)] are]]]

20.
		Consume "v"

		[[D loro] [deva [[D la(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [deva [[D la(cl)] are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D la(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [deva [[D la(cl)] are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D la(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] left-incorporated to deva
		Reconstructing...
			Transferring [[D loro] [deva [[D la(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [deva [[D la(cl)] are{v,V}]]].
					Extracted head "v{V}" from are and created [[D loro] [deva [[D la(cl)] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [deva [[D la(cl)] [are [v lava]]]]]
					=[[D loro] [deva [[D la(cl)] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [deva [[D la(cl)] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D la(cl)] failed to tail [-VAL][ARG]
					Dropping [D la(cl)]
						<D la(cl)> was made an adjunct.
						Floater <D la(cl)> dropped.
						 = [[D loro] [deva [<D la(cl)>:3 [are [v [<DP>:3 lava]]]]]]
					=[[D loro] [deva [<D la(cl)>:3 [are [v [<DP>:3 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [deva [<D la(cl)>:3 [[D loro] [are [v [<DP>:3 lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:29 from memory buffer into Spec of v
					Result [[D loro]:29 [deva [<D la(cl)>:3 [__:29 [are [__:29 [v [<DP>:3 lava]]]]]]]]
					=[[D loro]:29 [deva [<D la(cl)>:3 [__:29 [are [__:29 [v [<DP>:3 lava]]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:N from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:29 [deva [<D la(cl)>:3 [__:29 [are [__:29 [v [<DP>:3 lava]]]]]]]]
			= [[D loro] [deva [<D la(cl)> [[D loro] [are [[D loro] [v [<D la(cl)> lava]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:29 [deva [<D la(cl)>:3 [__:29 [are [__:29 [v [<DP>:3 lava]]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. <D la(cl)> 4. deva 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D la(cl)>    (alternatives: 2. [D loro] 3. [D loro] 4. <D la(cl)> 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D la(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/193 operations) <------------------------------------
		Solution:
		[[D loro] [deva [<D la(cl)> [[D loro] [are [[D loro] [v [<D la(cl)> lava]]]]]]]]
		Grammar: [[D loro]:1 [deva [<D la(cl)>:2 [__:1 [are [__:1 [v [<DP>:2 lava]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [__:1 [INF [__:1 [v [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
deva: [TT/fin]
D: [D, TT/fin]
la(cl): [N, D, TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 65
['loro', 'devono', 'lavare#la']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] deva]

9.
		Decomposing a polymorphemic word lavare#la.
		Next word contains multiple morphemes ['la_', 'lavare']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [deva D]]

18.
		Consume "la(cl)"

		[[D loro] [deva D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[deva <D loro>] <D la(cl)>]] are] due to bad left branch.
				Reject [[deva <D la(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [deva [[D la(cl)] are]]]

20.
		Consume "v"

		[[D loro] [deva [[D la(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [deva [[D la(cl)] are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D la(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [deva [[D la(cl)] are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D la(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] right-incorporated to [[D la(cl)] are{v,V}]
		Reconstructing...
			Transferring [[D loro] [deva [[D la(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [deva [[D la(cl)] are{v,V}]]].
					Extracted head "v{V}" from are and created [[D loro] [deva [[D la(cl)] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [deva [[D la(cl)] [are [v lava]]]]]
					=[[D loro] [deva [[D la(cl)] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [deva [[D la(cl)] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D la(cl)] failed to tail [-VAL][ARG]
					Dropping [D la(cl)]
						<D la(cl)> was made an adjunct.
						Floater <D la(cl)> dropped.
						 = [[D loro] [deva [<D la(cl)>:4 [are [v [<DP>:4 lava]]]]]]
					=[[D loro] [deva [<D la(cl)>:4 [are [v [<DP>:4 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [deva [<D la(cl)>:4 [[D loro] [are [v [<DP>:4 lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:32 from memory buffer into Spec of v
					Result [[D loro]:32 [deva [<D la(cl)>:4 [__:32 [are [__:32 [v [<DP>:4 lava]]]]]]]]
					=[[D loro]:32 [deva [<D la(cl)>:4 [__:32 [are [__:32 [v [<DP>:4 lava]]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:N from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:32 [deva [<D la(cl)>:4 [__:32 [are [__:32 [v [<DP>:4 lava]]]]]]]]
			= [[D loro] [deva [<D la(cl)> [[D loro] [are [[D loro] [v [<D la(cl)> lava]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:32 [deva [<D la(cl)>:4 [__:32 [are [__:32 [v [<DP>:4 lava]]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. <D la(cl)> 4. deva 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D la(cl)>    (alternatives: 2. [D loro] 3. [D loro] 4. <D la(cl)> 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D la(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/193 operations) <------------------------------------
		Solution:
		[[D loro] [deva [<D la(cl)> [[D loro] [are [[D loro] [v [<D la(cl)> lava]]]]]]]]
		Grammar: [[D loro]:1 [deva [<D la(cl)>:2 [__:1 [are [__:1 [v [<DP>:2 lava]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [__:1 [INF [__:1 [v [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
deva: [TT/fin]
D: [D, TT/fin]
la(cl): [N, D, TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 66
['loro', 'lo#devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word lo#devono.
		Next word contains multiple morphemes ['devono_', 'lo']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] deva]

10.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [deva D]]

18.
		Consume "lo(cl)"

		[[D loro] [deva D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[deva <D loro>] <D lo(cl)>]] are] due to bad left branch.
				Reject [[deva <D lo(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D loro] [deva [[D lo(cl)] are]]]

20.
		Consume "v"

		[[D loro] [deva [[D lo(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [deva [[D lo(cl)] are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D lo(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [deva [[D lo(cl)] are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D lo(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] left-incorporated to deva
		Reconstructing...
			Transferring [[D loro] [deva [[D lo(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [deva [[D lo(cl)] are{v,V}]]].
					Extracted head "v{V}" from are and created [[D loro] [deva [[D lo(cl)] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [deva [[D lo(cl)] [are [v lava]]]]]
					=[[D loro] [deva [[D lo(cl)] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [deva [[D lo(cl)] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D lo(cl)] failed to tail [-VAL][ARG]
					Dropping [D lo(cl)]
						<D lo(cl)> was made an adjunct.
						Floater <D lo(cl)> dropped.
						 = [[D loro] [deva [<D lo(cl)>:5 [are [v [<DP>:5 lava]]]]]]
					=[[D loro] [deva [<D lo(cl)>:5 [are [v [<DP>:5 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [deva [<D lo(cl)>:5 [[D loro] [are [v [<DP>:5 lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:35 from memory buffer into Spec of v
					Result [[D loro]:35 [deva [<D lo(cl)>:5 [__:35 [are [__:35 [v [<DP>:5 lava]]]]]]]]
					=[[D loro]:35 [deva [<D lo(cl)>:5 [__:35 [are [__:35 [v [<DP>:5 lava]]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:N from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:35 [deva [<D lo(cl)>:5 [__:35 [are [__:35 [v [<DP>:5 lava]]]]]]]]
			= [[D loro] [deva [<D lo(cl)> [[D loro] [are [[D loro] [v [<D lo(cl)> lava]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:35 [deva [<D lo(cl)>:5 [__:35 [are [__:35 [v [<DP>:5 lava]]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. <D lo(cl)> 4. deva 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D lo(cl)>    (alternatives: 2. [D loro] 3. [D loro] 4. <D lo(cl)> 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D lo(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/193 operations) <------------------------------------
		Solution:
		[[D loro] [deva [<D lo(cl)> [[D loro] [are [[D loro] [v [<D lo(cl)> lava]]]]]]]]
		Grammar: [[D loro]:1 [deva [<D lo(cl)>:2 [__:1 [are [__:1 [v [<DP>:2 lava]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [__:1 [INF [__:1 [v [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
deva: [TT/fin]
D: [D, TT/fin]
lo(cl): [N, D, TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 67
['loro', 'devono', 'lavare#lo']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] deva]

9.
		Decomposing a polymorphemic word lavare#lo.
		Next word contains multiple morphemes ['lo_', 'lavare']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [deva D]]

18.
		Consume "lo(cl)"

		[[D loro] [deva D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[deva <D loro>] <D lo(cl)>]] are] due to bad left branch.
				Reject [[deva <D lo(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D loro] [deva [[D lo(cl)] are]]]

20.
		Consume "v"

		[[D loro] [deva [[D lo(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [deva [[D lo(cl)] are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D lo(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [deva [[D lo(cl)] are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D lo(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] right-incorporated to [[D lo(cl)] are{v,V}]
		Reconstructing...
			Transferring [[D loro] [deva [[D lo(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [deva [[D lo(cl)] are{v,V}]]].
					Extracted head "v{V}" from are and created [[D loro] [deva [[D lo(cl)] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [deva [[D lo(cl)] [are [v lava]]]]]
					=[[D loro] [deva [[D lo(cl)] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [deva [[D lo(cl)] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D lo(cl)] failed to tail [-VAL][ARG]
					Dropping [D lo(cl)]
						<D lo(cl)> was made an adjunct.
						Floater <D lo(cl)> dropped.
						 = [[D loro] [deva [<D lo(cl)>:6 [are [v [<DP>:6 lava]]]]]]
					=[[D loro] [deva [<D lo(cl)>:6 [are [v [<DP>:6 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [deva [<D lo(cl)>:6 [[D loro] [are [v [<DP>:6 lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:38 from memory buffer into Spec of v
					Result [[D loro]:38 [deva [<D lo(cl)>:6 [__:38 [are [__:38 [v [<DP>:6 lava]]]]]]]]
					=[[D loro]:38 [deva [<D lo(cl)>:6 [__:38 [are [__:38 [v [<DP>:6 lava]]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:N from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:38 [deva [<D lo(cl)>:6 [__:38 [are [__:38 [v [<DP>:6 lava]]]]]]]]
			= [[D loro] [deva [<D lo(cl)> [[D loro] [are [[D loro] [v [<D lo(cl)> lava]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:38 [deva [<D lo(cl)>:6 [__:38 [are [__:38 [v [<DP>:6 lava]]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. <D lo(cl)> 4. deva 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D lo(cl)>    (alternatives: 2. [D loro] 3. [D loro] 4. <D lo(cl)> 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D lo(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/193 operations) <------------------------------------
		Solution:
		[[D loro] [deva [<D lo(cl)> [[D loro] [are [[D loro] [v [<D lo(cl)> lava]]]]]]]]
		Grammar: [[D loro]:1 [deva [<D lo(cl)>:2 [__:1 [are [__:1 [v [<DP>:2 lava]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [__:1 [INF [__:1 [v [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
deva: [TT/fin]
D: [D, TT/fin]
lo(cl): [N, D, TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 68
['loro', 'mi#stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#stanno.
		Next word contains multiple morphemes ['stanno_', 'mi']
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "sta"

		[[D loro] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=[[D loro] T/fin{V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D loro] [T/fin{V} D{N}]] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + PRG = -98]
				[T/fin{V} D{N}] + PRG = -96]
				D{N} + PRG = 106]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[T/fin{V} D{N}]; PRG]
			3. [[[D loro] [T/fin{V} D{N}]]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [T/fin{V} [[D mi(cl)] PRG]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D loro] [T/fin{V} [[D mi(cl)] PRG{v}]]]

22.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D loro] [T/fin{V} [[D mi(cl)] PRG{v,V}]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] PRG{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D mi(cl)] PRG{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D mi(cl)] PRG{v,V}]]].
						Extracted head "sta" and reconstructed it = [[D loro] [T/fin [sta [[D mi(cl)] PRG{v,V}]]]]
					Extracted head "v{V}" from PRG and created [[D loro] [T/fin [sta [[D mi(cl)] [PRG v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]]
					=[[D loro] [T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] [sta [[D mi(cl)] [PRG [v lava]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:44 [T/fin [__:44 [sta [[D mi(cl)]:45 [PRG [v [lava __:45]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:44 [T/fin [__:44 [sta [[D mi(cl)]:45 [PRG [v [lava __:45]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:M from the edge of PRG.
					PRG acquired PHI:NUM:SG from the edge of PRG.
					PRG acquired PHI:PER:1 from the edge of PRG.
					=[[D loro]:44 [T/fin [__:44 [sta [[D mi(cl)]:45 [PRG [v [lava __:45]]]]]]]]
			= [[D loro] [T/fin [[D loro] [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:44 [T/fin [__:44 [sta [[D mi(cl)]:45 [PRG [v [lava __:45]]]]]]]] into Conceptual-Intentional system...
				sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. PRG 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D mi(cl)])', 'sta([[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]])', 'v(PRG)']
!--->		Tests passed (with 23/228 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [sta [[D mi(cl)]:2 [PRG [v [lava __:2]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [INF [v [V __:2]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:EN', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:EN', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
sta: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
PRG: [INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
__: [D, V, v, INF, V, TT/fin]
__: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 69
['mi#stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#stanno.
		Next word contains multiple morphemes ['stanno_', 'mi']
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=T/fin{V}

5.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "mi(cl)"

		[T/fin{V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[T/fin{V} [[D mi(cl)] PRG]]

15.
		Consume "v"

		[T/fin{V} [[D mi(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[T/fin{V} [[D mi(cl)] PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D mi(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[T/fin{V} [[D mi(cl)] PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D mi(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [T/fin{V} [[D mi(cl)] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D mi(cl)] PRG{v,V}]].
						Extracted head "sta" and reconstructed it = [T/fin [sta [[D mi(cl)] PRG{v,V}]]]
					Extracted head "v{V}" from PRG and created [T/fin [sta [[D mi(cl)] [PRG v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]
					=[T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]
				2. Feature processing:
					=[T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [sta [[D mi(cl)]:173 [PRG [v [lava __:173]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [sta [[D mi(cl)]:173 [PRG [v [lava __:173]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:173.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:M from the edge of PRG.
					PRG acquired PHI:NUM:SG from the edge of PRG.
					PRG acquired PHI:PER:1 from the edge of PRG.
					=[T/fin [sta [[D mi(cl)]:173 [PRG [v [lava __:173]]]]]]
			= [T/fin [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [sta [[D mi(cl)]:173 [PRG [v [lava __:173]]]]]] into Conceptual-Intentional system...
				sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D mi(cl)] 3. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. PRG 3. [D mi(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D mi(cl)])', 'sta([[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]])', 'v(PRG)']
!--->		Tests passed (with 17/171 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]
		Grammar: [T/fin [sta [[D mi(cl)]:1 [PRG [v [lava __:1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
sta: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
PRG: [INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
__: [D, V, v, INF, V, TT/fin]
__: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 70
['la#stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#stanno.
		Next word contains multiple morphemes ['stanno_', 'la']
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=T/fin{V}

5.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "la(cl)"

		[T/fin{V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[T/fin{V} [[D la(cl)] PRG]]

15.
		Consume "v"

		[T/fin{V} [[D la(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[T/fin{V} [[D la(cl)] PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D la(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[T/fin{V} [[D la(cl)] PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D la(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [T/fin{V} [[D la(cl)] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D la(cl)] PRG{v,V}]].
						Extracted head "sta" and reconstructed it = [T/fin [sta [[D la(cl)] PRG{v,V}]]]
					Extracted head "v{V}" from PRG and created [T/fin [sta [[D la(cl)] [PRG v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [sta [[D la(cl)] [PRG [v lava]]]]]
					=[T/fin [sta [[D la(cl)] [PRG [v lava]]]]]
				2. Feature processing:
					=[T/fin [sta [[D la(cl)] [PRG [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [[D la(cl)] [PRG [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [sta [[D la(cl)]:174 [PRG [v [lava __:174]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [sta [[D la(cl)]:174 [PRG [v [lava __:174]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)]:174.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:F from the edge of PRG.
					PRG acquired PHI:NUM:SG from the edge of PRG.
					PRG acquired PHI:PER:3 from the edge of PRG.
					=[T/fin [sta [[D la(cl)]:174 [PRG [v [lava __:174]]]]]]
			= [T/fin [sta [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [sta [[D la(cl)]:174 [PRG [v [lava __:174]]]]]] into Conceptual-Intentional system...
				sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D la(cl)] 3. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. PRG 3. [D la(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D la(cl)])', 'sta([[D la(cl)] [PRG [v [lava [D la(cl)]]]]])', 'v(PRG)']
!--->		Tests passed (with 17/171 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]]]
		Grammar: [T/fin [sta [[D la(cl)]:1 [PRG [v [lava __:1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
sta: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
PRG: [INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
__: [D, V, v, INF, V, TT/fin]
__: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 71
['lo#stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lo#stanno.
		Next word contains multiple morphemes ['stanno_', 'lo']
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=T/fin{V}

5.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "lo(cl)"

		[T/fin{V} D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[T/fin{V} [[D lo(cl)] PRG]]

15.
		Consume "v"

		[T/fin{V} [[D lo(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[T/fin{V} [[D lo(cl)] PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D lo(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[T/fin{V} [[D lo(cl)] PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D lo(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [T/fin{V} [[D lo(cl)] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D lo(cl)] PRG{v,V}]].
						Extracted head "sta" and reconstructed it = [T/fin [sta [[D lo(cl)] PRG{v,V}]]]
					Extracted head "v{V}" from PRG and created [T/fin [sta [[D lo(cl)] [PRG v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [sta [[D lo(cl)] [PRG [v lava]]]]]
					=[T/fin [sta [[D lo(cl)] [PRG [v lava]]]]]
				2. Feature processing:
					=[T/fin [sta [[D lo(cl)] [PRG [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [[D lo(cl)] [PRG [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) " into memory buffer from SPEC of "PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [sta [[D lo(cl)]:175 [PRG [v [lava __:175]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [sta [[D lo(cl)]:175 [PRG [v [lava __:175]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)]:175.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:M from the edge of PRG.
					PRG acquired PHI:NUM:SG from the edge of PRG.
					PRG acquired PHI:PER:3 from the edge of PRG.
					=[T/fin [sta [[D lo(cl)]:175 [PRG [v [lava __:175]]]]]]
			= [T/fin [sta [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [sta [[D lo(cl)]:175 [PRG [v [lava __:175]]]]]] into Conceptual-Intentional system...
				sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D lo(cl)] 3. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. PRG 3. [D lo(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D lo(cl)])', 'sta([[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]])', 'v(PRG)']
!--->		Tests passed (with 17/171 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]]]
		Grammar: [T/fin [sta [[D lo(cl)]:1 [PRG [v [lava __:1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
sta: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
PRG: [INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
__: [D, V, v, INF, V, TT/fin]
__: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 72
['loro', 'stanno', 'lavando#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "sta"

		[[D loro] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lavando#mi.
		Next word contains multiple morphemes ['mi_', 'lavando']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D loro] [T/fin{V} D{N}]] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + PRG = -98]
				[T/fin{V} D{N}] + PRG = -96]
				D{N} + PRG = 106]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[T/fin{V} D{N}]; PRG]
			3. [[[D loro] [T/fin{V} D{N}]]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [T/fin{V} [[D mi(cl)] PRG]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D loro] [T/fin{V} [[D mi(cl)] PRG{v}]]]

22.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D loro] [T/fin{V} [[D mi(cl)] PRG{v,V}]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] PRG{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] right-incorporated to [[D mi(cl)] PRG{v,V}]
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D mi(cl)] PRG{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D mi(cl)] PRG{v,V}]]].
						Extracted head "sta" and reconstructed it = [[D loro] [T/fin [sta [[D mi(cl)] PRG{v,V}]]]]
					Extracted head "v{V}" from PRG and created [[D loro] [T/fin [sta [[D mi(cl)] [PRG v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]]
					=[[D loro] [T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] [sta [[D mi(cl)] [PRG [v lava]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:50 [T/fin [__:50 [sta [[D mi(cl)]:51 [PRG [v [lava __:51]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:50 [T/fin [__:50 [sta [[D mi(cl)]:51 [PRG [v [lava __:51]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:M from the edge of PRG.
					PRG acquired PHI:NUM:SG from the edge of PRG.
					PRG acquired PHI:PER:1 from the edge of PRG.
					=[[D loro]:50 [T/fin [__:50 [sta [[D mi(cl)]:51 [PRG [v [lava __:51]]]]]]]]
			= [[D loro] [T/fin [[D loro] [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:50 [T/fin [__:50 [sta [[D mi(cl)]:51 [PRG [v [lava __:51]]]]]]]] into Conceptual-Intentional system...
				sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. PRG 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D mi(cl)])', 'sta([[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]])', 'v(PRG)']
!--->		Tests passed (with 23/228 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [sta [[D mi(cl)]:2 [PRG [v [lava __:2]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [INF [v [V __:2]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:EN', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:EN', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
sta: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
PRG: [INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
__: [D, V, v, INF, V, TT/fin]
__: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 73
['stanno', 'lavando#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=T/fin{V}

4.
		Decomposing a polymorphemic word lavando#mi.
		Next word contains multiple morphemes ['mi_', 'lavando']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "mi(cl)"

		[T/fin{V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[T/fin{V} [[D mi(cl)] PRG]]

15.
		Consume "v"

		[T/fin{V} [[D mi(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[T/fin{V} [[D mi(cl)] PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D mi(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[T/fin{V} [[D mi(cl)] PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D mi(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] right-incorporated to [[D mi(cl)] PRG{v,V}]
		Reconstructing...
			Transferring [T/fin{V} [[D mi(cl)] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D mi(cl)] PRG{v,V}]].
						Extracted head "sta" and reconstructed it = [T/fin [sta [[D mi(cl)] PRG{v,V}]]]
					Extracted head "v{V}" from PRG and created [T/fin [sta [[D mi(cl)] [PRG v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]
					=[T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]
				2. Feature processing:
					=[T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [[D mi(cl)] [PRG [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [sta [[D mi(cl)]:176 [PRG [v [lava __:176]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [sta [[D mi(cl)]:176 [PRG [v [lava __:176]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:176.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:M from the edge of PRG.
					PRG acquired PHI:NUM:SG from the edge of PRG.
					PRG acquired PHI:PER:1 from the edge of PRG.
					=[T/fin [sta [[D mi(cl)]:176 [PRG [v [lava __:176]]]]]]
			= [T/fin [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [sta [[D mi(cl)]:176 [PRG [v [lava __:176]]]]]] into Conceptual-Intentional system...
				sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D mi(cl)] 3. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. PRG 3. [D mi(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D mi(cl)])', 'sta([[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]])', 'v(PRG)']
!--->		Tests passed (with 17/171 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]
		Grammar: [T/fin [sta [[D mi(cl)]:1 [PRG [v [lava __:1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
sta: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
PRG: [INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
__: [D, V, v, INF, V, TT/fin]
__: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 74
['stanno', 'lavando#la']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=T/fin{V}

4.
		Decomposing a polymorphemic word lavando#la.
		Next word contains multiple morphemes ['la_', 'lavando']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "la(cl)"

		[T/fin{V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[T/fin{V} [[D la(cl)] PRG]]

15.
		Consume "v"

		[T/fin{V} [[D la(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[T/fin{V} [[D la(cl)] PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D la(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[T/fin{V} [[D la(cl)] PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D la(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] right-incorporated to [[D la(cl)] PRG{v,V}]
		Reconstructing...
			Transferring [T/fin{V} [[D la(cl)] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D la(cl)] PRG{v,V}]].
						Extracted head "sta" and reconstructed it = [T/fin [sta [[D la(cl)] PRG{v,V}]]]
					Extracted head "v{V}" from PRG and created [T/fin [sta [[D la(cl)] [PRG v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [sta [[D la(cl)] [PRG [v lava]]]]]
					=[T/fin [sta [[D la(cl)] [PRG [v lava]]]]]
				2. Feature processing:
					=[T/fin [sta [[D la(cl)] [PRG [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [[D la(cl)] [PRG [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [sta [[D la(cl)]:177 [PRG [v [lava __:177]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [sta [[D la(cl)]:177 [PRG [v [lava __:177]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)]:177.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:F from the edge of PRG.
					PRG acquired PHI:NUM:SG from the edge of PRG.
					PRG acquired PHI:PER:3 from the edge of PRG.
					=[T/fin [sta [[D la(cl)]:177 [PRG [v [lava __:177]]]]]]
			= [T/fin [sta [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [sta [[D la(cl)]:177 [PRG [v [lava __:177]]]]]] into Conceptual-Intentional system...
				sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D la(cl)] 3. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. PRG 3. [D la(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D la(cl)])', 'sta([[D la(cl)] [PRG [v [lava [D la(cl)]]]]])', 'v(PRG)']
!--->		Tests passed (with 17/171 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]]]
		Grammar: [T/fin [sta [[D la(cl)]:1 [PRG [v [lava __:1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
sta: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
PRG: [INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
__: [D, V, v, INF, V, TT/fin]
__: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 75
['stanno', 'lavando#lo']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=T/fin{V}

4.
		Decomposing a polymorphemic word lavando#lo.
		Next word contains multiple morphemes ['lo_', 'lavando']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "lo(cl)"

		[T/fin{V} D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[T/fin{V} [[D lo(cl)] PRG]]

15.
		Consume "v"

		[T/fin{V} [[D lo(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[T/fin{V} [[D lo(cl)] PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D lo(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[T/fin{V} [[D lo(cl)] PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D lo(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] right-incorporated to [[D lo(cl)] PRG{v,V}]
		Reconstructing...
			Transferring [T/fin{V} [[D lo(cl)] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D lo(cl)] PRG{v,V}]].
						Extracted head "sta" and reconstructed it = [T/fin [sta [[D lo(cl)] PRG{v,V}]]]
					Extracted head "v{V}" from PRG and created [T/fin [sta [[D lo(cl)] [PRG v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [sta [[D lo(cl)] [PRG [v lava]]]]]
					=[T/fin [sta [[D lo(cl)] [PRG [v lava]]]]]
				2. Feature processing:
					=[T/fin [sta [[D lo(cl)] [PRG [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [[D lo(cl)] [PRG [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) " into memory buffer from SPEC of "PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [sta [[D lo(cl)]:178 [PRG [v [lava __:178]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [sta [[D lo(cl)]:178 [PRG [v [lava __:178]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)]:178.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRG acquired PHI:DET:DEF from the edge of PRG.
					PRG acquired PHI:GEN:M from the edge of PRG.
					PRG acquired PHI:NUM:SG from the edge of PRG.
					PRG acquired PHI:PER:3 from the edge of PRG.
					=[T/fin [sta [[D lo(cl)]:178 [PRG [v [lava __:178]]]]]]
			= [T/fin [sta [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [sta [[D lo(cl)]:178 [PRG [v [lava __:178]]]]]] into Conceptual-Intentional system...
				sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D lo(cl)] 3. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. PRG 3. [D lo(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava([D lo(cl)])', 'sta([[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]])', 'v(PRG)']
!--->		Tests passed (with 17/171 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]]]
		Grammar: [T/fin [sta [[D lo(cl)]:1 [PRG [v [lava __:1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
sta: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
PRG: [INF, V, TT/fin]
v: [v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]
__: [D, V, v, INF, V, TT/fin]
__: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 76
['loro', 'hanno', 'mi#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word mi#lavato.
		Next word contains multiple morphemes ['lavato_', 'mi']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

15.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

17.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 65]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

25.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[T/fin [ha [T/prt [v lava]]]]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]]

27.
		Consume "mi(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [T/prt [v lava]]]]]
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:56 [T/fin [__:56 [ha [T/prt [v lava]]]]]].
					=[[D loro]:56 [T/fin [__:56 [ha [T/prt [v lava]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[D loro]:56 [T/fin [__:56 [ha [T/prt [v lava]]]]]]
			=[[[D loro]:56 [T/fin [__:56 [ha [T/prt [v lava]]]]]] D]

29.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:56 [T/fin [__:56 [ha [T/prt [v lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:57 [T/fin [__:57 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:57 [T/fin [__:57 ha]]]
			=[[[D loro]:57 [T/fin [__:57 ha]]] T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:57 [T/fin [__:57 ha]]] T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:57 [T/fin [__:57 ha]]] T/prt{v,V}]

33.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:57 [T/fin [__:57 ha]]].
				"lava" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:57 [T/fin [__:57 ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 158]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:57 [T/fin [__:57 ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:57 [T/fin [__:57 ha]]] [T/prt{v,V} D]]

41.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:57 [T/fin [__:57 ha]]] [T/prt{v,V} D{N}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:57 [T/fin [__:57 ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:57 [T/fin [__:57 ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:57 [T/fin [__:57 ha]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:57 [T/fin [__:57 ha]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:57 [T/fin [__:57 ha]]] [T/prt [v lava]]]
					=[[[D loro]:57 [T/fin [__:57 ha]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:57 [T/fin [__:57 ha]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:57 [T/fin [__:57 ha]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:57 [T/fin [__:57 ha]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:57 [T/fin [__:57 ha]]] [T/prt [v lava]]].
					=[[[D loro]:57 [T/fin [__:57 ha]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:57 [T/fin [__:57 ha]]] [T/prt [v lava]]]
			=[[[[D loro]:57 [T/fin [__:57 ha]]] [T/prt [v lava]]] D]

43.
		Consume "mi(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[[D loro]:57 [T/fin [__:57 ha]]] [T/prt [v lava]]] D{N}]

44.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 77
['loro', 'hanno', 'la#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word la#lavato.
		Next word contains multiple morphemes ['lavato_', 'la']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

15.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

17.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 65]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

25.
		Consume "la(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[T/fin [ha [T/prt [v lava]]]]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]]

27.
		Consume "la(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [T/prt [v lava]]]]]
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:62 [T/fin [__:62 [ha [T/prt [v lava]]]]]].
					=[[D loro]:62 [T/fin [__:62 [ha [T/prt [v lava]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[D loro]:62 [T/fin [__:62 [ha [T/prt [v lava]]]]]]
			=[[[D loro]:62 [T/fin [__:62 [ha [T/prt [v lava]]]]]] D]

29.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:62 [T/fin [__:62 [ha [T/prt [v lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:63 [T/fin [__:63 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:63 [T/fin [__:63 ha]]]
			=[[[D loro]:63 [T/fin [__:63 ha]]] T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:63 [T/fin [__:63 ha]]] T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:63 [T/fin [__:63 ha]]] T/prt{v,V}]

33.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:63 [T/fin [__:63 ha]]].
				"lava" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:63 [T/fin [__:63 ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 158]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:63 [T/fin [__:63 ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:63 [T/fin [__:63 ha]]] [T/prt{v,V} D]]

41.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:63 [T/fin [__:63 ha]]] [T/prt{v,V} D{N}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:63 [T/fin [__:63 ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:63 [T/fin [__:63 ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:63 [T/fin [__:63 ha]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:63 [T/fin [__:63 ha]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:63 [T/fin [__:63 ha]]] [T/prt [v lava]]]
					=[[[D loro]:63 [T/fin [__:63 ha]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:63 [T/fin [__:63 ha]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:63 [T/fin [__:63 ha]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:63 [T/fin [__:63 ha]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:63 [T/fin [__:63 ha]]] [T/prt [v lava]]].
					=[[[D loro]:63 [T/fin [__:63 ha]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:63 [T/fin [__:63 ha]]] [T/prt [v lava]]]
			=[[[[D loro]:63 [T/fin [__:63 ha]]] [T/prt [v lava]]] D]

43.
		Consume "la(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[[D loro]:63 [T/fin [__:63 ha]]] [T/prt [v lava]]] D{N}]

44.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 78
['hanno', 'mi#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word mi#lavato.
		Next word contains multiple morphemes ['lavato_', 'mi']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} T/prt]

9.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

10.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} T/prt{v,V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[T/fin{V} T/prt{v,V}] + D = -197]
				T/prt{v,V} + D = 60]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [T/prt{v,V} D]]

19.
		Consume "mi(cl)"

		[T/fin{V} [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} [T/prt{v,V} D{N}]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} D{N}]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[T/fin [ha [T/prt [v lava]]]]
			=[[T/fin [ha [T/prt [v lava]]]] D]

21.
		Consume "mi(cl)"

		[[T/fin [ha [T/prt [v lava]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[T/fin [ha [T/prt [v lava]]]] D{N}]

22.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v lava]]]] D{N}] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 79
['io', 'sono#mi', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word sono#mi.
		Next word contains multiple morphemes ['mi_', 'sono']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "mi(cl)"

		[[D io] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D io] D{N}]

18.
		Decomposing a polymorphemic word sono-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'sono-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D io] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D io] <D mi(cl)>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D io] [[D mi(cl)] T/fin]]

20.
		Consume "BE"

		[[D io] [[D mi(cl)] T/fin]] + BE
			Filtering out impossible merge sites...
			Sink "BE" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*BE]
			=[[D io] [[D mi(cl)] T/fin{V}]]

21.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D mi(cl)] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [? [[D mi(cl)] [T/fin [[D io] BE]]]]] T/prt] due to bad left branch.
				Reject [[[D mi(cl)] [T/fin BE]] T/prt] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D io] [[D mi(cl)] [T/fin{V} T/prt]]]

25.
		Consume "v"

		[[D io] [[D mi(cl)] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D io] [[D mi(cl)] [T/fin{V} T/prt{v}]]]

26.
		Consume "lava"

		[[D io] [[D mi(cl)] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D io] [[D mi(cl)] [T/fin{V} T/prt{v,V}]]]

27.
	>>>	Trying candidate parse [[D io] [[D mi(cl)] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 80
['loro', 'hanno', 'lo#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lo#lavato.
		Next word contains multiple morphemes ['lavato_', 'lo']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

15.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

17.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 65]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

25.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[T/fin [ha [T/prt [v lava]]]]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]]

27.
		Consume "lo(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [T/prt [v lava]]]]]
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:68 [T/fin [__:68 [ha [T/prt [v lava]]]]]].
					=[[D loro]:68 [T/fin [__:68 [ha [T/prt [v lava]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[D loro]:68 [T/fin [__:68 [ha [T/prt [v lava]]]]]]
			=[[[D loro]:68 [T/fin [__:68 [ha [T/prt [v lava]]]]]] D]

29.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:68 [T/fin [__:68 [ha [T/prt [v lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:69 [T/fin [__:69 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:69 [T/fin [__:69 ha]]]
			=[[[D loro]:69 [T/fin [__:69 ha]]] T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:69 [T/fin [__:69 ha]]] T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:69 [T/fin [__:69 ha]]] T/prt{v,V}]

33.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:69 [T/fin [__:69 ha]]].
				"lava" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:69 [T/fin [__:69 ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 158]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:69 [T/fin [__:69 ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:69 [T/fin [__:69 ha]]] [T/prt{v,V} D]]

41.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:69 [T/fin [__:69 ha]]] [T/prt{v,V} D{N}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:69 [T/fin [__:69 ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:69 [T/fin [__:69 ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:69 [T/fin [__:69 ha]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:69 [T/fin [__:69 ha]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:69 [T/fin [__:69 ha]]] [T/prt [v lava]]]
					=[[[D loro]:69 [T/fin [__:69 ha]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:69 [T/fin [__:69 ha]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:69 [T/fin [__:69 ha]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:69 [T/fin [__:69 ha]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:69 [T/fin [__:69 ha]]] [T/prt [v lava]]].
					=[[[D loro]:69 [T/fin [__:69 ha]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:69 [T/fin [__:69 ha]]] [T/prt [v lava]]]
			=[[[[D loro]:69 [T/fin [__:69 ha]]] [T/prt [v lava]]] D]

43.
		Consume "lo(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[[D loro]:69 [T/fin [__:69 ha]]] [T/prt [v lava]]] D{N}]

44.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 81
['hanno', 'lo#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word lo#lavato.
		Next word contains multiple morphemes ['lavato_', 'lo']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} T/prt]

9.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

10.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} T/prt{v,V}]

11.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[T/fin{V} T/prt{v,V}] + D = -197]
				T/prt{v,V} + D = 60]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [T/prt{v,V} D]]

19.
		Consume "lo(cl)"

		[T/fin{V} [T/prt{v,V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[T/fin{V} [T/prt{v,V} D{N}]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} D{N}]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[T/fin [ha [T/prt [v lava]]]]
			=[[T/fin [ha [T/prt [v lava]]]] D]

21.
		Consume "lo(cl)"

		[[T/fin [ha [T/prt [v lava]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[T/fin [ha [T/prt [v lava]]]] D{N}]

22.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v lava]]]] D{N}] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 82
['hanno', 'la#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word la#lavato.
		Next word contains multiple morphemes ['lavato_', 'la']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} T/prt]

9.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

10.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} T/prt{v,V}]

11.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[T/fin{V} T/prt{v,V}] + D = -197]
				T/prt{v,V} + D = 60]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [T/prt{v,V} D]]

19.
		Consume "la(cl)"

		[T/fin{V} [T/prt{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[T/fin{V} [T/prt{v,V} D{N}]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} D{N}]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[T/fin [ha [T/prt [v lava]]]]
			=[[T/fin [ha [T/prt [v lava]]]] D]

21.
		Consume "la(cl)"

		[[T/fin [ha [T/prt [v lava]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[T/fin [ha [T/prt [v lava]]]] D{N}]

22.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v lava]]]] D{N}] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 83
['loro', 'hanno', 'lavato#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lavato#mi.
		Next word contains multiple morphemes ['mi_', 'lavato']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] T/prt]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "mi(cl)" from D and created [T/fin [ha [D mi(cl)]]]
					=[T/fin [ha [D mi(cl)]]]
				2. Feature processing:
					=[T/fin [ha [D mi(cl)]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D mi(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D mi(cl)]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)].
					=[T/fin [ha [D mi(cl)]]]
			=[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[D loro] [[T/fin [ha [D mi(cl)]]] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [D mi(cl)]]] [T/prt [v lava]]]]
					=[[D loro] [[T/fin [ha [D mi(cl)]]] [T/prt [v lava]]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [D mi(cl)]]] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [D mi(cl)]]] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D mi(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [D mi(cl)]]] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D mi(cl)]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:74 [? [[T/fin [ha [D mi(cl)]]] [T/prt [__:74 [v lava]]]]]].
					=[[D loro]:74 [? [[T/fin [ha [D mi(cl)]]] [T/prt [__:74 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 by phi-Agree from __:74.
					=[[D loro]:74 [? [[T/fin [ha [D mi(cl)]]] [T/prt [__:74 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D mi(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D mi(cl)]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
mi(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha D{N}]]]
					Extracted head "mi(cl)" from D and created [[D loro] [T/fin [ha [D mi(cl)]]]]
					=[[D loro] [T/fin [ha [D mi(cl)]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [D mi(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [D mi(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]]
					=[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]]
			=[[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
					=[[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unacceptable specifier [[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] [T/prt [v lava]]].
					=[[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:75 [T/fin [__:75 [ha [D mi(cl)]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:76 [T/fin [__:76 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:76 [T/fin [__:76 ha]]]
			=[[[D loro]:76 [T/fin [__:76 ha]]] D]

33.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:76 [T/fin [__:76 ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:76 [T/fin [__:76 ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:76 [T/fin [__:76 ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[D loro]:76 [T/fin [__:76 ha]]] [[D mi(cl)] T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:76 [T/fin [__:76 ha]]] [[D mi(cl)] T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:76 [T/fin [__:76 ha]]] [[D mi(cl)] T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:76 [T/fin [__:76 ha]]] D{N}] T/prt]
			Transferring [[[D loro]:76 [T/fin [__:76 ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:76 [T/fin [__:76 ha]]] D{N}].
					Extracted head "mi(cl)" from D and created [[[D loro]:76 [T/fin [__:76 ha]]] [D mi(cl)]]
					=[[[D loro]:76 [T/fin [__:76 ha]]] [D mi(cl)]]
				2. Feature processing:
					=[[[D loro]:76 [T/fin [__:76 ha]]] [D mi(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D mi(cl)> was made an adjunct.
					Dropping <D mi(cl)>
					=[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>]
			=[[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] [T/prt [v lava]]]
					=[[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unacceptable specifier [[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] [T/prt [v lava]]].
					=[[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>] [T/prt [v lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[D loro]:76 [T/fin [__:76 ha]]] <D mi(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D]
mi(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 84
['loro', 'hanno', 'lavato#la']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lavato#la.
		Next word contains multiple morphemes ['la_', 'lavato']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "la(cl)"

		[[D loro] [T/fin{V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] T/prt]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "la(cl)" from D and created [T/fin [ha [D la(cl)]]]
					=[T/fin [ha [D la(cl)]]]
				2. Feature processing:
					=[T/fin [ha [D la(cl)]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D la(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D la(cl)]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)].
					=[T/fin [ha [D la(cl)]]]
			=[[D loro] [[T/fin [ha [D la(cl)]]] T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[D loro] [[T/fin [ha [D la(cl)]]] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
					=[[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [D la(cl)]]] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D la(cl)]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:81 [? [[T/fin [ha [D la(cl)]]] [T/prt [__:81 [v lava]]]]]].
					=[[D loro]:81 [? [[T/fin [ha [D la(cl)]]] [T/prt [__:81 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 by phi-Agree from __:81.
					=[[D loro]:81 [? [[T/fin [ha [D la(cl)]]] [T/prt [__:81 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D la(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D la(cl)]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
la(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha D{N}]]]
					Extracted head "la(cl)" from D and created [[D loro] [T/fin [ha [D la(cl)]]]]
					=[[D loro] [T/fin [ha [D la(cl)]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]]
					=[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]]
			=[[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] [T/prt [v lava]]]
					=[[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unacceptable specifier [[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] [T/prt [v lava]]].
					=[[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]] [T/prt [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:82 [T/fin [__:82 [ha [D la(cl)]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:83 [T/fin [__:83 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:83 [T/fin [__:83 ha]]]
			=[[[D loro]:83 [T/fin [__:83 ha]]] D]

33.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:83 [T/fin [__:83 ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:83 [T/fin [__:83 ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:83 [T/fin [__:83 ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:83 [T/fin [__:83 ha]]] [[D la(cl)] T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:83 [T/fin [__:83 ha]]] [[D la(cl)] T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:83 [T/fin [__:83 ha]]] [[D la(cl)] T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:83 [T/fin [__:83 ha]]] D{N}] T/prt]
			Transferring [[[D loro]:83 [T/fin [__:83 ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:83 [T/fin [__:83 ha]]] D{N}].
					Extracted head "la(cl)" from D and created [[[D loro]:83 [T/fin [__:83 ha]]] [D la(cl)]]
					=[[[D loro]:83 [T/fin [__:83 ha]]] [D la(cl)]]
				2. Feature processing:
					=[[[D loro]:83 [T/fin [__:83 ha]]] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
					=[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>]
			=[[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] [T/prt [v lava]]]
					=[[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unacceptable specifier [[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] [T/prt [v lava]]].
					=[[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>] [T/prt [v lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[D loro]:83 [T/fin [__:83 ha]]] <D la(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D]
la(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 85
['loro', 'hanno', 'lavato#lo']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lavato#lo.
		Next word contains multiple morphemes ['lo_', 'lavato']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D loro] [T/fin{V} [[D lo(cl)] T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] T/prt]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "lo(cl)" from D and created [T/fin [ha [D lo(cl)]]]
					=[T/fin [ha [D lo(cl)]]]
				2. Feature processing:
					=[T/fin [ha [D lo(cl)]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D lo(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D lo(cl)]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					=[T/fin [ha [D lo(cl)]]]
			=[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
					=[[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [D lo(cl)]]] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D lo(cl)]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:88 [? [[T/fin [ha [D lo(cl)]]] [T/prt [__:88 [v lava]]]]]].
					=[[D loro]:88 [? [[T/fin [ha [D lo(cl)]]] [T/prt [__:88 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 by phi-Agree from __:88.
					=[[D loro]:88 [? [[T/fin [ha [D lo(cl)]]] [T/prt [__:88 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D lo(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D lo(cl)]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
lo(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha D{N}]]]
					Extracted head "lo(cl)" from D and created [[D loro] [T/fin [ha [D lo(cl)]]]]
					=[[D loro] [T/fin [ha [D lo(cl)]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [D lo(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [D lo(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]]
					=[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]]
			=[[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
					=[[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unacceptable specifier [[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] [T/prt [v lava]]].
					=[[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:89 [T/fin [__:89 [ha [D lo(cl)]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:90 [T/fin [__:90 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:90 [T/fin [__:90 ha]]]
			=[[[D loro]:90 [T/fin [__:90 ha]]] D]

33.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:90 [T/fin [__:90 ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:90 [T/fin [__:90 ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:90 [T/fin [__:90 ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[[D loro]:90 [T/fin [__:90 ha]]] [[D lo(cl)] T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:90 [T/fin [__:90 ha]]] [[D lo(cl)] T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:90 [T/fin [__:90 ha]]] [[D lo(cl)] T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:90 [T/fin [__:90 ha]]] D{N}] T/prt]
			Transferring [[[D loro]:90 [T/fin [__:90 ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:90 [T/fin [__:90 ha]]] D{N}].
					Extracted head "lo(cl)" from D and created [[[D loro]:90 [T/fin [__:90 ha]]] [D lo(cl)]]
					=[[[D loro]:90 [T/fin [__:90 ha]]] [D lo(cl)]]
				2. Feature processing:
					=[[[D loro]:90 [T/fin [__:90 ha]]] [D lo(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D lo(cl)> was made an adjunct.
					Dropping <D lo(cl)>
					=[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>]
			=[[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] [T/prt [v lava]]]
					=[[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unacceptable specifier [[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] [T/prt [v lava]]].
					=[[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>] [T/prt [v lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[D loro]:90 [T/fin [__:90 ha]]] <D lo(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D]
lo(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 86
['mi#io', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#io.
		Next word contains multiple morphemes ['io_', 'mi']
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

8.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

9.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "mi(cl)"

		[[D io] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D io] D{N}]

18.
		Decomposing a polymorphemic word sono-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'sono-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D io] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D io] <D mi(cl)>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D io] [[D mi(cl)] T/fin]]

20.
		Consume "BE"

		[[D io] [[D mi(cl)] T/fin]] + BE
			Filtering out impossible merge sites...
			Sink "BE" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*BE]
			=[[D io] [[D mi(cl)] T/fin{V}]]

21.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D mi(cl)] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [? [[D mi(cl)] [T/fin [[D io] BE]]]]] T/prt] due to bad left branch.
				Reject [[[D mi(cl)] [T/fin BE]] T/prt] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D io] [[D mi(cl)] [T/fin{V} T/prt]]]

25.
		Consume "v"

		[[D io] [[D mi(cl)] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D io] [[D mi(cl)] [T/fin{V} T/prt{v}]]]

26.
		Consume "lava"

		[[D io] [[D mi(cl)] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D io] [[D mi(cl)] [T/fin{V} T/prt{v,V}]]]

27.
	>>>	Trying candidate parse [[D io] [[D mi(cl)] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 87
['io#mi', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io#mi.
		Next word contains multiple morphemes ['mi_', 'io']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

17.
		Consume "io"

		[[D mi(cl)] D] + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=[[D mi(cl)] D{N}]

18.
		Decomposing a polymorphemic word sono-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'sono-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D mi(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] <D io>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D mi(cl)] [[D io] T/fin]]

20.
		Consume "BE"

		[[D mi(cl)] [[D io] T/fin]] + BE
			Filtering out impossible merge sites...
			Sink "BE" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*BE]
			=[[D mi(cl)] [[D io] T/fin{V}]]

21.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D mi(cl)] [[D io] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [? [[D io] [T/fin [[D io] BE]]]]] T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				[[D io] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 104]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D io] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D mi(cl)] [[D io] [T/fin{V} T/prt]]]

25.
		Consume "v"

		[[D mi(cl)] [[D io] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D mi(cl)] [[D io] [T/fin{V} T/prt{v}]]]

26.
		Consume "lava"

		[[D mi(cl)] [[D io] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D mi(cl)] [[D io] [T/fin{V} T/prt{v,V}]]]

27.
	>>>	Trying candidate parse [[D mi(cl)] [[D io] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] T/fin{V}] T/prt]
			Transferring [[D io] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] T/fin{V}].
					Extracted head "BE" from T/fin and created [[D io] [T/fin BE]]
					=[[D io] [T/fin BE]]
				2. Feature processing:
					=[[D io] [T/fin BE]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin BE]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of BE
					Result [[D io] [T/fin [[D io] BE]]]
					=[[D io]:184 [T/fin [__:184 BE]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:184 [T/fin [__:184 BE]]]
			=[[D mi(cl)] [[[D io]:184 [T/fin [__:184 BE]]] T/prt]]

28.
		Consume "v"

		[[D mi(cl)] [[[D io] [T/fin [[D io] BE]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D mi(cl)] [[[D io]:184 [T/fin [__:184 BE]]] T/prt{v}]]

29.
		Consume "lava"

		[[D mi(cl)] [[[D io] [T/fin [[D io] BE]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D mi(cl)] [[[D io]:184 [T/fin [__:184 BE]]] T/prt{v,V}]]

30.
	>>>	Trying candidate parse [[D mi(cl)] [[[D io] [T/fin [[D io] BE]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 88
['loro#mi', 'hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#mi.
		Next word contains multiple morphemes ['mi_', 'loro']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

16.
		Consume "loro"

		[[D mi(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D mi(cl)] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D mi(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] <D loro>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D mi(cl)] [[D loro] T/fin]]

19.
		Consume "ha"

		[[D mi(cl)] [[D loro] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D mi(cl)] [[D loro] T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D mi(cl)] [[D loro] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [? [[D loro] [T/fin [[D loro] ha]]]]] T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D mi(cl)] [[D loro] [T/fin{V} T/prt]]]

24.
		Consume "v"

		[[D mi(cl)] [[D loro] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D mi(cl)] [[D loro] [T/fin{V} T/prt{v}]]]

25.
		Consume "lava"

		[[D mi(cl)] [[D loro] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D mi(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:188 [T/fin [__:188 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:188 [T/fin [__:188 ha]]]
			=[[D mi(cl)] [[[D loro]:188 [T/fin [__:188 ha]]] T/prt]]

27.
		Consume "v"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D mi(cl)] [[[D loro]:188 [T/fin [__:188 ha]]] T/prt{v}]]

28.
		Consume "lava"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D mi(cl)] [[[D loro]:188 [T/fin [__:188 ha]]] T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 89
['la#io', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#io.
		Next word contains multiple morphemes ['io_', 'la']
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

8.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

9.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "la(cl)"

		[[D io] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D io] D{N}]

18.
		Decomposing a polymorphemic word sono-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'sono-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D io] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D io] <D la(cl)>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D io] [[D la(cl)] T/fin]]

20.
		Consume "BE"

		[[D io] [[D la(cl)] T/fin]] + BE
			Filtering out impossible merge sites...
			Sink "BE" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*BE]
			=[[D io] [[D la(cl)] T/fin{V}]]

21.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D la(cl)] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [? [[D la(cl)] [T/fin [[D io] BE]]]]] T/prt] due to bad left branch.
				Reject [[[D la(cl)] [T/fin BE]] T/prt] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D io] [[D la(cl)] [T/fin{V} T/prt]]]

25.
		Consume "v"

		[[D io] [[D la(cl)] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D io] [[D la(cl)] [T/fin{V} T/prt{v}]]]

26.
		Consume "lava"

		[[D io] [[D la(cl)] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D io] [[D la(cl)] [T/fin{V} T/prt{v,V}]]]

27.
	>>>	Trying candidate parse [[D io] [[D la(cl)] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 90
['io#la', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io#la.
		Next word contains multiple morphemes ['la_', 'io']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "la(cl)"

		D + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D la(cl)] D]

17.
		Consume "io"

		[[D la(cl)] D] + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=[[D la(cl)] D{N}]

18.
		Decomposing a polymorphemic word sono-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'sono-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D la(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] <D io>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D la(cl)] [[D io] T/fin]]

20.
		Consume "BE"

		[[D la(cl)] [[D io] T/fin]] + BE
			Filtering out impossible merge sites...
			Sink "BE" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*BE]
			=[[D la(cl)] [[D io] T/fin{V}]]

21.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D la(cl)] [[D io] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] [? [[D io] [T/fin [[D io] BE]]]]] T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				[[D io] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 104]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D io] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D la(cl)] [[D io] [T/fin{V} T/prt]]]

25.
		Consume "v"

		[[D la(cl)] [[D io] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D la(cl)] [[D io] [T/fin{V} T/prt{v}]]]

26.
		Consume "lava"

		[[D la(cl)] [[D io] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D la(cl)] [[D io] [T/fin{V} T/prt{v,V}]]]

27.
	>>>	Trying candidate parse [[D la(cl)] [[D io] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] T/fin{V}] T/prt]
			Transferring [[D io] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] T/fin{V}].
					Extracted head "BE" from T/fin and created [[D io] [T/fin BE]]
					=[[D io] [T/fin BE]]
				2. Feature processing:
					=[[D io] [T/fin BE]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin BE]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of BE
					Result [[D io] [T/fin [[D io] BE]]]
					=[[D io]:193 [T/fin [__:193 BE]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:193 [T/fin [__:193 BE]]]
			=[[D la(cl)] [[[D io]:193 [T/fin [__:193 BE]]] T/prt]]

28.
		Consume "v"

		[[D la(cl)] [[[D io] [T/fin [[D io] BE]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D la(cl)] [[[D io]:193 [T/fin [__:193 BE]]] T/prt{v}]]

29.
		Consume "lava"

		[[D la(cl)] [[[D io] [T/fin [[D io] BE]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D la(cl)] [[[D io]:193 [T/fin [__:193 BE]]] T/prt{v,V}]]

30.
	>>>	Trying candidate parse [[D la(cl)] [[[D io] [T/fin [[D io] BE]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Clitic [D la(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 91
['loro#la', 'hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#la.
		Next word contains multiple morphemes ['la_', 'loro']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "la(cl)"

		D + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D la(cl)] D]

16.
		Consume "loro"

		[[D la(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D la(cl)] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D la(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] <D loro>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D la(cl)] [[D loro] T/fin]]

19.
		Consume "ha"

		[[D la(cl)] [[D loro] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D la(cl)] [[D loro] T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D la(cl)] [[D loro] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] [? [[D loro] [T/fin [[D loro] ha]]]]] T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D la(cl)] [[D loro] [T/fin{V} T/prt]]]

24.
		Consume "v"

		[[D la(cl)] [[D loro] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D la(cl)] [[D loro] [T/fin{V} T/prt{v}]]]

25.
		Consume "lava"

		[[D la(cl)] [[D loro] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D la(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D la(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:197 [T/fin [__:197 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:197 [T/fin [__:197 ha]]]
			=[[D la(cl)] [[[D loro]:197 [T/fin [__:197 ha]]] T/prt]]

27.
		Consume "v"

		[[D la(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D la(cl)] [[[D loro]:197 [T/fin [__:197 ha]]] T/prt{v}]]

28.
		Consume "lava"

		[[D la(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D la(cl)] [[[D loro]:197 [T/fin [__:197 ha]]] T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D la(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Clitic [D la(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 92
['lo#io', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lo#io.
		Next word contains multiple morphemes ['io_', 'lo']
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

8.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

9.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "lo(cl)"

		[[D io] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D io] D{N}]

18.
		Decomposing a polymorphemic word sono-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'sono-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D io] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D io] <D lo(cl)>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D io] [[D lo(cl)] T/fin]]

20.
		Consume "BE"

		[[D io] [[D lo(cl)] T/fin]] + BE
			Filtering out impossible merge sites...
			Sink "BE" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*BE]
			=[[D io] [[D lo(cl)] T/fin{V}]]

21.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D lo(cl)] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [? [[D lo(cl)] [T/fin [[D io] BE]]]]] T/prt] due to bad left branch.
				Reject [[[D lo(cl)] [T/fin BE]] T/prt] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D io] [[D lo(cl)] [T/fin{V} T/prt]]]

25.
		Consume "v"

		[[D io] [[D lo(cl)] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D io] [[D lo(cl)] [T/fin{V} T/prt{v}]]]

26.
		Consume "lava"

		[[D io] [[D lo(cl)] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D io] [[D lo(cl)] [T/fin{V} T/prt{v,V}]]]

27.
	>>>	Trying candidate parse [[D io] [[D lo(cl)] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 93
['io#lo', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io#lo.
		Next word contains multiple morphemes ['lo_', 'io']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "lo(cl)"

		D + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D lo(cl)] D]

17.
		Consume "io"

		[[D lo(cl)] D] + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=[[D lo(cl)] D{N}]

18.
		Decomposing a polymorphemic word sono-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'sono-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D lo(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] <D io>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D lo(cl)] [[D io] T/fin]]

20.
		Consume "BE"

		[[D lo(cl)] [[D io] T/fin]] + BE
			Filtering out impossible merge sites...
			Sink "BE" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*BE]
			=[[D lo(cl)] [[D io] T/fin{V}]]

21.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D lo(cl)] [[D io] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] [? [[D io] [T/fin [[D io] BE]]]]] T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				[[D io] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 104]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D io] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D lo(cl)] [[D io] [T/fin{V} T/prt]]]

25.
		Consume "v"

		[[D lo(cl)] [[D io] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D lo(cl)] [[D io] [T/fin{V} T/prt{v}]]]

26.
		Consume "lava"

		[[D lo(cl)] [[D io] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D lo(cl)] [[D io] [T/fin{V} T/prt{v,V}]]]

27.
	>>>	Trying candidate parse [[D lo(cl)] [[D io] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] T/fin{V}] T/prt]
			Transferring [[D io] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] T/fin{V}].
					Extracted head "BE" from T/fin and created [[D io] [T/fin BE]]
					=[[D io] [T/fin BE]]
				2. Feature processing:
					=[[D io] [T/fin BE]]
				3. Floater movement reconstruction:
					=[[D io] [T/fin BE]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of BE
					Result [[D io] [T/fin [[D io] BE]]]
					=[[D io]:202 [T/fin [__:202 BE]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:202 [T/fin [__:202 BE]]]
			=[[D lo(cl)] [[[D io]:202 [T/fin [__:202 BE]]] T/prt]]

28.
		Consume "v"

		[[D lo(cl)] [[[D io] [T/fin [[D io] BE]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D lo(cl)] [[[D io]:202 [T/fin [__:202 BE]]] T/prt{v}]]

29.
		Consume "lava"

		[[D lo(cl)] [[[D io] [T/fin [[D io] BE]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D lo(cl)] [[[D io]:202 [T/fin [__:202 BE]]] T/prt{v,V}]]

30.
	>>>	Trying candidate parse [[D lo(cl)] [[[D io] [T/fin [[D io] BE]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Clitic [D lo(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 94
['loro#lo', 'hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#lo.
		Next word contains multiple morphemes ['lo_', 'loro']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "lo(cl)"

		D + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D lo(cl)] D]

16.
		Consume "loro"

		[[D lo(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D lo(cl)] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D lo(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] <D loro>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D lo(cl)] [[D loro] T/fin]]

19.
		Consume "ha"

		[[D lo(cl)] [[D loro] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D lo(cl)] [[D loro] T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D lo(cl)] [[D loro] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] [? [[D loro] [T/fin [[D loro] ha]]]]] T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D lo(cl)] [[D loro] [T/fin{V} T/prt]]]

24.
		Consume "v"

		[[D lo(cl)] [[D loro] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D lo(cl)] [[D loro] [T/fin{V} T/prt{v}]]]

25.
		Consume "lava"

		[[D lo(cl)] [[D loro] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D lo(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D lo(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:206 [T/fin [__:206 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:206 [T/fin [__:206 ha]]]
			=[[D lo(cl)] [[[D loro]:206 [T/fin [__:206 ha]]] T/prt]]

27.
		Consume "v"

		[[D lo(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D lo(cl)] [[[D loro]:206 [T/fin [__:206 ha]]] T/prt{v}]]

28.
		Consume "lava"

		[[D lo(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D lo(cl)] [[[D loro]:206 [T/fin [__:206 ha]]] T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D lo(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Clitic [D lo(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 95
['mi#loro', 'hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#loro.
		Next word contains multiple morphemes ['loro_', 'mi']
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

8.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

16.
		Consume "mi(cl)"

		[[D loro] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D loro] <D mi(cl)>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [[D mi(cl)] T/fin]]

19.
		Consume "ha"

		[[D loro] [[D mi(cl)] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] [[D mi(cl)] T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [[D mi(cl)] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[D mi(cl)] [T/fin [[D loro] ha]]]]] T/prt] due to bad left branch.
				Reject [[[D mi(cl)] [T/fin ha]] T/prt] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [[D mi(cl)] [T/fin{V} T/prt]]]

24.
		Consume "v"

		[[D loro] [[D mi(cl)] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[D mi(cl)] [T/fin{V} T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [[D mi(cl)] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[D mi(cl)] [T/fin{V} T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [[D mi(cl)] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 96
['io', 'sono#la', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word sono#la.
		Next word contains multiple morphemes ['la_', 'sono']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "la(cl)"

		[[D io] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D io] D{N}]

18.
		Decomposing a polymorphemic word sono-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'sono-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D io] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D io] <D la(cl)>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D io] [[D la(cl)] T/fin]]

20.
		Consume "BE"

		[[D io] [[D la(cl)] T/fin]] + BE
			Filtering out impossible merge sites...
			Sink "BE" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*BE]
			=[[D io] [[D la(cl)] T/fin{V}]]

21.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D la(cl)] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [? [[D la(cl)] [T/fin [[D io] BE]]]]] T/prt] due to bad left branch.
				Reject [[[D la(cl)] [T/fin BE]] T/prt] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D io] [[D la(cl)] [T/fin{V} T/prt]]]

28.
		Consume "v"

		[[D io] [[D la(cl)] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D io] [[D la(cl)] [T/fin{V} T/prt{v}]]]

29.
		Consume "lava"

		[[D io] [[D la(cl)] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D io] [[D la(cl)] [T/fin{V} T/prt{v,V}]]]

30.
	>>>	Trying candidate parse [[D io] [[D la(cl)] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 97
['io', 'sono#lo', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word sono#lo.
		Next word contains multiple morphemes ['lo_', 'sono']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "lo(cl)"

		[[D io] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D io] D{N}]

18.
		Decomposing a polymorphemic word sono-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'sono-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D io] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D io] <D lo(cl)>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D io] [[D lo(cl)] T/fin]]

20.
		Consume "BE"

		[[D io] [[D lo(cl)] T/fin]] + BE
			Filtering out impossible merge sites...
			Sink "BE" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*BE]
			=[[D io] [[D lo(cl)] T/fin{V}]]

21.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D lo(cl)] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [? [[D lo(cl)] [T/fin [[D io] BE]]]]] T/prt] due to bad left branch.
				Reject [[[D lo(cl)] [T/fin BE]] T/prt] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D io] [[D lo(cl)] [T/fin{V} T/prt]]]

25.
		Consume "v"

		[[D io] [[D lo(cl)] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D io] [[D lo(cl)] [T/fin{V} T/prt{v}]]]

26.
		Consume "lava"

		[[D io] [[D lo(cl)] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D io] [[D lo(cl)] [T/fin{V} T/prt{v,V}]]]

27.
	>>>	Trying candidate parse [[D io] [[D lo(cl)] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 98
['loro', 'devono', 'mi#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] deva]

9.
		Decomposing a polymorphemic word mi#lavare.
		Next word contains multiple morphemes ['lavare_', 'mi']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[D loro] deva] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] are] due to bad left branch.
		Exploring solution number (1) =[deva are]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [deva are]]

11.
		Consume "v"

		[[D loro] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [deva are{v}]]

12.
		Consume "lava"

		[[D loro] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [deva are{v,V}]]

13.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [deva are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [deva [are [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[[D loro] [deva are{v,V}]] + D = -197]
				[deva are{v,V}] + D = -194]
				are{v,V} + D = 59]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[deva are{v,V}]; D]
			3. [[[D loro] [deva are{v,V}]]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[[D loro] [deva [are{v,V} D]]]

21.
		Consume "mi(cl)"

		[[D loro] [deva [are{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [deva [are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[deva are{v,V}] D]
			Transferring [deva are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [deva are{v,V}].
					Extracted head "v{V}" from are and created [deva [are v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [deva [are [v lava]]]
					=[deva [are [v lava]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[deva [are [v lava]]]
				3. Floater movement reconstruction:
					=[deva [are [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [deva [are [v lava]]].
					=[deva [are [v lava]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[deva [are [v lava]]]
			=[[D loro] [[deva [are [v lava]]] D]]

23.
		Consume "mi(cl)"

		[[D loro] [[deva [are [v lava]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[deva [are [v lava]]] D{N}]]

24.
	>>>	Trying candidate parse [[D loro] [[deva [are [v lava]]] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [deva are{v,V}]] D]
			Transferring [[D loro] [deva are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [deva are{v,V}]].
					Extracted head "v{V}" from are and created [[D loro] [deva [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [deva [are [v lava]]]]
					=[[D loro] [deva [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [deva [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [deva [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [deva [[D loro] [are [v lava]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:95 from memory buffer into Spec of v
					Result [[D loro]:95 [deva [__:95 [are [__:95 [v lava]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:95 [deva [__:95 [are [__:95 [v lava]]]]]].
					=[[D loro]:95 [deva [__:95 [are [__:95 [v lava]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:N from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:95 [deva [__:95 [are [__:95 [v lava]]]]]]
			=[[[D loro]:95 [deva [__:95 [are [__:95 [v lava]]]]]] D]

25.
		Consume "mi(cl)"

		[[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:95 [deva [__:95 [are [__:95 [v lava]]]]]] D{N}]

26.
	>>>	Trying candidate parse [[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 99
['loro', 'devono', 'la#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] deva]

9.
		Decomposing a polymorphemic word la#lavare.
		Next word contains multiple morphemes ['lavare_', 'la']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[D loro] deva] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] are] due to bad left branch.
		Exploring solution number (1) =[deva are]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [deva are]]

11.
		Consume "v"

		[[D loro] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [deva are{v}]]

12.
		Consume "lava"

		[[D loro] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [deva are{v,V}]]

13.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [deva are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [deva [are [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[[D loro] [deva are{v,V}]] + D = -197]
				[deva are{v,V}] + D = -194]
				are{v,V} + D = 59]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[deva are{v,V}]; D]
			3. [[[D loro] [deva are{v,V}]]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[[D loro] [deva [are{v,V} D]]]

21.
		Consume "la(cl)"

		[[D loro] [deva [are{v,V} D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [deva [are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[deva are{v,V}] D]
			Transferring [deva are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [deva are{v,V}].
					Extracted head "v{V}" from are and created [deva [are v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [deva [are [v lava]]]
					=[deva [are [v lava]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[deva [are [v lava]]]
				3. Floater movement reconstruction:
					=[deva [are [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [deva [are [v lava]]].
					=[deva [are [v lava]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[deva [are [v lava]]]
			=[[D loro] [[deva [are [v lava]]] D]]

23.
		Consume "la(cl)"

		[[D loro] [[deva [are [v lava]]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[deva [are [v lava]]] D{N}]]

24.
	>>>	Trying candidate parse [[D loro] [[deva [are [v lava]]] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [deva are{v,V}]] D]
			Transferring [[D loro] [deva are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [deva are{v,V}]].
					Extracted head "v{V}" from are and created [[D loro] [deva [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [deva [are [v lava]]]]
					=[[D loro] [deva [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [deva [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [deva [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [deva [[D loro] [are [v lava]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:101 from memory buffer into Spec of v
					Result [[D loro]:101 [deva [__:101 [are [__:101 [v lava]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:101 [deva [__:101 [are [__:101 [v lava]]]]]].
					=[[D loro]:101 [deva [__:101 [are [__:101 [v lava]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:N from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:101 [deva [__:101 [are [__:101 [v lava]]]]]]
			=[[[D loro]:101 [deva [__:101 [are [__:101 [v lava]]]]]] D]

25.
		Consume "la(cl)"

		[[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:101 [deva [__:101 [are [__:101 [v lava]]]]]] D{N}]

26.
	>>>	Trying candidate parse [[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 100
['loro', 'devono', 'lo#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] deva]

9.
		Decomposing a polymorphemic word lo#lavare.
		Next word contains multiple morphemes ['lavare_', 'lo']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[D loro] deva] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] are] due to bad left branch.
		Exploring solution number (1) =[deva are]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D loro] [deva are]]

11.
		Consume "v"

		[[D loro] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [deva are{v}]]

12.
		Consume "lava"

		[[D loro] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [deva are{v,V}]]

13.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [deva are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [deva [are [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[[D loro] [deva are{v,V}]] + D = -197]
				[deva are{v,V}] + D = -194]
				are{v,V} + D = 59]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[deva are{v,V}]; D]
			3. [[[D loro] [deva are{v,V}]]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[[D loro] [deva [are{v,V} D]]]

21.
		Consume "lo(cl)"

		[[D loro] [deva [are{v,V} D]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [deva [are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[deva are{v,V}] D]
			Transferring [deva are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [deva are{v,V}].
					Extracted head "v{V}" from are and created [deva [are v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [deva [are [v lava]]]
					=[deva [are [v lava]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[deva [are [v lava]]]
				3. Floater movement reconstruction:
					=[deva [are [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [deva [are [v lava]]].
					=[deva [are [v lava]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[deva [are [v lava]]]
			=[[D loro] [[deva [are [v lava]]] D]]

23.
		Consume "lo(cl)"

		[[D loro] [[deva [are [v lava]]] D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [[deva [are [v lava]]] D{N}]]

24.
	>>>	Trying candidate parse [[D loro] [[deva [are [v lava]]] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [deva are{v,V}]] D]
			Transferring [[D loro] [deva are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [deva are{v,V}]].
					Extracted head "v{V}" from are and created [[D loro] [deva [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [deva [are [v lava]]]]
					=[[D loro] [deva [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [deva [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [deva [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [deva [[D loro] [are [v lava]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:107 from memory buffer into Spec of v
					Result [[D loro]:107 [deva [__:107 [are [__:107 [v lava]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:107 [deva [__:107 [are [__:107 [v lava]]]]]].
					=[[D loro]:107 [deva [__:107 [are [__:107 [v lava]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:GEN:N from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:107 [deva [__:107 [are [__:107 [v lava]]]]]]
			=[[[D loro]:107 [deva [__:107 [are [__:107 [v lava]]]]]] D]

25.
		Consume "lo(cl)"

		[[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:107 [deva [__:107 [are [__:107 [v lava]]]]]] D{N}]

26.
	>>>	Trying candidate parse [[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 101
['loro#la', 'devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#la.
		Next word contains multiple morphemes ['la_', 'loro']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "la(cl)"

		D + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D la(cl)] D]

16.
		Consume "loro"

		[[D la(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D la(cl)] D{N}]

17.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		[[D la(cl)] D{N}] + deva
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] <D loro>] deva] due to bad left branch.
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D la(cl)] [[D loro] deva]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D la(cl)] [[D loro] deva]] + are
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] [[D loro] [deva [D la(cl)]]]] are] due to bad left branch.
				Reject [[[D loro] deva] are] due to bad left branch.
		Exploring solution number (1) =[deva are]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D la(cl)] [[D loro] [deva are]]]

20.
		Consume "v"

		[[D la(cl)] [[D loro] [deva are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D la(cl)] [[D loro] [deva are{v}]]]

21.
		Consume "lava"

		[[D la(cl)] [[D loro] [deva are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D la(cl)] [[D loro] [deva are{v,V}]]]

22.
	>>>	Trying candidate parse [[D la(cl)] [[D loro] [deva are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 102
['loro#lo', 'devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#lo.
		Next word contains multiple morphemes ['lo_', 'loro']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "lo(cl)"

		D + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D lo(cl)] D]

16.
		Consume "loro"

		[[D lo(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D lo(cl)] D{N}]

17.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		[[D lo(cl)] D{N}] + deva
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] <D loro>] deva] due to bad left branch.
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D lo(cl)] [[D loro] deva]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D lo(cl)] [[D loro] deva]] + are
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] [[D loro] [deva [D lo(cl)]]]] are] due to bad left branch.
				Reject [[[D loro] deva] are] due to bad left branch.
		Exploring solution number (1) =[deva are]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D lo(cl)] [[D loro] [deva are]]]

20.
		Consume "v"

		[[D lo(cl)] [[D loro] [deva are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D lo(cl)] [[D loro] [deva are{v}]]]

21.
		Consume "lava"

		[[D lo(cl)] [[D loro] [deva are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D lo(cl)] [[D loro] [deva are{v,V}]]]

22.
	>>>	Trying candidate parse [[D lo(cl)] [[D loro] [deva are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 103
['loro#mi', 'devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#mi.
		Next word contains multiple morphemes ['mi_', 'loro']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

16.
		Consume "loro"

		[[D mi(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D mi(cl)] D{N}]

17.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		[[D mi(cl)] D{N}] + deva
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] <D loro>] deva] due to bad left branch.
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D mi(cl)] [[D loro] deva]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D mi(cl)] [[D loro] deva]] + are
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [[D loro] [deva [D mi(cl)]]]] are] due to bad left branch.
				Reject [[[D loro] deva] are] due to bad left branch.
		Exploring solution number (1) =[deva are]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[[D mi(cl)] [[D loro] [deva are]]]

20.
		Consume "v"

		[[D mi(cl)] [[D loro] [deva are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D mi(cl)] [[D loro] [deva are{v}]]]

21.
		Consume "lava"

		[[D mi(cl)] [[D loro] [deva are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D mi(cl)] [[D loro] [deva are{v,V}]]]

22.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] [deva are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 104
['loro', 'stanno', 'mi#lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "sta"

		[[D loro] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word mi#lavando.
		Next word contains multiple morphemes ['lavando_', 'mi']
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['inc$', 'ndo$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ndo$"

		Adding inflectional features to PRG
		Consume "PRG"

		[[D loro] T/fin{V}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D loro] T/fin{V}] + PRG = -98]
				T/fin{V} + PRG = 104]
		Ranking completed:
			1. [T/fin{V}; PRG]
			2. [[[D loro] T/fin{V}]; PRG]
		Exploring solution number (1) =[T/fin{V} PRG]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} PRG]]

12.
		Consume "v"

		[[D loro] [T/fin{V} PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D loro] [T/fin{V} PRG{v}]]

13.
		Consume "lava"

		[[D loro] [T/fin{V} PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D loro] [T/fin{V} PRG{v,V}]]

14.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} PRG{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [sta [PRG [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [sta [PRG [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [PRG{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRG{v,V} because it could break words.
				[[D loro] [T/fin{V} PRG{v,V}]] + D = -197]
				[T/fin{V} PRG{v,V}] + D = -194]
				PRG{v,V} + D = -38]
		Ranking completed:
			1. [PRG{v,V}; D]
			2. [[T/fin{V} PRG{v,V}]; D]
			3. [[[D loro] [T/fin{V} PRG{v,V}]]; D]
		Exploring solution number (1) =[PRG{v,V} D]
			Transferring PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRG{v,V}
				2. Feature processing:
					=PRG{v,V}
				3. Floater movement reconstruction:
					=PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRG{v,V} probing for CAT:V failed.
				"PRG{v,V}" lacks complement.
					=PRG{v,V}
				5. Agreement reconstruction:
					=PRG{v,V}
			=[[D loro] [T/fin{V} [PRG{v,V} D]]]

22.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [PRG{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} [PRG{v,V} D{N}]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [PRG{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} PRG{v,V}] D]
			Transferring [T/fin{V} PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} PRG{v,V}].
						Extracted head "sta" and reconstructed it = [T/fin [sta PRG{v,V}]]
					Extracted head "v{V}" from PRG and created [T/fin [sta [PRG v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [sta [PRG [v lava]]]]
					=[T/fin [sta [PRG [v lava]]]]
				2. Feature processing:
					=[T/fin [sta [PRG [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [PRG [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [sta [PRG [v lava]]]].
					=[T/fin [sta [PRG [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [sta [PRG [v lava]]]]
			=[[D loro] [[T/fin [sta [PRG [v lava]]]] D]]

24.
		Consume "mi(cl)"

		[[D loro] [[T/fin [sta [PRG [v lava]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[T/fin [sta [PRG [v lava]]]] D{N}]]

25.
	>>>	Trying candidate parse [[D loro] [[T/fin [sta [PRG [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} PRG{v,V}]] D]
			Transferring [[D loro] [T/fin{V} PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} PRG{v,V}]].
						Extracted head "sta" and reconstructed it = [[D loro] [T/fin [sta PRG{v,V}]]]
					Extracted head "v{V}" from PRG and created [[D loro] [T/fin [sta [PRG v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [sta [PRG [v lava]]]]]
					=[[D loro] [T/fin [sta [PRG [v lava]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [sta [PRG [v lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [sta [PRG [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] [sta [PRG [v lava]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:113 [T/fin [__:113 [sta [PRG [v lava]]]]]].
					=[[D loro]:113 [T/fin [__:113 [sta [PRG [v lava]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:113 [T/fin [__:113 [sta [PRG [v lava]]]]]]
			=[[[D loro]:113 [T/fin [__:113 [sta [PRG [v lava]]]]]] D]

26.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] [sta [PRG [v lava]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:113 [T/fin [__:113 [sta [PRG [v lava]]]]]] D{N}]

27.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [sta [PRG [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] PRG]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "sta" from T/fin and created [[D loro] [T/fin sta]]
					=[[D loro] [T/fin sta]]
				2. Feature processing:
					=[[D loro] [T/fin sta]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] sta]]]
					=[[D loro]:114 [T/fin [__:114 sta]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:114 [T/fin [__:114 sta]]]
			=[[[D loro]:114 [T/fin [__:114 sta]]] PRG]

28.
		Consume "v"

		[[[D loro] [T/fin [[D loro] sta]]] PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[[D loro]:114 [T/fin [__:114 sta]]] PRG{v}]

29.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] sta]]] PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[[D loro]:114 [T/fin [__:114 sta]]] PRG{v,V}]

30.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] sta]]] PRG{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				PRG has unacceptable specifier [[D loro]:114 [T/fin [__:114 sta]]].
				"lava" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] sta]]] [PRG [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [PRG{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:114 [T/fin [__:114 sta]]] PRG{v,V}] + D = -98]
				PRG{v,V} + D = 56]
		Ranking completed:
			1. [PRG{v,V}; D]
			2. [[[[D loro]:114 [T/fin [__:114 sta]]] PRG{v,V}]; D]
		Exploring solution number (1) =[PRG{v,V} D]
			Transferring PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRG{v,V}
				2. Feature processing:
					=PRG{v,V}
				3. Floater movement reconstruction:
					=PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRG{v,V} probing for CAT:V failed.
				"PRG{v,V}" lacks complement.
					=PRG{v,V}
				5. Agreement reconstruction:
					=PRG{v,V}
			=[[[D loro]:114 [T/fin [__:114 sta]]] [PRG{v,V} D]]

38.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] sta]]] [PRG{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:114 [T/fin [__:114 sta]]] [PRG{v,V} D{N}]]

39.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] sta]]] [PRG{v,V} D{N}]] (4.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:114 [T/fin [__:114 sta]]] PRG{v,V}] D]
			Transferring [[[D loro]:114 [T/fin [__:114 sta]]] PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:114 [T/fin [__:114 sta]]] PRG{v,V}].
					Extracted head "v{V}" from PRG and created [[[D loro]:114 [T/fin [__:114 sta]]] [PRG v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:114 [T/fin [__:114 sta]]] [PRG [v lava]]]
					=[[[D loro]:114 [T/fin [__:114 sta]]] [PRG [v lava]]]
				2. Feature processing:
					=[[[D loro]:114 [T/fin [__:114 sta]]] [PRG [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:114 [T/fin [__:114 sta]]] [PRG [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __sta " into memory buffer from SPEC of "PRG".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRG has unacceptable specifier [[D loro]:114 [T/fin [__:114 sta]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:114 [T/fin [__:114 sta]]] [PRG [v lava]]].
					=[[[D loro]:114 [T/fin [__:114 sta]]] [PRG [v lava]]]
				5. Agreement reconstruction:
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:114 [T/fin [__:114 sta]]] [PRG [v lava]]]
			=[[[[D loro]:114 [T/fin [__:114 sta]]] [PRG [v lava]]] D]

40.
		Consume "mi(cl)"

		[[[[D loro] [T/fin [[D loro] sta]]] [PRG [v lava]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[[D loro]:114 [T/fin [__:114 sta]]] [PRG [v lava]]] D{N}]

41.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] sta]]] [PRG [v lava]]] D{N}] (5.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ndo$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 105
['stanno', 'mi#lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=T/fin{V}

4.
		Decomposing a polymorphemic word mi#lavando.
		Next word contains multiple morphemes ['lavando_', 'mi']
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['inc$', 'ndo$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ndo$"

		Adding inflectional features to PRG
		Consume "PRG"

		T/fin{V} + PRG
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} PRG]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} PRG]

6.
		Consume "v"

		[T/fin{V} PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[T/fin{V} PRG{v}]

7.
		Consume "lava"

		[T/fin{V} PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[T/fin{V} PRG{v,V}]

8.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} PRG{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [sta [PRG [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [PRG{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRG{v,V} because it could break words.
				[T/fin{V} PRG{v,V}] + D = -197]
				PRG{v,V} + D = -42]
		Ranking completed:
			1. [PRG{v,V}; D]
			2. [[T/fin{V} PRG{v,V}]; D]
		Exploring solution number (1) =[PRG{v,V} D]
			Transferring PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRG{v,V}
				2. Feature processing:
					=PRG{v,V}
				3. Floater movement reconstruction:
					=PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRG{v,V} probing for CAT:V failed.
				"PRG{v,V}" lacks complement.
					=PRG{v,V}
				5. Agreement reconstruction:
					=PRG{v,V}
			=[T/fin{V} [PRG{v,V} D]]

16.
		Consume "mi(cl)"

		[T/fin{V} [PRG{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} [PRG{v,V} D{N}]]

17.
	>>>	Trying candidate parse [T/fin{V} [PRG{v,V} D{N}]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} PRG{v,V}] D]
			Transferring [T/fin{V} PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} PRG{v,V}].
						Extracted head "sta" and reconstructed it = [T/fin [sta PRG{v,V}]]
					Extracted head "v{V}" from PRG and created [T/fin [sta [PRG v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [sta [PRG [v lava]]]]
					=[T/fin [sta [PRG [v lava]]]]
				2. Feature processing:
					=[T/fin [sta [PRG [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [PRG [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [sta [PRG [v lava]]]].
					=[T/fin [sta [PRG [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [sta [PRG [v lava]]]]
			=[[T/fin [sta [PRG [v lava]]]] D]

18.
		Consume "mi(cl)"

		[[T/fin [sta [PRG [v lava]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[T/fin [sta [PRG [v lava]]]] D{N}]

19.
	>>>	Trying candidate parse [[T/fin [sta [PRG [v lava]]]] D{N}] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ndo$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 106
['stanno', 'la#lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=T/fin{V}

4.
		Decomposing a polymorphemic word la#lavando.
		Next word contains multiple morphemes ['lavando_', 'la']
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['inc$', 'ndo$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ndo$"

		Adding inflectional features to PRG
		Consume "PRG"

		T/fin{V} + PRG
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} PRG]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} PRG]

6.
		Consume "v"

		[T/fin{V} PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[T/fin{V} PRG{v}]

7.
		Consume "lava"

		[T/fin{V} PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[T/fin{V} PRG{v,V}]

8.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} PRG{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [sta [PRG [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [PRG{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRG{v,V} because it could break words.
				[T/fin{V} PRG{v,V}] + D = -197]
				PRG{v,V} + D = -42]
		Ranking completed:
			1. [PRG{v,V}; D]
			2. [[T/fin{V} PRG{v,V}]; D]
		Exploring solution number (1) =[PRG{v,V} D]
			Transferring PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRG{v,V}
				2. Feature processing:
					=PRG{v,V}
				3. Floater movement reconstruction:
					=PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRG{v,V} probing for CAT:V failed.
				"PRG{v,V}" lacks complement.
					=PRG{v,V}
				5. Agreement reconstruction:
					=PRG{v,V}
			=[T/fin{V} [PRG{v,V} D]]

16.
		Consume "la(cl)"

		[T/fin{V} [PRG{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[T/fin{V} [PRG{v,V} D{N}]]

17.
	>>>	Trying candidate parse [T/fin{V} [PRG{v,V} D{N}]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} PRG{v,V}] D]
			Transferring [T/fin{V} PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} PRG{v,V}].
						Extracted head "sta" and reconstructed it = [T/fin [sta PRG{v,V}]]
					Extracted head "v{V}" from PRG and created [T/fin [sta [PRG v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [sta [PRG [v lava]]]]
					=[T/fin [sta [PRG [v lava]]]]
				2. Feature processing:
					=[T/fin [sta [PRG [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [PRG [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [sta [PRG [v lava]]]].
					=[T/fin [sta [PRG [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [sta [PRG [v lava]]]]
			=[[T/fin [sta [PRG [v lava]]]] D]

18.
		Consume "la(cl)"

		[[T/fin [sta [PRG [v lava]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[T/fin [sta [PRG [v lava]]]] D{N}]

19.
	>>>	Trying candidate parse [[T/fin [sta [PRG [v lava]]]] D{N}] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ndo$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 107
['stanno', 'lo#lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=T/fin{V}

4.
		Decomposing a polymorphemic word lo#lavando.
		Next word contains multiple morphemes ['lavando_', 'lo']
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['inc$', 'ndo$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ndo$"

		Adding inflectional features to PRG
		Consume "PRG"

		T/fin{V} + PRG
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} PRG]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} PRG]

6.
		Consume "v"

		[T/fin{V} PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[T/fin{V} PRG{v}]

7.
		Consume "lava"

		[T/fin{V} PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[T/fin{V} PRG{v,V}]

8.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} PRG{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [sta [PRG [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [PRG{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRG{v,V} because it could break words.
				[T/fin{V} PRG{v,V}] + D = -197]
				PRG{v,V} + D = -42]
		Ranking completed:
			1. [PRG{v,V}; D]
			2. [[T/fin{V} PRG{v,V}]; D]
		Exploring solution number (1) =[PRG{v,V} D]
			Transferring PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRG{v,V}
				2. Feature processing:
					=PRG{v,V}
				3. Floater movement reconstruction:
					=PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRG{v,V} probing for CAT:V failed.
				"PRG{v,V}" lacks complement.
					=PRG{v,V}
				5. Agreement reconstruction:
					=PRG{v,V}
			=[T/fin{V} [PRG{v,V} D]]

16.
		Consume "lo(cl)"

		[T/fin{V} [PRG{v,V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[T/fin{V} [PRG{v,V} D{N}]]

17.
	>>>	Trying candidate parse [T/fin{V} [PRG{v,V} D{N}]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} PRG{v,V}] D]
			Transferring [T/fin{V} PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} PRG{v,V}].
						Extracted head "sta" and reconstructed it = [T/fin [sta PRG{v,V}]]
					Extracted head "v{V}" from PRG and created [T/fin [sta [PRG v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [sta [PRG [v lava]]]]
					=[T/fin [sta [PRG [v lava]]]]
				2. Feature processing:
					=[T/fin [sta [PRG [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [sta [PRG [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [sta [PRG [v lava]]]].
					=[T/fin [sta [PRG [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [sta [PRG [v lava]]]]
			=[[T/fin [sta [PRG [v lava]]]] D]

18.
		Consume "lo(cl)"

		[[T/fin [sta [PRG [v lava]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[T/fin [sta [PRG [v lava]]]] D{N}]

19.
	>>>	Trying candidate parse [[T/fin [sta [PRG [v lava]]]] D{N}] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ndo$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 108
['loro#mi', 'stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#mi.
		Next word contains multiple morphemes ['mi_', 'loro']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

16.
		Consume "loro"

		[[D mi(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D mi(cl)] D{N}]

17.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D mi(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] <D loro>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D mi(cl)] [[D loro] T/fin]]

19.
		Consume "sta"

		[[D mi(cl)] [[D loro] T/fin]] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=[[D mi(cl)] [[D loro] T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D mi(cl)] [[D loro] T/fin{V}]] + PRG
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [? [[D loro] [T/fin [[D loro] sta]]]]] PRG] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D loro] T/fin{V}] + PRG = -98]
				T/fin{V} + PRG = 104]
		Ranking completed:
			1. [T/fin{V}; PRG]
			2. [[[D loro] T/fin{V}]; PRG]
		Exploring solution number (1) =[T/fin{V} PRG]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D mi(cl)] [[D loro] [T/fin{V} PRG]]]

21.
		Consume "v"

		[[D mi(cl)] [[D loro] [T/fin{V} PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D mi(cl)] [[D loro] [T/fin{V} PRG{v}]]]

22.
		Consume "lava"

		[[D mi(cl)] [[D loro] [T/fin{V} PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D mi(cl)] [[D loro] [T/fin{V} PRG{v,V}]]]

23.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] [T/fin{V} PRG{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] PRG]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "sta" from T/fin and created [[D loro] [T/fin sta]]
					=[[D loro] [T/fin sta]]
				2. Feature processing:
					=[[D loro] [T/fin sta]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] sta]]]
					=[[D loro]:216 [T/fin [__:216 sta]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:216 [T/fin [__:216 sta]]]
			=[[D mi(cl)] [[[D loro]:216 [T/fin [__:216 sta]]] PRG]]

24.
		Consume "v"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D mi(cl)] [[[D loro]:216 [T/fin [__:216 sta]]] PRG{v}]]

25.
		Consume "lava"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D mi(cl)] [[[D loro]:216 [T/fin [__:216 sta]]] PRG{v,V}]]

26.
	>>>	Trying candidate parse [[D mi(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v,V}]] (2.)
		Checking surface conditions...
			Clitic [D mi(cl)] right-incorporated to [[D mi(cl)] [[[D loro]:216 [T/fin [__:216 sta]]] PRG{v,V}]]
		Reconstructing...
			Transferring [[D mi(cl)] [[[D loro]:216 [T/fin [__:216 sta]]] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] [[[D loro]:216 [T/fin [__:216 sta]]] PRG{v,V}]].
					Extracted head "v{V}" from PRG and created [[D mi(cl)] [[[D loro]:216 [T/fin [__:216 sta]]] [PRG v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D mi(cl)] [[[D loro]:216 [T/fin [__:216 sta]]] [PRG [v lava]]]]
					=[[D mi(cl)] [[[D loro]:216 [T/fin [__:216 sta]]] [PRG [v lava]]]]
				2. Feature processing:
					=[[D mi(cl)] [[[D loro]:216 [T/fin [__:216 sta]]] [PRG [v lava]]]]
				3. Floater movement reconstruction:
					[D mi(cl)] failed to tail [-VAL][ARG]
					Dropping [D mi(cl)]
						<D mi(cl)> was made an adjunct.
						Floater <D mi(cl)> dropped.
						 = [<D mi(cl)>:1 [[[D loro]:216 [T/fin [__:216 sta]]] [PRG [v [<DP>:1 lava]]]]]
					=[<D mi(cl)>:1 [[[D loro]:216 [T/fin [__:216 sta]]] [PRG [v [<DP>:1 lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __sta " into memory buffer from SPEC of "PRG".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRG has unacceptable specifier [[D loro]:216 [T/fin [__:216 sta]]].
					Extraposition will be tried on [<D mi(cl)>:1 [[[D loro]:216 [T/fin [__:216 sta]]] [PRG [v [<DP>:1 lava]]]]].
					=[<D mi(cl)>:1 [[[D loro]:216 [T/fin [__:216 sta]]] [PRG [v [<DP>:1 lava]]]]]
				5. Agreement reconstruction:
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[<D mi(cl)>:1 [[[D loro]:216 [T/fin [__:216 sta]]] [PRG [v [<DP>:1 lava]]]]]
			= [<D mi(cl)> [[[D loro] [T/fin [[D loro] sta]]] [PRG [v [<D mi(cl)> lava]]]]]
		Checking LF-interface conditions.
				PRG has unacceptable specifier [[D loro]:216 [T/fin [__:216 sta]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
mi(cl): [N, D]
D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
sta: [V, TT/fin]
PRG: [INF]
v: [v, INF]
__: [D, v, INF]
__: [N, D, v, INF]
lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 109
['loro#la', 'stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#la.
		Next word contains multiple morphemes ['la_', 'loro']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "la(cl)"

		D + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D la(cl)] D]

16.
		Consume "loro"

		[[D la(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D la(cl)] D{N}]

17.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D la(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] <D loro>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D la(cl)] [[D loro] T/fin]]

19.
		Consume "sta"

		[[D la(cl)] [[D loro] T/fin]] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=[[D la(cl)] [[D loro] T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D la(cl)] [[D loro] T/fin{V}]] + PRG
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] [? [[D loro] [T/fin [[D loro] sta]]]]] PRG] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D loro] T/fin{V}] + PRG = -98]
				T/fin{V} + PRG = 104]
		Ranking completed:
			1. [T/fin{V}; PRG]
			2. [[[D loro] T/fin{V}]; PRG]
		Exploring solution number (1) =[T/fin{V} PRG]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D la(cl)] [[D loro] [T/fin{V} PRG]]]

21.
		Consume "v"

		[[D la(cl)] [[D loro] [T/fin{V} PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D la(cl)] [[D loro] [T/fin{V} PRG{v}]]]

22.
		Consume "lava"

		[[D la(cl)] [[D loro] [T/fin{V} PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D la(cl)] [[D loro] [T/fin{V} PRG{v,V}]]]

23.
	>>>	Trying candidate parse [[D la(cl)] [[D loro] [T/fin{V} PRG{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] PRG]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "sta" from T/fin and created [[D loro] [T/fin sta]]
					=[[D loro] [T/fin sta]]
				2. Feature processing:
					=[[D loro] [T/fin sta]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] sta]]]
					=[[D loro]:220 [T/fin [__:220 sta]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:220 [T/fin [__:220 sta]]]
			=[[D la(cl)] [[[D loro]:220 [T/fin [__:220 sta]]] PRG]]

24.
		Consume "v"

		[[D la(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D la(cl)] [[[D loro]:220 [T/fin [__:220 sta]]] PRG{v}]]

25.
		Consume "lava"

		[[D la(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D la(cl)] [[[D loro]:220 [T/fin [__:220 sta]]] PRG{v,V}]]

26.
	>>>	Trying candidate parse [[D la(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v,V}]] (2.)
		Checking surface conditions...
			Clitic [D la(cl)] right-incorporated to [[D la(cl)] [[[D loro]:220 [T/fin [__:220 sta]]] PRG{v,V}]]
		Reconstructing...
			Transferring [[D la(cl)] [[[D loro]:220 [T/fin [__:220 sta]]] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D la(cl)] [[[D loro]:220 [T/fin [__:220 sta]]] PRG{v,V}]].
					Extracted head "v{V}" from PRG and created [[D la(cl)] [[[D loro]:220 [T/fin [__:220 sta]]] [PRG v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D la(cl)] [[[D loro]:220 [T/fin [__:220 sta]]] [PRG [v lava]]]]
					=[[D la(cl)] [[[D loro]:220 [T/fin [__:220 sta]]] [PRG [v lava]]]]
				2. Feature processing:
					=[[D la(cl)] [[[D loro]:220 [T/fin [__:220 sta]]] [PRG [v lava]]]]
				3. Floater movement reconstruction:
					[D la(cl)] failed to tail [-VAL][ARG]
					Dropping [D la(cl)]
						<D la(cl)> was made an adjunct.
						Floater <D la(cl)> dropped.
						 = [<D la(cl)>:2 [[[D loro]:220 [T/fin [__:220 sta]]] [PRG [v [<DP>:2 lava]]]]]
					=[<D la(cl)>:2 [[[D loro]:220 [T/fin [__:220 sta]]] [PRG [v [<DP>:2 lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __sta " into memory buffer from SPEC of "PRG".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRG has unacceptable specifier [[D loro]:220 [T/fin [__:220 sta]]].
					Extraposition will be tried on [<D la(cl)>:2 [[[D loro]:220 [T/fin [__:220 sta]]] [PRG [v [<DP>:2 lava]]]]].
					=[<D la(cl)>:2 [[[D loro]:220 [T/fin [__:220 sta]]] [PRG [v [<DP>:2 lava]]]]]
				5. Agreement reconstruction:
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[<D la(cl)>:2 [[[D loro]:220 [T/fin [__:220 sta]]] [PRG [v [<DP>:2 lava]]]]]
			= [<D la(cl)> [[[D loro] [T/fin [[D loro] sta]]] [PRG [v [<D la(cl)> lava]]]]]
		Checking LF-interface conditions.
				PRG has unacceptable specifier [[D loro]:220 [T/fin [__:220 sta]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
la(cl): [N, D]
D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
sta: [V, TT/fin]
PRG: [INF]
v: [v, INF]
__: [D, v, INF]
__: [N, D, v, INF]
lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 110
['loro#lo', 'stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#lo.
		Next word contains multiple morphemes ['lo_', 'loro']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "lo(cl)"

		D + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D lo(cl)] D]

16.
		Consume "loro"

		[[D lo(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D lo(cl)] D{N}]

17.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D lo(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] <D loro>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D lo(cl)] [[D loro] T/fin]]

19.
		Consume "sta"

		[[D lo(cl)] [[D loro] T/fin]] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sta]
			=[[D lo(cl)] [[D loro] T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D lo(cl)] [[D loro] T/fin{V}]] + PRG
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] [? [[D loro] [T/fin [[D loro] sta]]]]] PRG] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D loro] T/fin{V}] + PRG = -98]
				T/fin{V} + PRG = 104]
		Ranking completed:
			1. [T/fin{V}; PRG]
			2. [[[D loro] T/fin{V}]; PRG]
		Exploring solution number (1) =[T/fin{V} PRG]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D lo(cl)] [[D loro] [T/fin{V} PRG]]]

21.
		Consume "v"

		[[D lo(cl)] [[D loro] [T/fin{V} PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D lo(cl)] [[D loro] [T/fin{V} PRG{v}]]]

22.
		Consume "lava"

		[[D lo(cl)] [[D loro] [T/fin{V} PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D lo(cl)] [[D loro] [T/fin{V} PRG{v,V}]]]

23.
	>>>	Trying candidate parse [[D lo(cl)] [[D loro] [T/fin{V} PRG{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] PRG]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "sta" from T/fin and created [[D loro] [T/fin sta]]
					=[[D loro] [T/fin sta]]
				2. Feature processing:
					=[[D loro] [T/fin sta]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of sta
					Result [[D loro] [T/fin [[D loro] sta]]]
					=[[D loro]:224 [T/fin [__:224 sta]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:224 [T/fin [__:224 sta]]]
			=[[D lo(cl)] [[[D loro]:224 [T/fin [__:224 sta]]] PRG]]

24.
		Consume "v"

		[[D lo(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRG*v]
			=[[D lo(cl)] [[[D loro]:224 [T/fin [__:224 sta]]] PRG{v}]]

25.
		Consume "lava"

		[[D lo(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRG{v}*lava]
			=[[D lo(cl)] [[[D loro]:224 [T/fin [__:224 sta]]] PRG{v,V}]]

26.
	>>>	Trying candidate parse [[D lo(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v,V}]] (2.)
		Checking surface conditions...
			Clitic [D lo(cl)] right-incorporated to [[D lo(cl)] [[[D loro]:224 [T/fin [__:224 sta]]] PRG{v,V}]]
		Reconstructing...
			Transferring [[D lo(cl)] [[[D loro]:224 [T/fin [__:224 sta]]] PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lo(cl)] [[[D loro]:224 [T/fin [__:224 sta]]] PRG{v,V}]].
					Extracted head "v{V}" from PRG and created [[D lo(cl)] [[[D loro]:224 [T/fin [__:224 sta]]] [PRG v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D lo(cl)] [[[D loro]:224 [T/fin [__:224 sta]]] [PRG [v lava]]]]
					=[[D lo(cl)] [[[D loro]:224 [T/fin [__:224 sta]]] [PRG [v lava]]]]
				2. Feature processing:
					=[[D lo(cl)] [[[D loro]:224 [T/fin [__:224 sta]]] [PRG [v lava]]]]
				3. Floater movement reconstruction:
					[D lo(cl)] failed to tail [-VAL][ARG]
					Dropping [D lo(cl)]
						<D lo(cl)> was made an adjunct.
						Floater <D lo(cl)> dropped.
						 = [<D lo(cl)>:3 [[[D loro]:224 [T/fin [__:224 sta]]] [PRG [v [<DP>:3 lava]]]]]
					=[<D lo(cl)>:3 [[[D loro]:224 [T/fin [__:224 sta]]] [PRG [v [<DP>:3 lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __sta " into memory buffer from SPEC of "PRG".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRG has unacceptable specifier [[D loro]:224 [T/fin [__:224 sta]]].
					Extraposition will be tried on [<D lo(cl)>:3 [[[D loro]:224 [T/fin [__:224 sta]]] [PRG [v [<DP>:3 lava]]]]].
					=[<D lo(cl)>:3 [[[D loro]:224 [T/fin [__:224 sta]]] [PRG [v [<DP>:3 lava]]]]]
				5. Agreement reconstruction:
					PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[<D lo(cl)>:3 [[[D loro]:224 [T/fin [__:224 sta]]] [PRG [v [<DP>:3 lava]]]]]
			= [<D lo(cl)> [[[D loro] [T/fin [[D loro] sta]]] [PRG [v [<D lo(cl)> lava]]]]]
		Checking LF-interface conditions.
				PRG has unacceptable specifier [[D loro]:224 [T/fin [__:224 sta]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
lo(cl): [N, D]
D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
sta: [V, TT/fin]
PRG: [INF]
v: [v, INF]
__: [D, v, INF]
__: [N, D, v, INF]
lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 111
['loro', 'la#hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

11.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "la(cl)"

		[[D loro] [T/fin{V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [[D la(cl)] T/prt{v,V}]]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [[D la(cl)] [T/prt v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]]
					=[[D loro] [T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [[D la(cl)] [T/prt [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [[D la(cl)] [T/prt [v lava]]]]]]]
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:119 [T/fin [__:119 [ha [[D la(cl)]:120 [T/prt [v [lava __:120]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:119 [T/fin [__:119 [ha [[D la(cl)]:120 [T/prt [v [lava __:120]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:F was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[D loro]:119 [T/fin [__:119 [ha [[D la(cl)]:120 [T/prt [v [lava __:120]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:119 [T/fin [__:119 [ha [[D la(cl)]:120 [T/prt [v [lava __:120]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				T/prt induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D la(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/prt 3. [D la(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] T/prt]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "la(cl)" from D and created [T/fin [ha [D la(cl)]]]
					=[T/fin [ha [D la(cl)]]]
				2. Feature processing:
					=[T/fin [ha [D la(cl)]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D la(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D la(cl)]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)].
					=[T/fin [ha [D la(cl)]]]
			=[[D loro] [[T/fin [ha [D la(cl)]]] T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[D loro] [[T/fin [ha [D la(cl)]]] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
					=[[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [D la(cl)]]] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D la(cl)]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:121 [? [[T/fin [ha [D la(cl)]]] [T/prt [__:121 [v lava]]]]]].
					=[[D loro]:121 [? [[T/fin [ha [D la(cl)]]] [T/prt [__:121 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 by phi-Agree from __:121.
					=[[D loro]:121 [? [[T/fin [ha [D la(cl)]]] [T/prt [__:121 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D la(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D la(cl)]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
la(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha D{N}]]]
					Extracted head "la(cl)" from D and created [[D loro] [T/fin [ha [D la(cl)]]]]
					=[[D loro] [T/fin [ha [D la(cl)]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]]
					=[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]]
			=[[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] [T/prt [v lava]]]
					=[[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unacceptable specifier [[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] [T/prt [v lava]]].
					=[[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]] [T/prt [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:122 [T/fin [__:122 [ha [D la(cl)]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:123 [T/fin [__:123 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:123 [T/fin [__:123 ha]]]
			=[[[D loro]:123 [T/fin [__:123 ha]]] D]

33.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:123 [T/fin [__:123 ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:123 [T/fin [__:123 ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:123 [T/fin [__:123 ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:123 [T/fin [__:123 ha]]] [[D la(cl)] T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:123 [T/fin [__:123 ha]]] [[D la(cl)] T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:123 [T/fin [__:123 ha]]] [[D la(cl)] T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:123 [T/fin [__:123 ha]]] D{N}] T/prt]
			Transferring [[[D loro]:123 [T/fin [__:123 ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:123 [T/fin [__:123 ha]]] D{N}].
					Extracted head "la(cl)" from D and created [[[D loro]:123 [T/fin [__:123 ha]]] [D la(cl)]]
					=[[[D loro]:123 [T/fin [__:123 ha]]] [D la(cl)]]
				2. Feature processing:
					=[[[D loro]:123 [T/fin [__:123 ha]]] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
					=[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>]
			=[[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] [T/prt [v lava]]]
					=[[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unacceptable specifier [[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] [T/prt [v lava]]].
					=[[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>] [T/prt [v lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[D loro]:123 [T/fin [__:123 ha]]] <D la(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D]
la(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 112
['loro', 'mi#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]]

27.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]]

28.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]]

29.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [[D mi(cl)] T/prt{v,V}]]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [[D mi(cl)] [T/prt v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]]
					=[[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v lava]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:128 [T/fin [__:128 [ha [[D mi(cl)]:129 [T/prt [v [lava __:129]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:128 [T/fin [__:128 [ha [[D mi(cl)]:129 [T/prt [v [lava __:129]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:M was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:1 from the edge of T/prt.
					=[[D loro]:128 [T/fin [__:128 [ha [[D mi(cl)]:129 [T/prt [v [lava __:129]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:128 [T/fin [__:128 [ha [[D mi(cl)]:129 [T/prt [v [lava __:129]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				T/prt induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/prt 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] T/prt]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "mi(cl)" from D and created [T/fin [ha [D mi(cl)]]]
					=[T/fin [ha [D mi(cl)]]]
				2. Feature processing:
					=[T/fin [ha [D mi(cl)]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D mi(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D mi(cl)]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)].
					=[T/fin [ha [D mi(cl)]]]
			=[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt]]

30.
		Consume "v"

		[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v}]]

31.
		Consume "lava"

		[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v,V}]]

32.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[D loro] [[T/fin [ha [D mi(cl)]]] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [D mi(cl)]]] [T/prt [v lava]]]]
					=[[D loro] [[T/fin [ha [D mi(cl)]]] [T/prt [v lava]]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [D mi(cl)]]] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [D mi(cl)]]] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D mi(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [D mi(cl)]]] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D mi(cl)]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:130 [? [[T/fin [ha [D mi(cl)]]] [T/prt [__:130 [v lava]]]]]].
					=[[D loro]:130 [? [[T/fin [ha [D mi(cl)]]] [T/prt [__:130 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from __:130.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N by phi-Agree from __:130.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL by phi-Agree from __:130.
					T/prt acquired PHI:PER:3 by phi-Agree from __:130.
					=[[D loro]:130 [? [[T/fin [ha [D mi(cl)]]] [T/prt [__:130 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D mi(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D mi(cl)]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
mi(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha D{N}]]]
					Extracted head "mi(cl)" from D and created [[D loro] [T/fin [ha [D mi(cl)]]]]
					=[[D loro] [T/fin [ha [D mi(cl)]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [D mi(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [D mi(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]]
					=[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]]
			=[[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] T/prt]

33.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] T/prt{v}]

34.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] T/prt{v,V}]

35.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
					=[[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unacceptable specifier [[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] [T/prt [v lava]]].
					=[[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]] [T/prt [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:131 [T/fin [__:131 [ha [D mi(cl)]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:132 [T/fin [__:132 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:132 [T/fin [__:132 ha]]]
			=[[[D loro]:132 [T/fin [__:132 ha]]] D]

36.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:132 [T/fin [__:132 ha]]] D{N}]

37.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:132 [T/fin [__:132 ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:132 [T/fin [__:132 ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[D loro]:132 [T/fin [__:132 ha]]] [[D mi(cl)] T/prt]]

44.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:132 [T/fin [__:132 ha]]] [[D mi(cl)] T/prt{v}]]

45.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:132 [T/fin [__:132 ha]]] [[D mi(cl)] T/prt{v,V}]]

46.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:132 [T/fin [__:132 ha]]] D{N}] T/prt]
			Transferring [[[D loro]:132 [T/fin [__:132 ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:132 [T/fin [__:132 ha]]] D{N}].
					Extracted head "mi(cl)" from D and created [[[D loro]:132 [T/fin [__:132 ha]]] [D mi(cl)]]
					=[[[D loro]:132 [T/fin [__:132 ha]]] [D mi(cl)]]
				2. Feature processing:
					=[[[D loro]:132 [T/fin [__:132 ha]]] [D mi(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D mi(cl)> was made an adjunct.
					Dropping <D mi(cl)>
					=[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>]
			=[[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] T/prt]

47.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] T/prt{v}]

48.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] T/prt{v,V}]

49.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] [T/prt [v lava]]]
					=[[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unacceptable specifier [[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] [T/prt [v lava]]].
					=[[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>] [T/prt [v lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[D loro]:132 [T/fin [__:132 ha]]] <D mi(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D]
mi(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 113
['loro', 'lo#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word lo#hanno.
		Next word contains multiple morphemes ['hanno_', 'lo']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

11.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D loro] [T/fin{V} [[D lo(cl)] T/prt]]]

27.
		Consume "v"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v}]]]

28.
		Consume "lava"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]]

29.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [[D lo(cl)] T/prt{v,V}]]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [[D lo(cl)] [T/prt v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [[D lo(cl)] [T/prt [v lava]]]]]]
					=[[D loro] [T/fin [ha [[D lo(cl)] [T/prt [v lava]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [[D lo(cl)] [T/prt [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [[D lo(cl)] [T/prt [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [[D lo(cl)] [T/prt [v lava]]]]]]]
					Moving "D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:137 [T/fin [__:137 [ha [[D lo(cl)]:138 [T/prt [v [lava __:138]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:137 [T/fin [__:137 [ha [[D lo(cl)]:138 [T/prt [v [lava __:138]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:M was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[D loro]:137 [T/fin [__:137 [ha [[D lo(cl)]:138 [T/prt [v [lava __:138]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:137 [T/fin [__:137 [ha [[D lo(cl)]:138 [T/prt [v [lava __:138]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				T/prt induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D lo(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/prt 3. [D lo(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] T/prt]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "lo(cl)" from D and created [T/fin [ha [D lo(cl)]]]
					=[T/fin [ha [D lo(cl)]]]
				2. Feature processing:
					=[T/fin [ha [D lo(cl)]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D lo(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D lo(cl)]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					=[T/fin [ha [D lo(cl)]]]
			=[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt]]

30.
		Consume "v"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v}]]

31.
		Consume "lava"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]]

32.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
					=[[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [D lo(cl)]]] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D lo(cl)]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:139 [? [[T/fin [ha [D lo(cl)]]] [T/prt [__:139 [v lava]]]]]].
					=[[D loro]:139 [? [[T/fin [ha [D lo(cl)]]] [T/prt [__:139 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from __:139.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N by phi-Agree from __:139.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL by phi-Agree from __:139.
					T/prt acquired PHI:PER:3 by phi-Agree from __:139.
					=[[D loro]:139 [? [[T/fin [ha [D lo(cl)]]] [T/prt [__:139 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D lo(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D lo(cl)]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
lo(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha D{N}]]]
					Extracted head "lo(cl)" from D and created [[D loro] [T/fin [ha [D lo(cl)]]]]
					=[[D loro] [T/fin [ha [D lo(cl)]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [D lo(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [D lo(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]]
					=[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]]
			=[[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] T/prt]

33.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] T/prt{v}]

34.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] T/prt{v,V}]

35.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
					=[[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unacceptable specifier [[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] [T/prt [v lava]]].
					=[[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:140 [T/fin [__:140 [ha [D lo(cl)]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:141 [T/fin [__:141 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:141 [T/fin [__:141 ha]]]
			=[[[D loro]:141 [T/fin [__:141 ha]]] D]

36.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:141 [T/fin [__:141 ha]]] D{N}]

37.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:141 [T/fin [__:141 ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:141 [T/fin [__:141 ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[[D loro]:141 [T/fin [__:141 ha]]] [[D lo(cl)] T/prt]]

44.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:141 [T/fin [__:141 ha]]] [[D lo(cl)] T/prt{v}]]

45.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:141 [T/fin [__:141 ha]]] [[D lo(cl)] T/prt{v,V}]]

46.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:141 [T/fin [__:141 ha]]] D{N}] T/prt]
			Transferring [[[D loro]:141 [T/fin [__:141 ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:141 [T/fin [__:141 ha]]] D{N}].
					Extracted head "lo(cl)" from D and created [[[D loro]:141 [T/fin [__:141 ha]]] [D lo(cl)]]
					=[[[D loro]:141 [T/fin [__:141 ha]]] [D lo(cl)]]
				2. Feature processing:
					=[[[D loro]:141 [T/fin [__:141 ha]]] [D lo(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D lo(cl)> was made an adjunct.
					Dropping <D lo(cl)>
					=[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>]
			=[[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] T/prt]

47.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] T/prt{v}]

48.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] T/prt{v,V}]

49.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] [T/prt [v lava]]]
					=[[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unacceptable specifier [[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] [T/prt [v lava]]].
					=[[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>] [T/prt [v lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[D loro]:141 [T/fin [__:141 ha]]] <D lo(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D]
lo(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 114
['loro', 'hanno', 'la#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word la#lavato.
		Next word contains multiple morphemes ['lavato_', 'la']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

15.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

17.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 65]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

25.
		Consume "la(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[T/fin [ha [T/prt [v lava]]]]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]]

27.
		Consume "la(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [T/prt [v lava]]]]]
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:146 [T/fin [__:146 [ha [T/prt [v lava]]]]]].
					=[[D loro]:146 [T/fin [__:146 [ha [T/prt [v lava]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[D loro]:146 [T/fin [__:146 [ha [T/prt [v lava]]]]]]
			=[[[D loro]:146 [T/fin [__:146 [ha [T/prt [v lava]]]]]] D]

29.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:146 [T/fin [__:146 [ha [T/prt [v lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:147 [T/fin [__:147 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:147 [T/fin [__:147 ha]]]
			=[[[D loro]:147 [T/fin [__:147 ha]]] T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:147 [T/fin [__:147 ha]]] T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:147 [T/fin [__:147 ha]]] T/prt{v,V}]

33.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:147 [T/fin [__:147 ha]]].
				"lava" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:147 [T/fin [__:147 ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 158]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:147 [T/fin [__:147 ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:147 [T/fin [__:147 ha]]] [T/prt{v,V} D]]

41.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:147 [T/fin [__:147 ha]]] [T/prt{v,V} D{N}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:147 [T/fin [__:147 ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:147 [T/fin [__:147 ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:147 [T/fin [__:147 ha]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:147 [T/fin [__:147 ha]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:147 [T/fin [__:147 ha]]] [T/prt [v lava]]]
					=[[[D loro]:147 [T/fin [__:147 ha]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:147 [T/fin [__:147 ha]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:147 [T/fin [__:147 ha]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:147 [T/fin [__:147 ha]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:147 [T/fin [__:147 ha]]] [T/prt [v lava]]].
					=[[[D loro]:147 [T/fin [__:147 ha]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:147 [T/fin [__:147 ha]]] [T/prt [v lava]]]
			=[[[[D loro]:147 [T/fin [__:147 ha]]] [T/prt [v lava]]] D]

43.
		Consume "la(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[[D loro]:147 [T/fin [__:147 ha]]] [T/prt [v lava]]] D{N}]

44.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 115
['loro', 'hanno', 'lo#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lo#lavato.
		Next word contains multiple morphemes ['lavato_', 'lo']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

15.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

17.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 65]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

25.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[T/fin [ha [T/prt [v lava]]]]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]]

27.
		Consume "lo(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [T/prt [v lava]]]]]
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:152 [T/fin [__:152 [ha [T/prt [v lava]]]]]].
					=[[D loro]:152 [T/fin [__:152 [ha [T/prt [v lava]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[D loro]:152 [T/fin [__:152 [ha [T/prt [v lava]]]]]]
			=[[[D loro]:152 [T/fin [__:152 [ha [T/prt [v lava]]]]]] D]

29.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:152 [T/fin [__:152 [ha [T/prt [v lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:153 [T/fin [__:153 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:153 [T/fin [__:153 ha]]]
			=[[[D loro]:153 [T/fin [__:153 ha]]] T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:153 [T/fin [__:153 ha]]] T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:153 [T/fin [__:153 ha]]] T/prt{v,V}]

33.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:153 [T/fin [__:153 ha]]].
				"lava" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:153 [T/fin [__:153 ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 158]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:153 [T/fin [__:153 ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:153 [T/fin [__:153 ha]]] [T/prt{v,V} D]]

41.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:153 [T/fin [__:153 ha]]] [T/prt{v,V} D{N}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:153 [T/fin [__:153 ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:153 [T/fin [__:153 ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:153 [T/fin [__:153 ha]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:153 [T/fin [__:153 ha]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:153 [T/fin [__:153 ha]]] [T/prt [v lava]]]
					=[[[D loro]:153 [T/fin [__:153 ha]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:153 [T/fin [__:153 ha]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:153 [T/fin [__:153 ha]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:153 [T/fin [__:153 ha]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:153 [T/fin [__:153 ha]]] [T/prt [v lava]]].
					=[[[D loro]:153 [T/fin [__:153 ha]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:153 [T/fin [__:153 ha]]] [T/prt [v lava]]]
			=[[[[D loro]:153 [T/fin [__:153 ha]]] [T/prt [v lava]]] D]

43.
		Consume "lo(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[[D loro]:153 [T/fin [__:153 ha]]] [T/prt [v lava]]] D{N}]

44.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 116
['loro', 'hanno', 'lavato#la']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lavato#la.
		Next word contains multiple morphemes ['la_', 'lavato']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "la(cl)"

		[[D loro] [T/fin{V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] T/prt]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "la(cl)" from D and created [T/fin [ha [D la(cl)]]]
					=[T/fin [ha [D la(cl)]]]
				2. Feature processing:
					=[T/fin [ha [D la(cl)]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D la(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D la(cl)]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)].
					=[T/fin [ha [D la(cl)]]]
			=[[D loro] [[T/fin [ha [D la(cl)]]] T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[D loro] [[T/fin [ha [D la(cl)]]] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
					=[[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [D la(cl)]]] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [D la(cl)]]] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D la(cl)]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:158 [? [[T/fin [ha [D la(cl)]]] [T/prt [__:158 [v lava]]]]]].
					=[[D loro]:158 [? [[T/fin [ha [D la(cl)]]] [T/prt [__:158 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 by phi-Agree from __:158.
					=[[D loro]:158 [? [[T/fin [ha [D la(cl)]]] [T/prt [__:158 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D la(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D la(cl)]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
la(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha D{N}]]]
					Extracted head "la(cl)" from D and created [[D loro] [T/fin [ha [D la(cl)]]]]
					=[[D loro] [T/fin [ha [D la(cl)]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]]
					=[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]]
			=[[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] [T/prt [v lava]]]
					=[[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unacceptable specifier [[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] [T/prt [v lava]]].
					=[[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]] [T/prt [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:159 [T/fin [__:159 [ha [D la(cl)]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:160 [T/fin [__:160 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:160 [T/fin [__:160 ha]]]
			=[[[D loro]:160 [T/fin [__:160 ha]]] D]

33.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:160 [T/fin [__:160 ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:160 [T/fin [__:160 ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:160 [T/fin [__:160 ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:160 [T/fin [__:160 ha]]] [[D la(cl)] T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:160 [T/fin [__:160 ha]]] [[D la(cl)] T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:160 [T/fin [__:160 ha]]] [[D la(cl)] T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:160 [T/fin [__:160 ha]]] D{N}] T/prt]
			Transferring [[[D loro]:160 [T/fin [__:160 ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:160 [T/fin [__:160 ha]]] D{N}].
					Extracted head "la(cl)" from D and created [[[D loro]:160 [T/fin [__:160 ha]]] [D la(cl)]]
					=[[[D loro]:160 [T/fin [__:160 ha]]] [D la(cl)]]
				2. Feature processing:
					=[[[D loro]:160 [T/fin [__:160 ha]]] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
					=[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>]
			=[[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] [T/prt [v lava]]]
					=[[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unacceptable specifier [[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] [T/prt [v lava]]].
					=[[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>] [T/prt [v lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[D loro]:160 [T/fin [__:160 ha]]] <D la(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D]
la(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 117
['loro', 'hanno', 'lavato#lo']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lavato#lo.
		Next word contains multiple morphemes ['lo_', 'lavato']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D loro] [T/fin{V} [[D lo(cl)] T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] T/prt]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "lo(cl)" from D and created [T/fin [ha [D lo(cl)]]]
					=[T/fin [ha [D lo(cl)]]]
				2. Feature processing:
					=[T/fin [ha [D lo(cl)]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D lo(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D lo(cl)]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					=[T/fin [ha [D lo(cl)]]]
			=[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
					=[[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [D lo(cl)]]] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [D lo(cl)]]] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D lo(cl)]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:165 [? [[T/fin [ha [D lo(cl)]]] [T/prt [__:165 [v lava]]]]]].
					=[[D loro]:165 [? [[T/fin [ha [D lo(cl)]]] [T/prt [__:165 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 by phi-Agree from __:165.
					=[[D loro]:165 [? [[T/fin [ha [D lo(cl)]]] [T/prt [__:165 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D lo(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [D lo(cl)]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
lo(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} D{N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha D{N}]]]
					Extracted head "lo(cl)" from D and created [[D loro] [T/fin [ha [D lo(cl)]]]]
					=[[D loro] [T/fin [ha [D lo(cl)]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [D lo(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [D lo(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]]
					=[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]]
			=[[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
					=[[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unacceptable specifier [[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] [T/prt [v lava]]].
					=[[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]] [T/prt [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:166 [T/fin [__:166 [ha [D lo(cl)]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:167 [T/fin [__:167 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:167 [T/fin [__:167 ha]]]
			=[[[D loro]:167 [T/fin [__:167 ha]]] D]

33.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:167 [T/fin [__:167 ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:167 [T/fin [__:167 ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:167 [T/fin [__:167 ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[[D loro]:167 [T/fin [__:167 ha]]] [[D lo(cl)] T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:167 [T/fin [__:167 ha]]] [[D lo(cl)] T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:167 [T/fin [__:167 ha]]] [[D lo(cl)] T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:167 [T/fin [__:167 ha]]] D{N}] T/prt]
			Transferring [[[D loro]:167 [T/fin [__:167 ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:167 [T/fin [__:167 ha]]] D{N}].
					Extracted head "lo(cl)" from D and created [[[D loro]:167 [T/fin [__:167 ha]]] [D lo(cl)]]
					=[[[D loro]:167 [T/fin [__:167 ha]]] [D lo(cl)]]
				2. Feature processing:
					=[[[D loro]:167 [T/fin [__:167 ha]]] [D lo(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D lo(cl)> was made an adjunct.
					Dropping <D lo(cl)>
					=[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>]
			=[[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] [T/prt [v lava]]]
					=[[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unacceptable specifier [[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] [T/prt [v lava]]].
					=[[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>] [T/prt [v lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[D loro]:167 [T/fin [__:167 ha]]] <D lo(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D]
lo(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 118
['mi#hanno', 'loro', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

5.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "mi(cl)"

		[T/fin{V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + D = -98]
				D{N} + D = 104]
		Ranking completed:
			1. [D{N}; D]
			2. [[T/fin{V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[T/fin{V} [[D mi(cl)] D]]

19.
		Consume "loro"

		[T/fin{V} [[D mi(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[T/fin{V} [[D mi(cl)] D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} [[D mi(cl)] D{N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[T/fin [ha [[D mi(cl)] <D loro>]]] T/prt] due to bad left branch.
				Reject [[[D mi(cl)] <D loro>] T/prt] due to bad left branch.
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[T/fin{V} [[D mi(cl)] [[D loro] T/prt]]]

24.
		Consume "v"

		[T/fin{V} [[D mi(cl)] [[D loro] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} [[D mi(cl)] [[D loro] T/prt{v}]]]

25.
		Consume "lava"

		[T/fin{V} [[D mi(cl)] [[D loro] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} [[D mi(cl)] [[D loro] T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [T/fin{V} [[D mi(cl)] [[D loro] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [T/fin{V} [[D mi(cl)] [[D loro] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D mi(cl)] [[D loro] T/prt{v,V}]]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [[D mi(cl)] [[D loro] T/prt{v,V}]]]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [[D mi(cl)] [[D loro] [T/prt v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [[D mi(cl)] [[D loro] [T/prt [v lava]]]]]]
					=[T/fin [ha [[D mi(cl)] [[D loro] [T/prt [v lava]]]]]]
				2. Feature processing:
					=[T/fin [ha [[D mi(cl)] [[D loro] [T/prt [v lava]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [[D mi(cl)] [[D loro] [T/prt [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					Moving "D mi(cl) " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [T/fin [ha [[D mi(cl)] [? [[D loro] [T/prt [[D loro] [v lava]]]]]]]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [ha [[D mi(cl)]:169 [? [[D loro]:168 [T/prt [__:168 [v [lava __:169]]]]]]]]]
					Remaining items in memory buffer: []
					An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [T/fin [ha [[D mi(cl)]:169 [? [[D loro]:168 [T/prt [__:168 [v [lava __:169]]]]]]]]].
					=[T/fin [ha [[D mi(cl)]:169 [? [[D loro]:168 [T/prt [__:168 [v [lava __:169]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:169.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N from the edge of T/prt.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[T/fin [ha [[D mi(cl)]:169 [? [[D loro]:168 [T/prt [__:168 [v [lava __:169]]]]]]]]]
			= [T/fin [ha [[D mi(cl)] [? [[D loro] [T/prt [[D loro] [v [lava [D mi(cl)]]]]]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
?: [?, V, TT/fin]
D: [D, ?, V, TT/fin]
loro: [N, D, ?, V, TT/fin]
T/prt: [T, ?, V, TT/fin]
__: [D, T, ?, V, TT/fin]
__: [N, D, T, ?, V, TT/fin]
v: [v, T, ?, V, TT/fin]
lava: [V, v, T, ?, V, TT/fin]
__: [D, V, v, T, ?, V, TT/fin]
__: [N, D, V, v, T, ?, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] D]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "mi(cl)" from D and created [T/fin [ha [D mi(cl)]]]
					=[T/fin [ha [D mi(cl)]]]
				2. Feature processing:
					=[T/fin [ha [D mi(cl)]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D mi(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D mi(cl)]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)].
					=[T/fin [ha [D mi(cl)]]]
			=[[T/fin [ha [D mi(cl)]]] D]

27.
		Consume "loro"

		[[T/fin [ha [D mi(cl)]]] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[T/fin [ha [D mi(cl)]]] D{N}]

28.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[T/fin [ha [D mi(cl)]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[T/fin [ha [D mi(cl)]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[T/fin [ha [D mi(cl)]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[T/fin [ha [D mi(cl)]]] [[D loro] T/prt]]

32.
		Consume "v"

		[[T/fin [ha [D mi(cl)]]] [[D loro] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[T/fin [ha [D mi(cl)]]] [[D loro] T/prt{v}]]

33.
		Consume "lava"

		[[T/fin [ha [D mi(cl)]]] [[D loro] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[T/fin [ha [D mi(cl)]]] [[D loro] T/prt{v,V}]]

34.
	>>>	Trying candidate parse [[T/fin [ha [D mi(cl)]]] [[D loro] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[T/fin [ha [D mi(cl)]]] [[D loro] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[T/fin [ha [D mi(cl)]]] [[D loro] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[T/fin [ha [D mi(cl)]]] [[D loro] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[T/fin [ha [D mi(cl)]]] [[D loro] [T/prt [v lava]]]]
					=[[T/fin [ha [D mi(cl)]]] [[D loro] [T/prt [v lava]]]]
				2. Feature processing:
					=[[T/fin [ha [D mi(cl)]]] [[D loro] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[T/fin [ha [D mi(cl)]]] [[D loro] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					Moving "T/fin ha D mi(cl) " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [TT/fin [V [D N]]]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[T/fin [ha [D mi(cl)]]] [? [[D loro] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
					Extraposition will be tried on [[T/fin [ha [D mi(cl)]]] [? [[D loro]:170 [T/prt [__:170 [v lava]]]]]].
					=[[T/fin [ha [D mi(cl)]]] [? [[D loro]:170 [T/prt [__:170 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N from the edge of T/prt.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[T/fin [ha [D mi(cl)]]] [? [[D loro]:170 [T/prt [__:170 [v lava]]]]]]
			= [[T/fin [ha [D mi(cl)]]] [? [[D loro] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
?: [?]
D: [D, ?]
loro: [N, D, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [ha [D mi(cl)]]] D{N}] T/prt]
			Transferring [[T/fin [ha [D mi(cl)]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[T/fin [ha [D mi(cl)]]] D{N}].
					Extracted head "loro" from D and created [[T/fin [ha [D mi(cl)]]] [D loro]]
					=[[T/fin [ha [D mi(cl)]]] [D loro]]
				2. Feature processing:
					=[[T/fin [ha [D mi(cl)]]] [D loro]]
				3. Floater movement reconstruction:
					=[[T/fin [ha [D mi(cl)]]] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [T/fin [ha [D mi(cl)]]].
					Extraposition will be tried on [[T/fin [ha [D mi(cl)]]] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[T/fin [ha [D mi(cl)]]] <D loro>]
				5. Agreement reconstruction:
					=[[T/fin [ha [D mi(cl)]]] <D loro>]
			=[[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt]

35.
		Consume "v"

		[[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt{v}]

36.
		Consume "lava"

		[[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt{v,V}]

37.
	>>>	Trying candidate parse [[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[T/fin [ha [D mi(cl)]]] <D loro>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[T/fin [ha [D mi(cl)]]] <D loro>] [T/prt [v lava]]]
					=[[[T/fin [ha [D mi(cl)]]] <D loro>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[T/fin [ha [D mi(cl)]]] <D loro>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[T/fin [ha [D mi(cl)]]] <D loro>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D mi(cl) D loro " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[TT/fin [V [D N]]] [D N]]]
				T/prt has unacceptable specifier [[T/fin [ha [D mi(cl)]]] <D loro>].
				"lava" lacks complement.
					Extraposition will be tried on [[[T/fin [ha [D mi(cl)]]] <D loro>] [T/prt [v lava]]].
					=[[[T/fin [ha [D mi(cl)]]] <D loro>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					=[[[T/fin [ha [D mi(cl)]]] <D loro>] [T/prt [v lava]]]
			= [[[T/fin [ha [D mi(cl)]]] <D loro>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[T/fin [ha [D mi(cl)]]] <D loro>].
				"lava" lacks complement.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
D: [D]
loro: [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 119
['la#hanno', 'loro', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

5.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "la(cl)"

		[T/fin{V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + D = -98]
				D{N} + D = 104]
		Ranking completed:
			1. [D{N}; D]
			2. [[T/fin{V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[T/fin{V} [[D la(cl)] D]]

19.
		Consume "loro"

		[T/fin{V} [[D la(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[T/fin{V} [[D la(cl)] D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} [[D la(cl)] D{N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[T/fin [ha [[D la(cl)] <D loro>]]] T/prt] due to bad left branch.
				Reject [[[D la(cl)] <D loro>] T/prt] due to bad left branch.
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[T/fin{V} [[D la(cl)] [[D loro] T/prt]]]

27.
		Consume "v"

		[T/fin{V} [[D la(cl)] [[D loro] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} [[D la(cl)] [[D loro] T/prt{v}]]]

28.
		Consume "lava"

		[T/fin{V} [[D la(cl)] [[D loro] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} [[D la(cl)] [[D loro] T/prt{v,V}]]]

29.
	>>>	Trying candidate parse [T/fin{V} [[D la(cl)] [[D loro] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [T/fin{V} [[D la(cl)] [[D loro] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D la(cl)] [[D loro] T/prt{v,V}]]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [[D la(cl)] [[D loro] T/prt{v,V}]]]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [[D la(cl)] [[D loro] [T/prt v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [[D la(cl)] [[D loro] [T/prt [v lava]]]]]]
					=[T/fin [ha [[D la(cl)] [[D loro] [T/prt [v lava]]]]]]
				2. Feature processing:
					=[T/fin [ha [[D la(cl)] [[D loro] [T/prt [v lava]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [[D la(cl)] [[D loro] [T/prt [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [T/fin [ha [[D la(cl)] [? [[D loro] [T/prt [[D loro] [v lava]]]]]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [ha [[D la(cl)]:172 [? [[D loro]:171 [T/prt [__:171 [v [lava __:172]]]]]]]]]
					Remaining items in memory buffer: []
					An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [T/fin [ha [[D la(cl)]:172 [? [[D loro]:171 [T/prt [__:171 [v [lava __:172]]]]]]]]].
					=[T/fin [ha [[D la(cl)]:172 [? [[D loro]:171 [T/prt [__:171 [v [lava __:172]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)]:172.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N from the edge of T/prt.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[T/fin [ha [[D la(cl)]:172 [? [[D loro]:171 [T/prt [__:171 [v [lava __:172]]]]]]]]]
			= [T/fin [ha [[D la(cl)] [? [[D loro] [T/prt [[D loro] [v [lava [D la(cl)]]]]]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
?: [?, V, TT/fin]
D: [D, ?, V, TT/fin]
loro: [N, D, ?, V, TT/fin]
T/prt: [T, ?, V, TT/fin]
__: [D, T, ?, V, TT/fin]
__: [N, D, T, ?, V, TT/fin]
v: [v, T, ?, V, TT/fin]
lava: [V, v, T, ?, V, TT/fin]
__: [D, V, v, T, ?, V, TT/fin]
__: [N, D, V, v, T, ?, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] D]
			Transferring [T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha D{N}]]
					Extracted head "la(cl)" from D and created [T/fin [ha [D la(cl)]]]
					=[T/fin [ha [D la(cl)]]]
				2. Feature processing:
					=[T/fin [ha [D la(cl)]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [D la(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [D la(cl)]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)].
					=[T/fin [ha [D la(cl)]]]
			=[[T/fin [ha [D la(cl)]]] D]

30.
		Consume "loro"

		[[T/fin [ha [D la(cl)]]] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[T/fin [ha [D la(cl)]]] D{N}]

31.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[T/fin [ha [D la(cl)]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[T/fin [ha [D la(cl)]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[T/fin [ha [D la(cl)]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[T/fin [ha [D la(cl)]]] [[D loro] T/prt]]

38.
		Consume "v"

		[[T/fin [ha [D la(cl)]]] [[D loro] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[T/fin [ha [D la(cl)]]] [[D loro] T/prt{v}]]

39.
		Consume "lava"

		[[T/fin [ha [D la(cl)]]] [[D loro] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[T/fin [ha [D la(cl)]]] [[D loro] T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[T/fin [ha [D la(cl)]]] [[D loro] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[T/fin [ha [D la(cl)]]] [[D loro] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[T/fin [ha [D la(cl)]]] [[D loro] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[T/fin [ha [D la(cl)]]] [[D loro] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[T/fin [ha [D la(cl)]]] [[D loro] [T/prt [v lava]]]]
					=[[T/fin [ha [D la(cl)]]] [[D loro] [T/prt [v lava]]]]
				2. Feature processing:
					=[[T/fin [ha [D la(cl)]]] [[D loro] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[T/fin [ha [D la(cl)]]] [[D loro] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					Moving "T/fin ha D la(cl) " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [TT/fin [V [D N]]]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[T/fin [ha [D la(cl)]]] [? [[D loro] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
					Extraposition will be tried on [[T/fin [ha [D la(cl)]]] [? [[D loro]:173 [T/prt [__:173 [v lava]]]]]].
					=[[T/fin [ha [D la(cl)]]] [? [[D loro]:173 [T/prt [__:173 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N from the edge of T/prt.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[T/fin [ha [D la(cl)]]] [? [[D loro]:173 [T/prt [__:173 [v lava]]]]]]
			= [[T/fin [ha [D la(cl)]]] [? [[D loro] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
?: [?]
D: [D, ?]
loro: [N, D, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [ha [D la(cl)]]] D{N}] T/prt]
			Transferring [[T/fin [ha [D la(cl)]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[T/fin [ha [D la(cl)]]] D{N}].
					Extracted head "loro" from D and created [[T/fin [ha [D la(cl)]]] [D loro]]
					=[[T/fin [ha [D la(cl)]]] [D loro]]
				2. Feature processing:
					=[[T/fin [ha [D la(cl)]]] [D loro]]
				3. Floater movement reconstruction:
					=[[T/fin [ha [D la(cl)]]] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [T/fin [ha [D la(cl)]]].
					Extraposition will be tried on [[T/fin [ha [D la(cl)]]] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[T/fin [ha [D la(cl)]]] <D loro>]
				5. Agreement reconstruction:
					=[[T/fin [ha [D la(cl)]]] <D loro>]
			=[[[T/fin [ha [D la(cl)]]] <D loro>] T/prt]

41.
		Consume "v"

		[[[T/fin [ha [D la(cl)]]] <D loro>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[T/fin [ha [D la(cl)]]] <D loro>] T/prt{v}]

42.
		Consume "lava"

		[[[T/fin [ha [D la(cl)]]] <D loro>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[T/fin [ha [D la(cl)]]] <D loro>] T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[T/fin [ha [D la(cl)]]] <D loro>] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[T/fin [ha [D la(cl)]]] <D loro>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[T/fin [ha [D la(cl)]]] <D loro>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[T/fin [ha [D la(cl)]]] <D loro>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[T/fin [ha [D la(cl)]]] <D loro>] [T/prt [v lava]]]
					=[[[T/fin [ha [D la(cl)]]] <D loro>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[T/fin [ha [D la(cl)]]] <D loro>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[T/fin [ha [D la(cl)]]] <D loro>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D la(cl) D loro " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[TT/fin [V [D N]]] [D N]]]
				T/prt has unacceptable specifier [[T/fin [ha [D la(cl)]]] <D loro>].
				"lava" lacks complement.
					Extraposition will be tried on [[[T/fin [ha [D la(cl)]]] <D loro>] [T/prt [v lava]]].
					=[[[T/fin [ha [D la(cl)]]] <D loro>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[T/fin [ha [D la(cl)]]] <D loro>] [T/prt [v lava]]]
			= [[[T/fin [ha [D la(cl)]]] <D loro>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[T/fin [ha [D la(cl)]]] <D loro>].
				"lava" lacks complement.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
D: [D]
loro: [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 120
['mi#devono', 'loro', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#devono.
		Next word contains multiple morphemes ['devono_', 'mi']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=deva

4.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[deva D]

12.
		Consume "mi(cl)"

		[deva D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[deva D{N}]

13.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D mi(cl)>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[deva [[D mi(cl)] D]]

18.
		Consume "loro"

		[deva [[D mi(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[deva [[D mi(cl)] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D mi(cl)] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva [[D mi(cl)] <D loro>]] are] due to bad left branch.
				Reject [[[D mi(cl)] <D loro>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[deva [[D mi(cl)] [[D loro] are]]]

20.
		Consume "v"

		[deva [[D mi(cl)] [[D loro] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[deva [[D mi(cl)] [[D loro] are{v}]]]

21.
		Consume "lava"

		[deva [[D mi(cl)] [[D loro] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[deva [[D mi(cl)] [[D loro] are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D mi(cl)] [[D loro] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] left-incorporated to deva
		Reconstructing...
			Transferring [deva [[D mi(cl)] [[D loro] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [deva [[D mi(cl)] [[D loro] are{v,V}]]].
					Extracted head "v{V}" from are and created [deva [[D mi(cl)] [[D loro] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [deva [[D mi(cl)] [[D loro] [are [v lava]]]]]
					=[deva [[D mi(cl)] [[D loro] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[deva [[D mi(cl)] [[D loro] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D mi(cl)] failed to tail [-VAL][ARG]
					Dropping [D mi(cl)]
						<D mi(cl)> was made an adjunct.
						Floater <D mi(cl)> dropped.
						 = [deva [<D mi(cl)>:7 [[D loro] [are [v [<DP>:7 lava]]]]]]
					=[deva [<D mi(cl)>:7 [[D loro] [are [v [<DP>:7 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [deva [<D mi(cl)>:7 [[D loro] [are [[D loro] [v [<DP>:7 lava]]]]]]]
					=[deva [<D mi(cl)>:7 [[D loro]:174 [are [__:174 [v [<DP>:7 lava]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					deva acquired PHI:GEN:M by phi-Agree from <D mi(cl)>:7.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[deva [<D mi(cl)>:7 [[D loro]:174 [are [__:174 [v [<DP>:7 lava]]]]]]]
			= [deva [<D mi(cl)> [[D loro] [are [[D loro] [v [<D mi(cl)> lava]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [deva [<D mi(cl)>:7 [[D loro]:174 [are [__:174 [v [<DP>:7 lava]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. <D mi(cl)> 4. deva )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mi(cl)>    (alternatives: 2. [D loro] 3. [D loro] 4. <D mi(cl)> 5. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D mi(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[deva [<D mi(cl)> [[D loro] [are [[D loro] [v [<D mi(cl)> lava]]]]]]]
		Grammar: [deva [<D mi(cl)>:1 [[D loro]:2 [are [__:2 [v [<DP>:1 lava]]]]]]]
		Spellout TT/finP = [TT/fin [DP:1 [DP:2 [INF [__:2 [v [__:1 V]]]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva: [TT/fin]
D: [D, TT/fin]
mi(cl): [N, D, TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 121
['devono', 'loro', 'lavare#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=deva

3.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[deva D]

8.
		Consume "loro"

		[deva D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[deva D{N}]

9.
		Decomposing a polymorphemic word lavare#mi.
		Next word contains multiple morphemes ['mi_', 'lavare']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D loro>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[deva [[D loro] D]]

18.
		Consume "mi(cl)"

		[deva [[D loro] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[deva [[D loro] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D loro] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva <<D loro> <D mi(cl)>>] are] due to bad left branch.
				Reject [[[D loro] <D mi(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[deva [[D loro] [[D mi(cl)] are]]]

20.
		Consume "v"

		[deva [[D loro] [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[deva [[D loro] [[D mi(cl)] are{v}]]]

21.
		Consume "lava"

		[deva [[D loro] [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[deva [[D loro] [[D mi(cl)] are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D loro] [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] right-incorporated to [[D loro] [[D mi(cl)] are{v,V}]]
		Reconstructing...
			Transferring [deva [[D loro] [[D mi(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [deva [[D loro] [[D mi(cl)] are{v,V}]]].
					Extracted head "v{V}" from are and created [deva [[D loro] [[D mi(cl)] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [deva [[D loro] [[D mi(cl)] [are [v lava]]]]]
					=[deva [[D loro] [[D mi(cl)] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[deva [[D loro] [[D mi(cl)] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D mi(cl)] failed to tail [-VAL][ARG]
					Dropping [D mi(cl)]
						<D mi(cl)> was made an adjunct.
						Floater <D mi(cl)> dropped.
						 = [deva [[D loro] [<D mi(cl)>:8 [are [v [<DP>:8 lava]]]]]]
					=[deva [[D loro] [<D mi(cl)>:8 [are [v [<DP>:8 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [deva [[D loro] [<D mi(cl)>:8 [are [[D loro] [v [<DP>:8 lava]]]]]]]
					=[deva [[D loro]:175 [<D mi(cl)>:8 [are [__:175 [v [<DP>:8 lava]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					deva acquired PHI:GEN:N by phi-Agree from [D loro]:175.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[deva [[D loro]:175 [<D mi(cl)>:8 [are [__:175 [v [<DP>:8 lava]]]]]]]
			= [deva [[D loro] [<D mi(cl)> [are [[D loro] [v [<D mi(cl)> lava]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [deva [[D loro]:175 [<D mi(cl)>:8 [are [__:175 [v [<DP>:8 lava]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. <D mi(cl)> 3. [D loro] 4. deva )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mi(cl)>    (alternatives: 2. [D loro] 3. <D mi(cl)> 4. [D loro] 5. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D mi(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[deva [[D loro] [<D mi(cl)> [are [[D loro] [v [<D mi(cl)> lava]]]]]]]
		Grammar: [deva [[D loro]:1 [<D mi(cl)>:2 [are [__:1 [v [<DP>:2 lava]]]]]]]
		Spellout TT/finP = [TT/fin [DP:1 [DP:2 [INF [__:1 [v [__:2 V]]]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva: [TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
D: [D, TT/fin]
mi(cl): [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 122
['la#devono', 'loro', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#devono.
		Next word contains multiple morphemes ['devono_', 'la']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=deva

4.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[deva D]

12.
		Consume "la(cl)"

		[deva D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[deva D{N}]

13.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D la(cl)>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[deva [[D la(cl)] D]]

18.
		Consume "loro"

		[deva [[D la(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[deva [[D la(cl)] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D la(cl)] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva [[D la(cl)] <D loro>]] are] due to bad left branch.
				Reject [[[D la(cl)] <D loro>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[deva [[D la(cl)] [[D loro] are]]]

20.
		Consume "v"

		[deva [[D la(cl)] [[D loro] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[deva [[D la(cl)] [[D loro] are{v}]]]

21.
		Consume "lava"

		[deva [[D la(cl)] [[D loro] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[deva [[D la(cl)] [[D loro] are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D la(cl)] [[D loro] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] left-incorporated to deva
		Reconstructing...
			Transferring [deva [[D la(cl)] [[D loro] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [deva [[D la(cl)] [[D loro] are{v,V}]]].
					Extracted head "v{V}" from are and created [deva [[D la(cl)] [[D loro] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [deva [[D la(cl)] [[D loro] [are [v lava]]]]]
					=[deva [[D la(cl)] [[D loro] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[deva [[D la(cl)] [[D loro] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D la(cl)] failed to tail [-VAL][ARG]
					Dropping [D la(cl)]
						<D la(cl)> was made an adjunct.
						Floater <D la(cl)> dropped.
						 = [deva [<D la(cl)>:9 [[D loro] [are [v [<DP>:9 lava]]]]]]
					=[deva [<D la(cl)>:9 [[D loro] [are [v [<DP>:9 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [deva [<D la(cl)>:9 [[D loro] [are [[D loro] [v [<DP>:9 lava]]]]]]]
					=[deva [<D la(cl)>:9 [[D loro]:176 [are [__:176 [v [<DP>:9 lava]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					deva acquired PHI:GEN:F by phi-Agree from <D la(cl)>:9.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[deva [<D la(cl)>:9 [[D loro]:176 [are [__:176 [v [<DP>:9 lava]]]]]]]
			= [deva [<D la(cl)> [[D loro] [are [[D loro] [v [<D la(cl)> lava]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [deva [<D la(cl)>:9 [[D loro]:176 [are [__:176 [v [<DP>:9 lava]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. <D la(cl)> 4. deva )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D la(cl)>    (alternatives: 2. [D loro] 3. [D loro] 4. <D la(cl)> 5. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D la(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[deva [<D la(cl)> [[D loro] [are [[D loro] [v [<D la(cl)> lava]]]]]]]
		Grammar: [deva [<D la(cl)>:1 [[D loro]:2 [are [__:2 [v [<DP>:1 lava]]]]]]]
		Spellout TT/finP = [TT/fin [DP:1 [DP:2 [INF [__:2 [v [__:1 V]]]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva: [TT/fin]
D: [D, TT/fin]
la(cl): [N, D, TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 123
['devono', 'loro', 'lavare#la']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=deva

3.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[deva D]

8.
		Consume "loro"

		[deva D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[deva D{N}]

9.
		Decomposing a polymorphemic word lavare#la.
		Next word contains multiple morphemes ['la_', 'lavare']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D loro>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[deva [[D loro] D]]

18.
		Consume "la(cl)"

		[deva [[D loro] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[deva [[D loro] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D loro] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva <<D loro> <D la(cl)>>] are] due to bad left branch.
				Reject [[[D loro] <D la(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[deva [[D loro] [[D la(cl)] are]]]

20.
		Consume "v"

		[deva [[D loro] [[D la(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[deva [[D loro] [[D la(cl)] are{v}]]]

21.
		Consume "lava"

		[deva [[D loro] [[D la(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[deva [[D loro] [[D la(cl)] are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D loro] [[D la(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] right-incorporated to [[D loro] [[D la(cl)] are{v,V}]]
		Reconstructing...
			Transferring [deva [[D loro] [[D la(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [deva [[D loro] [[D la(cl)] are{v,V}]]].
					Extracted head "v{V}" from are and created [deva [[D loro] [[D la(cl)] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [deva [[D loro] [[D la(cl)] [are [v lava]]]]]
					=[deva [[D loro] [[D la(cl)] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[deva [[D loro] [[D la(cl)] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D la(cl)] failed to tail [-VAL][ARG]
					Dropping [D la(cl)]
						<D la(cl)> was made an adjunct.
						Floater <D la(cl)> dropped.
						 = [deva [[D loro] [<D la(cl)>:10 [are [v [<DP>:10 lava]]]]]]
					=[deva [[D loro] [<D la(cl)>:10 [are [v [<DP>:10 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [deva [[D loro] [<D la(cl)>:10 [are [[D loro] [v [<DP>:10 lava]]]]]]]
					=[deva [[D loro]:177 [<D la(cl)>:10 [are [__:177 [v [<DP>:10 lava]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					deva acquired PHI:GEN:N by phi-Agree from [D loro]:177.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[deva [[D loro]:177 [<D la(cl)>:10 [are [__:177 [v [<DP>:10 lava]]]]]]]
			= [deva [[D loro] [<D la(cl)> [are [[D loro] [v [<D la(cl)> lava]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [deva [[D loro]:177 [<D la(cl)>:10 [are [__:177 [v [<DP>:10 lava]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. <D la(cl)> 3. [D loro] 4. deva )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D la(cl)>    (alternatives: 2. [D loro] 3. <D la(cl)> 4. [D loro] 5. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D la(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[deva [[D loro] [<D la(cl)> [are [[D loro] [v [<D la(cl)> lava]]]]]]]
		Grammar: [deva [[D loro]:1 [<D la(cl)>:2 [are [__:1 [v [<DP>:2 lava]]]]]]]
		Spellout TT/finP = [TT/fin [DP:1 [DP:2 [INF [__:1 [v [__:2 V]]]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva: [TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
D: [D, TT/fin]
la(cl): [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 124
['lo#devono', 'loro', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lo#devono.
		Next word contains multiple morphemes ['devono_', 'lo']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=deva

4.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[deva D]

12.
		Consume "lo(cl)"

		[deva D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[deva D{N}]

13.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D lo(cl)>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[deva [[D lo(cl)] D]]

18.
		Consume "loro"

		[deva [[D lo(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[deva [[D lo(cl)] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D lo(cl)] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva [[D lo(cl)] <D loro>]] are] due to bad left branch.
				Reject [[[D lo(cl)] <D loro>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[deva [[D lo(cl)] [[D loro] are]]]

20.
		Consume "v"

		[deva [[D lo(cl)] [[D loro] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[deva [[D lo(cl)] [[D loro] are{v}]]]

21.
		Consume "lava"

		[deva [[D lo(cl)] [[D loro] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[deva [[D lo(cl)] [[D loro] are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D lo(cl)] [[D loro] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] left-incorporated to deva
		Reconstructing...
			Transferring [deva [[D lo(cl)] [[D loro] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [deva [[D lo(cl)] [[D loro] are{v,V}]]].
					Extracted head "v{V}" from are and created [deva [[D lo(cl)] [[D loro] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [deva [[D lo(cl)] [[D loro] [are [v lava]]]]]
					=[deva [[D lo(cl)] [[D loro] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[deva [[D lo(cl)] [[D loro] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D lo(cl)] failed to tail [-VAL][ARG]
					Dropping [D lo(cl)]
						<D lo(cl)> was made an adjunct.
						Floater <D lo(cl)> dropped.
						 = [deva [<D lo(cl)>:11 [[D loro] [are [v [<DP>:11 lava]]]]]]
					=[deva [<D lo(cl)>:11 [[D loro] [are [v [<DP>:11 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [deva [<D lo(cl)>:11 [[D loro] [are [[D loro] [v [<DP>:11 lava]]]]]]]
					=[deva [<D lo(cl)>:11 [[D loro]:178 [are [__:178 [v [<DP>:11 lava]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					deva acquired PHI:GEN:M by phi-Agree from <D lo(cl)>:11.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[deva [<D lo(cl)>:11 [[D loro]:178 [are [__:178 [v [<DP>:11 lava]]]]]]]
			= [deva [<D lo(cl)> [[D loro] [are [[D loro] [v [<D lo(cl)> lava]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [deva [<D lo(cl)>:11 [[D loro]:178 [are [__:178 [v [<DP>:11 lava]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. <D lo(cl)> 4. deva )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D lo(cl)>    (alternatives: 2. [D loro] 3. [D loro] 4. <D lo(cl)> 5. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D lo(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[deva [<D lo(cl)> [[D loro] [are [[D loro] [v [<D lo(cl)> lava]]]]]]]
		Grammar: [deva [<D lo(cl)>:1 [[D loro]:2 [are [__:2 [v [<DP>:1 lava]]]]]]]
		Spellout TT/finP = [TT/fin [DP:1 [DP:2 [INF [__:2 [v [__:1 V]]]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva: [TT/fin]
D: [D, TT/fin]
lo(cl): [N, D, TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 125
['devono', 'loro', 'lavare#lo']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=deva

3.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[deva D]
			Transferring deva to LF.
				1. Head movement reconstruction:
					=deva
				2. Feature processing:
					=deva
				3. Floater movement reconstruction:
					=deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				deva probing for CAT:V failed.
				"deva" lacks complement.
				deva (deva) is missing complement ARE/inf
					Extraposition will be tried on deva.
					=deva
				5. Agreement reconstruction:
					=deva
			=[deva D]

8.
		Consume "loro"

		[deva D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[deva D{N}]

9.
		Decomposing a polymorphemic word lavare#lo.
		Next word contains multiple morphemes ['lo_', 'lavare']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D loro>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[deva [[D loro] D]]

18.
		Consume "lo(cl)"

		[deva [[D loro] D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[deva [[D loro] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D loro] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva <<D loro> <D lo(cl)>>] are] due to bad left branch.
				Reject [[[D loro] <D lo(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[deva [[D loro] [[D lo(cl)] are]]]

20.
		Consume "v"

		[deva [[D loro] [[D lo(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[deva [[D loro] [[D lo(cl)] are{v}]]]

21.
		Consume "lava"

		[deva [[D loro] [[D lo(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[deva [[D loro] [[D lo(cl)] are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D loro] [[D lo(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D lo(cl)] right-incorporated to [[D loro] [[D lo(cl)] are{v,V}]]
		Reconstructing...
			Transferring [deva [[D loro] [[D lo(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [deva [[D loro] [[D lo(cl)] are{v,V}]]].
					Extracted head "v{V}" from are and created [deva [[D loro] [[D lo(cl)] [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [deva [[D loro] [[D lo(cl)] [are [v lava]]]]]
					=[deva [[D loro] [[D lo(cl)] [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[deva [[D loro] [[D lo(cl)] [are [v lava]]]]]
				3. Floater movement reconstruction:
					[D lo(cl)] failed to tail [-VAL][ARG]
					Dropping [D lo(cl)]
						<D lo(cl)> was made an adjunct.
						Floater <D lo(cl)> dropped.
						 = [deva [[D loro] [<D lo(cl)>:12 [are [v [<DP>:12 lava]]]]]]
					=[deva [[D loro] [<D lo(cl)>:12 [are [v [<DP>:12 lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [deva [[D loro] [<D lo(cl)>:12 [are [[D loro] [v [<DP>:12 lava]]]]]]]
					=[deva [[D loro]:179 [<D lo(cl)>:12 [are [__:179 [v [<DP>:12 lava]]]]]]]
				5. Agreement reconstruction:
					deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					deva acquired PHI:DET:DEF from the edge of deva.
					deva acquired PHI:NUM:PL from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					deva acquired PHI:GEN:N by phi-Agree from [D loro]:179.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[deva [[D loro]:179 [<D lo(cl)>:12 [are [__:179 [v [<DP>:12 lava]]]]]]]
			= [deva [[D loro] [<D lo(cl)> [are [[D loro] [v [<D lo(cl)> lava]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [deva [[D loro]:179 [<D lo(cl)>:12 [are [__:179 [v [<DP>:12 lava]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. <D lo(cl)> 3. [D loro] 4. deva )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D lo(cl)>    (alternatives: 2. [D loro] 3. <D lo(cl)> 4. [D loro] 5. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D lo(cl)>)', 'v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[deva [[D loro] [<D lo(cl)> [are [[D loro] [v [<D lo(cl)> lava]]]]]]]
		Grammar: [deva [[D loro]:1 [<D lo(cl)>:2 [are [__:1 [v [<DP>:2 lava]]]]]]]
		Spellout TT/finP = [TT/fin [DP:1 [DP:2 [INF [__:1 [v [__:2 V]]]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'R', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

deva: [TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
D: [D, TT/fin]
lo(cl): [N, D, TT/fin]
are: [INF, TT/fin]
__: [D, INF, TT/fin]
__: [N, D, INF, TT/fin]
v: [v, INF, TT/fin]
__: [D, v, INF, TT/fin]
__: [N, D, v, INF, TT/fin]
lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 126
['loro', 'mi#hanno', 'voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + T/prt = -98]
				[T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]]

22.
		Consume "volu"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]]

23.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v volu]]]]]]] are] due to bad left branch.
				Reject [[T/fin [ha [[D mi(cl)] [T/prt [v volu]]]]] are] due to bad left branch.
				Reject [[[D N] T] are] as Spec because it breaks words.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are]]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v}]]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v,V}]]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v,V}]]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v,V}]]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [[D mi(cl)] [T/prt{v,V} are{v,V}]]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v{V} are{v,V}]]]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v [volu are{v,V}]]]]]]]
					Extracted head "v{V}" from are and created [[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v [volu [are v{V}]]]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v [volu [are [v lava]]]]]]]]]
					=[[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v [volu [are [v lava]]]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v [volu [are [v lava]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [[D mi(cl)] [T/prt [v [volu [are [v lava]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [volu [are [v lava]]]]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping constituent [D mi(cl)] from memory buffer into Spec of are
					Result [[D loro]:230 [T/fin [__:230 [ha [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping [D N](=____) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:230 [T/fin [__:230 [ha [[D mi(cl)]:231 [T/prt [v [volu [__:231 [are [v [lava __:231]]]]]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:230 [T/fin [__:230 [ha [[D mi(cl)]:231 [T/prt [v [volu [__:231 [are [v [lava __:231]]]]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:1 from the edge of T/prt.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:1 from the edge of are.
					=[[D loro]:230 [T/fin [__:230 [ha [[D mi(cl)]:231 [T/prt [v [volu [__:231 [are [v [lava __:231]]]]]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:230 [T/fin [__:230 [ha [[D mi(cl)]:231 [T/prt [v [volu [__:231 [are [v [lava __:231]]]]]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/prt 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. [D mi(cl)] 3. T/prt 4. [D mi(cl)] 5. [D loro] 6. T/fin 7. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['ha([[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]])', 'lava([D mi(cl)])', 'v(T/prt)', 'v([D mi(cl)])', 'volu(T/prt)']
!--->		Tests passed (with 26/281 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [ha [[D mi(cl)]:2 [T/prt [v [volu [__:2 [are [v [lava __:2]]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [T [v [V [__:2 [INF [v [V __:2]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
__: [D, V, v, T, V, TT/fin]
__: [N, D, V, v, T, V, TT/fin]
are: [INF, V, v, T, V, TT/fin]
v: [v, INF, V, v, T, V, TT/fin]
lava: [V, v, INF, V, v, T, V, TT/fin]
__: [D, V, v, INF, V, v, T, V, TT/fin]
__: [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 127
['loro', 'hanno', 'voluto', 'lavare#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

11.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

12.
		Consume "volu"

		[[D loro] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

13.
		Decomposing a polymorphemic word lavare#mi.
		Next word contains multiple morphemes ['mi_', 'lavare']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"volu" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"volu" lacks complement.
				Avoid [T/fin [ha [T/prt [v volu]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = -38]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

22.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

23.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + are
			Filtering out impossible merge sites...
				Reject [[T D] are] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + are = -98]
				[T/fin{V} [T/prt{v,V} D{N}]] + are = -96]
				D{N} + are = 106]
		Ranking completed:
			1. [D{N}; are]
			2. [[T/fin{V} [T/prt{v,V} D{N}]]; are]
			3. [[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] right-incorporated to [[D mi(cl)] are{v,V}]
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [T/prt{v,V} [[D mi(cl)] are{v,V}]]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v{V} [[D mi(cl)] are{v,V}]]]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [volu [[D mi(cl)] are{v,V}]]]]]]]
					Extracted head "v{V}" from are and created [[D loro] [T/fin [ha [T/prt [v [volu [[D mi(cl)] [are v{V}]]]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]]
					=[[D loro] [T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:239 [T/fin [__:239 [ha [T/prt [v [volu [[D mi(cl)]:240 [are [v [lava __:240]]]]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:239 [T/fin [__:239 [ha [T/prt [v [volu [[D mi(cl)]:240 [are [v [lava __:240]]]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:1 from the edge of are.
					=[[D loro]:239 [T/fin [__:239 [ha [T/prt [v [volu [[D mi(cl)]:240 [are [v [lava __:240]]]]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:239 [T/fin [__:239 [ha [T/prt [v [volu [[D mi(cl)]:240 [are [v [lava __:240]]]]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['T/prt([D loro])', 'ha([D loro])', 'lava([D mi(cl)])', 'v([D loro])', 'v([D mi(cl)])', 'volu([D loro])']
!--->		Tests passed (with 26/290 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [ha [T/prt [v [volu [[D mi(cl)]:2 [are [v [lava __:2]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [T [v [V [DP:2 [INF [v [V __:2]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
mi(cl): [N, D, V, v, T, V, TT/fin]
are: [INF, V, v, T, V, TT/fin]
v: [v, INF, V, v, T, V, TT/fin]
lava: [V, v, INF, V, v, T, V, TT/fin]
__: [D, V, v, INF, V, v, T, V, TT/fin]
__: [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 128
['mi#hanno', 'voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

5.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

13.
		Consume "mi(cl)"

		[T/fin{V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[T/fin{V} D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + T/prt = -98]
				D{N} + T/prt = 104]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[T/fin{V} [[D mi(cl)] T/prt]]

15.
		Consume "v"

		[T/fin{V} [[D mi(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} [[D mi(cl)] T/prt{v}]]

16.
		Consume "volu"

		[T/fin{V} [[D mi(cl)] T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[T/fin{V} [[D mi(cl)] T/prt{v,V}]]

17.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[T/fin{V} [[D mi(cl)] T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[T/fin [ha [[D mi(cl)] [T/prt [v volu]]]]] are] due to bad left branch.
				Reject [[[D N] T] are] as Spec because it breaks words.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [[D mi(cl)] [T/prt{v,V} are]]]

18.
		Consume "v"

		[T/fin{V} [[D mi(cl)] [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v}]]]

19.
		Consume "lava"

		[T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v,V}]]]

20.
	>>>	Trying candidate parse [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] left-incorporated to T/fin{V}
		Reconstructing...
			Transferring [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v,V}]]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [[D mi(cl)] [T/prt{v,V} are{v,V}]]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [[D mi(cl)] [T/prt [v{V} are{v,V}]]]]]
						Extracted head "volu" and reconstructed it = [T/fin [ha [[D mi(cl)] [T/prt [v [volu are{v,V}]]]]]]
					Extracted head "v{V}" from are and created [T/fin [ha [[D mi(cl)] [T/prt [v [volu [are v{V}]]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [[D mi(cl)] [T/prt [v [volu [are [v lava]]]]]]]]
					=[T/fin [ha [[D mi(cl)] [T/prt [v [volu [are [v lava]]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[T/fin [ha [[D mi(cl)] [T/prt [v [volu [are [v lava]]]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [[D mi(cl)] [T/prt [v [volu [are [v lava]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping constituent [D mi(cl)] from memory buffer into Spec of are
					Result [T/fin [ha [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping [D N](=____) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [ha [[D mi(cl)]:241 [T/prt [v [volu [__:241 [are [v [lava __:241]]]]]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [ha [[D mi(cl)]:241 [T/prt [v [volu [__:241 [are [v [lava __:241]]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:241.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:1 from the edge of T/prt.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:1 from the edge of are.
					=[T/fin [ha [[D mi(cl)]:241 [T/prt [v [volu [__:241 [are [v [lava __:241]]]]]]]]]]
			= [T/fin [ha [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [ha [[D mi(cl)]:241 [T/prt [v [volu [__:241 [are [v [lava __:241]]]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. T/fin )
				volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/prt 3. [D mi(cl)] 4. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. [D mi(cl)] 3. T/prt 4. [D mi(cl)] 5. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['ha([[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]])', 'lava([D mi(cl)])', 'v(T/prt)', 'v([D mi(cl)])', 'volu(T/prt)']
!--->		Tests passed (with 20/223 operations) <------------------------------------
		Solution:
		[T/fin [ha [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]
		Grammar: [T/fin [ha [[D mi(cl)]:1 [T/prt [v [volu [__:1 [are [v [lava __:1]]]]]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [T [v [V [__:1 [INF [v [V __:1]]]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
__: [D, V, v, T, V, TT/fin]
__: [N, D, V, v, T, V, TT/fin]
are: [INF, V, v, T, V, TT/fin]
v: [v, INF, V, v, T, V, TT/fin]
lava: [V, v, INF, V, v, T, V, TT/fin]
__: [D, V, v, INF, V, v, T, V, TT/fin]
__: [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 129
['hanno', 'voluto', 'lavare#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} T/prt]

5.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

6.
		Consume "volu"

		[T/fin{V} T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[T/fin{V} T/prt{v,V}]

7.
		Decomposing a polymorphemic word lavare#mi.
		Next word contains multiple morphemes ['mi_', 'lavare']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"volu" lacks complement.
				Avoid [T/fin [ha [T/prt [v volu]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[T/fin{V} T/prt{v,V}] + D = -197]
				T/prt{v,V} + D = -42]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [T/prt{v,V} D]]

16.
		Consume "mi(cl)"

		[T/fin{V} [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} [T/prt{v,V} D{N}]]

17.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[T/fin{V} [T/prt{v,V} D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[T D] are] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} [T/prt{v,V} D{N}]] + are = -98]
				D{N} + are = 104]
		Ranking completed:
			1. [D{N}; are]
			2. [[T/fin{V} [T/prt{v,V} D{N}]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]]

18.
		Consume "v"

		[T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]]

19.
		Consume "lava"

		[T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] right-incorporated to [[D mi(cl)] are{v,V}]
		Reconstructing...
			Transferring [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} [[D mi(cl)] are{v,V}]]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} [[D mi(cl)] are{v,V}]]]]]
						Extracted head "volu" and reconstructed it = [T/fin [ha [T/prt [v [volu [[D mi(cl)] are{v,V}]]]]]]
					Extracted head "v{V}" from are and created [T/fin [ha [T/prt [v [volu [[D mi(cl)] [are v{V}]]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]
					=[T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v lava]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [ha [T/prt [v [volu [[D mi(cl)]:243 [are [v [lava __:243]]]]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [ha [T/prt [v [volu [[D mi(cl)]:243 [are [v [lava __:243]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:SG from the edge of are.
					are acquired PHI:PER:1 from the edge of are.
					=[T/fin [ha [T/prt [v [volu [[D mi(cl)]:243 [are [v [lava __:243]]]]]]]]]
			= [T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [ha [T/prt [v [volu [[D mi(cl)]:243 [are [v [lava __:243]]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. [D mi(cl)] 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['T/prt(T/fin)', 'ha(T/fin)', 'lava([D mi(cl)])', 'v(T/fin)', 'v([D mi(cl)])', 'volu(T/fin)']
!--->		Tests passed (with 20/227 operations) <------------------------------------
		Solution:
		[T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]
		Grammar: [T/fin [ha [T/prt [v [volu [[D mi(cl)]:1 [are [v [lava __:1]]]]]]]]]
		Spellout TT/finP = [TT/fin [V [T [v [V [DP:1 [INF [v [V __:1]]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
mi(cl): [N, D, V, v, T, V, TT/fin]
are: [INF, V, v, T, V, TT/fin]
v: [v, INF, V, v, T, V, TT/fin]
lava: [V, v, INF, V, v, T, V, TT/fin]
__: [D, V, v, INF, V, v, T, V, TT/fin]
__: [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 130
['loro', 'hanno', 'mi#voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word mi#voluto.
		Next word contains multiple morphemes ['voluto_', 'mi']
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['inc$', 'to$', 'v$', 'volu-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

12.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

13.
		Consume "volu"

		[[D loro] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

14.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"volu" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"volu" lacks complement.
				Avoid [T/fin [ha [T/prt [v volu]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = -38]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

22.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

23.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + are
			Filtering out impossible merge sites...
				Reject [[T D] are] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + are = -98]
				[T/fin{V} [T/prt{v,V} D{N}]] + are = -96]
				D{N} + are = 106]
		Ranking completed:
			1. [D{N}; are]
			2. [[T/fin{V} [T/prt{v,V} D{N}]]; are]
			3. [[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} [T/prt{v,V} D{N}]] are]
			Transferring [T/fin{V} [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} D{N}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} D{N}]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} D{N}]]]]
						Extracted head "volu" and reconstructed it = [T/fin [ha [T/prt [v [volu D{N}]]]]]
					Extracted head "mi(cl)" from D and created [T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
					=[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
			=[[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v,V}]].
					Extracted head "v{V}" from are and created [[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]]
					=[[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha T/prt v volu D mi(cl) " into memory buffer from SPEC of "are".
					Moving "D loro " into memory buffer from SPEC of "are".
					New head was spawned due to multiple specifiers at are but its category is unknown!
					Memory buffer: [[TT/fin [V [T [v [V [D N]]]]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				are has unacceptable specifier [T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:250 [? [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [__:250 [v lava]]]]]].
					=[[D loro]:250 [? [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [__:250 [v lava]]]]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL by phi-Agree from __:250.
					are acquired PHI:PER:3 by phi-Agree from __:250.
					=[[D loro]:250 [? [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [__:250 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				are has unacceptable specifier [T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
T/prt: [T, V, TT/fin, ?]
v: [v, T, V, TT/fin, ?]
volu: [V, v, T, V, TT/fin, ?]
D: [D, V, v, T, V, TT/fin, ?]
mi(cl): [N, D, V, v, T, V, TT/fin, ?]
are: [INF, ?]
__: [D, INF, ?]
__: [N, D, INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] are]
			Transferring [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [T/prt{v,V} D{N}]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v{V} D{N}]]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [volu D{N}]]]]]]
					Extracted head "mi(cl)" from D and created [[D loro] [T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]]
					=[[D loro] [T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D mi(cl)]]]]]]]]
					=[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]]
			=[[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are{v,V}].
					Extracted head "v{V}" from are and created [[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] [are v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] [are [v lava]]]
					=[[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] [are [v lava]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] [are [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] [are [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha T/prt v volu D mi(cl) " into memory buffer from SPEC of "are".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [T [v [V [D N]]]]]]]]]
				are has unacceptable specifier [[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] [are [v lava]]].
					=[[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] [are [v lava]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]] [are [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D mi(cl)]]]]]]]] [are [v lava]]]
		Checking LF-interface conditions.
				are has unacceptable specifier [[D loro]:251 [T/fin [__:251 [ha [T/prt [v [volu [D mi(cl)]]]]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
mi(cl): [N, D, V, v, T, V, TT/fin]
are: [INF]
v: [v, INF]
lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "volu" from v and created [T/fin [ha [T/prt [v volu]]]]
					=[T/fin [ha [T/prt [v volu]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v volu]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v volu]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"volu" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v volu]]]].
					=[T/fin [ha [T/prt [v volu]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v volu]]]]
			=[[D loro] [[T/fin [ha [T/prt [v volu]]]] D]]

33.
		Consume "mi(cl)"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v volu]]]] D{N}]]

34.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[T/fin [[D loro] [ha [<D mi(cl)> [T/prt [v volu]]]]]] <D mi(cl)>]] are] due to bad left branch.
				Reject [[[T/fin [ha [<D mi(cl)> [T/prt [v volu]]]]] <D mi(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are]]]

35.
		Consume "v"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v}]]]

36.
		Consume "lava"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v,V}]]]

37.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v,V}]]] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "volu" from v and created [[D loro] [T/fin [ha [T/prt [v volu]]]]]
					=[[D loro] [T/fin [ha [T/prt [v volu]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v volu]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v volu]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]]
				"volu" lacks complement.
					Extraposition will be tried on [[D loro]:253 [T/fin [__:253 [ha [T/prt [v volu]]]]]].
					=[[D loro]:253 [T/fin [__:253 [ha [T/prt [v volu]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:253 [T/fin [__:253 [ha [T/prt [v volu]]]]]]
			=[[[D loro]:253 [T/fin [__:253 [ha [T/prt [v volu]]]]]] D]

38.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:253 [T/fin [__:253 [ha [T/prt [v volu]]]]]] D{N}]

39.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] D{N}] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] [ha [<D mi(cl)> [T/prt [v volu]]]]]]] <D mi(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[D loro]:253 [T/fin [__:253 [ha [T/prt [v volu]]]]]] [[D mi(cl)] are]]

40.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] [[D mi(cl)] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:253 [T/fin [__:253 [ha [T/prt [v volu]]]]]] [[D mi(cl)] are{v}]]

41.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] [[D mi(cl)] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:253 [T/fin [__:253 [ha [T/prt [v volu]]]]]] [[D mi(cl)] are{v,V}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] [[D mi(cl)] are{v,V}]] (5.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:254 [T/fin [__:254 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:254 [T/fin [__:254 ha]]]
			=[[[D loro]:254 [T/fin [__:254 ha]]] T/prt]

43.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:254 [T/fin [__:254 ha]]] T/prt{v}]

44.
		Consume "volu"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[[D loro]:254 [T/fin [__:254 ha]]] T/prt{v,V}]

45.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:254 [T/fin [__:254 ha]]].
				"volu" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				[[[D loro]:254 [T/fin [__:254 ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 56]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:254 [T/fin [__:254 ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt{v,V} D]]

53.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt{v,V} D{N}]]

54.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [volu [D mi(cl)]]]]] are] due to bad left branch.
			Ranking remaining sites...
				Avoid D{N} because it could break words.
				[T/prt{v,V} D{N}] + are = 1]
				D{N} + are = -96]
		Ranking completed:
			1. [[T/prt{v,V} D{N}]; are]
			2. [D{N}; are]
		Exploring solution number (1) =[[T/prt{v,V} D{N}] are]
			Transferring [T/prt{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/prt [v{V} D{N}]]
						Extracted head "volu" and reconstructed it = [T/prt [v [volu D{N}]]]
					Extracted head "mi(cl)" from D and created [T/prt [v [volu [D mi(cl)]]]]
					=[T/prt [v [volu [D mi(cl)]]]]
				2. Feature processing:
					=[T/prt [v [volu [D mi(cl)]]]]
				3. Floater movement reconstruction:
					=[T/prt [v [volu [D mi(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/prt [v [volu [D mi(cl)]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [v [volu [D mi(cl)]]]]
			=[[[D loro]:254 [T/fin [__:254 ha]]] [[T/prt [v [volu [D mi(cl)]]]] are]]

55.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [D mi(cl)]]]] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:254 [T/fin [__:254 ha]]] [[T/prt [v [volu [D mi(cl)]]]] are{v}]]

56.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [D mi(cl)]]]] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:254 [T/fin [__:254 ha]]] [[T/prt [v [volu [D mi(cl)]]]] are{v,V}]]

57.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [D mi(cl)]]]] are{v,V}]] (6.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:254 [T/fin [__:254 ha]]] [[T/prt [v [volu [D mi(cl)]]]] are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:254 [T/fin [__:254 ha]]] [[T/prt [v [volu [D mi(cl)]]]] are{v,V}]].
					Extracted head "v{V}" from are and created [[[D loro]:254 [T/fin [__:254 ha]]] [[T/prt [v [volu [D mi(cl)]]]] [are v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:254 [T/fin [__:254 ha]]] [[T/prt [v [volu [D mi(cl)]]]] [are [v lava]]]]
					=[[[D loro]:254 [T/fin [__:254 ha]]] [[T/prt [v [volu [D mi(cl)]]]] [are [v lava]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:254 [T/fin [__:254 ha]]] [[T/prt [v [volu [D mi(cl)]]]] [are [v lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:254 [T/fin [__:254 ha]]] [[T/prt [v [volu [D mi(cl)]]]] [are [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/prt v volu D mi(cl) " into memory buffer from SPEC of "are".
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "are".
					New head was spawned due to multiple specifiers at are but its category is unknown!
					Memory buffer: [[T [v [V [D N]]]], [[D N] [TT/fin [[D N] V]]]]
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:254 [T/fin [__:254 ha]]] [? [[T/prt [v [volu [D mi(cl)]]]] [are [v lava]]]]].
					=[[[D loro]:254 [T/fin [__:254 ha]]] [? [[T/prt [v [volu [D mi(cl)]]]] [are [v lava]]]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:254 [T/fin [__:254 ha]]] [? [[T/prt [v [volu [D mi(cl)]]]] [are [v lava]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [? [[T/prt [v [volu [D mi(cl)]]]] [are [v lava]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:IT']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
?: [?]
T/prt: [T, ?]
v: [v, T, ?]
volu: [V, v, T, ?]
D: [D, V, v, T, ?]
mi(cl): [N, D, V, v, T, ?]
are: [INF, ?]
v: [v, INF, ?]
lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt{v,V} [[D mi(cl)] are]]]

58.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt{v,V} [[D mi(cl)] are{v}]]]

59.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt{v,V} [[D mi(cl)] are{v,V}]]]

60.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D mi(cl)] are{v,V}]]] (7.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:254 [T/fin [__:254 ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:254 [T/fin [__:254 ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:254 [T/fin [__:254 ha]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:254 [T/fin [__:254 ha]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "volu" from v and created [[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]]
					=[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]]
				2. Feature processing:
					=[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]]
				3. Floater movement reconstruction:
					=[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:254 [T/fin [__:254 ha]]].
				"volu" lacks complement.
					Extraposition will be tried on [[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]].
					=[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]]
			=[[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]] D]

61.
		Consume "mi(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]] D{N}]

62.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] D{N}] + are
			Filtering out impossible merge sites...
				Reject [[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [<D mi(cl)> volu]]]] <D mi(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]] [[D mi(cl)] are]]

63.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] [[D mi(cl)] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]] [[D mi(cl)] are{v}]]

64.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] [[D mi(cl)] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[[D loro]:254 [T/fin [__:254 ha]]] [T/prt [v volu]]] [[D mi(cl)] are{v,V}]]

65.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] [[D mi(cl)] are{v,V}]] (8.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 131
['loro', 'hanno', 'voluto', 'mi#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

11.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

12.
		Consume "volu"

		[[D loro] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

13.
		Decomposing a polymorphemic word mi#lavare.
		Next word contains multiple morphemes ['lavare_', 'mi']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[D loro] [T/fin{V} T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] are] due to bad left branch.
				Reject [[T/fin [ha [T/prt [v volu]]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} are]]]

15.
		Consume "v"

		[[D loro] [T/fin{V} [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} [T/prt{v,V} are{v}]]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]]

17.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v lava]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T/prt{v,V} are{v,V}], D] because the operation breaks up an existing selectional dependency.
				"lava" lacks complement.
				Avoid [T/prt [v [volu [are [v lava]]]]] as left branch because it constitutes illicit structure.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid are{v,V} because it could break words.
				[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]] + D = -197]
				[T/fin{V} [T/prt{v,V} are{v,V}]] + D = -194]
				[T/prt{v,V} are{v,V}] + D = -191]
				are{v,V} + D = -34]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[T/prt{v,V} are{v,V}]; D]
			3. [[T/fin{V} [T/prt{v,V} are{v,V}]]; D]
			4. [[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D]]]]

25.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D]]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/prt{v,V} are{v,V}] D]
			Transferring [T/prt{v,V} are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} are{v,V}].
						Extracted head "v{V}" and reconstructed it = [T/prt [v{V} are{v,V}]]
						Extracted head "volu" and reconstructed it = [T/prt [v [volu are{v,V}]]]
					Extracted head "v{V}" from are and created [T/prt [v [volu [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/prt [v [volu [are [v lava]]]]]
					=[T/prt [v [volu [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[T/prt [v [volu [are [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/prt [v [volu [are [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					=[T/prt [v [volu [are [v lava]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [v [volu [are [v lava]]]]]
			=[[D loro] [T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D]]]

27.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D{N}]]]

28.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D{N}]]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{V} [T/prt{v,V} are{v,V}]] D]
			Transferring [T/fin{V} [T/prt{v,V} are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} are{v,V}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} are{v,V}]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} are{v,V}]]]]
						Extracted head "volu" and reconstructed it = [T/fin [ha [T/prt [v [volu are{v,V}]]]]]
					Extracted head "v{V}" from are and created [T/fin [ha [T/prt [v [volu [are v{V}]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
					=[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]].
					=[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
			=[[D loro] [[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D]]

29.
		Consume "mi(cl)"

		[[D loro] [[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D{N}]]

30.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D{N}]] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]] D]
			Transferring [[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [T/prt{v,V} are{v,V}]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v{V} are{v,V}]]]]]
						Extracted head "volu" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [volu are{v,V}]]]]]]
					Extracted head "v{V}" from are and created [[D loro] [T/fin [ha [T/prt [v [volu [are v{V}]]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]]
					=[[D loro] [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v lava]]]]]]]]]
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:260 [T/fin [__:260 [ha [T/prt [v [volu [are [v lava]]]]]]]]].
					=[[D loro]:260 [T/fin [__:260 [ha [T/prt [v [volu [are [v lava]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:260 [T/fin [__:260 [ha [T/prt [v [volu [are [v lava]]]]]]]]]
			=[[[D loro]:260 [T/fin [__:260 [ha [T/prt [v [volu [are [v lava]]]]]]]]] D]

31.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v lava]]]]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:260 [T/fin [__:260 [ha [T/prt [v [volu [are [v lava]]]]]]]]] D{N}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v lava]]]]]]]]] D{N}] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:261 [T/fin [__:261 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:261 [T/fin [__:261 ha]]]
			=[[[D loro]:261 [T/fin [__:261 ha]]] T/prt]

33.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:261 [T/fin [__:261 ha]]] T/prt{v}]

34.
		Consume "volu"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[[D loro]:261 [T/fin [__:261 ha]]] T/prt{v,V}]

35.
		Decomposing a polymorphemic word mi#lavare.
		Next word contains multiple morphemes ['lavare_', 'mi']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt{v,V} are]]

37.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt{v,V} are{v}]]

38.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt{v,V} are{v,V}]]

39.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:261 [T/fin [__:261 ha]]]:263.
				are has unacceptable specifier __:263.
				"lava" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [volu [[[D loro] [T/fin [[D loro] ha]]] [are [v lava]]]]]]] as left branch because it constitutes illicit structure.
				"lava" lacks complement.
				Avoid [T/prt [v [volu [are [v lava]]]]] as left branch because it constitutes illicit structure.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid are{v,V} because it could break words.
				[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt{v,V} are{v,V}]] + D = -98]
				[T/prt{v,V} are{v,V}] + D = -96]
				are{v,V} + D = -38]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[T/prt{v,V} are{v,V}]; D]
			3. [[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt{v,V} are{v,V}]]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt{v,V} [are{v,V} D]]]

47.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [are{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt{v,V} [are{v,V} D{N}]]]

48.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [are{v,V} D{N}]]] (5.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/prt{v,V} are{v,V}] D]
			Transferring [T/prt{v,V} are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} are{v,V}].
						Extracted head "v{V}" and reconstructed it = [T/prt [v{V} are{v,V}]]
						Extracted head "volu" and reconstructed it = [T/prt [v [volu are{v,V}]]]
					Extracted head "v{V}" from are and created [T/prt [v [volu [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/prt [v [volu [are [v lava]]]]]
					=[T/prt [v [volu [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[T/prt [v [volu [are [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/prt [v [volu [are [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					=[T/prt [v [volu [are [v lava]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [v [volu [are [v lava]]]]]
			=[[[D loro]:261 [T/fin [__:261 ha]]] [[T/prt [v [volu [are [v lava]]]]] D]]

49.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [are [v lava]]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:261 [T/fin [__:261 ha]]] [[T/prt [v [volu [are [v lava]]]]] D{N}]]

50.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [are [v lava]]]]] D{N}]] (6.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt{v,V} are{v,V}]] D]
			Transferring [[[D loro]:261 [T/fin [__:261 ha]]] [T/prt{v,V} are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:261 [T/fin [__:261 ha]]] [T/prt{v,V} are{v,V}]].
						Extracted head "v{V}" and reconstructed it = [[[D loro]:261 [T/fin [__:261 ha]]] [T/prt [v{V} are{v,V}]]]
						Extracted head "volu" and reconstructed it = [[[D loro]:261 [T/fin [__:261 ha]]] [T/prt [v [volu are{v,V}]]]]
					Extracted head "v{V}" from are and created [[[D loro]:261 [T/fin [__:261 ha]]] [T/prt [v [volu [are v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:261 [T/fin [__:261 ha]]] [T/prt [v [volu [are [v lava]]]]]]
					=[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt [v [volu [are [v lava]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt [v [volu [are [v lava]]]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:261 [T/fin [__:261 ha]]] [T/prt [v [volu [are [v lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
					Dropping constituent [[D loro]:261 [T/fin [__:261 ha]]] from memory buffer into Spec of are
					Result [[[D loro]:261 [T/fin [__:261 ha]]] [T/prt [v [volu [[[D loro]:261 [T/fin [__:261 ha]]] [are [v lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:261 [T/fin [__:261 ha]]]:264.
				are has unacceptable specifier __:264.
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:261 [T/fin [__:261 ha]]]:264 [T/prt [v [volu [__:264 [are [v lava]]]]]]].
					=[[[D loro]:261 [T/fin [__:261 ha]]]:264 [T/prt [v [volu [__:264 [are [v lava]]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:261 [T/fin [__:261 ha]]]:264 [T/prt [v [volu [__:264 [are [v lava]]]]]]]
			=[[[[D loro]:261 [T/fin [__:261 ha]]]:264 [T/prt [v [volu [__:264 [are [v lava]]]]]]] D]

51.
		Consume "mi(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [volu [[[D loro] [T/fin [[D loro] ha]]] [are [v lava]]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[[D loro]:261 [T/fin [__:261 ha]]]:264 [T/prt [v [volu [__:264 [are [v lava]]]]]]] D{N}]

52.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [volu [[[D loro] [T/fin [[D loro] ha]]] [are [v lava]]]]]]] D{N}] (7.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 132
['loro#mi', 'hanno', 'voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#mi.
		Next word contains multiple morphemes ['mi_', 'loro']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

16.
		Consume "loro"

		[[D mi(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D mi(cl)] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D mi(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] <D loro>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D mi(cl)] [[D loro] T/fin]]

19.
		Consume "ha"

		[[D mi(cl)] [[D loro] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D mi(cl)] [[D loro] T/fin{V}]]

20.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D mi(cl)] [[D loro] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [? [[D loro] [T/fin [[D loro] ha]]]]] T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D mi(cl)] [[D loro] [T/fin{V} T/prt]]]

21.
		Consume "v"

		[[D mi(cl)] [[D loro] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D mi(cl)] [[D loro] [T/fin{V} T/prt{v}]]]

22.
		Consume "volu"

		[[D mi(cl)] [[D loro] [T/fin{V} T/prt{v}]]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D mi(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]]

23.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D mi(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]] + are
			Filtering out impossible merge sites...
				Reject [[<D mi(cl)> [[D loro] [T/fin [[D loro] [ha [<D mi(cl)> [T/prt [v volu]]]]]]]] are] due to bad left branch.
				Reject [[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] are] due to bad left branch.
				Reject [[T/fin [ha [T/prt [v volu]]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D mi(cl)] [[D loro] [T/fin{V} [T/prt{v,V} are]]]]

24.
		Consume "v"

		[[D mi(cl)] [[D loro] [T/fin{V} [T/prt{v,V} are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D mi(cl)] [[D loro] [T/fin{V} [T/prt{v,V} are{v}]]]]

25.
		Consume "lava"

		[[D mi(cl)] [[D loro] [T/fin{V} [T/prt{v,V} are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D mi(cl)] [[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]]]

26.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:270 [T/fin [__:270 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:270 [T/fin [__:270 ha]]]
			=[[D mi(cl)] [[[D loro]:270 [T/fin [__:270 ha]]] T/prt]]

27.
		Consume "v"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D mi(cl)] [[[D loro]:270 [T/fin [__:270 ha]]] T/prt{v}]]

28.
		Consume "volu"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D mi(cl)] [[[D loro]:270 [T/fin [__:270 ha]]] T/prt{v,V}]]

29.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[<D mi(cl)> [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [<D mi(cl)> volu]]]]] are] due to bad left branch.
				Reject [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D mi(cl)] [[[D loro]:270 [T/fin [__:270 ha]]] [T/prt{v,V} are]]]

30.
		Consume "v"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D mi(cl)] [[[D loro]:270 [T/fin [__:270 ha]]] [T/prt{v,V} are{v}]]]

31.
		Consume "lava"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D mi(cl)] [[[D loro]:270 [T/fin [__:270 ha]]] [T/prt{v,V} are{v,V}]]]

32.
	>>>	Trying candidate parse [[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} are{v,V}]]] (2.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 133
['mi#loro', 'hanno', 'voluto', 'lavere']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#loro.
		Next word contains multiple morphemes ['loro_', 'mi']
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

8.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

16.
		Consume "mi(cl)"

		[[D loro] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D loro] <D mi(cl)>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [[D mi(cl)] T/fin]]

19.
		Consume "ha"

		[[D loro] [[D mi(cl)] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] [[D mi(cl)] T/fin{V}]]

20.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] [[D mi(cl)] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[D mi(cl)] [T/fin [[D loro] ha]]]]] T/prt] due to bad left branch.
				Reject [[[D mi(cl)] [T/fin ha]] T/prt] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [[D mi(cl)] [T/fin{V} T/prt]]]

21.
		Consume "v"

		[[D loro] [[D mi(cl)] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[D mi(cl)] [T/fin{V} T/prt{v}]]]

22.
		Consume "volu"

		[[D loro] [[D mi(cl)] [T/fin{V} T/prt{v}]]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[[D loro] [[D mi(cl)] [T/fin{V} T/prt{v,V}]]]

23.
		Consume "?"

		[[D loro] [[D mi(cl)] [T/fin{V} T/prt{v,V}]]] + ?
			Filtering out impossible merge sites...
				Reject [[[D loro] [<D mi(cl)> [T/fin [[D loro] [ha [<D mi(cl)> [T/prt [v volu]]]]]]]] ?] due to bad left branch.
				Reject [[<D mi(cl)> [T/fin [ha [<D mi(cl)> [T/prt [v volu]]]]]] ?] due to bad left branch.
				Reject [[T/fin [ha [T/prt [v volu]]]] ?] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} ?]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [[D mi(cl)] [T/fin{V} [T/prt{v,V} ?]]]]

24.
	>>>	Trying candidate parse [[D loro] [[D mi(cl)] [T/fin{V} [T/prt{v,V} ?]]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lavere".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 134
['hanno', 'mi#voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word mi#voluto.
		Next word contains multiple morphemes ['voluto_', 'mi']
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['inc$', 'to$', 'v$', 'volu-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} T/prt]

6.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

7.
		Consume "volu"

		[T/fin{V} T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[T/fin{V} T/prt{v,V}]

8.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"volu" lacks complement.
				Avoid [T/fin [ha [T/prt [v volu]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[T/fin{V} T/prt{v,V}] + D = -197]
				T/prt{v,V} + D = -42]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [T/prt{v,V} D]]

16.
		Consume "mi(cl)"

		[T/fin{V} [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} [T/prt{v,V} D{N}]]

17.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[T/fin{V} [T/prt{v,V} D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[T D] are] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} [T/prt{v,V} D{N}]] + are = -98]
				D{N} + are = 104]
		Ranking completed:
			1. [D{N}; are]
			2. [[T/fin{V} [T/prt{v,V} D{N}]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]]

18.
		Consume "v"

		[T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]]

19.
		Consume "lava"

		[T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} [T/prt{v,V} D{N}]] are]
			Transferring [T/fin{V} [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} D{N}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} D{N}]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} D{N}]]]]
						Extracted head "volu" and reconstructed it = [T/fin [ha [T/prt [v [volu D{N}]]]]]
					Extracted head "mi(cl)" from D and created [T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
					=[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]]
			=[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are]

21.
		Consume "v"

		[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v}]

22.
		Consume "lava"

		[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v,V}]

23.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v,V}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v,V}].
					Extracted head "v{V}" from are and created [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]
					=[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]
				3. Floater movement reconstruction:
					=[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha T/prt v volu D mi(cl) " into memory buffer from SPEC of "are".
					Memory buffer: [[TT/fin [V [T [v [V [D N]]]]]]]
				are has unacceptable specifier [T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]].
					=[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]
				5. Agreement reconstruction:
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]
			= [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]
		Checking LF-interface conditions.
				are has unacceptable specifier [T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:_', 'PHI:PER:_', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

T/fin: [TT/fin]
ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
mi(cl): [N, D, V, v, T, V, TT/fin]
are: [INF]
v: [v, INF]
lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "volu" from v and created [T/fin [ha [T/prt [v volu]]]]
					=[T/fin [ha [T/prt [v volu]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v volu]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v volu]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"volu" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v volu]]]].
					=[T/fin [ha [T/prt [v volu]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v volu]]]]
			=[[T/fin [ha [T/prt [v volu]]]] D]

24.
		Consume "mi(cl)"

		[[T/fin [ha [T/prt [v volu]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[T/fin [ha [T/prt [v volu]]]] D{N}]

25.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[T/fin [ha [T/prt [v volu]]]] D{N}] + are
			Filtering out impossible merge sites...
				Reject [[[T/fin [ha [<D mi(cl)> [T/prt [v volu]]]]] <D mi(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are]]

26.
		Consume "v"

		[[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v}]]

27.
		Consume "lava"

		[[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v,V}]]

28.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v,V}]] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 135
['hanno', 'voluto', 'mi#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} T/prt]

5.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

6.
		Consume "volu"

		[T/fin{V} T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*volu]
			=[T/fin{V} T/prt{v,V}]

7.
		Decomposing a polymorphemic word mi#lavare.
		Next word contains multiple morphemes ['lavare_', 'mi']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[T/fin{V} T/prt{v,V}] + are
			Filtering out impossible merge sites...
				Reject [[T/fin [ha [T/prt [v volu]]]] are] due to bad left branch.
		Exploring solution number (1) =[T/prt{v,V} are]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [T/prt{v,V} are]]

9.
		Consume "v"

		[T/fin{V} [T/prt{v,V} are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[T/fin{V} [T/prt{v,V} are{v}]]

10.
		Consume "lava"

		[T/fin{V} [T/prt{v,V} are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[T/fin{V} [T/prt{v,V} are{v,V}]]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} [T/prt{v,V} are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T/prt{v,V} are{v,V}], D] because the operation breaks up an existing selectional dependency.
				"lava" lacks complement.
				Avoid [T/prt [v [volu [are [v lava]]]]] as left branch because it constitutes illicit structure.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid are{v,V} because it could break words.
				[T/fin{V} [T/prt{v,V} are{v,V}]] + D = -197]
				[T/prt{v,V} are{v,V}] + D = -194]
				are{v,V} + D = -38]
		Ranking completed:
			1. [are{v,V}; D]
			2. [[T/prt{v,V} are{v,V}]; D]
			3. [[T/fin{V} [T/prt{v,V} are{v,V}]]; D]
		Exploring solution number (1) =[are{v,V} D]
			Transferring are{v,V} to LF.
				1. Head movement reconstruction:
					=are{v,V}
				2. Feature processing:
					=are{v,V}
				3. Floater movement reconstruction:
					=are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				are{v,V} probing for CAT:V failed.
				"are{v,V}" lacks complement.
					=are{v,V}
				5. Agreement reconstruction:
					=are{v,V}
			=[T/fin{V} [T/prt{v,V} [are{v,V} D]]]

19.
		Consume "mi(cl)"

		[T/fin{V} [T/prt{v,V} [are{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Clitic D{N} not licensed.
			Clitic D{N} not licensed.
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/prt{v,V} are{v,V}] D]
			Transferring [T/prt{v,V} are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} are{v,V}].
						Extracted head "v{V}" and reconstructed it = [T/prt [v{V} are{v,V}]]
						Extracted head "volu" and reconstructed it = [T/prt [v [volu are{v,V}]]]
					Extracted head "v{V}" from are and created [T/prt [v [volu [are v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/prt [v [volu [are [v lava]]]]]
					=[T/prt [v [volu [are [v lava]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[T/prt [v [volu [are [v lava]]]]]
				3. Floater movement reconstruction:
					=[T/prt [v [volu [are [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					=[T/prt [v [volu [are [v lava]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [v [volu [are [v lava]]]]]
			=[T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D]]

21.
		Consume "mi(cl)"

		[T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D{N}]]

22.
	>>>	Trying candidate parse [T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{V} [T/prt{v,V} are{v,V}]] D]
			Transferring [T/fin{V} [T/prt{v,V} are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} are{v,V}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} are{v,V}]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} are{v,V}]]]]
						Extracted head "volu" and reconstructed it = [T/fin [ha [T/prt [v [volu are{v,V}]]]]]
					Extracted head "v{V}" from are and created [T/fin [ha [T/prt [v [volu [are v{V}]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
					=[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v [volu [are [v lava]]]]]]].
					=[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]]
			=[[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D]

23.
		Consume "mi(cl)"

		[[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D{N}]

24.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D{N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 136
['loro', 'gli#lavano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word gli#lavano.
		Next word contains multiple morphemes ['lavano_', 'gli']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D loro] T/fin{v}]

11.
		Consume "lava"

		[[D loro] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=[[D loro] T/fin{v,V}]

12.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[D loro] T/fin{v,V}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [lava P] due to complement selection.
				[[D loro] T/fin{v,V}] + P = -197]
				T/fin{v,V} + P = 104]
		Ranking completed:
			1. [T/fin{v,V}; P]
			2. [[[D loro] T/fin{v,V}]; P]
		Exploring solution number (1) =[T/fin{v,V} P]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[[D loro] [T/fin{v,V} P]]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{v,V} P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[D loro] [T/fin{v,V} P{D}]]

21.
		Consume "lo(cl)"

		[[D loro] [T/fin{v,V} P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[D loro] [T/fin{v,V} P{D,N}]]

22.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{v,V} P{D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Prioritize [P{D,N} D] due to complement selection.
				Avoid P{D,N} because it could break words.
				[[D loro] [T/fin{v,V} P{D,N}]] + D = -98]
				[T/fin{v,V} P{D,N}] + D = -96]
				P{D,N} + D = 9]
		Ranking completed:
			1. [P{D,N}; D]
			2. [[T/fin{v,V} P{D,N}]; D]
			3. [[[D loro] [T/fin{v,V} P{D,N}]]; D]
		Exploring solution number (1) =[P{D,N} D]
			Transferring P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					P was opened into [P [D lo(cl)]].
					=[P [D lo(cl)]]
				2. Feature processing:
					=[P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[P [D lo(cl)]]
				5. Agreement reconstruction:
					=[P [D lo(cl)]]
			=[[D loro] [T/fin{v,V} [[P [D lo(cl)]] D]]]

28.
		Consume "Luisa"

		[[D loro] [T/fin{v,V} [[P [D lo(cl)]] D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [T/fin{v,V} [[P [D lo(cl)]] D{N}]]]

29.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} [[P [D lo(cl)]] D{N}]]] (1.)
		Checking surface conditions...
			Clitic [P [D lo(cl)]] left-incorporated to T/fin{v,V}
		Reconstructing...
			Transferring [[D loro] [T/fin{v,V} [[P [D lo(cl)]] D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{v,V} [[P [D lo(cl)]] D{N}]]].
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [v{V} [[P [D lo(cl)]] D{N}]]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [v [lava [[P [D lo(cl)]] D{N}]]]]]
					Extracted head "Luisa" from D and created [[D loro] [T/fin [v [lava [[P [D lo(cl)]] [D Luisa]]]]]]
					=[[D loro] [T/fin [v [lava [[P [D lo(cl)]] [D Luisa]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [v [lava [[P [D lo(cl)]] [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [v [lava [[P [D lo(cl)]] [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [T/fin [[D loro] [v [lava [[P [D lo(cl)]] [D Luisa]]]]]]]
				D has unacceptable specifier [P [D lo(cl)]].
					Extraposition will be tried on [[D loro]:184 [T/fin [__:184 [v [lava [[P [D lo(cl)]] [D Luisa]]]]]]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[D loro]:184 [T/fin [__:184 [v [lava [[P [D lo(cl)]] <D Luisa>]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:184 [T/fin [__:184 [v [lava [[P [D lo(cl)]] <D Luisa>]]]]]]
			= [[D loro] [T/fin [[D loro] [v [lava [[P [D lo(cl)]] <D Luisa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:184 [T/fin [__:184 [v [lava [[P [D lo(cl)]] <D Luisa>]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['P([D lo(cl)])', 'lava([D loro])', 'v([D loro])']
!--->		Tests passed (with 29/234 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [lava [[P [D lo(cl)]] <D Luisa>]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [v [lava [[P [D lo(cl)]] <D Luisa>]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [[P [D N]] DP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
P: [P, V, v, TT/fin]
D: [D, P, V, v, TT/fin]
lo(cl): [N, D, P, V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 137
['gli#lavano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word gli#lavano.
		Next word contains multiple morphemes ['lavano_', 'gli']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

5.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*lava]
			=T/fin{v,V}

6.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:IT', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		T/fin{v,V} + P
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} P]
			Transferring T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=T/fin{v,V}
				2. Feature processing:
					=T/fin{v,V}
				3. Floater movement reconstruction:
					=T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Extraposition will be tried on T/fin{v,V}.
					=T/fin{v,V}
				5. Agreement reconstruction:
					=T/fin{v,V}
			=[T/fin{v,V} P]

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{v,V} P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[T/fin{v,V} P{D}]

15.
		Consume "lo(cl)"

		[T/fin{v,V} P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[T/fin{v,V} P{D,N}]

16.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{v,V} P{D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [P{D,N} D] due to complement selection.
				Avoid P{D,N} because it could break words.
				[T/fin{v,V} P{D,N}] + D = -98]
				P{D,N} + D = 6]
		Ranking completed:
			1. [P{D,N}; D]
			2. [[T/fin{v,V} P{D,N}]; D]
		Exploring solution number (1) =[P{D,N} D]
			Transferring P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					P was opened into [P [D lo(cl)]].
					=[P [D lo(cl)]]
				2. Feature processing:
					=[P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[P [D lo(cl)]]
				5. Agreement reconstruction:
					=[P [D lo(cl)]]
			=[T/fin{v,V} [[P [D lo(cl)]] D]]

22.
		Consume "Luisa"

		[T/fin{v,V} [[P [D lo(cl)]] D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[T/fin{v,V} [[P [D lo(cl)]] D{N}]]

23.
	>>>	Trying candidate parse [T/fin{v,V} [[P [D lo(cl)]] D{N}]] (1.)
		Checking surface conditions...
			Clitic [P [D lo(cl)]] left-incorporated to T/fin{v,V}
		Reconstructing...
			Transferring [T/fin{v,V} [[P [D lo(cl)]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} [[P [D lo(cl)]] D{N}]].
						Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[P [D lo(cl)]] D{N}]]]
						Extracted head "lava" and reconstructed it = [T/fin [v [lava [[P [D lo(cl)]] D{N}]]]]
					Extracted head "Luisa" from D and created [T/fin [v [lava [[P [D lo(cl)]] [D Luisa]]]]]
					=[T/fin [v [lava [[P [D lo(cl)]] [D Luisa]]]]]
				2. Feature processing:
					=[T/fin [v [lava [[P [D lo(cl)]] [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[T/fin [v [lava [[P [D lo(cl)]] [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [P [D lo(cl)]].
					Extraposition will be tried on [T/fin [v [lava [[P [D lo(cl)]] [D Luisa]]]]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[T/fin [v [lava [[P [D lo(cl)]] <D Luisa>]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [v [lava [[P [D lo(cl)]] <D Luisa>]]]]
			= [T/fin [v [lava [[P [D lo(cl)]] <D Luisa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [v [lava [[P [D lo(cl)]] <D Luisa>]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['P([D lo(cl)])', 'lava(T/fin)', 'v(T/fin)']
!--->		Tests passed (with 23/175 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [[P [D lo(cl)]] <D Luisa>]]]]
		Grammar: [T/fin [v [lava [[P [D lo(cl)]] <D Luisa>]]]]
		Spellout TT/finP = [TT/fin [v [V [[P [D N]] DP]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin]
v: [v, TT/fin]
lava: [V, v, TT/fin]
P: [P, V, v, TT/fin]
D: [D, P, V, v, TT/fin]
lo(cl): [N, D, P, V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 138
['loro', 'gli#la#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word gli#la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la_', 'gli']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

11.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] T/fin{V}] + D = -98]
				T/fin{V} + D = 56]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

20.
		Consume "la(cl)"

		[[D loro] [T/fin{V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [T/fin{V} D{N}]]

21.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[D loro] [T/fin{V} D{N}]] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				Avoid TT/finP as SPEC, P.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} D{N}]] + P = -98]
				[T/fin{V} D{N}] + P = -96]
				D{N} + P = 106]
		Ranking completed:
			1. [D{N}; P]
			2. [[T/fin{V} D{N}]; P]
			3. [[[D loro] [T/fin{V} D{N}]]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [T/fin{V} [[D la(cl)] P]]]

24.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} [[D la(cl)] P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[D loro] [T/fin{V} [[D la(cl)] P{D}]]]

30.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} [[D la(cl)] P{D}]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[D loro] [T/fin{V} [[D la(cl)] P{D,N}]]]

31.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} [[D la(cl)] P{D,N}]]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D N] P] T/prt] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				[[D loro] [T/fin{V} [[D la(cl)] P{D,N}]]] + T/prt = -98]
				[T/fin{V} [[D la(cl)] P{D,N}]] + T/prt = -96]
				P{D,N} + T/prt = 3]
		Ranking completed:
			1. [P{D,N}; T/prt]
			2. [[T/fin{V} [[D la(cl)] P{D,N}]]; T/prt]
			3. [[[D loro] [T/fin{V} [[D la(cl)] P{D,N}]]]; T/prt]
		Exploring solution number (1) =[P{D,N} T/prt]
			Transferring P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					P was opened into [P [D lo(cl)]].
					=[P [D lo(cl)]]
				2. Feature processing:
					=[P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[P [D lo(cl)]]
				5. Agreement reconstruction:
					=[P [D lo(cl)]]
			=[[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt]]]]

38.
		Consume "v"

		[[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v}]]]]

39.
		Consume "lava"

		[[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]]]

40.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] left-incorporated to T/fin{V}
			Clitic [P [D lo(cl)]] left-incorporated to [D la(cl)]
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [[D la(cl)] [[P [D lo(cl)]] [T/prt v{V}]]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [[D la(cl)] [[P [D lo(cl)]] [T/prt [v lava]]]]]]]
					=[[D loro] [T/fin [ha [[D la(cl)] [[P [D lo(cl)]] [T/prt [v lava]]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [[D la(cl)] [[P [D lo(cl)]] [T/prt [v lava]]]]]]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [P [D lo(cl)]]
						<P [D lo(cl)]> was made an adjunct.
						Floater <P [D lo(cl)]> dropped.
						 = [[D loro] [T/fin [ha [[D la(cl)] [<P [D lo(cl)]>:14 [T/prt [[v lava] <PP>:14]]]]]]]
					=[[D loro] [T/fin [ha [[D la(cl)] [<P [D lo(cl)]>:14 [T/prt [[v lava] <PP>:14]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [[D la(cl)] [<P [D lo(cl)]>:14 [T/prt [[v lava] <PP>:14]]]]]]]]
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:191 [T/fin [__:191 [ha [[D la(cl)]:192 [<P [D lo(cl)]>:14 [T/prt [[v [lava __:192]] <PP>:14]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:191 [T/fin [__:191 [ha [[D la(cl)]:192 [<P [D lo(cl)]>:14 [T/prt [[v [lava __:192]] <PP>:14]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[D loro]:191 [T/fin [__:191 [ha [[D la(cl)]:192 [<P [D lo(cl)]>:14 [T/prt [[v [lava __:192]] <PP>:14]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:191 [T/fin [__:191 [ha [[D la(cl)]:192 [<P [D lo(cl)]>:14 [T/prt [[v [lava __:192]] <PP>:14]]]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. T/prt 3. [D la(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/prt 3. T/prt 4. [D la(cl)] 5. [D loro] 6. T/fin 7. [D loro] )
				__ with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/prt 3. [D la(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['__([D lo(cl)])', 'ha([[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]])', 'lava([D la(cl)])', 'v(T/prt)']
!--->		Tests passed (with 40/321 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [__:1 [ha [[D la(cl)]:2 [<P [D lo(cl)]>:3 [T/prt [[v [lava __:2]] <PP>:3]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [PP:3 [T [[v [V __:2]] __:3]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
__: [D, V, v, T, V, TT/fin]
__: [N, D, V, v, T, V, TT/fin]
__: [P, T, V, TT/fin]
__: [D, P, T, V, TT/fin]
__: [N, D, P, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 139
['gli#la#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word gli#la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la_', 'gli']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

5.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} D]

14.
		Consume "la(cl)"

		[T/fin{V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[T/fin{V} D{N}]

15.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:IT', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[T/fin{V} D{N}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} D{N}] + P = -98]
				D{N} + P = 104]
		Ranking completed:
			1. [D{N}; P]
			2. [[T/fin{V} D{N}]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[T/fin{V} [[D la(cl)] P]]

18.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} [[D la(cl)] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[T/fin{V} [[D la(cl)] P{D}]]

24.
		Consume "lo(cl)"

		[T/fin{V} [[D la(cl)] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[T/fin{V} [[D la(cl)] P{D,N}]]

25.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} [[D la(cl)] P{D,N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D N] P] T/prt] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				[T/fin{V} [[D la(cl)] P{D,N}]] + T/prt = -98]
				P{D,N} + T/prt = 2]
		Ranking completed:
			1. [P{D,N}; T/prt]
			2. [[T/fin{V} [[D la(cl)] P{D,N}]]; T/prt]
		Exploring solution number (1) =[P{D,N} T/prt]
			Transferring P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					P was opened into [P [D lo(cl)]].
					=[P [D lo(cl)]]
				2. Feature processing:
					=[P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[P [D lo(cl)]]
				5. Agreement reconstruction:
					=[P [D lo(cl)]]
			=[T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt]]]

32.
		Consume "v"

		[T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v}]]]

33.
		Consume "lava"

		[T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]]

34.
	>>>	Trying candidate parse [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D la(cl)] left-incorporated to T/fin{V}
			Clitic [P [D lo(cl)]] left-incorporated to [D la(cl)]
		Reconstructing...
			Transferring [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [[D la(cl)] [[P [D lo(cl)]] [T/prt v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [[D la(cl)] [[P [D lo(cl)]] [T/prt [v lava]]]]]]
					=[T/fin [ha [[D la(cl)] [[P [D lo(cl)]] [T/prt [v lava]]]]]]
				2. Feature processing:
					=[T/fin [ha [[D la(cl)] [[P [D lo(cl)]] [T/prt [v lava]]]]]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [P [D lo(cl)]]
						<P [D lo(cl)]> was made an adjunct.
						Floater <P [D lo(cl)]> dropped.
						 = [T/fin [ha [[D la(cl)] [<P [D lo(cl)]>:16 [T/prt [[v lava] <PP>:16]]]]]]
					=[T/fin [ha [[D la(cl)] [<P [D lo(cl)]>:16 [T/prt [[v lava] <PP>:16]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [T/fin [ha [[D la(cl)]:273 [<P [D lo(cl)]>:16 [T/prt [[v [lava __:273]] <PP>:16]]]]]]
					Remaining items in memory buffer: []
					=[T/fin [ha [[D la(cl)]:273 [<P [D lo(cl)]>:16 [T/prt [[v [lava __:273]] <PP>:16]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)]:273.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[T/fin [ha [[D la(cl)]:273 [<P [D lo(cl)]>:16 [T/prt [[v [lava __:273]] <PP>:16]]]]]]
			= [T/fin [ha [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [T/fin [ha [[D la(cl)]:273 [<P [D lo(cl)]>:16 [T/prt [[v [lava __:273]] <PP>:16]]]]]] into Conceptual-Intentional system...
				ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. T/prt 3. [D la(cl)] 4. T/fin )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/prt 3. T/prt 4. [D la(cl)] 5. T/fin )
				__ with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/prt 3. [D la(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['__([D lo(cl)])', 'ha([[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]])', 'lava([D la(cl)])', 'v(T/prt)']
!--->		Tests passed (with 34/261 operations) <------------------------------------
		Solution:
		[T/fin [ha [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]]]
		Grammar: [T/fin [ha [[D la(cl)]:1 [<P [D lo(cl)]>:2 [T/prt [[v [lava __:1]] <PP>:2]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [PP:2 [T [[v [V __:1]] __:2]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin: [TT/fin]
ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
T/prt: [T, V, TT/fin]
v: [v, T, V, TT/fin]
lava: [V, v, T, V, TT/fin]
__: [D, V, v, T, V, TT/fin]
__: [N, D, V, v, T, V, TT/fin]
__: [P, T, V, TT/fin]
__: [D, P, T, V, TT/fin]
__: [N, D, P, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 140
['loro', 'la#gli#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word la#gli#hanno.
		Next word contains multiple morphemes ['hanno_', 'gli_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

11.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['inc$', 'dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "dat$"
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[D loro] T/fin{V}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				Prioritize [ha P] due to complement selection.
				[[D loro] T/fin{V}] + P = -98]
				T/fin{V} + P = 104]
		Ranking completed:
			1. [T/fin{V}; P]
			2. [[[D loro] T/fin{V}]; P]
		Exploring solution number (1) =[T/fin{V} P]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} P]]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[D loro] [T/fin{V} P{D}]]

21.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[D loro] [T/fin{V} P{D,N}]]

22.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} P{D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Prioritize [P{D,N} D] due to complement selection.
				Avoid P{D,N} because it could break words.
				[[D loro] [T/fin{V} P{D,N}]] + D = -98]
				[T/fin{V} P{D,N}] + D = -96]
				P{D,N} + D = 9]
		Ranking completed:
			1. [P{D,N}; D]
			2. [[T/fin{V} P{D,N}]; D]
			3. [[[D loro] [T/fin{V} P{D,N}]]; D]
		Exploring solution number (1) =[P{D,N} D]
			Transferring P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					P was opened into [P [D lo(cl)]].
					=[P [D lo(cl)]]
				2. Feature processing:
					=[P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[P [D lo(cl)]]
				5. Agreement reconstruction:
					=[P [D lo(cl)]]
			=[[D loro] [T/fin{V} [[P [D lo(cl)]] D]]]

30.
		Consume "la(cl)"

		[[D loro] [T/fin{V} [[P [D lo(cl)]] D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [T/fin{V} [[P [D lo(cl)]] D{N}]]]

31.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} [[P [D lo(cl)]] D{N}]]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[P [D N]] D] T/prt] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				[[D loro] [T/fin{V} [[P [D lo(cl)]] D{N}]]] + T/prt = -98]
				[T/fin{V} [[P [D lo(cl)]] D{N}]] + T/prt = -96]
				D{N} + T/prt = 3]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} [[P [D lo(cl)]] D{N}]]; T/prt]
			3. [[[D loro] [T/fin{V} [[P [D lo(cl)]] D{N}]]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt]]]]

38.
		Consume "v"

		[[D loro] [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v}]]]]

39.
		Consume "lava"

		[[D loro] [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]]]

40.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]]] (1.)
		Checking surface conditions...
			Clitic [P [D lo(cl)]] left-incorporated to T/fin{V}
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} [[P [D lo(cl)]] D{N}]] T/prt]
			Transferring [T/fin{V} [[P [D lo(cl)]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[P [D lo(cl)]] D{N}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [[P [D lo(cl)]] D{N}]]]
					Extracted head "la(cl)" from D and created [T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]
					=[T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]
				2. Feature processing:
					=[T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [P [D lo(cl)]]
					=[T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [P [D lo(cl)]].
					Extraposition will be tried on [T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					=[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]]
			=[[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt]]

41.
		Consume "v"

		[[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v}]]

42.
		Consume "lava"

		[[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}]]

43.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]]
					=[[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [[P [D N]] [D N]]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:199 [? [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [__:199 [v lava]]]]]].
					=[[D loro]:199 [? [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [__:199 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from __:199.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N by phi-Agree from __:199.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL by phi-Agree from __:199.
					T/prt acquired PHI:PER:3 by phi-Agree from __:199.
					=[[D loro]:199 [? [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [__:199 [v lava]]]]]]
			= [[D loro] [? [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
P: [P, V, TT/fin, ?]
D: [D, P, V, TT/fin, ?]
lo(cl): [N, D, P, V, TT/fin, ?]
D: [D, V, TT/fin, ?]
la(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} [[P [D lo(cl)]] D{N}]]] T/prt]
			Transferring [[D loro] [T/fin{V} [[P [D lo(cl)]] D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[P [D lo(cl)]] D{N}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [[P [D lo(cl)]] D{N}]]]]
					Extracted head "la(cl)" from D and created [[D loro] [T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]]
					=[[D loro] [T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [P [D lo(cl)]]
					=[[D loro] [T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [[P [D lo(cl)]] [D la(cl)]]]]]]
				D has unacceptable specifier [P [D lo(cl)]].
					Extraposition will be tried on [[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] [D la(cl)]]]]]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]]
			=[[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt]

44.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v}]

45.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v,V}]

46.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [v lava]]]
					=[[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [[P [D N]] [D N]]]]]]]
				T/prt has unacceptable specifier [[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [v lava]]].
					=[[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [v lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [[P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:200 [T/fin [__:200 [ha [[P [D lo(cl)]] <D la(cl)>]]]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} P{D,N}] D]
			Transferring [T/fin{V} P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} P{D,N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha P{D,N}]]
					Extracted head "D{N}" from P and created [T/fin [ha [P D{N}]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [T/fin [ha [P [D lo(cl)]]]]
					=[T/fin [ha [P [D lo(cl)]]]]
				2. Feature processing:
					=[T/fin [ha [P [D lo(cl)]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<P [D lo(cl)]> was made an adjunct.
					Dropping <P [D lo(cl)]>
					=[T/fin [ha <P [D lo(cl)]>]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha <P [D lo(cl)]>]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [ha <P [D lo(cl)]>]]
			=[[D loro] [[T/fin [ha <P [D lo(cl)]>]] D]]

47.
		Consume "la(cl)"

		[[D loro] [[T/fin [ha <P [D lo(cl)]>]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[T/fin [ha <P [D lo(cl)]>]] D{N}]]

48.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [[T/fin [ha <P [D lo(cl)]>]] D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D loro] [[T/fin [ha <P [D lo(cl)]>]] D{N}]] + T/prt = 1]
				[[T/fin [ha <P [D lo(cl)]>]] D{N}] + T/prt = 2]
				D{N} + T/prt = 3]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[T/fin [ha <P [D lo(cl)]>]] D{N}]; T/prt]
			3. [[[D loro] [[T/fin [ha <P [D lo(cl)]>]] D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt]]]

55.
		Consume "v"

		[[D loro] [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v}]]]

56.
		Consume "lava"

		[[D loro] [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]]]

57.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]]] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [ha <P [D lo(cl)]>]] D{N}] T/prt]
			Transferring [[T/fin [ha <P [D lo(cl)]>]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[T/fin [ha <P [D lo(cl)]>]] D{N}].
					Extracted head "la(cl)" from D and created [[T/fin [ha <P [D lo(cl)]>]] [D la(cl)]]
					=[[T/fin [ha <P [D lo(cl)]>]] [D la(cl)]]
				2. Feature processing:
					=[[T/fin [ha <P [D lo(cl)]>]] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
					P at the right failed to tail [CAT:v]
						<P [D lo(cl)]> was made an adjunct.
					Dropping <P [D lo(cl)]>
					=[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:GEN:_']
					=[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>]
			=[[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt]]

58.
		Consume "v"

		[[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v}]]

59.
		Consume "lava"

		[[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}]]

60.
	>>>	Trying candidate parse [[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}]] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}]].
					Extracted head "v{V}" from T/prt and created [[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]]
					=[[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]]
				2. Feature processing:
					=[[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[[TT/fin [V [P [D N]]]] [D N]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of v
					Result [[D loro] [? [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [[D loro] [v lava]]]]]]
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:203 [? [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [__:203 [v lava]]]]]].
					=[[D loro]:203 [? [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [__:203 [v lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from __:203.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N by phi-Agree from __:203.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL by phi-Agree from __:203.
					T/prt acquired PHI:PER:3 by phi-Agree from __:203.
					=[[D loro]:203 [? [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [__:203 [v lava]]]]]]
			= [[D loro] [? [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				T/prt has unacceptable specifier [[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
T/fin: [TT/fin, ?]
ha: [V, TT/fin, ?]
P: [P, V, TT/fin, ?]
D: [D, P, V, TT/fin, ?]
lo(cl): [N, D, P, V, TT/fin, ?]
D: [D, ?]
la(cl): [N, D, ?]
T/prt: [T, ?]
__: [D, T, ?]
__: [N, D, T, ?]
v: [v, T, ?]
lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [[T/fin [ha <P [D lo(cl)]>]] D{N}]] T/prt]
			Transferring [[D loro] [[T/fin [ha <P [D lo(cl)]>]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha <P [D lo(cl)]>]] D{N}]].
					Extracted head "la(cl)" from D and created [[D loro] [[T/fin [ha <P [D lo(cl)]>]] [D la(cl)]]]
					=[[D loro] [[T/fin [ha <P [D lo(cl)]>]] [D la(cl)]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha <P [D lo(cl)]>]] [D la(cl)]]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
					P at the right failed to tail [CAT:v]
						<P [D lo(cl)]> was made an adjunct.
					Dropping <P [D lo(cl)]>
					=[[D loro] [[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [[T/fin [[D loro] [ha <P [D lo(cl)]>]]] <D la(cl)>]]
					=[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:GEN:_']
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					=[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]]
			=[[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] T/prt]

61.
		Consume "v"

		[[[D loro] [[T/fin [[D loro] [ha <P [D lo(cl)]>]]] <D la(cl)>]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] T/prt{v}]

62.
		Consume "lava"

		[[[D loro] [[T/fin [[D loro] [ha <P [D lo(cl)]>]]] <D la(cl)>]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] T/prt{v,V}]

63.
	>>>	Trying candidate parse [[[D loro] [[T/fin [[D loro] [ha <P [D lo(cl)]>]]] <D la(cl)>]] T/prt{v,V}] (6.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] [T/prt [v lava]]]
					=[[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [[TT/fin [[D N] [V [P [D N]]]]] [D N]]]]
				T/prt has unacceptable specifier [[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] [T/prt [v lava]]].
					=[[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]] [T/prt [v lava]]]
			= [[[D loro] [[T/fin [[D loro] [ha <P [D lo(cl)]>]]] <D la(cl)>]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[D loro]:204 [[T/fin [__:204 [ha <P [D lo(cl)]>]]] <D la(cl)>]].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
D: [D]
la(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} P{D,N}]] D]
			Transferring [[D loro] [T/fin{V} P{D,N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} P{D,N}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha P{D,N}]]]
					Extracted head "D{N}" from P and created [[D loro] [T/fin [ha [P D{N}]]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[D loro] [T/fin [ha [P [D lo(cl)]]]]]
					=[[D loro] [T/fin [ha [P [D lo(cl)]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [P [D lo(cl)]]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<P [D lo(cl)]> was made an adjunct.
					Dropping <P [D lo(cl)]>
					=[[D loro] [T/fin [ha <P [D lo(cl)]>]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]]
					=[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]]
			=[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] D]

64.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] D{N}]

65.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] [[D la(cl)] T/prt]]

72.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] [[D la(cl)] T/prt{v}]]

73.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] [[D la(cl)] T/prt{v,V}]]

74.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] [[D la(cl)] T/prt{v,V}]] (7.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] D{N}] T/prt]
			Transferring [[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] D{N}].
					Extracted head "la(cl)" from D and created [[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] [D la(cl)]]
					=[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] [D la(cl)]]
				2. Feature processing:
					=[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
					P at the right failed to tail [CAT:v]
						<P [D lo(cl)]> was made an adjunct.
					Dropping <P [D lo(cl)]>
					=[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>]
			=[[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt]

75.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v}]

76.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v,V}]

77.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v,V}] (8.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [v lava]]]
					=[[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] [V [P [D N]]]]]] [D N]]]
				T/prt has unacceptable specifier [[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [v lava]]].
					=[[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [v lava]]]
			= [[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[D loro]:205 [T/fin [__:205 [ha <P [D lo(cl)]>]]]] <D la(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
D: [D]
la(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] P]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:206 [T/fin [__:206 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:206 [T/fin [__:206 ha]]]
			=[[[D loro]:206 [T/fin [__:206 ha]]] P]

78.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[D loro]:206 [T/fin [__:206 ha]]] P{D}]

84.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[D loro]:206 [T/fin [__:206 ha]]] P{D,N}]

85.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] P{D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid PP as SPEC, D.
				Prioritize [P{D,N} D] due to complement selection.
				[[[D loro]:206 [T/fin [__:206 ha]]] P{D,N}] + D = -98]
				P{D,N} + D = 104]
		Ranking completed:
			1. [P{D,N}; D]
			2. [[[[D loro]:206 [T/fin [__:206 ha]]] P{D,N}]; D]
		Exploring solution number (1) =[P{D,N} D]
			Transferring P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					P was opened into [P [D lo(cl)]].
					=[P [D lo(cl)]]
				2. Feature processing:
					=[P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[P [D lo(cl)]]
				5. Agreement reconstruction:
					=[P [D lo(cl)]]
			=[[[D loro]:206 [T/fin [__:206 ha]]] [[P [D lo(cl)]] D]]

93.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:206 [T/fin [__:206 ha]]] [[P [D lo(cl)]] D{N}]]

94.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] D{N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] ha]]] [[P <<D la(cl)> <D lo(cl)>>] <D la(cl)>]] T/prt] due to bad left branch.
			Ranking remaining sites...
				[[P [D lo(cl)]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[P [D lo(cl)]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:206 [T/fin [__:206 ha]]] [[P [D lo(cl)]] [[D la(cl)] T/prt]]]

101.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:206 [T/fin [__:206 ha]]] [[P [D lo(cl)]] [[D la(cl)] T/prt{v}]]]

102.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:206 [T/fin [__:206 ha]]] [[P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]]

103.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]] (9.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[P [D lo(cl)]] D{N}] T/prt]
			Transferring [[P [D lo(cl)]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[P [D lo(cl)]] D{N}].
					Extracted head "la(cl)" from D and created [[P [D lo(cl)]] [D la(cl)]]
					=[[P [D lo(cl)]] [D la(cl)]]
				2. Feature processing:
					=[[P [D lo(cl)]] [D la(cl)]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [P [D lo(cl)]]
					=[[P [D lo(cl)]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [P [D lo(cl)]].
					Extraposition will be tried on [[P [D lo(cl)]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[P [D lo(cl)]] <D la(cl)>]
				5. Agreement reconstruction:
					=[[P [D lo(cl)]] <D la(cl)>]
			=[[[D loro]:206 [T/fin [__:206 ha]]] [[[P [D lo(cl)]] <D la(cl)>] T/prt]]

104.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[[P [D lo(cl)]] <D la(cl)>] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:206 [T/fin [__:206 ha]]] [[[P [D lo(cl)]] <D la(cl)>] T/prt{v}]]

105.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[[P [D lo(cl)]] <D la(cl)>] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:206 [T/fin [__:206 ha]]] [[[P [D lo(cl)]] <D la(cl)>] T/prt{v,V}]]

106.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[[P [D lo(cl)]] <D la(cl)>] T/prt{v,V}]] (10.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:206 [T/fin [__:206 ha]]] P{D,N}] D]
			Transferring [[[D loro]:206 [T/fin [__:206 ha]]] P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:206 [T/fin [__:206 ha]]] P{D,N}].
					Extracted head "D{N}" from P and created [[[D loro]:206 [T/fin [__:206 ha]]] [P D{N}]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[[D loro]:206 [T/fin [__:206 ha]]] [P [D lo(cl)]]]
					=[[[D loro]:206 [T/fin [__:206 ha]]] [P [D lo(cl)]]]
				2. Feature processing:
					=[[[D loro]:206 [T/fin [__:206 ha]]] [P [D lo(cl)]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<P [D lo(cl)]> was made an adjunct.
					Dropping <P [D lo(cl)]>
					=[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>]
				5. Agreement reconstruction:
					=[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>]
			=[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] D]

107.
		Consume "la(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] D{N}]

108.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] [[D la(cl)] T/prt]]

115.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] [[D la(cl)] T/prt{v}]]

116.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] [[D la(cl)] T/prt{v,V}]]

117.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] [[D la(cl)] T/prt{v,V}]] (11.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] D{N}] T/prt]
			Transferring [[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] D{N}].
					Extracted head "la(cl)" from D and created [[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] [D la(cl)]]
					=[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] [D la(cl)]]
				2. Feature processing:
					=[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
					P at the right failed to tail [CAT:v]
						<P [D lo(cl)]> was made an adjunct.
					Dropping <P [D lo(cl)]>
					=[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>]
				5. Agreement reconstruction:
					=[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>]
			=[[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt]

118.
		Consume "v"

		[[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt{v}]

119.
		Consume "lava"

		[[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt{v,V}]

120.
	>>>	Trying candidate parse [[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt{v,V}] (12.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] [T/prt [v lava]]]
					=[[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[[D N] [TT/fin [[D N] V]]] [P [D N]]] [D N]]]
				T/prt has unacceptable specifier [[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] [T/prt [v lava]]].
					=[[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>] [T/prt [v lava]]]
			= [[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[[[D loro]:206 [T/fin [__:206 ha]]] <P [D lo(cl)]>] <D la(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
__: [D, TT/fin]
__: [N, D, TT/fin]
ha: [V, TT/fin]
P: [P]
D: [D, P]
lo(cl): [N, D, P]
D: [D]
la(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "dat$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli_".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#gli#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 141
['la#gli#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#gli#hanno.
		Next word contains multiple morphemes ['hanno_', 'gli_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

5.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['inc$', 'dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "dat$"
		Storing inflectional feature ['-', 'DAT', 'LANG:IT', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		T/fin{V} + P
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} P]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} P]

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[T/fin{V} P{D}]

15.
		Consume "lo(cl)"

		[T/fin{V} P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[T/fin{V} P{D,N}]

16.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} P{D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [P{D,N} D] due to complement selection.
				Avoid P{D,N} because it could break words.
				[T/fin{V} P{D,N}] + D = -98]
				P{D,N} + D = 6]
		Ranking completed:
			1. [P{D,N}; D]
			2. [[T/fin{V} P{D,N}]; D]
		Exploring solution number (1) =[P{D,N} D]
			Transferring P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					Reconstructing head movement for P{D,N}.
					Extracted head "D{N}" from P and created [P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [P [D lo(cl)]]
					P was opened into [P [D lo(cl)]].
					=[P [D lo(cl)]]
				2. Feature processing:
					=[P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[P [D lo(cl)]]
				5. Agreement reconstruction:
					=[P [D lo(cl)]]
			=[T/fin{V} [[P [D lo(cl)]] D]]

24.
		Consume "la(cl)"

		[T/fin{V} [[P [D lo(cl)]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[T/fin{V} [[P [D lo(cl)]] D{N}]]

25.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} [[P [D lo(cl)]] D{N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[P [D N]] D] T/prt] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				[T/fin{V} [[P [D lo(cl)]] D{N}]] + T/prt = -98]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[T/fin{V} [[P [D lo(cl)]] D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt]]]

32.
		Consume "v"

		[T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v}]]]

33.
		Consume "lava"

		[T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]]

34.
	>>>	Trying candidate parse [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [P [D lo(cl)]] left-incorporated to T/fin{V}
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} [[P [D lo(cl)]] D{N}]] T/prt]
			Transferring [T/fin{V} [[P [D lo(cl)]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [[P [D lo(cl)]] D{N}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [[P [D lo(cl)]] D{N}]]]
					Extracted head "la(cl)" from D and created [T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]
					=[T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]
				2. Feature processing:
					=[T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [P [D lo(cl)]]
					=[T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unacceptable specifier [P [D lo(cl)]].
					Extraposition will be tried on [T/fin [ha [[P [D lo(cl)]] [D la(cl)]]]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					=[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]]
			=[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt]

35.
		Consume "v"

		[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v}]

36.
		Consume "lava"

		[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}]

37.
	>>>	Trying candidate parse [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]
					=[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[TT/fin [V [[P [D N]] [D N]]]]]
				T/prt has unacceptable specifier [T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]].
				"lava" lacks complement.
					Extraposition will be tried on [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]].
					=[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]
			= [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]].
				"lava" lacks complement.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

T/fin: [TT/fin]
ha: [V, TT/fin]
P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} P{D,N}] D]
			Transferring [T/fin{V} P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} P{D,N}].
						Extracted head "ha" and reconstructed it = [T/fin [ha P{D,N}]]
					Extracted head "D{N}" from P and created [T/fin [ha [P D{N}]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [T/fin [ha [P [D lo(cl)]]]]
					=[T/fin [ha [P [D lo(cl)]]]]
				2. Feature processing:
					=[T/fin [ha [P [D lo(cl)]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<P [D lo(cl)]> was made an adjunct.
					Dropping <P [D lo(cl)]>
					=[T/fin [ha <P [D lo(cl)]>]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[T/fin [ha <P [D lo(cl)]>]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[T/fin [ha <P [D lo(cl)]>]]
			=[[T/fin [ha <P [D lo(cl)]>]] D]

38.
		Consume "la(cl)"

		[[T/fin [ha <P [D lo(cl)]>]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[T/fin [ha <P [D lo(cl)]>]] D{N}]

39.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[T/fin [ha <P [D lo(cl)]>]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[T/fin [ha <P [D lo(cl)]>]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[T/fin [ha <P [D lo(cl)]>]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt]]

46.
		Consume "v"

		[[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v}]]

47.
		Consume "lava"

		[[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]]

48.
	>>>	Trying candidate parse [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [ha <P [D lo(cl)]>]] D{N}] T/prt]
			Transferring [[T/fin [ha <P [D lo(cl)]>]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[T/fin [ha <P [D lo(cl)]>]] D{N}].
					Extracted head "la(cl)" from D and created [[T/fin [ha <P [D lo(cl)]>]] [D la(cl)]]
					=[[T/fin [ha <P [D lo(cl)]>]] [D la(cl)]]
				2. Feature processing:
					=[[T/fin [ha <P [D lo(cl)]>]] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
					P at the right failed to tail [CAT:v]
						<P [D lo(cl)]> was made an adjunct.
					Dropping <P [D lo(cl)]>
					=[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:GEN:_']
					=[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>]
			=[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt]

49.
		Consume "v"

		[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v}]

50.
		Consume "lava"

		[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}]

51.
	>>>	Trying candidate parse [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]
					=[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]
				2. Feature processing:
					=[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[TT/fin [V [P [D N]]]] [D N]]]
				T/prt has unacceptable specifier [[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>].
				"lava" lacks complement.
					Extraposition will be tried on [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]].
					=[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]
			= [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unacceptable specifier [[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>].
				"lava" lacks complement.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/CL/P', 'CAT:ARG/P', 'CAT:CL', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

T/fin: [TT/fin]
ha: [V, TT/fin]
P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
D: [D]
la(cl): [N, D]
T/prt: [T]
v: [v, T]
lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "dat$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli_".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#gli#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 142
['loro', 'hanno', 'gli#la#lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word gli#la#lavata.
		Next word contains multiple morphemes ['lavata_', 'la_', 'gli']
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['inc$', '3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] T/fin{V}] + T/prt = -98]
				T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [T/fin{V}; T/prt]
			2. [[[D loro] T/fin{V}]; T/prt]
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} T/prt]]

18.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [T/fin{V} T/prt{v}]]

19.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [T/fin{V} T/prt{v,V}]]

20.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [T/fin{V} T/prt{v,V}]] + D = -197]
				[T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 65]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
				An EPP-head "T/prt{v,V}" lacks specifier.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [T/fin{V} [T/prt{v,V} D]]]

29.
		Consume "la(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]

30.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				An EPP-head "T/prt" lacks specifier.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D la(cl)]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, P.
				An EPP-head "T/prt" lacks specifier.
				Avoid [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T/prt{v,V} D{N}], P] because the operation breaks up an existing selectional dependency.
				An EPP-head "T/prt" lacks specifier.
				Avoid [T/prt [v [lava [D la(cl)]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + P = -197]
				[T/fin{V} [T/prt{v,V} D{N}]] + P = -194]
				[T/prt{v,V} D{N}] + P = -191]
				D{N} + P = 108]
		Ranking completed:
			1. [D{N}; P]
			2. [[T/prt{v,V} D{N}]; P]
			3. [[T/fin{V} [T/prt{v,V} D{N}]]; P]
			4. [[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D la(cl)] P]]]]

33.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D la(cl)] P]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D la(cl)] P{D}]]]]

39.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D la(cl)] P{D}]]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[D loro] [T/fin{V} [T/prt{v,V} [[D la(cl)] P{D,N}]]]]

40.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [[D la(cl)] P{D,N}]]]] (1.)
		Checking surface conditions...
			Clitic [[D la(cl)] P{D,N}] left-incorporated to [D la(cl)]
			Clitic [D la(cl)] not licensed.
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/prt{v,V} D{N}] P]
			Transferring [T/prt{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/prt [v{V} D{N}]]
						Extracted head "lava" and reconstructed it = [T/prt [v [lava D{N}]]]
					Extracted head "la(cl)" from D and created [T/prt [v [lava [D la(cl)]]]]
					=[T/prt [v [lava [D la(cl)]]]]
				2. Feature processing:
					=[T/prt [v [lava [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[T/prt [v [lava [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier.
					=[T/prt [v [lava [D la(cl)]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [v [lava [D la(cl)]]]]
			=[[D loro] [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P]]]

41.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[D loro] [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D}]]]

47.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D}]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[D loro] [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D,N}]]]

48.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D,N}]]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{V} [T/prt{v,V} D{N}]] P]
			Transferring [T/fin{V} [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} D{N}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} D{N}]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} D{N}]]]]
						Extracted head "lava" and reconstructed it = [T/fin [ha [T/prt [v [lava D{N}]]]]]
					Extracted head "la(cl)" from D and created [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
					=[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier.
					Extraposition will be tried on [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]].
					=[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
			=[[D loro] [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P]]

49.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[D loro] [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D}]]

55.
		Consume "lo(cl)"

		[[D loro] [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D,N}]]

56.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D,N}]] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] P]
			Transferring [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha [T/prt{v,V} D{N}]]]]
						Extracted head "v{V}" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v{V} D{N}]]]]]
						Extracted head "lava" and reconstructed it = [[D loro] [T/fin [ha [T/prt [v [lava D{N}]]]]]]
					Extracted head "la(cl)" from D and created [[D loro] [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]]
					=[[D loro] [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D la(cl)]]]]]]]]
				An EPP-head "T/prt" lacks specifier.
					Extraposition will be tried on [[D loro]:213 [T/fin [__:213 [ha [T/prt [v [lava [D la(cl)]]]]]]]].
					=[[D loro]:213 [T/fin [__:213 [ha [T/prt [v [lava [D la(cl)]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:213 [T/fin [__:213 [ha [T/prt [v [lava [D la(cl)]]]]]]]]
			=[[[D loro]:213 [T/fin [__:213 [ha [T/prt [v [lava [D la(cl)]]]]]]]] P]

57.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D la(cl)]]]]]]]] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[D loro]:213 [T/fin [__:213 [ha [T/prt [v [lava [D la(cl)]]]]]]]] P{D}]

63.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D la(cl)]]]]]]]] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[D loro]:213 [T/fin [__:213 [ha [T/prt [v [lava [D la(cl)]]]]]]]] P{D,N}]

64.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D la(cl)]]]]]]]] P{D,N}] (4.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v lava]]]]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]]

65.
		Consume "la(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]]

66.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] + P = 1]
				[[T/fin [ha [T/prt [v lava]]]] D{N}] + P = 2]
				D{N} + P = 3]
		Ranking completed:
			1. [D{N}; P]
			2. [[[T/fin [ha [T/prt [v lava]]]] D{N}]; P]
			3. [[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P]]]

69.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D}]]]

75.
		Consume "lo(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D}]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[D loro] [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D,N}]]]

76.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D,N}]]] (5.)
		Checking surface conditions...
			Clitic [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D,N}]] left-incorporated to [D la(cl)]
			Clitic [[D la(cl)] P{D,N}] left-incorporated to [D la(cl)]
				Clitic adjoined to complex phrase, not word
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [ha [T/prt [v lava]]]] D{N}] P]
			Transferring [[T/fin [ha [T/prt [v lava]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[T/fin [ha [T/prt [v lava]]]] D{N}].
					Extracted head "la(cl)" from D and created [[T/fin [ha [T/prt [v lava]]]] [D la(cl)]]
					=[[T/fin [ha [T/prt [v lava]]]] [D la(cl)]]
				2. Feature processing:
					=[[T/fin [ha [T/prt [v lava]]]] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
						Floater <D la(cl)> dropped.
						 = [[T/fin [ha [<DP>:20 [T/prt [v lava]]]]] <D la(cl)>:20]
					=[[T/fin [ha [<DP>:20 [T/prt [v lava]]]]] <D la(cl)>:20]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "____" into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=____) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[T/fin [ha [<DP>:20 [T/prt [v [lava <DP>:20]]]]]] <D la(cl)>:20]
					Remaining items in memory buffer: []
					=[[T/fin [ha [<DP>:20 [T/prt [v [lava <DP>:20]]]]]] <D la(cl)>:20]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:GEN:_']
					T/fin acquired PHI:GEN:F by phi-Agree from <DP>:20.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[T/fin [ha [<DP>:20 [T/prt [v [lava <DP>:20]]]]]] <D la(cl)>:20]
			=[[D loro] [[[T/fin [ha [<DP>:20 [T/prt [v [lava <DP>:20]]]]]] <D la(cl)>:20] P]]

77.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [[[T/fin [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]] <D la(cl)>] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[D loro] [[[T/fin [ha [<DP>:20 [T/prt [v [lava <DP>:20]]]]]] <D la(cl)>:20] P{D}]]

83.
		Consume "lo(cl)"

		[[D loro] [[[T/fin [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]] <D la(cl)>] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[D loro] [[[T/fin [ha [<DP>:20 [T/prt [v [lava <DP>:20]]]]]] <D la(cl)>:20] P{D,N}]]

84.
	>>>	Trying candidate parse [[D loro] [[[T/fin [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]] <D la(cl)>] P{D,N}]] (6.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] P]
			Transferring [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]].
					Extracted head "la(cl)" from D and created [[D loro] [[T/fin [ha [T/prt [v lava]]]] [D la(cl)]]]
					=[[D loro] [[T/fin [ha [T/prt [v lava]]]] [D la(cl)]]]
				2. Feature processing:
					=[[D loro] [[T/fin [ha [T/prt [v lava]]]] [D la(cl)]]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
						Floater <D la(cl)> dropped.
						 = [[D loro] [[T/fin [ha [<DP>:21 [T/prt [v lava]]]]] <D la(cl)>:21]]
					=[[D loro] [[T/fin [ha [<DP>:21 [T/prt [v lava]]]]] <D la(cl)>:21]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [[T/fin [[D loro] [ha [<DP>:21 [T/prt [v lava]]]]]] <D la(cl)>:21]]
					Moving "____" into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=____) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[D loro]:221 [[T/fin [__:221 [ha [<DP>:21 [T/prt [v [lava <DP>:21]]]]]]] <D la(cl)>:21]]
					Remaining items in memory buffer: []
					=[[D loro]:221 [[T/fin [__:221 [ha [<DP>:21 [T/prt [v [lava <DP>:21]]]]]]] <D la(cl)>:21]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:GEN:_']
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:221 [[T/fin [__:221 [ha [<DP>:21 [T/prt [v [lava <DP>:21]]]]]]] <D la(cl)>:21]]
			=[[[D loro]:221 [[T/fin [__:221 [ha [<DP>:21 [T/prt [v [lava <DP>:21]]]]]]] <D la(cl)>:21]] P]

85.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [[T/fin [[D loro] [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]]] <D la(cl)>]] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[D loro]:221 [[T/fin [__:221 [ha [<DP>:21 [T/prt [v [lava <DP>:21]]]]]]] <D la(cl)>:21]] P{D}]

91.
		Consume "lo(cl)"

		[[[D loro] [[T/fin [[D loro] [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]]] <D la(cl)>]] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[D loro]:221 [[T/fin [__:221 [ha [<DP>:21 [T/prt [v [lava <DP>:21]]]]]]] <D la(cl)>:21]] P{D,N}]

92.
	>>>	Trying candidate parse [[[D loro] [[T/fin [[D loro] [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]]] <D la(cl)>]] P{D,N}] (7.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} T/prt{v,V}]].
						Extracted head "ha" and reconstructed it = [[D loro] [T/fin [ha T/prt{v,V}]]]
					Extracted head "v{V}" from T/prt and created [[D loro] [T/fin [ha [T/prt v{V}]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [ha [T/prt [v lava]]]]]
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				2. Feature processing:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin [ha [T/prt [v lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]]
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
					Extraposition will be tried on [[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]].
					=[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]]
			=[[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] D]

93.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] D{N}]

94.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] D{N}] + P = 1]
				D{N} + P = 2]
		Ranking completed:
			1. [D{N}; P]
			2. [[[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] D{N}]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] [[D la(cl)] P]]

97.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] [[D la(cl)] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] [[D la(cl)] P{D}]]

103.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] [[D la(cl)] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] [[D la(cl)] P{D,N}]]

104.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] [[D la(cl)] P{D,N}]] (8.)
		Checking surface conditions...
			Clitic [[D la(cl)] P{D,N}] left-incorporated to [D la(cl)]
				Clitic adjoined to complex phrase, not word
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] D{N}] P]
			Transferring [[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] D{N}].
					Extracted head "la(cl)" from D and created [[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] [D la(cl)]]
					=[[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] [D la(cl)]]
				2. Feature processing:
					=[[[D loro]:223 [T/fin [__:223 [ha [T/prt [v lava]]]]]] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
						Floater <D la(cl)> dropped.
						 = [[[D loro]:223 [T/fin [__:223 [ha [<DP>:24 [T/prt [v lava]]]]]]] <D la(cl)>:24]
					=[[[D loro]:223 [T/fin [__:223 [ha [<DP>:24 [T/prt [v lava]]]]]]] <D la(cl)>:24]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "____" into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=____) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[[D loro]:223 [T/fin [__:223 [ha [<DP>:24 [T/prt [v [lava <DP>:24]]]]]]]] <D la(cl)>:24]
					Remaining items in memory buffer: []
					=[[[D loro]:223 [T/fin [__:223 [ha [<DP>:24 [T/prt [v [lava <DP>:24]]]]]]]] <D la(cl)>:24]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:223 [T/fin [__:223 [ha [<DP>:24 [T/prt [v [lava <DP>:24]]]]]]]] <D la(cl)>:24]
			=[[[[D loro]:223 [T/fin [__:223 [ha [<DP>:24 [T/prt [v [lava <DP>:24]]]]]]]] <D la(cl)>:24] P]

105.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[[D loro] [T/fin [[D loro] [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]]]] <D la(cl)>] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[[D loro]:223 [T/fin [__:223 [ha [<DP>:24 [T/prt [v [lava <DP>:24]]]]]]]] <D la(cl)>:24] P{D}]

111.
		Consume "lo(cl)"

		[[[[D loro] [T/fin [[D loro] [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]]]] <D la(cl)>] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[[D loro]:223 [T/fin [__:223 [ha [<DP>:24 [T/prt [v [lava <DP>:24]]]]]]]] <D la(cl)>:24] P{D,N}]

112.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]]]] <D la(cl)>] P{D,N}] (9.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la_".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] T/prt]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "ha" from T/fin and created [[D loro] [T/fin ha]]
					=[[D loro] [T/fin ha]]
				2. Feature processing:
					=[[D loro] [T/fin ha]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of ha
					Result [[D loro] [T/fin [[D loro] ha]]]
					=[[D loro]:227 [T/fin [__:227 ha]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:227 [T/fin [__:227 ha]]]
			=[[[D loro]:227 [T/fin [__:227 ha]]] T/prt]

113.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:227 [T/fin [__:227 ha]]] T/prt{v}]

114.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:227 [T/fin [__:227 ha]]] T/prt{v,V}]

115.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:227 [T/fin [__:227 ha]]].
				"lava" lacks complement.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:227 [T/fin [__:227 ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 158]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:227 [T/fin [__:227 ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
				An EPP-head "T/prt{v,V}" lacks specifier.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt{v,V} D]]

124.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt{v,V} D{N}]]

125.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:227 [T/fin [__:227 ha]]].
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [lava [D la(cl)]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "T/prt" lacks specifier.
				Avoid [T/prt [v [lava [D la(cl)]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt{v,V} D{N}]] + P = -98]
				[T/prt{v,V} D{N}] + P = -96]
				D{N} + P = 106]
		Ranking completed:
			1. [D{N}; P]
			2. [[T/prt{v,V} D{N}]; P]
			3. [[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt{v,V} D{N}]]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt{v,V} [[D la(cl)] P]]]

128.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D la(cl)] P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt{v,V} [[D la(cl)] P{D}]]]

134.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D la(cl)] P{D}]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt{v,V} [[D la(cl)] P{D,N}]]]

135.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D la(cl)] P{D,N}]]] (10.)
		Checking surface conditions...
			Clitic [[D la(cl)] P{D,N}] left-incorporated to [D la(cl)]
			Clitic [D la(cl)] not licensed.
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/prt{v,V} D{N}] P]
			Transferring [T/prt{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/prt [v{V} D{N}]]
						Extracted head "lava" and reconstructed it = [T/prt [v [lava D{N}]]]
					Extracted head "la(cl)" from D and created [T/prt [v [lava [D la(cl)]]]]
					=[T/prt [v [lava [D la(cl)]]]]
				2. Feature processing:
					=[T/prt [v [lava [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[T/prt [v [lava [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier.
					=[T/prt [v [lava [D la(cl)]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [v [lava [D la(cl)]]]]
			=[[[D loro]:227 [T/fin [__:227 ha]]] [[T/prt [v [lava [D la(cl)]]]] P]]

136.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [lava [D la(cl)]]]] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[D loro]:227 [T/fin [__:227 ha]]] [[T/prt [v [lava [D la(cl)]]]] P{D}]]

142.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [lava [D la(cl)]]]] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[D loro]:227 [T/fin [__:227 ha]]] [[T/prt [v [lava [D la(cl)]]]] P{D,N}]]

143.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [lava [D la(cl)]]]] P{D,N}]] (11.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt{v,V} D{N}]] P]
			Transferring [[[D loro]:227 [T/fin [__:227 ha]]] [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:227 [T/fin [__:227 ha]]] [T/prt{v,V} D{N}]].
						Extracted head "v{V}" and reconstructed it = [[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v{V} D{N}]]]
						Extracted head "lava" and reconstructed it = [[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava D{N}]]]]
					Extracted head "la(cl)" from D and created [[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava [D la(cl)]]]]]
					=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava [D la(cl)]]]]]
				2. Feature processing:
					=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava [D la(cl)]]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava [D la(cl)]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:227 [T/fin [__:227 ha]]].
					Extraposition will be tried on [[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava [D la(cl)]]]]].
					=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava [D la(cl)]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava [D la(cl)]]]]]
			=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava [D la(cl)]]]]] P]

144.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [lava [D la(cl)]]]]] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava [D la(cl)]]]]] P{D}]

150.
		Consume "lo(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [lava [D la(cl)]]]]] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [lava [D la(cl)]]]]] P{D,N}]

151.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [lava [D la(cl)]]]]] P{D,N}] (12.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:227 [T/fin [__:227 ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:227 [T/fin [__:227 ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:227 [T/fin [__:227 ha]]] T/prt{v,V}].
					Extracted head "v{V}" from T/prt and created [[[D loro]:227 [T/fin [__:227 ha]]] [T/prt v{V}]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]]
					=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]]
				2. Feature processing:
					=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:227 [T/fin [__:227 ha]]].
				"lava" lacks complement.
					Extraposition will be tried on [[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]].
					=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]]
			=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] D]

152.
		Consume "la(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] D{N}]

153.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unacceptable specifier [[D loro]:227 [T/fin [__:227 ha]]].
				Avoid [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [<D la(cl)> lava]]]] <D la(cl)>] as left branch because it constitutes illicit structure.
				[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] D{N}] + P = -98]
				D{N} + P = 2]
		Ranking completed:
			1. [D{N}; P]
			2. [[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] D{N}]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] [[D la(cl)] P]]

156.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] [[D la(cl)] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] [[D la(cl)] P{D}]]

162.
		Consume "lo(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] [[D la(cl)] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] [[D la(cl)] P{D,N}]]

163.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] [[D la(cl)] P{D,N}]] (13.)
		Checking surface conditions...
			Clitic [[D la(cl)] P{D,N}] left-incorporated to [D la(cl)]
				Clitic adjoined to complex phrase, not word
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] D{N}] P]
			Transferring [[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] D{N}].
					Extracted head "la(cl)" from D and created [[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] [D la(cl)]]
					=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] [D la(cl)]]
				2. Feature processing:
					=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v lava]]] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
						Floater <D la(cl)> dropped.
						 = [[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [<DP>:27 lava]]]] <D la(cl)>:27]
					=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [<DP>:27 lava]]]] <D la(cl)>:27]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unacceptable specifier [[D loro]:227 [T/fin [__:227 ha]]].
					Extraposition will be tried on [[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [<DP>:27 lava]]]] <D la(cl)>:27].
					=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [<DP>:27 lava]]]] <D la(cl)>:27]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [<DP>:27 lava]]]] <D la(cl)>:27]
			=[[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [<DP>:27 lava]]]] <D la(cl)>:27] P]

164.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [<D la(cl)> lava]]]] <D la(cl)>] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [<DP>:27 lava]]]] <D la(cl)>:27] P{D}]

170.
		Consume "lo(cl)"

		[[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [<D la(cl)> lava]]]] <D la(cl)>] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[[[D loro]:227 [T/fin [__:227 ha]]] [T/prt [v [<DP>:27 lava]]]] <D la(cl)>:27] P{D,N}]

171.
	>>>	Trying candidate parse [[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [<D la(cl)> lava]]]] <D la(cl)>] P{D,N}] (14.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la_".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli#la#lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 143
['hanno', 'gli#la#lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word gli#la#lavata.
		Next word contains multiple morphemes ['lavata_', 'la_', 'gli']
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['inc$', '3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[T/fin{V} T/prt]

12.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

13.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} T/prt{v,V}]

14.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[T/fin{V} T/prt{v,V}] + D = -197]
				T/prt{v,V} + D = 60]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
				An EPP-head "T/prt{v,V}" lacks specifier.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[T/fin{V} [T/prt{v,V} D]]

23.
		Consume "la(cl)"

		[T/fin{V} [T/prt{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[T/fin{V} [T/prt{v,V} D{N}]]

24.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:IT', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[T/fin{V} [T/prt{v,V} D{N}]] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				An EPP-head "T/prt" lacks specifier.
				Avoid [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T/prt{v,V} D{N}], P] because the operation breaks up an existing selectional dependency.
				An EPP-head "T/prt" lacks specifier.
				Avoid [T/prt [v [lava [D la(cl)]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[T/fin{V} [T/prt{v,V} D{N}]] + P = -197]
				[T/prt{v,V} D{N}] + P = -194]
				D{N} + P = 106]
		Ranking completed:
			1. [D{N}; P]
			2. [[T/prt{v,V} D{N}]; P]
			3. [[T/fin{V} [T/prt{v,V} D{N}]]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[T/fin{V} [T/prt{v,V} [[D la(cl)] P]]]

27.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} [T/prt{v,V} [[D la(cl)] P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[T/fin{V} [T/prt{v,V} [[D la(cl)] P{D}]]]

33.
		Consume "lo(cl)"

		[T/fin{V} [T/prt{v,V} [[D la(cl)] P{D}]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[T/fin{V} [T/prt{v,V} [[D la(cl)] P{D,N}]]]

34.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [[D la(cl)] P{D,N}]]] (1.)
		Checking surface conditions...
			Clitic [[D la(cl)] P{D,N}] left-incorporated to [D la(cl)]
			Clitic [D la(cl)] not licensed.
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/prt{v,V} D{N}] P]
			Transferring [T/prt{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} D{N}].
						Extracted head "v{V}" and reconstructed it = [T/prt [v{V} D{N}]]
						Extracted head "lava" and reconstructed it = [T/prt [v [lava D{N}]]]
					Extracted head "la(cl)" from D and created [T/prt [v [lava [D la(cl)]]]]
					=[T/prt [v [lava [D la(cl)]]]]
				2. Feature processing:
					=[T/prt [v [lava [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[T/prt [v [lava [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier.
					=[T/prt [v [lava [D la(cl)]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [v [lava [D la(cl)]]]]
			=[T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P]]

35.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D}]]

41.
		Consume "lo(cl)"

		[T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D,N}]]

42.
	>>>	Trying candidate parse [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D,N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{V} [T/prt{v,V} D{N}]] P]
			Transferring [T/fin{V} [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [T/prt{v,V} D{N}]].
						Extracted head "ha" and reconstructed it = [T/fin [ha [T/prt{v,V} D{N}]]]
						Extracted head "v{V}" and reconstructed it = [T/fin [ha [T/prt [v{V} D{N}]]]]
						Extracted head "lava" and reconstructed it = [T/fin [ha [T/prt [v [lava D{N}]]]]]
					Extracted head "la(cl)" from D and created [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
					=[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier.
					Extraposition will be tried on [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]].
					=[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]]
			=[[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P]

43.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D}]

49.
		Consume "lo(cl)"

		[[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D,N}]

50.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D,N}] (3.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			Transferring [T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/fin{V} T/prt{v,V}].
						Extracted head "ha" and reconstructed it = [T/fin [ha T/prt{v,V}]]
					Extracted head "v{V}" from T/prt and created [T/fin [ha [T/prt v{V}]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [T/fin [ha [T/prt [v lava]]]]
					=[T/fin [ha [T/prt [v lava]]]]
				2. Feature processing:
					=[T/fin [ha [T/prt [v lava]]]]
				3. Floater movement reconstruction:
					=[T/fin [ha [T/prt [v lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier.
				"lava" lacks complement.
					Extraposition will be tried on [T/fin [ha [T/prt [v lava]]]].
					=[T/fin [ha [T/prt [v lava]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/fin [ha [T/prt [v lava]]]]
			=[[T/fin [ha [T/prt [v lava]]]] D]

51.
		Consume "la(cl)"

		[[T/fin [ha [T/prt [v lava]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[T/fin [ha [T/prt [v lava]]]] D{N}]

52.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#P#cl#dat.
		Next word contains multiple morphemes ['dat$', 'cl$', 'P$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:IT', 'TAIL:CAT:v'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[T/fin [ha [T/prt [v lava]]]] D{N}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[T/fin [ha [T/prt [v lava]]]] D{N}] + P = 1]
				D{N} + P = 2]
		Ranking completed:
			1. [D{N}; P]
			2. [[[T/fin [ha [T/prt [v lava]]]] D{N}]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P]]

55.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D}]]

61.
		Consume "lo(cl)"

		[[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D,N}]]

62.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D,N}]] (4.)
		Checking surface conditions...
			Clitic [[D la(cl)] P{D,N}] left-incorporated to [D la(cl)]
				Clitic adjoined to complex phrase, not word
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Clitic P{D,N} left-incorporated to [D la(cl)]
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [ha [T/prt [v lava]]]] D{N}] P]
			Transferring [[T/fin [ha [T/prt [v lava]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[T/fin [ha [T/prt [v lava]]]] D{N}].
					Extracted head "la(cl)" from D and created [[T/fin [ha [T/prt [v lava]]]] [D la(cl)]]
					=[[T/fin [ha [T/prt [v lava]]]] [D la(cl)]]
				2. Feature processing:
					=[[T/fin [ha [T/prt [v lava]]]] [D la(cl)]]
				3. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D la(cl)> was made an adjunct.
					Dropping <D la(cl)>
						Floater <D la(cl)> dropped.
						 = [[T/fin [ha [<DP>:19 [T/prt [v lava]]]]] <D la(cl)>:19]
					=[[T/fin [ha [<DP>:19 [T/prt [v lava]]]]] <D la(cl)>:19]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "____" into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=____) from memory buffer into Comp of {'ARG/V', 'V', 'ARG'}.
					Result [[T/fin [ha [<DP>:19 [T/prt [v [lava <DP>:19]]]]]] <D la(cl)>:19]
					Remaining items in memory buffer: []
					=[[T/fin [ha [<DP>:19 [T/prt [v [lava <DP>:19]]]]]] <D la(cl)>:19]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:GEN:_']
					T/fin acquired PHI:GEN:F by phi-Agree from <DP>:19.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[T/fin [ha [<DP>:19 [T/prt [v [lava <DP>:19]]]]]] <D la(cl)>:19]
			=[[[T/fin [ha [<DP>:19 [T/prt [v [lava <DP>:19]]]]]] <D la(cl)>:19] P]

63.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[T/fin [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]] <D la(cl)>] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[P*D]
			=[[[T/fin [ha [<DP>:19 [T/prt [v [lava <DP>:19]]]]]] <D la(cl)>:19] P{D}]

69.
		Consume "lo(cl)"

		[[[T/fin [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]] <D la(cl)>] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[P{D}*lo(cl)]
			=[[[T/fin [ha [<DP>:19 [T/prt [v [lava <DP>:19]]]]]] <D la(cl)>:19] P{D,N}]

70.
	>>>	Trying candidate parse [[[T/fin [ha [<D la(cl)> [T/prt [v [lava <D la(cl)>]]]]]] <D la(cl)>] P{D,N}] (5.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la_".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli#la#lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 144
['loro', 'sembrano', 'lavare#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word sembra-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sembra-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

9.
		Consume "sembra"

		[[D loro] T/fin] + sembra
			Filtering out impossible merge sites...
			Sink "sembra" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sembra]
			=[[D loro] T/fin{V}]

10.
		Decomposing a polymorphemic word lavare#mi.
		Next word contains multiple morphemes ['mi_', 'lavare']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				[D loro] has no thematic role.
				sembra (sembra) is missing complement ARE/inf
				Avoid [[D loro] [T/fin sembra]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				Avoid [sembra D] due to complement selection.
				[[D loro] T/fin{V}] + D = -197]
				T/fin{V} + D = -42]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin [sembra <D mi(cl)>]]] are] due to bad left branch.
				Reject [[T/fin [sembra <D mi(cl)>]] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [T/fin{V} [[D mi(cl)] are]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} [[D mi(cl)] are{v}]]]

22.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} [[D mi(cl)] are{v,V}]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] right-incorporated to [[D mi(cl)] are{v,V}]
		Reconstructing...
			Transferring [[D loro] [T/fin{V} [[D mi(cl)] are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [T/fin{V} [[D mi(cl)] are{v,V}]]].
						Extracted head "sembra" and reconstructed it = [[D loro] [T/fin [sembra [[D mi(cl)] are{v,V}]]]]
					Extracted head "v{V}" from are and created [[D loro] [T/fin [sembra [[D mi(cl)] [are v{V}]]]]]
					Reconstructing head movement for v{V}.
					Extracted head "lava" from v and created [[D loro] [T/fin [sembra [[D mi(cl)] [are [v lava]]]]]]
					=[[D loro] [T/fin [sembra [[D mi(cl)] [are [v lava]]]]]]
				2. Feature processing:
					Solving feature ambiguite for "are".
					=[[D loro] [T/fin [sembra [[D mi(cl)] [are [v lava]]]]]]
				3. Floater movement reconstruction:
					[D mi(cl)] failed to tail [-VAL][ARG]
					Dropping [D mi(cl)]
						<D mi(cl)> was made an adjunct.
						Floater <D mi(cl)> dropped.
						 = [[D loro] [T/fin [sembra [<D mi(cl)>:28 [are [v [<DP>:28 lava]]]]]]]
					=[[D loro] [T/fin [sembra [<D mi(cl)>:28 [are [v [<DP>:28 lava]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of are
					Result [[D loro] [T/fin [sembra [<D mi(cl)>:28 [[D loro] [are [v [<DP>:28 lava]]]]]]]]
					Moving "____" into memory buffer from SPEC of "are".
					Memory buffer: [[D N]]
					Dropping constituent __:228 from memory buffer into Spec of v
					Result [[D loro]:228 [T/fin [sembra [<D mi(cl)>:28 [__:228 [are [__:228 [v [<DP>:28 lava]]]]]]]]]
					=[[D loro]:228 [T/fin [sembra [<D mi(cl)>:28 [__:228 [are [__:228 [v [<DP>:28 lava]]]]]]]]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					are has unvalued phi-features ['PHI:NUM:_', 'PHI:PER:_']
					are acquired PHI:NUM:PL from the edge of are.
					are acquired PHI:PER:3 from the edge of are.
					=[[D loro]:228 [T/fin [sembra [<D mi(cl)>:28 [__:228 [are [__:228 [v [<DP>:28 lava]]]]]]]]]
			= [[D loro] [T/fin [sembra [<D mi(cl)> [[D loro] [are [[D loro] [v [<D mi(cl)> lava]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:228 [T/fin [sembra [<D mi(cl)>:28 [__:228 [are [__:228 [v [<DP>:28 lava]]]]]]]]] into Conceptual-Intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. [D loro] 3. <D mi(cl)> 4. T/fin 5. [D loro] )
				lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mi(cl)>    (alternatives: 2. [D loro] 3. [D loro] 4. <D mi(cl)> 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['lava(<D mi(cl)>)', 'v([D loro])']
!--->		Tests passed (with 23/212 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [sembra [<D mi(cl)> [[D loro] [are [[D loro] [v [<D mi(cl)> lava]]]]]]]]]
		Grammar: [[D loro]:1 [T/fin [sembra [<D mi(cl)>:2 [__:1 [are [__:1 [v [<DP>:2 lava]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [V [DP:2 [__:1 [INF [__:1 [v [__:2 V]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sembra:['!COMP:ARE/inf', '-ARG', '-COMP:D', '-COMP:N', '-COMP:V', '-R', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:seem', 'PF:sembra', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/infW', 'VAL']
sembra:['!COMP:ARE/inf', '-ARG', '-COMP:D', '-COMP:N', '-COMP:V', '-R', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:seem', 'PF:sembra', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
lava:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'R', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
T/fin: [TT/fin]
sembra: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
__: [D, V, TT/fin]
__: [N, D, V, TT/fin]
are: [INF, V, TT/fin]
__: [D, INF, V, TT/fin]
__: [N, D, INF, V, TT/fin]
v: [v, INF, V, TT/fin]
__: [D, v, INF, V, TT/fin]
__: [N, D, v, INF, V, TT/fin]
lava: [V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 145
['loro', 'mi#sembrano', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#sembrano.
		Next word contains multiple morphemes ['sembrano_', 'mi']
		Decomposing a polymorphemic word sembra-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'sembra-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] T/fin]

10.
		Consume "sembra"

		[[D loro] T/fin] + sembra
			Filtering out impossible merge sites...
			Sink "sembra" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sembra]
			=[[D loro] T/fin{V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin,R', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				[D loro] has no thematic role.
				sembra (sembra) is missing complement ARE/inf
				Avoid [[D loro] [T/fin sembra]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				Avoid [sembra D] due to complement selection.
				[[D loro] T/fin{V}] + D = -197]
				T/fin{V} + D = -42]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D loro] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				1. Head movement reconstruction:
					=T/fin{V}
				2. Feature processing:
					=T/fin{V}
				3. Floater movement reconstruction:
					=T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Extraposition will be tried on T/fin{V}.
					=T/fin{V}
				5. Agreement reconstruction:
					=T/fin{V}
			=[[D loro] [T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin [sembra <D mi(cl)>]]] are] due to bad left branch.
				Reject [[T/fin [sembra <D mi(cl)>]] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [T/fin{V} [[D mi(cl)] are]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[D loro] [T/fin{V} [[D mi(cl)] are{v}]]]

22.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[D loro] [T/fin{V} [[D mi(cl)] are{v,V}]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] T/fin{V}] D]
			Transferring [[D loro] T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] T/fin{V}].
					Extracted head "sembra" from T/fin and created [[D loro] [T/fin sembra]]
					=[[D loro] [T/fin sembra]]
				2. Feature processing:
					=[[D loro] [T/fin sembra]]
				3. Floater movement reconstruction:
					=[[D loro] [T/fin sembra]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
				[D loro] has no thematic role.
				sembra (sembra) is missing complement ARE/inf
					Extraposition will be tried on [[D loro] [T/fin sembra]].
					=[[D loro] [T/fin sembra]]
				5. Agreement reconstruction:
					T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					T/fin acquired PHI:GEN:N from the edge of T/fin.
					T/fin acquired PHI:NUM:PL from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro] [T/fin sembra]]
			=[[[D loro] [T/fin sembra]] D]

24.
		Consume "mi(cl)"

		[[[D loro] [T/fin sembra]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro] [T/fin sembra]] D{N}]

25.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] [T/fin sembra]] D{N}] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin sembra]] <D mi(cl)>] are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[D loro] [T/fin sembra]] [[D mi(cl)] are]]

26.
		Consume "v"

		[[[D loro] [T/fin sembra]] [[D mi(cl)] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[are*v]
			=[[[D loro] [T/fin sembra]] [[D mi(cl)] are{v}]]

27.
		Consume "lava"

		[[[D loro] [T/fin sembra]] [[D mi(cl)] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[are{v}*lava]
			=[[[D loro] [T/fin sembra]] [[D mi(cl)] are{v,V}]]

28.
	>>>	Trying candidate parse [[[D loro] [T/fin sembra]] [[D mi(cl)] are{v,V}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sembra-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#sembrano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
