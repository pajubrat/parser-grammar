

\========================================================================
# 1
['lavano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=PRO.T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.v [PRO.lava D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]
					=[PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.lava [D Luisa]]]]
			= [T/fin [v [lava [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.lava [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.lava [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 2
['loro', 'lavano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D loro] PRO.T/fin{v}]

10.
		Consume "lava"

		[[D loro] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[D loro] PRO.T/fin{v,V}]

11.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[D loro] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D loro] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D loro] [PRO.T/fin{v,V} D]]

17.
		Consume "Luisa"

		[[D loro] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{v,V} D{N}]]

18.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v [PRO.lava D{N}]]]]
					Extracted head "Luisa" from D and created [[D loro] [PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]]
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.v [PRO.lava [D Luisa]]]]]]
					=[[D loro]:3 [PRO.T/fin [(DP):3 [PRO.v [PRO.lava [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:3 [phi.T/fin [(DP):3 [PRO.v [PRO.lava [D Luisa]]]]]]
			= [[D loro] [T/fin [[D loro] [v [lava [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:3 [phi.T/fin [(DP):3 [PRO.v [PRO.lava [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D Luisa])', 'PRO.v([D loro])']
!--->		Tests passed (with 18/151 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [lava [D Luisa]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.lava [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 3
['loro', 'devono', 'lavare', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

9.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] deva] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva PRO.are]]

10.
		Consume "v"

		[[D loro] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva PRO.are{v}]]

11.
		Consume "lava"

		[[D loro] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva PRO.are{v,V}]]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [deva are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Prioritize [lava D] due to complement selection.
				[[D loro] [PRO.deva PRO.are{v,V}]] + D = -98]
				[PRO.deva PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = 106]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.deva PRO.are{v,V}]; D]
			3. [[[D loro] [PRO.deva PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[[D loro] [PRO.deva [PRO.are{v,V} D]]]

18.
		Consume "Luisa"

		[[D loro] [deva [are{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.deva [PRO.are{v,V} D{N}]]]

19.
	>>>	Trying candidate parse [[D loro] [deva [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.deva [PRO.are{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva [PRO.are{v,V} D{N}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.deva [PRO.are [PRO.v{V} D{N}]]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.deva [PRO.are [PRO.v [PRO.lava D{N}]]]]]
					Extracted head "Luisa" from D and created [[D loro] [PRO.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]
					=[[D loro] [PRO.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.are
					Result [[D loro] [PRO.deva [[D loro] [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent (DP):8 from memory buffer into Spec of PRO.v
					Result [[D loro]:8 [PRO.deva [(DP):8 [PRO.are [(DP):8 [PRO.v [PRO.lava [D Luisa]]]]]]]]
					=[[D loro]:8 [PRO.deva [(DP):8 [PRO.are [(DP):8 [PRO.v [PRO.lava [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:8 [phi.deva [(DP):8 [phi.are [(DP):8 [PRO.v [PRO.lava [D Luisa]]]]]]]]
			= [[D loro] [deva [[D loro] [are [[D loro] [v [lava [D Luisa]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:8 [phi.deva [(DP):8 [phi.are [(DP):8 [PRO.v [PRO.lava [D Luisa]]]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. are 3. [D loro] 4. deva 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. are 4. [D loro] 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D Luisa])', 'PRO.v([D loro])']
!--->		Tests passed (with 19/186 operations) <------------------------------------
		Solution:
		[[D loro] [deva [[D loro] [are [[D loro] [v [lava [D Luisa]]]]]]]]
		Grammar: [[D loro]:1 [phi.deva [(DP):1 [phi.are [(DP):1 [PRO.v [PRO.lava [D Luisa]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [INF [__:1 [v [V [D N]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.deva: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
D: [D, V, v, INF, TT/fin]
Luisa: [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 4
['loro', 'hanno', 'lavato', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

14.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

15.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

16.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] + D = -98]
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -96]
				PRO.T/prt{v,V} + D = 112]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D]]]

22.
		Consume "Luisa"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} D{N}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} D{N}]]]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava D{N}]]]]]]
					Extracted head "Luisa" from D and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
					=[[D loro]:14 [PRO.T/fin [(DP):14 [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[D loro]:14 [phi.T/fin [(DP):14 [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:14 [phi.T/fin [(DP):14 [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha([D loro])', 'PRO.lava([D Luisa])', 'PRO.v([D loro])', 'Person feature is missing']
!--->		Tests passed (with 23/208 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [T [v [V [D N]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
phi.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 5
['io', 'ho', 'lavato', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word ha-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] PRO.T/fin]

10.
		Consume "ha"

		[[D io] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D io] PRO.T/fin{V}]

11.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D io] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D io] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D io] [PRO.T/fin{V} PRO.T/prt]]

15.
		Consume "v"

		[[D io] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [PRO.T/fin{V} PRO.T/prt{v}]]

16.
		Consume "lava"

		[[D io] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [PRO.T/fin{V} PRO.T/prt{v,V}]]

17.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[[D io] [PRO.T/fin{V} PRO.T/prt{v,V}]] + D = -98]
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -96]
				PRO.T/prt{v,V} + D = 112]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
			3. [[[D io] [PRO.T/fin{V} PRO.T/prt{v,V}]]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D io] [PRO.T/fin{V} [PRO.T/prt{v,V} D]]]

23.
		Consume "Luisa"

		[[D io] [T/fin{V} [T/prt{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]

24.
	>>>	Trying candidate parse [[D io] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D io] [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} D{N}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D io] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} D{N}]]]]]
						Extracted head "PRO.lava" and reconstructed it = [[D io] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava D{N}]]]]]]
					Extracted head "Luisa" from D and created [[D io] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
					=[[D io] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
				2. Feature processing:
					=[[D io] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
				3. Floater movement reconstruction:
					=[[D io] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.ha
					Result [[D io] [PRO.T/fin [[D io] [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
					=[[D io]:19 [PRO.T/fin [(DP):19 [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[D io]:19 [phi.T/fin [(DP):19 [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
			= [[D io] [T/fin [[D io] [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:19 [phi.T/fin [(DP):19 [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha([D io])', 'PRO.lava([D Luisa])', 'PRO.v([D io])', 'phi.T/prt([D io])']
!--->		Tests passed (with 24/211 operations) <------------------------------------
		Solution:
		[[D io] [T/fin [[D io] [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Grammar: [[D io]:1 [phi.T/fin [(DP):1 [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [T [v [V [D N]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
io: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
phi.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 6
['loro', 'hanno', 'voluto', 'lavare', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

11.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

12.
		Consume "volu"

		[[D loro] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

13.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] PRO.are] due to bad left branch.
				Reject [[T/fin [ha [T/prt [v volu]]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are]]]

14.
		Consume "v"

		[[D loro] [T/fin{V} [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v}]]]

15.
		Consume "lava"

		[[D loro] [T/fin{V} [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]]

16.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [[PRO.T/prt{v,V} PRO.are{v,V}], D] because the operation breaks up an existing selectional dependency.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.are{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]] + D = -98]
				[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]] + D = -96]
				[PRO.T/prt{v,V} PRO.are{v,V}] + D = -94]
				PRO.are{v,V} + D = 12]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.T/prt{v,V} PRO.are{v,V}]; D]
			3. [[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]; D]
			4. [[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D]]]]

22.
		Consume "Luisa"

		[[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D]]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} [PRO.are{v,V} D{N}]]]]]]
						Extracted head "PRO.volu" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are{v,V} D{N}]]]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v{V} D{N}]]]]]]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava D{N}]]]]]]]]]
					Extracted head "Luisa" from D and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]]]
					=[[D loro]:25 [PRO.T/fin [(DP):25 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:25 [phi.T/fin [(DP):25 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:25 [phi.T/fin [(DP):25 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.are with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.T/prt([D loro])', 'PRO.are([D loro])', 'PRO.ha([D loro])', 'PRO.lava([D Luisa])', 'PRO.v([D loro])', 'PRO.volu([D loro])']
!--->		Tests passed (with 23/248 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [T [v [V [INF [v [V [D N]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
PRO.are: [INF, V, v, T, V, TT/fin]
PRO.v: [v, INF, V, v, T, V, TT/fin]
PRO.lava: [V, v, INF, V, v, T, V, TT/fin]
D: [D, V, v, INF, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 7
['loro', 'stanno', 'lavando', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "sta"

		[[D loro] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D loro] T/fin{V}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D loro] PRO.T/fin{V}] + PRG = -98]
				PRO.T/fin{V} + PRG = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; PRG]
			2. [[[D loro] PRO.T/fin{V}]; PRG]
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.PRG]]

11.
		Consume "v"

		[[D loro] [T/fin{V} PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D loro] [PRO.T/fin{V} PRO.PRG{v}]]

12.
		Consume "lava"

		[[D loro] [T/fin{V} PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]]

13.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} PRG{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.PRG{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]] + D = -98]
				[PRO.T/fin{V} PRO.PRG{v,V}] + D = -96]
				PRO.PRG{v,V} + D = 9]
		Ranking completed:
			1. [PRO.PRG{v,V}; D]
			2. [[PRO.T/fin{V} PRO.PRG{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]]; D]
		Exploring solution number (1) =[PRO.PRG{v,V} D]
			Transferring PRO.PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.PRG{v,V}
				2. Feature processing:
					=PRO.PRG{v,V}
				3. Floater movement reconstruction:
					=PRO.PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.PRG{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.PRG{v,V}" lacks complement
					=PRO.PRG{v,V}
				5. Agreement reconstruction:
					=PRO.PRG{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.PRG{v,V} D]]]

19.
		Consume "Luisa"

		[[D loro] [T/fin{V} [PRG{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{V} [PRO.PRG{v,V} D{N}]]]

20.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [PRG{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [PRO.PRG{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [PRO.PRG{v,V} D{N}]]].
						Extracted head "PRO.sta" and reconstructed it = [[D loro] [PRO.T/fin [PRO.sta [PRO.PRG{v,V} D{N}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v{V} D{N}]]]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava D{N}]]]]]]
					Extracted head "Luisa" from D and created [[D loro] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.sta
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]]]
					=[[D loro]:30 [PRO.T/fin [(DP):30 [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:30 [phi.T/fin [(DP):30 [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]]]
			= [[D loro] [T/fin [[D loro] [sta [PRG [v [lava [D Luisa]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:30 [phi.T/fin [(DP):30 [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.PRG with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.PRG([D loro])', 'PRO.lava([D Luisa])', 'PRO.sta([D loro])', 'PRO.v([D loro])']
!--->		Tests passed (with 20/197 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [sta [PRG [v [lava [D Luisa]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF [v [V [D N]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sta: [V, TT/fin]
PRO.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]
D: [D, V, v, INF, V, TT/fin]
Luisa: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 8
['io', 'adoro', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] PRO.T/fin]

10.
		Consume "v"

		[[D io] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D io] PRO.T/fin{v}]

11.
		Consume "adora"

		[[D io] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D io] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D io] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D io] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D io] [PRO.T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D io] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D io] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D io] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D io] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [PRO.T/fin [[D io] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D io]:33 [PRO.T/fin [(DP):33 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
					=[[D io]:33 [phi.T/fin [(DP):33 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:33 [phi.T/fin [(DP):33 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D io])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Grammar: [[D io]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
io: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 9
['tu', 'adori', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word tu-#D#sg#2p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '2p$', 'sg$', 'D$', 'tu-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "tu"

		D + tu
			Filtering out impossible merge sites...
			Sink "tu" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*tu]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-i].
		Next word contains multiple morphemes ['[-i]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "tu" from D and created [D tu]
					Reconstructing head movement for D{N}.
					Extracted head "tu" from D and created [D tu]
					D was opened into [D tu].
					=[D tu]
				2. Feature processing:
					=[D tu]
				3. Floater movement reconstruction:
					=[D tu]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D tu]
				5. Agreement reconstruction:
					=[D tu]
			=[[D tu] PRO.T/fin]

10.
		Consume "v"

		[[D tu] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D tu] PRO.T/fin{v}]

11.
		Consume "adora"

		[[D tu] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D tu] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D tu] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D tu] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D tu] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D tu] [PRO.T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D tu] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D tu] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D tu] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D tu] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D tu] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D tu] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D tu] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D tu] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D tu] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D tu] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D tu] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D tu " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D tu] from memory buffer into Spec of PRO.v
					Result [[D tu] [PRO.T/fin [[D tu] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D tu]:36 [PRO.T/fin [(DP):36 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:2 from the edge of phi.T/fin.
					=[[D tu]:36 [phi.T/fin [(DP):36 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D tu] [T/fin [[D tu] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D tu]:36 [phi.T/fin [(DP):36 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tu]    (alternatives: 2. T/fin 3. [D tu] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D tu] 3. T/fin 4. [D tu] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D tu])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D tu] [T/fin [[D tu] [v [adora [D Luisa]]]]]]
		Grammar: [[D tu]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL', 'null']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL', 'null']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
tu: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 10
['lui', 'adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lui-#D#sg#3p#def#hum#m.
		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lui-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "lui"

		D + lui
			Filtering out impossible merge sites...
			Sink "lui" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lui]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-a].
		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lui" from D and created [D lui]
					Reconstructing head movement for D{N}.
					Extracted head "lui" from D and created [D lui]
					D was opened into [D lui].
					=[D lui]
				2. Feature processing:
					=[D lui]
				3. Floater movement reconstruction:
					=[D lui]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lui]
				5. Agreement reconstruction:
					=[D lui]
			=[[D lui] PRO.T/fin]

10.
		Consume "v"

		[[D lui] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D lui] PRO.T/fin{v}]

11.
		Consume "adora"

		[[D lui] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D lui] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D lui] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D lui] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D lui] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D lui] [PRO.T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D lui] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D lui] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D lui] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D lui] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lui] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D lui] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D lui] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D lui] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D lui] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D lui] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D lui] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lui " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D lui] from memory buffer into Spec of PRO.v
					Result [[D lui] [PRO.T/fin [[D lui] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D lui]:39 [PRO.T/fin [(DP):39 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D lui]:39 [phi.T/fin [(DP):39 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D lui] [T/fin [[D lui] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D lui]:39 [phi.T/fin [(DP):39 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lui]    (alternatives: 2. T/fin 3. [D lui] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D lui] 3. T/fin 4. [D lui] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D lui])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D lui] [T/fin [[D lui] [v [adora [D Luisa]]]]]]
		Grammar: [[D lui]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
lui: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['lei', 'adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lei-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lei-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "lei"

		D + lei
			Filtering out impossible merge sites...
			Sink "lei" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lei]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-a].
		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lei" from D and created [D lei]
					Reconstructing head movement for D{N}.
					Extracted head "lei" from D and created [D lei]
					D was opened into [D lei].
					=[D lei]
				2. Feature processing:
					=[D lei]
				3. Floater movement reconstruction:
					=[D lei]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lei]
				5. Agreement reconstruction:
					=[D lei]
			=[[D lei] PRO.T/fin]

10.
		Consume "v"

		[[D lei] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D lei] PRO.T/fin{v}]

11.
		Consume "adora"

		[[D lei] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D lei] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D lei] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D lei] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D lei] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D lei] [PRO.T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D lei] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D lei] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D lei] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D lei] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lei] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D lei] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D lei] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D lei] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D lei] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D lei] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D lei] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lei " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D lei] from memory buffer into Spec of PRO.v
					Result [[D lei] [PRO.T/fin [[D lei] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D lei]:42 [PRO.T/fin [(DP):42 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D lei]:42 [phi.T/fin [(DP):42 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D lei] [T/fin [[D lei] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D lei]:42 [phi.T/fin [(DP):42 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lei]    (alternatives: 2. T/fin 3. [D lei] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D lei] 3. T/fin 4. [D lei] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D lei])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D lei] [T/fin [[D lei] [v [adora [D Luisa]]]]]]
		Grammar: [[D lei]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
lei: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 12
['noi', 'adoriamo', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word noi-#D#pl#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'pl$', 'D$', 'noi-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "noi"

		D + noi
			Filtering out impossible merge sites...
			Sink "noi" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*noi]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-iamo].
		Next word contains multiple morphemes ['[-iamo]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "noi" from D and created [D noi]
					Reconstructing head movement for D{N}.
					Extracted head "noi" from D and created [D noi]
					D was opened into [D noi].
					=[D noi]
				2. Feature processing:
					=[D noi]
				3. Floater movement reconstruction:
					=[D noi]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D noi]
				5. Agreement reconstruction:
					=[D noi]
			=[[D noi] PRO.T/fin]

10.
		Consume "v"

		[[D noi] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D noi] PRO.T/fin{v}]

11.
		Consume "adora"

		[[D noi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D noi] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D noi] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D noi] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D noi] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D noi] [PRO.T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D noi] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D noi] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D noi] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D noi] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D noi] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D noi] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D noi] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D noi] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D noi] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D noi] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D noi] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D noi " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D noi] from memory buffer into Spec of PRO.v
					Result [[D noi] [PRO.T/fin [[D noi] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D noi]:45 [PRO.T/fin [(DP):45 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
					=[[D noi]:45 [phi.T/fin [(DP):45 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D noi]:45 [phi.T/fin [(DP):45 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D noi]    (alternatives: 2. T/fin 3. [D noi] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D noi] 3. T/fin 4. [D noi] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D noi])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Grammar: [[D noi]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
noi: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 13
['voi', 'adorate', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word voi-#D#pl#2p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '2p$', 'pl$', 'D$', 'voi-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "voi"

		D + voi
			Filtering out impossible merge sites...
			Sink "voi" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*voi]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-te].
		Next word contains multiple morphemes ['[-te]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "voi" from D and created [D voi]
					Reconstructing head movement for D{N}.
					Extracted head "voi" from D and created [D voi]
					D was opened into [D voi].
					=[D voi]
				2. Feature processing:
					=[D voi]
				3. Floater movement reconstruction:
					=[D voi]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D voi]
				5. Agreement reconstruction:
					=[D voi]
			=[[D voi] PRO.T/fin]

10.
		Consume "v"

		[[D voi] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D voi] PRO.T/fin{v}]

11.
		Consume "adora"

		[[D voi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D voi] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D voi] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D voi] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D voi] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D voi] [PRO.T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D voi] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D voi] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D voi] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D voi] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D voi] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D voi] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D voi] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D voi] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D voi] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D voi] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D voi] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D voi " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D voi] from memory buffer into Spec of PRO.v
					Result [[D voi] [PRO.T/fin [[D voi] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D voi]:48 [PRO.T/fin [(DP):48 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:2 from the edge of phi.T/fin.
					=[[D voi]:48 [phi.T/fin [(DP):48 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D voi] [T/fin [[D voi] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D voi]:48 [phi.T/fin [(DP):48 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D voi]    (alternatives: 2. T/fin 3. [D voi] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D voi] 3. T/fin 4. [D voi] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D voi])']
!--->		Tests passed (with 19/153 operations) <------------------------------------
		Solution:
		[[D voi] [T/fin [[D voi] [v [adora [D Luisa]]]]]]
		Grammar: [[D voi]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL', 'null']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL', 'null']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
voi: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 14
['loro', 'adorano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word adora-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D loro] PRO.T/fin{v}]

10.
		Consume "adora"

		[[D loro] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D loro] PRO.T/fin{v,V}]

11.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D loro] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D loro] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D loro] [PRO.T/fin{v,V} D]]

17.
		Consume "Luisa"

		[[D loro] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{v,V} D{N}]]

18.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D loro] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D loro] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D loro]:51 [PRO.T/fin [(DP):51 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:51 [phi.T/fin [(DP):51 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D loro] [T/fin [[D loro] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:51 [phi.T/fin [(DP):51 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D loro])']
!--->		Tests passed (with 18/151 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [adora [D Luisa]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['adoro', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 16
['adori', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-i].
		Next word contains multiple morphemes ['[-i]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:2 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 17
['adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-a].
		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 18
['adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-a].
		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 19
['adoriamo', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-iamo].
		Next word contains multiple morphemes ['[-iamo]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 20
['adorate', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-te].
		Next word contains multiple morphemes ['[-te]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:2 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 21
['adorano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word adora-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 22
['lavano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=PRO.T/fin{v,V}

5.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

11.
		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.v [PRO.lava D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]
					=[PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.lava [D Luisa]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.lava [D Luisa]]]]
			= [T/fin [v [lava [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.lava [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/96 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.lava [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 23
['devono', 'lavare', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=PRO.deva

3.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		deva + are
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[PRO.deva PRO.are]

4.
		Consume "v"

		[deva are] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva PRO.are{v}]

5.
		Consume "lava"

		[deva are{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva PRO.are{v,V}]

6.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva are{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [lava D] due to complement selection.
				[PRO.deva PRO.are{v,V}] + D = -98]
				PRO.are{v,V} + D = 104]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.deva PRO.are{v,V}]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[PRO.deva [PRO.are{v,V} D]]

12.
		Consume "Luisa"

		[deva [are{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.deva [PRO.are{v,V} D{N}]]

13.
	>>>	Trying candidate parse [deva [are{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [PRO.are{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [PRO.are{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.deva [PRO.are [PRO.v{V} D{N}]]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.deva [PRO.are [PRO.v [PRO.lava D{N}]]]]
					Extracted head "Luisa" from D and created [PRO.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]
					=[PRO.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]
				2. Feature processing:
					=[PRO.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]
			= [deva [are [v [lava [D Luisa]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]] into Conceptual-Intentional system...
				PRO.are with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. deva    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. deva    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.are(deva)', 'PRO.lava([D Luisa])', 'PRO.v(deva)']
!--->		Tests passed (with 13/130 operations) <------------------------------------
		Solution:
		[deva [are [v [lava [D Luisa]]]]]
		Grammar: [phi.deva [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]
		Spellout TT/finP = [TT/fin [INF [v [V [D N]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.deva: [TT/fin]
PRO.are: [INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
D: [D, V, v, INF, TT/fin]
Luisa: [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 24
['hanno', 'lavato', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.T/prt]

8.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} PRO.T/prt{v}]

9.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[PRO.T/fin{V} PRO.T/prt{v,V}]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 108]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D]]

16.
		Consume "Luisa"

		[T/fin{V} [T/prt{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]

17.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} D{N}]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} D{N}]]]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava D{N}]]]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
			= [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha(T/fin)', 'PRO.lava([D Luisa])', 'PRO.v(T/fin)', 'Person feature is missing']
!--->		Tests passed (with 17/150 operations) <------------------------------------
		Solution:
		[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
		Grammar: [phi.T/fin [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
		Spellout TT/finP = [TT/fin [V [T [v [V [D N]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
phi.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 25
['ho', 'lavato', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-o].
		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.T/prt]

8.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} PRO.T/prt{v}]

9.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[PRO.T/fin{V} PRO.T/prt{v,V}]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 108]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D]]

16.
		Consume "Luisa"

		[T/fin{V} [T/prt{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]

17.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} D{N}]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} D{N}]]]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava D{N}]]]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
			= [T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha(T/fin)', 'PRO.lava([D Luisa])', 'PRO.v(T/fin)', 'phi.T/prt(T/fin)']
!--->		Tests passed (with 17/151 operations) <------------------------------------
		Solution:
		[T/fin [ha [T/prt [v [lava [D Luisa]]]]]]
		Grammar: [phi.T/fin [PRO.ha [phi.T/prt [PRO.v [PRO.lava [D Luisa]]]]]]
		Spellout TT/finP = [TT/fin [V [T [v [V [D N]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
phi.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 26
['hanno', 'voluto', 'lavare', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.T/prt]

5.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} PRO.T/prt{v}]

6.
		Consume "volu"

		[T/fin{V} T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[PRO.T/fin{V} PRO.T/prt{v,V}]

7.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[T/fin{V} T/prt{v,V}] + are
			Filtering out impossible merge sites...
				Reject [[T/fin [ha [T/prt [v volu]]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are]]

8.
		Consume "v"

		[T/fin{V} [T/prt{v,V} are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v}]]

9.
		Consume "lava"

		[T/fin{V} [T/prt{v,V} are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} [T/prt{v,V} are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [[PRO.T/prt{v,V} PRO.are{v,V}], D] because the operation breaks up an existing selectional dependency.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.are{v,V} because it could break words.
				[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]] + D = -98]
				[PRO.T/prt{v,V} PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = 9]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.T/prt{v,V} PRO.are{v,V}]; D]
			3. [[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D]]]

16.
		Consume "Luisa"

		[T/fin{V} [T/prt{v,V} [are{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]]

17.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} [PRO.are{v,V} D{N}]]]]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are{v,V} D{N}]]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v{V} D{N}]]]]]]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava D{N}]]]]]]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]
			= [T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.are with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.T/prt(T/fin)', 'PRO.are(T/fin)', 'PRO.ha(T/fin)', 'PRO.lava([D Luisa])', 'PRO.v(T/fin)', 'PRO.volu(T/fin)']
!--->		Tests passed (with 17/189 operations) <------------------------------------
		Solution:
		[T/fin [ha [T/prt [v [volu [are [v [lava [D Luisa]]]]]]]]]
		Grammar: [phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v [PRO.lava [D Luisa]]]]]]]]]
		Spellout TT/finP = [TT/fin [V [T [v [V [INF [v [V [D N]]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
PRO.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
PRO.are: [INF, V, v, T, V, TT/fin]
PRO.v: [v, INF, V, v, T, V, TT/fin]
PRO.lava: [V, v, INF, V, v, T, V, TT/fin]
D: [D, V, v, INF, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 27
['stanno', 'lavando', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		T/fin{V} + PRG
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.PRG]

5.
		Consume "v"

		[T/fin{V} PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[PRO.T/fin{V} PRO.PRG{v}]

6.
		Consume "lava"

		[T/fin{V} PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[PRO.T/fin{V} PRO.PRG{v,V}]

7.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} PRG{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.PRG{v,V} because it could break words.
				[PRO.T/fin{V} PRO.PRG{v,V}] + D = -98]
				PRO.PRG{v,V} + D = 6]
		Ranking completed:
			1. [PRO.PRG{v,V}; D]
			2. [[PRO.T/fin{V} PRO.PRG{v,V}]; D]
		Exploring solution number (1) =[PRO.PRG{v,V} D]
			Transferring PRO.PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.PRG{v,V}
				2. Feature processing:
					=PRO.PRG{v,V}
				3. Floater movement reconstruction:
					=PRO.PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.PRG{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.PRG{v,V}" lacks complement
					=PRO.PRG{v,V}
				5. Agreement reconstruction:
					=PRO.PRG{v,V}
			=[PRO.T/fin{V} [PRO.PRG{v,V} D]]

13.
		Consume "Luisa"

		[T/fin{V} [PRG{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{V} [PRO.PRG{v,V} D{N}]]

14.
	>>>	Trying candidate parse [T/fin{V} [PRG{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [PRO.PRG{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [PRO.PRG{v,V} D{N}]].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta [PRO.PRG{v,V} D{N}]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v{V} D{N}]]]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava D{N}]]]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]
			= [T/fin [sta [PRG [v [lava [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.PRG with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.PRG(T/fin)', 'PRO.lava([D Luisa])', 'PRO.sta(T/fin)', 'PRO.v(T/fin)']
!--->		Tests passed (with 14/140 operations) <------------------------------------
		Solution:
		[T/fin [sta [PRG [v [lava [D Luisa]]]]]]
		Grammar: [phi.T/fin [PRO.sta [PRO.PRG [PRO.v [PRO.lava [D Luisa]]]]]]
		Spellout TT/finP = [TT/fin [V [INF [v [V [D N]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.sta: [V, TT/fin]
PRO.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]
D: [D, V, v, INF, V, TT/fin]
Luisa: [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 28
['io', 'adori', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-i].
		Next word contains multiple morphemes ['[-i]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] PRO.T/fin]

10.
		Consume "v"

		[[D io] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D io] PRO.T/fin{v}]

11.
		Consume "adora"

		[[D io] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D io] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D io] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D io] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D io] [PRO.T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D io] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D io] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D io] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D io] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [PRO.T/fin [[D io] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D io]:54 [PRO.T/fin [(DP):54 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:54 [T/fin [(DP):54 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:54 [T/fin [(DP):54 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] PRO.T/fin{v,V}] D]
			Transferring [[D io] PRO.T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D io] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[D io] [PRO.T/fin [PRO.v PRO.adora]]]
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				2. Feature processing:
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				3. Floater movement reconstruction:
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [PRO.T/fin [[D io] [PRO.v PRO.adora]]]]
					=[[D io]:55 [PRO.T/fin [(DP):55 [PRO.v PRO.adora]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]]
			=[[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] D]

20.
		Consume "Luisa"

		[[[D io] [T/fin [[D io] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D io] [T/fin [[D io] [v adora]]]] D{N}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] [D Luisa]]
					=[[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] [D Luisa]]
				2. Feature processing:
					=[[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] <D Luisa>]
			= [[[D io] [T/fin [[D io] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D io]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adori".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 29
['io', 'adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-a].
		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] PRO.T/fin]

10.
		Consume "v"

		[[D io] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D io] PRO.T/fin{v}]

11.
		Consume "adora"

		[[D io] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D io] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D io] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D io] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D io] [PRO.T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D io] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D io] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D io] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D io] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [PRO.T/fin [[D io] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D io]:58 [PRO.T/fin [(DP):58 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:58 [T/fin [(DP):58 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:58 [T/fin [(DP):58 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] PRO.T/fin{v,V}] D]
			Transferring [[D io] PRO.T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D io] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[D io] [PRO.T/fin [PRO.v PRO.adora]]]
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				2. Feature processing:
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				3. Floater movement reconstruction:
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [PRO.T/fin [[D io] [PRO.v PRO.adora]]]]
					=[[D io]:59 [PRO.T/fin [(DP):59 [PRO.v PRO.adora]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]]
			=[[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] D]

20.
		Consume "Luisa"

		[[[D io] [T/fin [[D io] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D io] [T/fin [[D io] [v adora]]]] D{N}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] [D Luisa]]
					=[[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] [D Luisa]]
				2. Feature processing:
					=[[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] <D Luisa>]
			= [[[D io] [T/fin [[D io] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D io]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 30
['io', 'adorate', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-te].
		Next word contains multiple morphemes ['[-te]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] PRO.T/fin]

10.
		Consume "v"

		[[D io] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D io] PRO.T/fin{v}]

11.
		Consume "adora"

		[[D io] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D io] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D io] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D io] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D io] [PRO.T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D io] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D io] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D io] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D io] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [PRO.T/fin [[D io] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D io]:62 [PRO.T/fin [(DP):62 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:62 [T/fin [(DP):62 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:62 [T/fin [(DP):62 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] PRO.T/fin{v,V}] D]
			Transferring [[D io] PRO.T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D io] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[D io] [PRO.T/fin [PRO.v PRO.adora]]]
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				2. Feature processing:
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				3. Floater movement reconstruction:
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [PRO.T/fin [[D io] [PRO.v PRO.adora]]]]
					=[[D io]:63 [PRO.T/fin [(DP):63 [PRO.v PRO.adora]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]]
			=[[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] D]

20.
		Consume "Luisa"

		[[[D io] [T/fin [[D io] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D io] [T/fin [[D io] [v adora]]]] D{N}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] [D Luisa]]
					=[[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] [D Luisa]]
				2. Feature processing:
					=[[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] <D Luisa>]
			= [[[D io] [T/fin [[D io] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D io]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adorate".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 31
['io', 'adorano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word adora-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] PRO.T/fin]

10.
		Consume "v"

		[[D io] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D io] PRO.T/fin{v}]

11.
		Consume "adora"

		[[D io] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D io] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D io] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D io] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D io] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D io] [PRO.T/fin{v,V} D]]

18.
		Consume "Luisa"

		[[D io] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D io] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D io] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D io] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D io] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				2. Feature processing:
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[D io] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [PRO.T/fin [[D io] [PRO.v [PRO.adora [D Luisa]]]]]]
					=[[D io]:66 [PRO.T/fin [(DP):66 [PRO.v [PRO.adora [D Luisa]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:66 [T/fin [(DP):66 [PRO.v [PRO.adora [D Luisa]]]]]]
			= [[D io] [T/fin [[D io] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D io]:66 [T/fin [(DP):66 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D io] 3. T/fin 4. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] PRO.T/fin{v,V}] D]
			Transferring [[D io] PRO.T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D io] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[D io] [PRO.T/fin [PRO.v PRO.adora]]]
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				2. Feature processing:
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				3. Floater movement reconstruction:
					=[[D io] [PRO.T/fin [PRO.v PRO.adora]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [PRO.T/fin [[D io] [PRO.v PRO.adora]]]]
					=[[D io]:67 [PRO.T/fin [(DP):67 [PRO.v PRO.adora]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]]
			=[[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] D]

20.
		Consume "Luisa"

		[[[D io] [T/fin [[D io] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D io] [T/fin [[D io] [v adora]]]] D{N}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] [D Luisa]]
					=[[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] [D Luisa]]
				2. Feature processing:
					=[[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] <D Luisa>]
				5. Agreement reconstruction:
					=[[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] <D Luisa>]
			= [[[D io] [T/fin [[D io] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D io]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D io]    (alternatives: 2. T/fin 3. [D io] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adorano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 32
['loro', 'hanno', 'lavata', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} T/prt]]

17.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [PRO.T/fin{V} T/prt{v}]]

18.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} T/prt{v,V}]]

19.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} T/prt{v,V}]] + D = -197]
				[PRO.T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 112]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[PRO.T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "T/prt{v,V}" lacks complement
				An EPP-head "T/prt{v,V}" lacks specifier but needs one.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [T/prt{v,V} D]]]

25.
		Consume "Luisa"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{V} [T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [T/prt{v,V} D{N}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [T/prt{v,V} D{N}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v{V} D{N}]]]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava D{N}]]]]]]
					Extracted head "Luisa" from D and created [[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[D loro]:72 [PRO.T/fin [(DP):72 [PRO.ha [T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]].
					=[[D loro]:72 [PRO.T/fin [(DP):72 [PRO.ha [T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:72 [phi.T/fin [(DP):72 [PRO.ha [T/prt [PRO.v [PRO.lava [D Luisa]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D Luisa]]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha T/prt{v,V}]]
					Extracted head "PRO.v{V}" from T/prt and created [PRO.T/fin [PRO.ha [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]].
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D]]

27.
		Consume "Luisa"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]].
					Extracted head "Luisa" from D and created [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D Luisa]]]
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D Luisa]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D Luisa]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D Luisa]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
				D has unaccetable specifier [phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]].
				D has unaccetable specifier [phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]].
					Extraposition will be tried on [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D Luisa]]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				[D loro] has no thematic role.
				An EPP-head "T/prt" lacks specifier but needs one.
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D Luisa>]]
				5. Agreement reconstruction:
					phi.T/fin has unvalued phi-features ['PHI:GEN:_']
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D Luisa>]]
			= [[D loro] [[T/fin [ha [T/prt [v lava]]]] <D Luisa>]]
		Checking LF-interface conditions.
				[D loro] has no thematic role.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D]
Luisa: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [PRO.T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [PRO.T/fin [PRO.ha [T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [T/prt [PRO.v PRO.lava]]]]]]
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[D loro]:73 [PRO.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]].
					=[[D loro]:73 [PRO.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]]
			=[[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D]

29.
		Consume "Luisa"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [D Luisa]]
					=[[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [D Luisa]]
				2. Feature processing:
					=[[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
				D has unaccetable specifier [[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]].
					Extraposition will be tried on [[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				An EPP-head "T/prt" lacks specifier but needs one.
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D Luisa>]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:73 [phi.T/fin [(DP):73 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D Luisa>]
			= [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] <D Luisa>]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D]
Luisa: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:74 [PRO.T/fin [(DP):74 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]]
			=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] T/prt{v,V}]

33.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unaccetable specifier [[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]].
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 206]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "T/prt{v,V}" lacks complement
				An EPP-head "T/prt{v,V}" lacks specifier but needs one.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt{v,V} D]]

39.
		Consume "Luisa"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt{v,V} D{N}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v{V} D{N}]]]
						Extracted head "PRO.lava" and reconstructed it = [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v [PRO.lava D{N}]]]]
					Extracted head "Luisa" from D and created [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D Luisa]]]]]
					=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D Luisa]]]]]
				2. Feature processing:
					=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unaccetable specifier [[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D Luisa]]]]].
					=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D Luisa]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D Luisa]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [lava [D Luisa]]]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]
D: [D, V, v, T]
Luisa: [N, D, V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unaccetable specifier [[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
			=[[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D]

41.
		Consume "Luisa"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D{N}]

42.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D{N}].
					Extracted head "Luisa" from D and created [[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [D Luisa]]
					=[[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [D Luisa]]
				2. Feature processing:
					=[[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [D Luisa]]
				3. Floater movement reconstruction:
					=[[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt has unaccetable specifier [[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]].
					Extraposition will be tried on [[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				T/prt has unaccetable specifier [[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]].
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D Luisa>]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D Luisa>]
			= [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] <D Luisa>]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[D loro]:74 [phi.T/fin [(DP):74 PRO.ha]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]
D: [D]
Luisa: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 33
['loro', 'Luisa', 'lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

13.
		Consume "Luisa"

		[[D loro] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] D{N}]

14.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D loro] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D loro] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [[D Luisa] PRO.T/fin]]

16.
		Consume "v"

		[[D loro] [[D Luisa] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D loro] [[D Luisa] PRO.T/fin{v}]]

17.
		Consume "lava"

		[[D loro] [[D Luisa] T/fin{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[D loro] [[D Luisa] PRO.T/fin{v,V}]]

18.
	>>>	Trying candidate parse [[D loro] [[D Luisa] T/fin{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D Luisa] PRO.T/fin{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D Luisa] PRO.T/fin{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D loro] [[D Luisa] [PRO.T/fin PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[D Luisa] [PRO.T/fin [PRO.v PRO.lava]]]]
					=[[D loro] [[D Luisa] [PRO.T/fin [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[D Luisa] [PRO.T/fin [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D Luisa] [PRO.T/fin [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "PRO.T/fin".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					New head was spawned due to multiple specifiers at PRO.T/fin but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[D Luisa] [PRO.T/fin [[D Luisa] [PRO.v PRO.lava]]]]]]
					Dropping [D N](=D loro ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:76 [? [[D Luisa]:75 [PRO.T/fin [(DP):75 [PRO.v [PRO.lava (DP):76]]]]]]]
					Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[D loro]:76 [? [[D Luisa]:75 [PRO.T/fin [(DP):75 [PRO.v [PRO.lava (DP):76]]]]]]].
					=[[D loro]:76 [? [[D Luisa]:75 [PRO.T/fin [(DP):75 [PRO.v [PRO.lava (DP):76]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D loro]:76 [? [[D Luisa]:75 [T/fin [(DP):75 [PRO.v [PRO.lava (DP):76]]]]]]]
			= [[D loro] [? [[D Luisa] [T/fin [[D Luisa] [v [lava [D loro]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.v: [v, TT/fin, ?]
PRO.lava: [V, v, TT/fin, ?]
(D): [D, V, v, TT/fin, ?]
(N): [N, D, V, v, TT/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] D{N}] T/fin]
			Transferring [[D loro] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] D{N}].
					Extracted head "Luisa" from D and created [[D loro] [D Luisa]]
					=[[D loro] [D Luisa]]
				2. Feature processing:
					=[[D loro] [D Luisa]]
				3. Floater movement reconstruction:
					=[[D loro] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D loro].
					Extraposition will be tried on [[D loro] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[D loro] <D Luisa>]
				5. Agreement reconstruction:
					=[[D loro] <D Luisa>]
			=[[[D loro] <D Luisa>] PRO.T/fin]

19.
		Consume "v"

		[[[D loro] <D Luisa>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[[D loro] <D Luisa>] PRO.T/fin{v}]

20.
		Consume "lava"

		[[[D loro] <D Luisa>] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[[D loro] <D Luisa>] PRO.T/fin{v,V}]

21.
	>>>	Trying candidate parse [[[D loro] <D Luisa>] T/fin{v,V}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro] <D Luisa>] PRO.T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro] <D Luisa>] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[[D loro] <D Luisa>] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro] <D Luisa>] [PRO.T/fin [PRO.v PRO.lava]]]
					=[[[D loro] <D Luisa>] [PRO.T/fin [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro] <D Luisa>] [PRO.T/fin [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro] <D Luisa>] [PRO.T/fin [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro D Luisa " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent [[D loro] <D Luisa>] from memory buffer into Spec of PRO.v
					Result [[[D loro] <D Luisa>] [PRO.T/fin [[[D loro] <D Luisa>] [PRO.v PRO.lava]]]]
					=[[[D loro] <D Luisa>]:77 [PRO.T/fin [(DP):77 [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[[D loro] <D Luisa>]:77 [phi.T/fin [(DP):77 [PRO.v PRO.lava]]]]
			= [[[D loro] <D Luisa>] [T/fin [[[D loro] <D Luisa>] [v lava]]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D loro] <D Luisa>]:77 [phi.T/fin [(DP):77 [PRO.v PRO.lava]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([[D loro] <D Luisa>])', 'PRO.v([[D loro] <D Luisa>])']
!--->		Tests passed (with 21/232 operations) <------------------------------------
		Solution:
		[[[D loro] <D Luisa>] [T/fin [[[D loro] <D Luisa>] [v lava]]]]
		Grammar: [[[D loro] <D Luisa>]:1 [phi.T/fin [(DP):1 [PRO.v PRO.lava]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v V]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
D: [D]
Luisa: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 34
['loro', 'Luisa', 'devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

13.
		Consume "Luisa"

		[[D loro] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] D{N}]

14.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		[[D loro] D{N}] + deva
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D loro] D{N}] + deva = 1]
				D{N} + deva = 2]
		Ranking completed:
			1. [D{N}; deva]
			2. [[[D loro] D{N}]; deva]
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [[D Luisa] PRO.deva]]

16.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [[D Luisa] deva]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[D Luisa] [deva [D loro]]]] PRO.are] due to bad left branch.
				Reject [[[D Luisa] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [[D Luisa] [PRO.deva PRO.are]]]

17.
		Consume "v"

		[[D loro] [[D Luisa] [deva are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [[D Luisa] [PRO.deva PRO.are{v}]]]

18.
		Consume "lava"

		[[D loro] [[D Luisa] [deva are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [[D Luisa] [PRO.deva PRO.are{v,V}]]]

19.
	>>>	Trying candidate parse [[D loro] [[D Luisa] [deva are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D Luisa] [PRO.deva PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D Luisa] [PRO.deva PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [[D Luisa] [PRO.deva [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[D Luisa] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]]
					=[[D loro] [[D Luisa] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [[D Luisa] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D Luisa] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "PRO.deva".
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					New head was spawned due to multiple specifiers at PRO.deva but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of PRO.are
					Result [[D loro] [? [[D Luisa] [PRO.deva [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N], [D N]]
					Dropping constituent (DP):79 from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[D Luisa]:79 [PRO.deva [(DP):79 [PRO.are [(DP):79 [PRO.v PRO.lava]]]]]]]]
					Dropping [D N](=D loro ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:81 [? [[D Luisa]:79 [PRO.deva [(DP):79 [PRO.are [(DP):79 [PRO.v [PRO.lava (DP):81]]]]]]]]]
					Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[D loro]:81 [? [[D Luisa]:79 [PRO.deva [(DP):79 [PRO.are [(DP):79 [PRO.v [PRO.lava (DP):81]]]]]]]]].
					=[[D loro]:81 [? [[D Luisa]:79 [PRO.deva [(DP):79 [PRO.are [(DP):79 [PRO.v [PRO.lava (DP):81]]]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:F from the edge of phi.deva.
					Feature PHI:NUM:SG was not matched in phi.deva and was marked as bad.
					deva acquired PHI:NUM:SG from the edge of deva.
					deva acquired PHI:PER:3 from the edge of deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:F from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:81 [? [[D Luisa]:79 [deva [(DP):79 [phi.are [(DP):79 [PRO.v [PRO.lava (DP):81]]]]]]]]]
			= [[D loro] [? [[D Luisa] [deva [[D Luisa] [are [[D Luisa] [v [lava [D loro]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
deva: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
phi.are: [INF, TT/fin, ?]
(D): [D, INF, TT/fin, ?]
(N): [N, D, INF, TT/fin, ?]
PRO.v: [v, INF, TT/fin, ?]
PRO.lava: [V, v, INF, TT/fin, ?]
(D): [D, V, v, INF, TT/fin, ?]
(N): [N, D, V, v, INF, TT/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] D{N}] deva]
			Transferring [[D loro] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] D{N}].
					Extracted head "Luisa" from D and created [[D loro] [D Luisa]]
					=[[D loro] [D Luisa]]
				2. Feature processing:
					=[[D loro] [D Luisa]]
				3. Floater movement reconstruction:
					=[[D loro] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D loro].
					Extraposition will be tried on [[D loro] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[D loro] <D Luisa>]
				5. Agreement reconstruction:
					=[[D loro] <D Luisa>]
			=[[[D loro] <D Luisa>] PRO.deva]

20.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] <D Luisa>] deva] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] <D Luisa>] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[[D loro] <D Luisa>] [PRO.deva PRO.are]]

21.
		Consume "v"

		[[[D loro] <D Luisa>] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D loro] <D Luisa>] [PRO.deva PRO.are{v}]]

22.
		Consume "lava"

		[[[D loro] <D Luisa>] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D loro] <D Luisa>] [PRO.deva PRO.are{v,V}]]

23.
	>>>	Trying candidate parse [[[D loro] <D Luisa>] [deva are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro] <D Luisa>] [PRO.deva PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro] <D Luisa>] [PRO.deva PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[[D loro] <D Luisa>] [PRO.deva [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro] <D Luisa>] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
					=[[[D loro] <D Luisa>] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D loro] <D Luisa>] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro] <D Luisa>] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro D Luisa " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent [[D loro] <D Luisa>] from memory buffer into Spec of PRO.are
					Result [[[D loro] <D Luisa>] [PRO.deva [[[D loro] <D Luisa>] [PRO.are [PRO.v PRO.lava]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent (DP):82 from memory buffer into Spec of PRO.v
					Result [[[D loro] <D Luisa>]:82 [PRO.deva [(DP):82 [PRO.are [(DP):82 [PRO.v PRO.lava]]]]]]
					=[[[D loro] <D Luisa>]:82 [PRO.deva [(DP):82 [PRO.are [(DP):82 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[[D loro] <D Luisa>]:82 [phi.deva [(DP):82 [phi.are [(DP):82 [PRO.v PRO.lava]]]]]]
			= [[[D loro] <D Luisa>] [deva [[[D loro] <D Luisa>] [are [[[D loro] <D Luisa>] [v lava]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D loro] <D Luisa>]:82 [phi.deva [(DP):82 [phi.are [(DP):82 [PRO.v PRO.lava]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. are 3. [[D loro] <D Luisa>] 4. deva 5. [[D loro] <D Luisa>] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. are 3. [[D loro] <D Luisa>] 4. deva 5. [[D loro] <D Luisa>] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([[D loro] <D Luisa>])', 'PRO.v([[D loro] <D Luisa>])']
!--->		Tests passed (with 23/303 operations) <------------------------------------
		Solution:
		[[[D loro] <D Luisa>] [deva [[[D loro] <D Luisa>] [are [[[D loro] <D Luisa>] [v lava]]]]]]
		Grammar: [[[D loro] <D Luisa>]:1 [phi.deva [(DP):1 [phi.are [(DP):1 [PRO.v PRO.lava]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [INF [__:1 [v V]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
D: [D]
Luisa: [N, D]
phi.deva: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 35
['loro', 'hanno', 'Luisa', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

16.
		Consume "Luisa"

		[[D loro] [T/fin{V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{V} D{N}]]

17.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} D{N}]] + are
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + are = -98]
				[PRO.T/fin{V} D{N}] + are = -96]
				D{N} + are = 106]
		Ranking completed:
			1. [D{N}; are]
			2. [[PRO.T/fin{V} D{N}]; are]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] PRO.are]]]

18.
		Consume "v"

		[[D loro] [T/fin{V} [[D Luisa] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] PRO.are{v}]]]

19.
		Consume "lava"

		[[D loro] [T/fin{V} [[D Luisa] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] PRO.are{v,V}]]]

20.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D Luisa] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D Luisa] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D Luisa] PRO.are{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D Luisa] PRO.are{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.are PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]]
					Moving "D Luisa " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of PRO.v
					Result [[D loro]:88 [PRO.T/fin [(DP):88 [PRO.ha [[D Luisa] [PRO.are [[D Luisa] [PRO.v PRO.lava]]]]]]]]
					=[[D loro]:88 [PRO.T/fin [(DP):88 [PRO.ha [[D Luisa]:89 [PRO.are [(DP):89 [PRO.v PRO.lava]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:F from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [[D Luisa]:89 [phi.are [(DP):89 [PRO.v PRO.lava]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [[D Luisa]:89 [phi.are [(DP):89 [PRO.v PRO.lava]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Luisa] [are [[D Luisa] [v lava]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. are 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. are 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha([[D Luisa] [are [[D Luisa] [v lava]]]])', 'PRO.lava([D Luisa])', 'PRO.v([D Luisa])']
!--->		Tests passed (with 20/217 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.ha [[D Luisa]:2 [phi.are [(DP):2 [PRO.v PRO.lava]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [INF [__:2 [v V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
Luisa: [N, D, V, TT/fin]
phi.are: [INF, V, TT/fin]
(D): [D, INF, V, TT/fin]
(N): [N, D, INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 36
['loro', 'Luisa', 'hanno', 'voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

13.
		Consume "Luisa"

		[[D loro] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] D{N}]

14.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D loro] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D loro] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [[D Luisa] PRO.T/fin]]

16.
		Consume "ha"

		[[D loro] [[D Luisa] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] [[D Luisa] PRO.T/fin{V}]]

17.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] [[D Luisa] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[D Luisa] [T/fin [[D Luisa] ha]]]]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D Luisa] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D Luisa] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [[D Luisa] [PRO.T/fin{V} PRO.T/prt]]]

18.
		Consume "v"

		[[D loro] [[D Luisa] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [[D Luisa] [PRO.T/fin{V} PRO.T/prt{v}]]]

19.
		Consume "volu"

		[[D loro] [[D Luisa] [T/fin{V} T/prt{v}]]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[D loro] [[D Luisa] [PRO.T/fin{V} PRO.T/prt{v,V}]]]

20.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [[D Luisa] [T/fin{V} T/prt{v,V}]]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[D Luisa] [T/fin [[D Luisa] [ha [[D loro] [T/prt [[D loro] [v volu]]]]]]]]]] PRO.are] due to bad left branch.
				Reject [[[D Luisa] [T/fin [[D Luisa] [ha [T/prt [v volu]]]]]] PRO.are] due to bad left branch.
				Reject [[T/fin [ha [T/prt [v volu]]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [[D Luisa] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are]]]]

21.
		Consume "v"

		[[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [[D Luisa] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v}]]]]

22.
		Consume "lava"

		[[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [[D Luisa] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]]]

23.
	>>>	Trying candidate parse [[D loro] [[D Luisa] [T/fin{V} [T/prt{v,V} are{v,V}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D Luisa] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D Luisa] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [[D Luisa] [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} PRO.are{v,V}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [[D Luisa] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]]]]]
						Extracted head "PRO.volu" and reconstructed it = [[D loro] [[D Luisa] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [[D Luisa] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[D Luisa] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
					=[[D loro] [[D Luisa] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				2. Feature processing:
					=[[D loro] [[D Luisa] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D Luisa] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "PRO.T/fin".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					New head was spawned due to multiple specifiers at PRO.T/fin but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of PRO.ha
					Result [[D loro] [? [[D Luisa] [PRO.T/fin [[D Luisa] [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.T/prt
					Result [[D loro] [? [[D Luisa]:97 [PRO.T/fin [(DP):97 [PRO.ha [[D loro] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[D N]]
					Dropping constituent (DP):98 from memory buffer into Spec of PRO.v
					Result [[D loro]:98 [? [[D Luisa]:97 [PRO.T/fin [(DP):97 [PRO.ha [(DP):98 [PRO.T/prt [(DP):98 [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[D loro]:98 [? [[D Luisa]:97 [PRO.T/fin [(DP):97 [PRO.ha [(DP):98 [PRO.T/prt [(DP):98 [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]]]].
					=[[D loro]:98 [? [[D Luisa]:97 [PRO.T/fin [(DP):97 [PRO.ha [(DP):98 [PRO.T/prt [(DP):98 [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:N from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:PL from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:3 from the edge of phi.T/prt.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:98 [? [[D Luisa]:97 [T/fin [(DP):97 [PRO.ha [(DP):98 [phi.T/prt [(DP):98 [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]]]]
			= [[D loro] [? [[D Luisa] [T/fin [[D Luisa] [ha [[D loro] [T/prt [[D loro] [v [volu [are [v lava]]]]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
(D): [D, V, TT/fin, ?]
(N): [N, D, V, TT/fin, ?]
phi.T/prt: [T, V, TT/fin, ?]
(D): [D, T, V, TT/fin, ?]
(N): [N, D, T, V, TT/fin, ?]
PRO.v: [v, T, V, TT/fin, ?]
PRO.volu: [V, v, T, V, TT/fin, ?]
PRO.are: [INF, V, v, T, V, TT/fin, ?]
PRO.v: [v, INF, V, v, T, V, TT/fin, ?]
PRO.lava: [V, v, INF, V, v, T, V, TT/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Luisa] PRO.T/fin{V}] T/prt]
			Transferring [[D Luisa] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D Luisa] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D Luisa] [PRO.T/fin PRO.ha]]
					=[[D Luisa] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D Luisa] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D Luisa] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of PRO.ha
					Result [[D Luisa] [PRO.T/fin [[D Luisa] PRO.ha]]]
					=[[D Luisa]:100 [PRO.T/fin [(DP):100 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]]
			=[[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] PRO.T/prt]]

24.
		Consume "v"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] PRO.T/prt{v}]]

25.
		Consume "volu"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] PRO.T/prt{v,V}]]

26.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt [[D loro] [v volu]]]]]] PRO.are] due to bad left branch.
				Reject [[[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt [v volu]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt{v,V} PRO.are]]]

27.
		Consume "v"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v}]]]

28.
		Consume "lava"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v,V}]]]

29.
	>>>	Trying candidate parse [[D loro] [[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt{v,V} are{v,V}]]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v,V}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]]]
						Extracted head "PRO.volu" and reconstructed it = [[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
					=[[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				2. Feature processing:
					=[[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa T/fin __ha " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[[D N] [TT/fin [[D N] V]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt [[D loro] [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
					Dropping constituent [[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] from memory buffer into Spec of PRO.are
					Result [[D loro]:102 [? [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.T/prt [(DP):102 [PRO.v [PRO.volu [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]] [PRO.are [PRO.v PRO.lava]]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.T/prt has unaccetable specifier [[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]]:103.
				PRO.are has unaccetable specifier (TT/finP):103.
					Extraposition will be tried on [[D loro]:102 [? [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]]:103 [PRO.T/prt [(DP):102 [PRO.v [PRO.volu [(TT/finP):103 [PRO.are [PRO.v PRO.lava]]]]]]]]]].
					=[[D loro]:102 [? [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]]:103 [PRO.T/prt [(DP):102 [PRO.v [PRO.volu [(TT/finP):103 [PRO.are [PRO.v PRO.lava]]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF by phi-Agree from (DP):102.
					phi.T/prt acquired PHI:GEN:N by phi-Agree from (DP):102.
					phi.T/prt acquired PHI:NUM:PL by phi-Agree from (DP):102.
					phi.T/prt acquired PHI:PER:3 by phi-Agree from (DP):102.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:102 [? [[[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]]:103 [phi.T/prt [(DP):102 [PRO.v [PRO.volu [(TT/finP):103 [PRO.are [PRO.v PRO.lava]]]]]]]]]]
			= [[D loro] [? [[[D Luisa] [T/fin [[D Luisa] ha]]] [T/prt [[D loro] [v [volu [[[D Luisa] [T/fin [[D Luisa] ha]]] [are [v lava]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				phi.T/prt has unaccetable specifier [[D Luisa]:100 [T/fin [(DP):100 PRO.ha]]]:103.
				PRO.are has unaccetable specifier (TT/finP):103.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.volu: [V, v, T, ?]
(D): [D, V, v, T, ?]
(N): [N, D, V, v, T, ?]
(TT/fin): [TT/fin, V, v, T, ?]
(D): [D, TT/fin, V, v, T, ?]
(N): [N, D, TT/fin, V, v, T, ?]
(V): [V, TT/fin, V, v, T, ?]
PRO.are: [INF, V, v, T, ?]
PRO.v: [v, INF, V, v, T, ?]
PRO.lava: [V, v, INF, V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] D{N}] T/fin]
			Transferring [[D loro] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] D{N}].
					Extracted head "Luisa" from D and created [[D loro] [D Luisa]]
					=[[D loro] [D Luisa]]
				2. Feature processing:
					=[[D loro] [D Luisa]]
				3. Floater movement reconstruction:
					=[[D loro] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D loro].
					Extraposition will be tried on [[D loro] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[D loro] <D Luisa>]
				5. Agreement reconstruction:
					=[[D loro] <D Luisa>]
			=[[[D loro] <D Luisa>] PRO.T/fin]

30.
		Consume "ha"

		[[[D loro] <D Luisa>] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[[D loro] <D Luisa>] PRO.T/fin{V}]

31.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[[D loro] <D Luisa>] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[[D loro] <D Luisa>] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[[D loro] <D Luisa>] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[[D loro] <D Luisa>] [PRO.T/fin{V} PRO.T/prt]]

32.
		Consume "v"

		[[[D loro] <D Luisa>] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro] <D Luisa>] [PRO.T/fin{V} PRO.T/prt{v}]]

33.
		Consume "volu"

		[[[D loro] <D Luisa>] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[[D loro] <D Luisa>] [PRO.T/fin{V} PRO.T/prt{v,V}]]

34.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] <D Luisa>] [T/fin{V} T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] <D Luisa>] [T/fin [[[D loro] <D Luisa>] [ha [T/prt [v volu]]]]]] PRO.are] due to bad left branch.
				Reject [[T/fin [ha [T/prt [v volu]]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[[D loro] <D Luisa>] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are]]]

35.
		Consume "v"

		[[[D loro] <D Luisa>] [T/fin{V} [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D loro] <D Luisa>] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v}]]]

36.
		Consume "lava"

		[[[D loro] <D Luisa>] [T/fin{V} [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D loro] <D Luisa>] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]]

37.
	>>>	Trying candidate parse [[[D loro] <D Luisa>] [T/fin{V} [T/prt{v,V} are{v,V}]]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro] <D Luisa>] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro] <D Luisa>] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [[[D loro] <D Luisa>] [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} PRO.are{v,V}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[[D loro] <D Luisa>] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]]]]
						Extracted head "PRO.volu" and reconstructed it = [[[D loro] <D Luisa>] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [[[D loro] <D Luisa>] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro] <D Luisa>] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
					=[[[D loro] <D Luisa>] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
				2. Feature processing:
					=[[[D loro] <D Luisa>] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
				3. Floater movement reconstruction:
					=[[[D loro] <D Luisa>] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro D Luisa " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent [[D loro] <D Luisa>] from memory buffer into Spec of PRO.ha
					Result [[[D loro] <D Luisa>] [PRO.T/fin [[[D loro] <D Luisa>] [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
					=[[[D loro] <D Luisa>]:107 [PRO.T/fin [(DP):107 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro] <D Luisa>]:107 [phi.T/fin [(DP):107 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
			= [[[D loro] <D Luisa>] [T/fin [[[D loro] <D Luisa>] [ha [T/prt [v [volu [are [v lava]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D loro] <D Luisa>]:107 [phi.T/fin [(DP):107 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				PRO.T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				PRO.volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				PRO.are with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.T/prt([[D loro] <D Luisa>])', 'PRO.are([[D loro] <D Luisa>])', 'PRO.ha([[D loro] <D Luisa>])', 'PRO.lava([[D loro] <D Luisa>])', 'PRO.v([[D loro] <D Luisa>])', 'PRO.volu([[D loro] <D Luisa>])']
!--->		Tests passed (with 37/564 operations) <------------------------------------
		Solution:
		[[[D loro] <D Luisa>] [T/fin [[[D loro] <D Luisa>] [ha [T/prt [v [volu [are [v lava]]]]]]]]]
		Grammar: [[[D loro] <D Luisa>]:1 [phi.T/fin [(DP):1 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [T [v [V [INF [v V]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
D: [D]
Luisa: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
PRO.are: [INF, V, v, T, V, TT/fin]
PRO.v: [v, INF, V, v, T, V, TT/fin]
PRO.lava: [V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 37
['loro', 'hanno', 'Luisa', 'voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

16.
		Consume "Luisa"

		[[D loro] [T/fin{V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{V} D{N}]]

17.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] PRO.T/prt]]]

18.
		Consume "v"

		[[D loro] [T/fin{V} [[D Luisa] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] PRO.T/prt{v}]]]

19.
		Consume "volu"

		[[D loro] [T/fin{V} [[D Luisa] T/prt{v}]]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] PRO.T/prt{v,V}]]]

20.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} [[D Luisa] T/prt{v,V}]]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin [[D loro] [ha [[D Luisa] [T/prt [[D Luisa] [v volu]]]]]]]] PRO.are] due to bad left branch.
				Reject [[T/fin [ha [[D Luisa] [T/prt [[D Luisa] [v volu]]]]]] PRO.are] due to bad left branch.
				Reject [[[D Luisa] [T/prt [[D Luisa] [v volu]]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [[D Luisa] [PRO.T/prt{v,V} PRO.are]]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] [PRO.T/prt{v,V} PRO.are{v}]]]]

22.
		Consume "lava"

		[[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] [PRO.T/prt{v,V} PRO.are{v,V}]]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D Luisa] [T/prt{v,V} are{v,V}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D Luisa] [PRO.T/prt{v,V} PRO.are{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D Luisa] [PRO.T/prt{v,V} PRO.are{v,V}]]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.T/prt{v,V} PRO.are{v,V}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]]]]]
						Extracted head "PRO.volu" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [[D Luisa] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[D Luisa] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]
					Moving "D Luisa " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of PRO.v
					Result [[D loro]:116 [PRO.T/fin [(DP):116 [PRO.ha [[D Luisa] [PRO.T/prt [[D Luisa] [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]]
					=[[D loro]:116 [PRO.T/fin [(DP):116 [PRO.ha [[D Luisa]:117 [PRO.T/prt [(DP):117 [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:F from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:3 from the edge of phi.T/prt.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:116 [phi.T/fin [(DP):116 [PRO.ha [[D Luisa]:117 [phi.T/prt [(DP):117 [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D Luisa] [T/prt [[D Luisa] [v [volu [are [v lava]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:116 [phi.T/fin [(DP):116 [PRO.ha [[D Luisa]:117 [phi.T/prt [(DP):117 [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Luisa] [T/prt [[D Luisa] [v [volu [are [v lava]]]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/prt 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				PRO.volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/prt 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				PRO.are with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/prt 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/prt 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/prt 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.are([D Luisa])', 'PRO.ha([[D Luisa] [T/prt [[D Luisa] [v [volu [are [v lava]]]]]]])', 'PRO.lava([D Luisa])', 'PRO.v([D Luisa])', 'PRO.volu([D Luisa])']
!--->		Tests passed (with 23/265 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [[D Luisa] [T/prt [[D Luisa] [v [volu [are [v lava]]]]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.ha [[D Luisa]:2 [phi.T/prt [(DP):2 [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [T [__:2 [v [V [INF [v V]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
Luisa: [N, D, V, TT/fin]
phi.T/prt: [T, V, TT/fin]
(D): [D, T, V, TT/fin]
(N): [N, D, T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
PRO.are: [INF, V, v, T, V, TT/fin]
PRO.v: [v, INF, V, v, T, V, TT/fin]
PRO.lava: [V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 38
['loro', 'hanno', 'voluto', 'Luisa', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

11.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

12.
		Consume "volu"

		[[D loro] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

13.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.volu" lacks complement
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.volu" lacks complement
				Avoid [T/fin [ha [T/prt [v volu]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] + D = -197]
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -194]
				PRO.T/prt{v,V} + D = 9]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D]]]

19.
		Consume "Luisa"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]

20.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + are
			Filtering out impossible merge sites...
				Reject [[T D] PRO.are] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]] + are = -98]
				[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] + are = -96]
				D{N} + are = 106]
		Ranking completed:
			1. [D{N}; are]
			2. [[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]; are]
			3. [[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D Luisa] PRO.are]]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D Luisa] PRO.are{v}]]]]

22.
		Consume "lava"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D Luisa] PRO.are{v,V}]]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [[D Luisa] are{v,V}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D Luisa] PRO.are{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D Luisa] PRO.are{v,V}]]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} [[D Luisa] PRO.are{v,V}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} [[D Luisa] PRO.are{v,V}]]]]]]
						Extracted head "PRO.volu" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa] PRO.are{v,V}]]]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa] [PRO.are PRO.v{V}]]]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa] [PRO.are [PRO.v PRO.lava]]]]]]]]]]
					Moving "D Luisa " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of PRO.v
					Result [[D loro]:124 [PRO.T/fin [(DP):124 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa] [PRO.are [[D Luisa] [PRO.v PRO.lava]]]]]]]]]]]
					=[[D loro]:124 [PRO.T/fin [(DP):124 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa]:125 [PRO.are [(DP):125 [PRO.v PRO.lava]]]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:F from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:124 [phi.T/fin [(DP):124 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa]:125 [phi.are [(DP):125 [PRO.v PRO.lava]]]]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:124 [phi.T/fin [(DP):124 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa]:125 [phi.are [(DP):125 [PRO.v PRO.lava]]]]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Luisa] [are [[D Luisa] [v lava]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. are 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. are 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.T/prt([D loro])', 'PRO.ha([D loro])', 'PRO.lava([D Luisa])', 'PRO.v([D Luisa])', 'PRO.v([D loro])', 'PRO.volu([[D Luisa] [are [[D Luisa] [v lava]]]])']
!--->		Tests passed (with 23/280 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [[D Luisa] [are [[D Luisa] [v lava]]]]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D Luisa]:2 [phi.are [(DP):2 [PRO.v PRO.lava]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [T [v [V [DP:2 [INF [__:2 [v V]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
Luisa: [N, D, V, v, T, V, TT/fin]
phi.are: [INF, V, v, T, V, TT/fin]
(D): [D, INF, V, v, T, V, TT/fin]
(N): [N, D, INF, V, v, T, V, TT/fin]
PRO.v: [v, INF, V, v, T, V, TT/fin]
PRO.lava: [V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 39
['loro', 'Luisa', 'stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

13.
		Consume "Luisa"

		[[D loro] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] D{N}]

14.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D loro] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D loro] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [[D Luisa] PRO.T/fin]]

16.
		Consume "sta"

		[[D loro] [[D Luisa] T/fin]] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[D loro] [[D Luisa] PRO.T/fin{V}]]

17.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D loro] [[D Luisa] T/fin{V}]] + PRG
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[D Luisa] [T/fin [[D Luisa] sta]]]]] PRO.PRG] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D Luisa] PRO.T/fin{V}] + PRG = -98]
				PRO.T/fin{V} + PRG = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; PRG]
			2. [[[D Luisa] PRO.T/fin{V}]; PRG]
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [[D Luisa] [PRO.T/fin{V} PRO.PRG]]]

18.
		Consume "v"

		[[D loro] [[D Luisa] [T/fin{V} PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D loro] [[D Luisa] [PRO.T/fin{V} PRO.PRG{v}]]]

19.
		Consume "lava"

		[[D loro] [[D Luisa] [T/fin{V} PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D loro] [[D Luisa] [PRO.T/fin{V} PRO.PRG{v,V}]]]

20.
	>>>	Trying candidate parse [[D loro] [[D Luisa] [T/fin{V} PRG{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D Luisa] [PRO.T/fin{V} PRO.PRG{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D Luisa] [PRO.T/fin{V} PRO.PRG{v,V}]]].
						Extracted head "PRO.sta" and reconstructed it = [[D loro] [[D Luisa] [PRO.T/fin [PRO.sta PRO.PRG{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [[D loro] [[D Luisa] [PRO.T/fin [PRO.sta [PRO.PRG PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[D Luisa] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
					=[[D loro] [[D Luisa] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[D loro] [[D Luisa] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D Luisa] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "PRO.T/fin".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					New head was spawned due to multiple specifiers at PRO.T/fin but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of PRO.sta
					Result [[D loro] [? [[D Luisa] [PRO.T/fin [[D Luisa] [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.PRG
					Result [[D loro] [? [[D Luisa]:129 [PRO.T/fin [(DP):129 [PRO.sta [[D loro] [PRO.PRG [PRO.v PRO.lava]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[D N]]
					Dropping constituent (DP):130 from memory buffer into Spec of PRO.v
					Result [[D loro]:130 [? [[D Luisa]:129 [PRO.T/fin [(DP):129 [PRO.sta [(DP):130 [PRO.PRG [(DP):130 [PRO.v PRO.lava]]]]]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[D loro]:130 [? [[D Luisa]:129 [PRO.T/fin [(DP):129 [PRO.sta [(DP):130 [PRO.PRG [(DP):130 [PRO.v PRO.lava]]]]]]]]]].
					=[[D loro]:130 [? [[D Luisa]:129 [PRO.T/fin [(DP):129 [PRO.sta [(DP):130 [PRO.PRG [(DP):130 [PRO.v PRO.lava]]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF from the edge of phi.PRG.
					phi.PRG acquired PHI:GEN:N from the edge of phi.PRG.
					phi.PRG acquired PHI:NUM:PL from the edge of phi.PRG.
					phi.PRG acquired PHI:PER:3 from the edge of phi.PRG.
					=[[D loro]:130 [? [[D Luisa]:129 [T/fin [(DP):129 [PRO.sta [(DP):130 [phi.PRG [(DP):130 [PRO.v PRO.lava]]]]]]]]]]
			= [[D loro] [? [[D Luisa] [T/fin [[D Luisa] [sta [[D loro] [PRG [[D loro] [v lava]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.sta: [V, TT/fin, ?]
(D): [D, V, TT/fin, ?]
(N): [N, D, V, TT/fin, ?]
phi.PRG: [INF, V, TT/fin, ?]
(D): [D, INF, V, TT/fin, ?]
(N): [N, D, INF, V, TT/fin, ?]
PRO.v: [v, INF, V, TT/fin, ?]
PRO.lava: [V, v, INF, V, TT/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Luisa] PRO.T/fin{V}] PRG]
			Transferring [[D Luisa] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D Luisa] PRO.T/fin{V}].
					Extracted head "PRO.sta" from PRO.T/fin and created [[D Luisa] [PRO.T/fin PRO.sta]]
					=[[D Luisa] [PRO.T/fin PRO.sta]]
				2. Feature processing:
					=[[D Luisa] [PRO.T/fin PRO.sta]]
				3. Floater movement reconstruction:
					=[[D Luisa] [PRO.T/fin PRO.sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of PRO.sta
					Result [[D Luisa] [PRO.T/fin [[D Luisa] PRO.sta]]]
					=[[D Luisa]:132 [PRO.T/fin [(DP):132 PRO.sta]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					=[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]]
			=[[D loro] [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] PRO.PRG]]

21.
		Consume "v"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] sta]]] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D loro] [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] PRO.PRG{v}]]

22.
		Consume "lava"

		[[D loro] [[[D Luisa] [T/fin [[D Luisa] sta]]] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D loro] [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] PRO.PRG{v,V}]]

23.
	>>>	Trying candidate parse [[D loro] [[[D Luisa] [T/fin [[D Luisa] sta]]] PRG{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] PRO.PRG{v,V}]].
					Extracted head "PRO.v{V}" from PRO.PRG and created [[D loro] [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] [PRO.PRG PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
					=[[D loro] [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Luisa T/fin __sta " into memory buffer from SPEC of "PRO.PRG".
					Moving "D loro " into memory buffer from SPEC of "PRO.PRG".
					New head was spawned due to multiple specifiers at PRO.PRG but its category is unknown!
					Memory buffer: [[[D N] [TT/fin [[D N] V]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] [PRO.PRG [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.PRG has unaccetable specifier [[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]].
					Extraposition will be tried on [[D loro]:133 [? [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] [PRO.PRG [(DP):133 [PRO.v PRO.lava]]]]]].
					=[[D loro]:133 [? [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] [PRO.PRG [(DP):133 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF by phi-Agree from (DP):133.
					phi.PRG acquired PHI:GEN:N by phi-Agree from (DP):133.
					phi.PRG acquired PHI:NUM:PL by phi-Agree from (DP):133.
					phi.PRG acquired PHI:PER:3 by phi-Agree from (DP):133.
					=[[D loro]:133 [? [[[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]] [phi.PRG [(DP):133 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[[D Luisa] [T/fin [[D Luisa] sta]]] [PRG [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				phi.PRG has unaccetable specifier [[D Luisa]:132 [T/fin [(DP):132 PRO.sta]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
Luisa: [N, D, ?]
T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.sta: [V, TT/fin, ?]
phi.PRG: [INF, ?]
(D): [D, INF, ?]
(N): [N, D, INF, ?]
PRO.v: [v, INF, ?]
PRO.lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] D{N}] T/fin]
			Transferring [[D loro] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] D{N}].
					Extracted head "Luisa" from D and created [[D loro] [D Luisa]]
					=[[D loro] [D Luisa]]
				2. Feature processing:
					=[[D loro] [D Luisa]]
				3. Floater movement reconstruction:
					=[[D loro] [D Luisa]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D loro].
					Extraposition will be tried on [[D loro] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[D loro] <D Luisa>]
				5. Agreement reconstruction:
					=[[D loro] <D Luisa>]
			=[[[D loro] <D Luisa>] PRO.T/fin]

24.
		Consume "sta"

		[[[D loro] <D Luisa>] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[[D loro] <D Luisa>] PRO.T/fin{V}]

25.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[[D loro] <D Luisa>] T/fin{V}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[[D loro] <D Luisa>] PRO.T/fin{V}] + PRG = -98]
				PRO.T/fin{V} + PRG = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; PRG]
			2. [[[[D loro] <D Luisa>] PRO.T/fin{V}]; PRG]
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[[D loro] <D Luisa>] [PRO.T/fin{V} PRO.PRG]]

26.
		Consume "v"

		[[[D loro] <D Luisa>] [T/fin{V} PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[[D loro] <D Luisa>] [PRO.T/fin{V} PRO.PRG{v}]]

27.
		Consume "lava"

		[[[D loro] <D Luisa>] [T/fin{V} PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[[D loro] <D Luisa>] [PRO.T/fin{V} PRO.PRG{v,V}]]

28.
	>>>	Trying candidate parse [[[D loro] <D Luisa>] [T/fin{V} PRG{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro] <D Luisa>] [PRO.T/fin{V} PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro] <D Luisa>] [PRO.T/fin{V} PRO.PRG{v,V}]].
						Extracted head "PRO.sta" and reconstructed it = [[[D loro] <D Luisa>] [PRO.T/fin [PRO.sta PRO.PRG{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [[[D loro] <D Luisa>] [PRO.T/fin [PRO.sta [PRO.PRG PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro] <D Luisa>] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]
					=[[[D loro] <D Luisa>] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[[D loro] <D Luisa>] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[[D loro] <D Luisa>] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro D Luisa " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent [[D loro] <D Luisa>] from memory buffer into Spec of PRO.sta
					Result [[[D loro] <D Luisa>] [PRO.T/fin [[[D loro] <D Luisa>] [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
					=[[[D loro] <D Luisa>]:136 [PRO.T/fin [(DP):136 [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro] <D Luisa>]:136 [phi.T/fin [(DP):136 [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
			= [[[D loro] <D Luisa>] [T/fin [[[D loro] <D Luisa>] [sta [PRG [v lava]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D loro] <D Luisa>]:136 [phi.T/fin [(DP):136 [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				PRO.PRG with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D loro] <D Luisa>]    (alternatives: 2. T/fin 3. [[D loro] <D Luisa>] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.PRG([[D loro] <D Luisa>])', 'PRO.lava([[D loro] <D Luisa>])', 'PRO.sta([[D loro] <D Luisa>])', 'PRO.v([[D loro] <D Luisa>])']
!--->		Tests passed (with 28/414 operations) <------------------------------------
		Solution:
		[[[D loro] <D Luisa>] [T/fin [[[D loro] <D Luisa>] [sta [PRG [v lava]]]]]]
		Grammar: [[[D loro] <D Luisa>]:1 [phi.T/fin [(DP):1 [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF [v V]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
D: [D]
Luisa: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sta: [V, TT/fin]
PRO.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 40
['loro', 'stanno', 'Luisa', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "sta"

		[[D loro] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

16.
		Consume "Luisa"

		[[D loro] [T/fin{V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{V} D{N}]]

17.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D loro] [T/fin{V} D{N}]] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + PRG = -98]
				[PRO.T/fin{V} D{N}] + PRG = -96]
				D{N} + PRG = 106]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[PRO.T/fin{V} D{N}]; PRG]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					Reconstructing head movement for D{N}.
					Extracted head "Luisa" from D and created [D Luisa]
					D was opened into [D Luisa].
					=[D Luisa]
				2. Feature processing:
					=[D Luisa]
				3. Floater movement reconstruction:
					=[D Luisa]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D Luisa]
				5. Agreement reconstruction:
					=[D Luisa]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] PRO.PRG]]]

18.
		Consume "v"

		[[D loro] [T/fin{V} [[D Luisa] PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] PRO.PRG{v}]]]

19.
		Consume "lava"

		[[D loro] [T/fin{V} [[D Luisa] PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D Luisa] PRO.PRG{v,V}]]]

20.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D Luisa] PRG{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D Luisa] PRO.PRG{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D Luisa] PRO.PRG{v,V}]]].
						Extracted head "PRO.sta" and reconstructed it = [[D loro] [PRO.T/fin [PRO.sta [[D Luisa] PRO.PRG{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [[D loro] [PRO.T/fin [PRO.sta [[D Luisa] [PRO.PRG PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.sta [[D Luisa] [PRO.PRG [PRO.v PRO.lava]]]]]]
					=[[D loro] [PRO.T/fin [PRO.sta [[D Luisa] [PRO.PRG [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.sta [[D Luisa] [PRO.PRG [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.sta [[D Luisa] [PRO.PRG [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.sta
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.sta [[D Luisa] [PRO.PRG [PRO.v PRO.lava]]]]]]]
					Moving "D Luisa " into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[D N]]
					Dropping constituent [D Luisa] from memory buffer into Spec of PRO.v
					Result [[D loro]:141 [PRO.T/fin [(DP):141 [PRO.sta [[D Luisa] [PRO.PRG [[D Luisa] [PRO.v PRO.lava]]]]]]]]
					=[[D loro]:141 [PRO.T/fin [(DP):141 [PRO.sta [[D Luisa]:142 [PRO.PRG [(DP):142 [PRO.v PRO.lava]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF from the edge of phi.PRG.
					phi.PRG acquired PHI:GEN:F from the edge of phi.PRG.
					phi.PRG acquired PHI:NUM:SG from the edge of phi.PRG.
					phi.PRG acquired PHI:PER:3 from the edge of phi.PRG.
					=[[D loro]:141 [phi.T/fin [(DP):141 [PRO.sta [[D Luisa]:142 [phi.PRG [(DP):142 [PRO.v PRO.lava]]]]]]]]
			= [[D loro] [T/fin [[D loro] [sta [[D Luisa] [PRG [[D Luisa] [v lava]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:141 [phi.T/fin [(DP):141 [PRO.sta [[D Luisa]:142 [phi.PRG [(DP):142 [PRO.v PRO.lava]]]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Luisa] [PRG [[D Luisa] [v lava]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. PRG 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. PRG 3. [D Luisa] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D Luisa])', 'PRO.sta([[D Luisa] [PRG [[D Luisa] [v lava]]]])', 'PRO.v([D Luisa])']
!--->		Tests passed (with 20/217 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [sta [[D Luisa] [PRG [[D Luisa] [v lava]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.sta [[D Luisa]:2 [phi.PRG [(DP):2 [PRO.v PRO.lava]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [INF [__:2 [v V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sta: [V, TT/fin]
D: [D, V, TT/fin]
Luisa: [N, D, V, TT/fin]
phi.PRG: [INF, V, TT/fin]
(D): [D, INF, V, TT/fin]
(N): [N, D, INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 41
['loro', 'mi#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#lavano.
		Next word contains multiple morphemes ['lavano_', 'mi']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D loro] PRO.T/fin{v}]

11.
		Consume "lava"

		[[D loro] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[D loro] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[D loro] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D loro] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D loro] [PRO.T/fin{v,V} D]]

20.
		Consume "mi(cl)"

		[[D loro] [T/fin{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{v,V} D{N}]]

21.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v [PRO.lava D{N}]]]]
					Extracted head "mi(cl)" from D and created [[D loro] [PRO.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]]
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.v [PRO.lava [D mi(cl)]]]]]]
					=[[D loro]:3 [PRO.T/fin [(DP):3 [PRO.v [PRO.lava [D mi(cl)]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:3 [phi.T/fin [(DP):3 [PRO.v [PRO.lava [D mi(cl)]]]]]]
			= [[D loro] [T/fin [[D loro] [v [lava [D mi(cl)]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:3 [phi.T/fin [(DP):3 [PRO.v [PRO.lava [D mi(cl)]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D mi(cl)])', 'PRO.v([D loro])']
!--->		Tests passed (with 21/160 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [lava [D mi(cl)]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.lava [D mi(cl)]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
mi(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 42
['mi#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#lavano.
		Next word contains multiple morphemes ['lavano_', 'mi']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

5.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=PRO.T/fin{v,V}

6.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

14.
		Consume "mi(cl)"

		[T/fin{v,V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{v,V} D{N}]

15.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.v [PRO.lava D{N}]]]
					Extracted head "mi(cl)" from D and created [PRO.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]
					=[PRO.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]
			= [T/fin [v [lava [D mi(cl)]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.lava [D mi(cl)]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D mi(cl)])', 'PRO.v(T/fin)']
!--->		Tests passed (with 15/104 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [D mi(cl)]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.lava [D mi(cl)]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
mi(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 43
['loro', 'la#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word la#lavano.
		Next word contains multiple morphemes ['lavano_', 'la']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D loro] PRO.T/fin{v}]

11.
		Consume "lava"

		[[D loro] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[D loro] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[D loro] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D loro] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D loro] [PRO.T/fin{v,V} D]]

20.
		Consume "la(cl)"

		[[D loro] [T/fin{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.T/fin{v,V} D{N}]]

21.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v [PRO.lava D{N}]]]]
					Extracted head "la(cl)" from D and created [[D loro] [PRO.T/fin [PRO.v [PRO.lava [D la(cl)]]]]]
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D la(cl)]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D la(cl)]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D la(cl)]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.v [PRO.lava [D la(cl)]]]]]]
					=[[D loro]:6 [PRO.T/fin [(DP):6 [PRO.v [PRO.lava [D la(cl)]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:6 [phi.T/fin [(DP):6 [PRO.v [PRO.lava [D la(cl)]]]]]]
			= [[D loro] [T/fin [[D loro] [v [lava [D la(cl)]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:6 [phi.T/fin [(DP):6 [PRO.v [PRO.lava [D la(cl)]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D la(cl)])', 'PRO.v([D loro])']
!--->		Tests passed (with 21/160 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [lava [D la(cl)]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.lava [D la(cl)]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
la(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 44
['la#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#lavano.
		Next word contains multiple morphemes ['lavano_', 'la']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

5.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=PRO.T/fin{v,V}

6.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

14.
		Consume "la(cl)"

		[T/fin{v,V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.T/fin{v,V} D{N}]

15.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.v [PRO.lava D{N}]]]
					Extracted head "la(cl)" from D and created [PRO.T/fin [PRO.v [PRO.lava [D la(cl)]]]]
					=[PRO.T/fin [PRO.v [PRO.lava [D la(cl)]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.lava [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.lava [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.lava [D la(cl)]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.lava [D la(cl)]]]]
			= [T/fin [v [lava [D la(cl)]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.lava [D la(cl)]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D la(cl)])', 'PRO.v(T/fin)']
!--->		Tests passed (with 15/104 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [D la(cl)]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.lava [D la(cl)]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
la(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 45
['loro', 'lo#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word lo#lavano.
		Next word contains multiple morphemes ['lavano_', 'lo']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D loro] PRO.T/fin{v}]

11.
		Consume "lava"

		[[D loro] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[D loro] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[D loro] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D loro] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D loro] [PRO.T/fin{v,V} D]]

20.
		Consume "lo(cl)"

		[[D loro] [T/fin{v,V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [PRO.T/fin{v,V} D{N}]]

21.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v [PRO.lava D{N}]]]]
					Extracted head "lo(cl)" from D and created [[D loro] [PRO.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]]
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.v [PRO.lava [D lo(cl)]]]]]]
					=[[D loro]:9 [PRO.T/fin [(DP):9 [PRO.v [PRO.lava [D lo(cl)]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:9 [phi.T/fin [(DP):9 [PRO.v [PRO.lava [D lo(cl)]]]]]]
			= [[D loro] [T/fin [[D loro] [v [lava [D lo(cl)]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:9 [phi.T/fin [(DP):9 [PRO.v [PRO.lava [D lo(cl)]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D lo(cl)])', 'PRO.v([D loro])']
!--->		Tests passed (with 21/160 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [lava [D lo(cl)]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.lava [D lo(cl)]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
lo(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 46
['lo#lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lo#lavano.
		Next word contains multiple morphemes ['lavano_', 'lo']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

5.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=PRO.T/fin{v,V}

6.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} D]

14.
		Consume "lo(cl)"

		[T/fin{v,V} D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[PRO.T/fin{v,V} D{N}]

15.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.v [PRO.lava D{N}]]]
					Extracted head "lo(cl)" from D and created [PRO.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]
					=[PRO.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]
			= [T/fin [v [lava [D lo(cl)]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.lava [D lo(cl)]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D lo(cl)])', 'PRO.v(T/fin)']
!--->		Tests passed (with 15/104 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [D lo(cl)]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.lava [D lo(cl)]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
D: [D, V, v, TT/fin]
lo(cl): [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 47
['loro', 'lavano#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word lavano#mi.
		Next word contains multiple morphemes ['mi_', 'lavano']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

16.
		Consume "mi(cl)"

		[[D loro] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] D{N}]

17.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D loro] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D loro] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [[D mi(cl)] PRO.T/fin]]

19.
		Consume "v"

		[[D loro] [[D mi(cl)] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D loro] [[D mi(cl)] PRO.T/fin{v}]]

20.
		Consume "lava"

		[[D loro] [[D mi(cl)] T/fin{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[D loro] [[D mi(cl)] PRO.T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[D loro] [[D mi(cl)] T/fin{v,V}]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] D{N}] T/fin]
			Transferring [[D loro] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] D{N}].
					Extracted head "mi(cl)" from D and created [[D loro] [D mi(cl)]]
					=[[D loro] [D mi(cl)]]
				2. Feature processing:
					=[[D loro] [D mi(cl)]]
				3. Floater movement reconstruction:
					=[[D loro] [D mi(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D loro].
					Extraposition will be tried on [[D loro] [D mi(cl)]].
						<D mi(cl)> was made an adjunct.
					<D mi(cl)> was made adjunct by an extraposition rule.
					=[[D loro] <D mi(cl)>]
				5. Agreement reconstruction:
					=[[D loro] <D mi(cl)>]
			=[[[D loro] <D mi(cl)>] PRO.T/fin]

22.
		Consume "v"

		[[[D loro] <D mi(cl)>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[[D loro] <D mi(cl)>] PRO.T/fin{v}]

23.
		Consume "lava"

		[[[D loro] <D mi(cl)>] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[[D loro] <D mi(cl)>] PRO.T/fin{v,V}]

24.
	>>>	Trying candidate parse [[[D loro] <D mi(cl)>] T/fin{v,V}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro] <D mi(cl)>] PRO.T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro] <D mi(cl)>] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[[D loro] <D mi(cl)>] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.v PRO.lava]]]
					=[[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro D mi(cl) " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent [[D loro] <D mi(cl)>] from memory buffer into Spec of PRO.v
					Result [[[D loro] <D mi(cl)>] [PRO.T/fin [[[D loro] <D mi(cl)>] [PRO.v PRO.lava]]]]
				h(D) failed internal tail test.
					Extraposition will be tried on [[[D loro] <D mi(cl)>]:10 [PRO.T/fin [(DP):10 [PRO.v PRO.lava]]]].
					=[[[D loro] <D mi(cl)>]:10 [PRO.T/fin [(DP):10 [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[[D loro] <D mi(cl)>]:10 [phi.T/fin [(DP):10 [PRO.v PRO.lava]]]]
			= [[[D loro] <D mi(cl)>] [T/fin [[[D loro] <D mi(cl)>] [v lava]]]]
		Checking LF-interface conditions.
				h(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
D: [D]
mi(cl): [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 48
['lavano#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lavano#mi.
		Next word contains multiple morphemes ['mi_', 'lavano']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] PRO.T/fin]

13.
		Consume "v"

		[[D mi(cl)] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D mi(cl)] PRO.T/fin{v}]

14.
		Consume "lava"

		[[D mi(cl)] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[D mi(cl)] PRO.T/fin{v,V}]

15.
	>>>	Trying candidate parse [[D mi(cl)] T/fin{v,V}] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 49
['loro#mi', 'lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#mi.
		Next word contains multiple morphemes ['mi_', 'loro']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

16.
		Consume "loro"

		[[D mi(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D mi(cl)] D{N}]

17.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D mi(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D mi(cl)] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D mi(cl)] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D mi(cl)] [[D loro] PRO.T/fin]]

19.
		Consume "v"

		[[D mi(cl)] [[D loro] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D mi(cl)] [[D loro] PRO.T/fin{v}]]

20.
		Consume "lava"

		[[D mi(cl)] [[D loro] T/fin{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[D mi(cl)] [[D loro] PRO.T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] T/fin{v,V}]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mi(cl)] D{N}] T/fin]
			Transferring [[D mi(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] D{N}].
					Extracted head "loro" from D and created [[D mi(cl)] [D loro]]
					=[[D mi(cl)] [D loro]]
				2. Feature processing:
					=[[D mi(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D mi(cl)].
					Extraposition will be tried on [[D mi(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D mi(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D mi(cl)] <D loro>]
			=[[[D mi(cl)] <D loro>] PRO.T/fin]

22.
		Consume "v"

		[[[D mi(cl)] <D loro>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[[D mi(cl)] <D loro>] PRO.T/fin{v}]

23.
		Consume "lava"

		[[[D mi(cl)] <D loro>] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[[D mi(cl)] <D loro>] PRO.T/fin{v,V}]

24.
	>>>	Trying candidate parse [[[D mi(cl)] <D loro>] T/fin{v,V}] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 50
['mi#loro', 'lavano']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#loro.
		Next word contains multiple morphemes ['loro_', 'mi']
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

8.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

16.
		Consume "mi(cl)"

		[[D loro] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] D{N}]

17.
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D loro] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D loro] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [[D mi(cl)] PRO.T/fin]]

19.
		Consume "v"

		[[D loro] [[D mi(cl)] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D loro] [[D mi(cl)] PRO.T/fin{v}]]

20.
		Consume "lava"

		[[D loro] [[D mi(cl)] T/fin{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[D loro] [[D mi(cl)] PRO.T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[D loro] [[D mi(cl)] T/fin{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D mi(cl)] PRO.T/fin{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D mi(cl)] PRO.T/fin{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D loro] [[D mi(cl)] [PRO.T/fin PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[D mi(cl)] [PRO.T/fin [PRO.v PRO.lava]]]]
					=[[D loro] [[D mi(cl)] [PRO.T/fin [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[D mi(cl)] [PRO.T/fin [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D mi(cl)] [PRO.T/fin [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.T/fin".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					New head was spawned due to multiple specifiers at PRO.T/fin but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[D mi(cl)] [PRO.T/fin [[D loro] [PRO.v PRO.lava]]]]]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:143 [? [[D mi(cl)]:144 [PRO.T/fin [(DP):143 [PRO.v [PRO.lava (DP):144]]]]]]]
					Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[D loro]:143 [? [[D mi(cl)]:144 [PRO.T/fin [(DP):143 [PRO.v [PRO.lava (DP):144]]]]]]].
					=[[D loro]:143 [? [[D mi(cl)]:144 [PRO.T/fin [(DP):143 [PRO.v [PRO.lava (DP):144]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D loro]:143 [? [[D mi(cl)]:144 [T/fin [(DP):143 [PRO.v [PRO.lava (DP):144]]]]]]]
			= [[D loro] [? [[D mi(cl)] [T/fin [[D loro] [v [lava [D mi(cl)]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
mi(cl): [N, D, ?]
T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.v: [v, TT/fin, ?]
PRO.lava: [V, v, TT/fin, ?]
(D): [D, V, v, TT/fin, ?]
(N): [N, D, V, v, TT/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] D{N}] T/fin]
			Transferring [[D loro] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] D{N}].
					Extracted head "mi(cl)" from D and created [[D loro] [D mi(cl)]]
					=[[D loro] [D mi(cl)]]
				2. Feature processing:
					=[[D loro] [D mi(cl)]]
				3. Floater movement reconstruction:
					=[[D loro] [D mi(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D loro].
					Extraposition will be tried on [[D loro] [D mi(cl)]].
						<D mi(cl)> was made an adjunct.
					<D mi(cl)> was made adjunct by an extraposition rule.
					=[[D loro] <D mi(cl)>]
				5. Agreement reconstruction:
					=[[D loro] <D mi(cl)>]
			=[[[D loro] <D mi(cl)>] PRO.T/fin]

22.
		Consume "v"

		[[[D loro] <D mi(cl)>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[[D loro] <D mi(cl)>] PRO.T/fin{v}]

23.
		Consume "lava"

		[[[D loro] <D mi(cl)>] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[[D loro] <D mi(cl)>] PRO.T/fin{v,V}]

24.
	>>>	Trying candidate parse [[[D loro] <D mi(cl)>] T/fin{v,V}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro] <D mi(cl)>] PRO.T/fin{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro] <D mi(cl)>] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[[D loro] <D mi(cl)>] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.v PRO.lava]]]
					=[[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro D mi(cl) " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent [[D loro] <D mi(cl)>] from memory buffer into Spec of PRO.v
					Result [[[D loro] <D mi(cl)>] [PRO.T/fin [[[D loro] <D mi(cl)>] [PRO.v PRO.lava]]]]
				h(D) failed internal tail test.
					Extraposition will be tried on [[[D loro] <D mi(cl)>]:145 [PRO.T/fin [(DP):145 [PRO.v PRO.lava]]]].
					=[[[D loro] <D mi(cl)>]:145 [PRO.T/fin [(DP):145 [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[[D loro] <D mi(cl)>]:145 [phi.T/fin [(DP):145 [PRO.v PRO.lava]]]]
			= [[[D loro] <D mi(cl)>] [T/fin [[[D loro] <D mi(cl)>] [v lava]]]]
		Checking LF-interface conditions.
				h(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
D: [D]
mi(cl): [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 51
['loro', 'mi#hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] PRO.T/prt{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:15 [PRO.T/fin [(DP):15 [PRO.ha [[D mi(cl)]:16 [PRO.T/prt [PRO.v [PRO.lava (DP):16]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:15 [PRO.T/fin [(DP):15 [PRO.ha [[D mi(cl)]:16 [PRO.T/prt [PRO.v [PRO.lava (DP):16]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:1 from the edge of phi.T/prt.
					=[[D loro]:15 [phi.T/fin [(DP):15 [PRO.ha [[D mi(cl)]:16 [phi.T/prt [PRO.v [PRO.lava (DP):16]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:15 [phi.T/fin [(DP):15 [PRO.ha [[D mi(cl)]:16 [phi.T/prt [PRO.v [PRO.lava (DP):16]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/prt 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha([[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]])', 'PRO.lava([D mi(cl)])', 'PRO.v(T/prt)']
!--->		Tests passed (with 26/234 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.ha [[D mi(cl)]:2 [phi.T/prt [PRO.v [PRO.lava (DP):2]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [T [v [V __:2]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
phi.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(D): [D, V, v, T, V, TT/fin]
(N): [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 52
['loro', 'la#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

11.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "la(cl)"

		[[D loro] [T/fin{V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] T/prt]]]

27.
		Consume "v"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] T/prt{v}]]]

28.
		Consume "lava"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] T/prt{v,V}]]]

29.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D la(cl)] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D la(cl)] T/prt{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] T/prt{v,V}]]]]
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [T/prt PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]]]
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:21 [PRO.T/fin [(DP):21 [PRO.ha [[D la(cl)]:22 [T/prt [PRO.v [PRO.lava (DP):22]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:21 [PRO.T/fin [(DP):21 [PRO.ha [[D la(cl)]:22 [T/prt [PRO.v [PRO.lava (DP):22]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[D loro]:21 [phi.T/fin [(DP):21 [PRO.ha [[D la(cl)]:22 [T/prt [PRO.v [PRO.lava (DP):22]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:21 [phi.T/fin [(DP):21 [PRO.ha [[D la(cl)]:22 [T/prt [PRO.v [PRO.lava (DP):22]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D la(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/prt 3. [D la(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha([[D la(cl)] [T/prt [v [lava [D la(cl)]]]]])', 'PRO.lava([D la(cl)])', 'PRO.v(T/prt)']
!--->		Tests passed (with 29/240 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.ha [[D la(cl)]:2 [T/prt [PRO.v [PRO.lava (DP):2]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [T [v [V __:2]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(D): [D, V, v, T, V, TT/fin]
(N): [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 53
['mi#hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "mi(cl)"

		[T/fin{V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + T/prt = -98]
				D{N} + T/prt = 104]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.T/prt]]

18.
		Consume "v"

		[T/fin{V} [[D mi(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v}]]

19.
		Consume "lava"

		[T/fin{V} [[D mi(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v,V}]]

20.
	>>>	Trying candidate parse [T/fin{V} [[D mi(cl)] T/prt{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[D mi(cl)] PRO.T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.ha [[D mi(cl)]:146 [PRO.T/prt [PRO.v [PRO.lava (DP):146]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.ha [[D mi(cl)]:146 [PRO.T/prt [PRO.v [PRO.lava (DP):146]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:146.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:1 from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [[D mi(cl)]:146 [phi.T/prt [PRO.v [PRO.lava (DP):146]]]]]]
			= [T/fin [ha [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.ha [[D mi(cl)]:146 [phi.T/prt [PRO.v [PRO.lava (DP):146]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/prt 3. [D mi(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha([[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]])', 'PRO.lava([D mi(cl)])', 'PRO.v(T/prt)']
!--->		Tests passed (with 20/177 operations) <------------------------------------
		Solution:
		[T/fin [ha [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]
		Grammar: [phi.T/fin [PRO.ha [[D mi(cl)]:1 [phi.T/prt [PRO.v [PRO.lava (DP):1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [T [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
phi.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(D): [D, V, v, T, V, TT/fin]
(N): [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 54
['la#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "la(cl)"

		[T/fin{V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + T/prt = -98]
				D{N} + T/prt = 104]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[PRO.T/fin{V} [[D la(cl)] T/prt]]

21.
		Consume "v"

		[T/fin{V} [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[PRO.T/fin{V} [[D la(cl)] T/prt{v}]]

22.
		Consume "lava"

		[T/fin{V} [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[PRO.T/fin{V} [[D la(cl)] T/prt{v,V}]]

23.
	>>>	Trying candidate parse [T/fin{V} [[D la(cl)] T/prt{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D la(cl)] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D la(cl)] T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[D la(cl)] T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from T/prt and created [PRO.T/fin [PRO.ha [[D la(cl)] [T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]
					=[PRO.T/fin [PRO.ha [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.ha [[D la(cl)]:147 [T/prt [PRO.v [PRO.lava (DP):147]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.ha [[D la(cl)]:147 [T/prt [PRO.v [PRO.lava (DP):147]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)]:147.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[phi.T/fin [PRO.ha [[D la(cl)]:147 [T/prt [PRO.v [PRO.lava (DP):147]]]]]]
			= [T/fin [ha [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.ha [[D la(cl)]:147 [T/prt [PRO.v [PRO.lava (DP):147]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D la(cl)] 3. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/prt 3. [D la(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha([[D la(cl)] [T/prt [v [lava [D la(cl)]]]]])', 'PRO.lava([D la(cl)])', 'PRO.v(T/prt)']
!--->		Tests passed (with 23/183 operations) <------------------------------------
		Solution:
		[T/fin [ha [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]
		Grammar: [phi.T/fin [PRO.ha [[D la(cl)]:1 [T/prt [PRO.v [PRO.lava (DP):1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [T [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(D): [D, V, v, T, V, TT/fin]
(N): [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 55
['lo#hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lo#hanno.
		Next word contains multiple morphemes ['hanno_', 'lo']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "lo(cl)"

		[T/fin{V} D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + T/prt = -98]
				D{N} + T/prt = 104]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[PRO.T/fin{V} [[D lo(cl)] PRO.T/prt]]

18.
		Consume "v"

		[T/fin{V} [[D lo(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} [[D lo(cl)] PRO.T/prt{v}]]

19.
		Consume "lava"

		[T/fin{V} [[D lo(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[PRO.T/fin{V} [[D lo(cl)] PRO.T/prt{v,V}]]

20.
	>>>	Trying candidate parse [T/fin{V} [[D lo(cl)] T/prt{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D lo(cl)] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D lo(cl)] PRO.T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[D lo(cl)] PRO.T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [[D lo(cl)] [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [[D lo(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]
					=[PRO.T/fin [PRO.ha [[D lo(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[D lo(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [[D lo(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.ha [[D lo(cl)]:148 [PRO.T/prt [PRO.v [PRO.lava (DP):148]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.ha [[D lo(cl)]:148 [PRO.T/prt [PRO.v [PRO.lava (DP):148]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)]:148.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:3 from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [[D lo(cl)]:148 [phi.T/prt [PRO.v [PRO.lava (DP):148]]]]]]
			= [T/fin [ha [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.ha [[D lo(cl)]:148 [phi.T/prt [PRO.v [PRO.lava (DP):148]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D lo(cl)] 3. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/prt 3. [D lo(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha([[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]])', 'PRO.lava([D lo(cl)])', 'PRO.v(T/prt)']
!--->		Tests passed (with 20/177 operations) <------------------------------------
		Solution:
		[T/fin [ha [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]]]
		Grammar: [phi.T/fin [PRO.ha [[D lo(cl)]:1 [phi.T/prt [PRO.v [PRO.lava (DP):1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [T [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
phi.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(D): [D, V, v, T, V, TT/fin]
(N): [N, D, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 56
['loro', 'mi#devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#devono.
		Next word contains multiple morphemes ['devono_', 'mi']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

10.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva D]]

18.
		Consume "mi(cl)"

		[[D loro] [deva D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [deva <D mi(cl)>]] PRO.are] due to bad left branch.
				Reject [[deva <D mi(cl)>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [PRO.deva [[D mi(cl)] PRO.are]]]

20.
		Consume "v"

		[[D loro] [deva [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva [[D mi(cl)] PRO.are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva [[D mi(cl)] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.deva [[D mi(cl)] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva [[D mi(cl)] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [[D mi(cl)] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.deva [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.deva [[D mi(cl)] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:23 [PRO.deva [[D mi(cl)]:24 [PRO.are [(DP):23 [PRO.v [PRO.lava (DP):24]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:23 [PRO.deva [[D mi(cl)]:24 [PRO.are [(DP):23 [PRO.v [PRO.lava (DP):24]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:1 from the edge of phi.are.
					=[[D loro]:23 [phi.deva [[D mi(cl)]:24 [phi.are [(DP):23 [PRO.v [PRO.lava (DP):24]]]]]]]
			= [[D loro] [deva [[D mi(cl)] [are [[D loro] [v [lava [D mi(cl)]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:23 [phi.deva [[D mi(cl)]:24 [phi.are [(DP):23 [PRO.v [PRO.lava (DP):24]]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. are 3. [D mi(cl)] 4. deva 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. [D loro] 3. are 4. [D mi(cl)] 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D mi(cl)])', 'PRO.v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[[D loro] [deva [[D mi(cl)] [are [[D loro] [v [lava [D mi(cl)]]]]]]]]
		Grammar: [[D loro]:1 [phi.deva [[D mi(cl)]:2 [phi.are [(DP):1 [PRO.v [PRO.lava (DP):2]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [INF [__:1 [v [V __:2]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.deva: [TT/fin]
D: [D, TT/fin]
mi(cl): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 57
['loro', 'devono', 'lavare#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

9.
		Decomposing a polymorphemic word lavare#mi.
		Next word contains multiple morphemes ['mi_', 'lavare']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva D]]

18.
		Consume "mi(cl)"

		[[D loro] [deva D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [deva <D mi(cl)>]] PRO.are] due to bad left branch.
				Reject [[deva <D mi(cl)>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [PRO.deva [[D mi(cl)] PRO.are]]]

20.
		Consume "v"

		[[D loro] [deva [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva [[D mi(cl)] PRO.are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva [[D mi(cl)] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.deva [[D mi(cl)] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva [[D mi(cl)] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [[D mi(cl)] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.deva [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.deva [[D mi(cl)] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:25 [PRO.deva [[D mi(cl)]:26 [PRO.are [(DP):25 [PRO.v [PRO.lava (DP):26]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:25 [PRO.deva [[D mi(cl)]:26 [PRO.are [(DP):25 [PRO.v [PRO.lava (DP):26]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:1 from the edge of phi.are.
					=[[D loro]:25 [phi.deva [[D mi(cl)]:26 [phi.are [(DP):25 [PRO.v [PRO.lava (DP):26]]]]]]]
			= [[D loro] [deva [[D mi(cl)] [are [[D loro] [v [lava [D mi(cl)]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:25 [phi.deva [[D mi(cl)]:26 [phi.are [(DP):25 [PRO.v [PRO.lava (DP):26]]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. are 3. [D mi(cl)] 4. deva 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. [D loro] 3. are 4. [D mi(cl)] 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D mi(cl)])', 'PRO.v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[[D loro] [deva [[D mi(cl)] [are [[D loro] [v [lava [D mi(cl)]]]]]]]]
		Grammar: [[D loro]:1 [phi.deva [[D mi(cl)]:2 [phi.are [(DP):1 [PRO.v [PRO.lava (DP):2]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [INF [__:1 [v [V __:2]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.deva: [TT/fin]
D: [D, TT/fin]
mi(cl): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 58
['loro', 'devono', 'mi#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

9.
		Decomposing a polymorphemic word mi#lavare.
		Next word contains multiple morphemes ['lavare_', 'mi']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[D loro] deva] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva PRO.are]]

11.
		Consume "v"

		[[D loro] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva PRO.are{v}]]

12.
		Consume "lava"

		[[D loro] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva PRO.are{v,V}]]

13.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [deva are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[[D loro] [PRO.deva PRO.are{v,V}]] + D = -98]
				[PRO.deva PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = 59]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.deva PRO.are{v,V}]; D]
			3. [[[D loro] [PRO.deva PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[[D loro] [PRO.deva [PRO.are{v,V} D]]]

21.
		Consume "mi(cl)"

		[[D loro] [deva [are{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.deva [PRO.are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.deva PRO.are{v,V}] D]
			Transferring [PRO.deva PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [PRO.are [PRO.v PRO.lava]]]
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.deva [PRO.are [PRO.v PRO.lava]]]
			=[[D loro] [[phi.deva [PRO.are [PRO.v PRO.lava]]] D]]

23.
		Consume "mi(cl)"

		[[D loro] [[deva [are [v lava]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[phi.deva [PRO.are [PRO.v PRO.lava]]] D{N}]]

24.
	>>>	Trying candidate parse [[D loro] [[deva [are [v lava]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.deva PRO.are{v,V}]] D]
			Transferring [[D loro] [PRO.deva PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.are
					Result [[D loro] [PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent (DP):31 from memory buffer into Spec of PRO.v
					Result [[D loro]:31 [PRO.deva [(DP):31 [PRO.are [(DP):31 [PRO.v PRO.lava]]]]]]
					=[[D loro]:31 [PRO.deva [(DP):31 [PRO.are [(DP):31 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:31 [phi.deva [(DP):31 [phi.are [(DP):31 [PRO.v PRO.lava]]]]]]
			=[[[D loro]:31 [phi.deva [(DP):31 [phi.are [(DP):31 [PRO.v PRO.lava]]]]]] D]

25.
		Consume "mi(cl)"

		[[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:31 [phi.deva [(DP):31 [phi.are [(DP):31 [PRO.v PRO.lava]]]]]] D{N}]

26.
	>>>	Trying candidate parse [[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 59
['loro', 'la#devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word la#devono.
		Next word contains multiple morphemes ['devono_', 'la']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

10.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva D]]

18.
		Consume "la(cl)"

		[[D loro] [deva D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [deva <D la(cl)>]] PRO.are] due to bad left branch.
				Reject [[deva <D la(cl)>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [PRO.deva [[D la(cl)] PRO.are]]]

20.
		Consume "v"

		[[D loro] [deva [[D la(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva [[D la(cl)] PRO.are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D la(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva [[D la(cl)] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D la(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.deva [[D la(cl)] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva [[D la(cl)] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [[D la(cl)] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.deva [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Moving "D la(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.deva [[D la(cl)] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:33 [PRO.deva [[D la(cl)]:34 [PRO.are [(DP):33 [PRO.v [PRO.lava (DP):34]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:33 [PRO.deva [[D la(cl)]:34 [PRO.are [(DP):33 [PRO.v [PRO.lava (DP):34]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:F from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:33 [phi.deva [[D la(cl)]:34 [phi.are [(DP):33 [PRO.v [PRO.lava (DP):34]]]]]]]
			= [[D loro] [deva [[D la(cl)] [are [[D loro] [v [lava [D la(cl)]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:33 [phi.deva [[D la(cl)]:34 [phi.are [(DP):33 [PRO.v [PRO.lava (DP):34]]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. are 3. [D la(cl)] 4. deva 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. [D loro] 3. are 4. [D la(cl)] 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D la(cl)])', 'PRO.v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[[D loro] [deva [[D la(cl)] [are [[D loro] [v [lava [D la(cl)]]]]]]]]
		Grammar: [[D loro]:1 [phi.deva [[D la(cl)]:2 [phi.are [(DP):1 [PRO.v [PRO.lava (DP):2]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [INF [__:1 [v [V __:2]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.deva: [TT/fin]
D: [D, TT/fin]
la(cl): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 60
['loro', 'devono', 'lavare#la']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

9.
		Decomposing a polymorphemic word lavare#la.
		Next word contains multiple morphemes ['la_', 'lavare']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva D]]

18.
		Consume "la(cl)"

		[[D loro] [deva D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [deva <D la(cl)>]] PRO.are] due to bad left branch.
				Reject [[deva <D la(cl)>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [PRO.deva [[D la(cl)] PRO.are]]]

20.
		Consume "v"

		[[D loro] [deva [[D la(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva [[D la(cl)] PRO.are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D la(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva [[D la(cl)] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D la(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.deva [[D la(cl)] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva [[D la(cl)] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [[D la(cl)] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.deva [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Moving "D la(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.deva [[D la(cl)] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:35 [PRO.deva [[D la(cl)]:36 [PRO.are [(DP):35 [PRO.v [PRO.lava (DP):36]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:35 [PRO.deva [[D la(cl)]:36 [PRO.are [(DP):35 [PRO.v [PRO.lava (DP):36]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:F from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:35 [phi.deva [[D la(cl)]:36 [phi.are [(DP):35 [PRO.v [PRO.lava (DP):36]]]]]]]
			= [[D loro] [deva [[D la(cl)] [are [[D loro] [v [lava [D la(cl)]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:35 [phi.deva [[D la(cl)]:36 [phi.are [(DP):35 [PRO.v [PRO.lava (DP):36]]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. are 3. [D la(cl)] 4. deva 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. [D loro] 3. are 4. [D la(cl)] 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D la(cl)])', 'PRO.v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[[D loro] [deva [[D la(cl)] [are [[D loro] [v [lava [D la(cl)]]]]]]]]
		Grammar: [[D loro]:1 [phi.deva [[D la(cl)]:2 [phi.are [(DP):1 [PRO.v [PRO.lava (DP):2]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [INF [__:1 [v [V __:2]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.deva: [TT/fin]
D: [D, TT/fin]
la(cl): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 61
['loro', 'devono', 'la#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

9.
		Decomposing a polymorphemic word la#lavare.
		Next word contains multiple morphemes ['lavare_', 'la']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[D loro] deva] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva PRO.are]]

11.
		Consume "v"

		[[D loro] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva PRO.are{v}]]

12.
		Consume "lava"

		[[D loro] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva PRO.are{v,V}]]

13.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [deva are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[[D loro] [PRO.deva PRO.are{v,V}]] + D = -98]
				[PRO.deva PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = 59]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.deva PRO.are{v,V}]; D]
			3. [[[D loro] [PRO.deva PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[[D loro] [PRO.deva [PRO.are{v,V} D]]]

21.
		Consume "la(cl)"

		[[D loro] [deva [are{v,V} D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.deva [PRO.are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.deva PRO.are{v,V}] D]
			Transferring [PRO.deva PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [PRO.are [PRO.v PRO.lava]]]
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.deva [PRO.are [PRO.v PRO.lava]]]
			=[[D loro] [[phi.deva [PRO.are [PRO.v PRO.lava]]] D]]

23.
		Consume "la(cl)"

		[[D loro] [[deva [are [v lava]]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[phi.deva [PRO.are [PRO.v PRO.lava]]] D{N}]]

24.
	>>>	Trying candidate parse [[D loro] [[deva [are [v lava]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.deva PRO.are{v,V}]] D]
			Transferring [[D loro] [PRO.deva PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.are
					Result [[D loro] [PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent (DP):41 from memory buffer into Spec of PRO.v
					Result [[D loro]:41 [PRO.deva [(DP):41 [PRO.are [(DP):41 [PRO.v PRO.lava]]]]]]
					=[[D loro]:41 [PRO.deva [(DP):41 [PRO.are [(DP):41 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:41 [phi.deva [(DP):41 [phi.are [(DP):41 [PRO.v PRO.lava]]]]]]
			=[[[D loro]:41 [phi.deva [(DP):41 [phi.are [(DP):41 [PRO.v PRO.lava]]]]]] D]

25.
		Consume "la(cl)"

		[[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:41 [phi.deva [(DP):41 [phi.are [(DP):41 [PRO.v PRO.lava]]]]]] D{N}]

26.
	>>>	Trying candidate parse [[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 62
['loro', 'lo#devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word lo#devono.
		Next word contains multiple morphemes ['devono_', 'lo']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

10.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva D]]

18.
		Consume "lo(cl)"

		[[D loro] [deva D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [PRO.deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [deva <D lo(cl)>]] PRO.are] due to bad left branch.
				Reject [[deva <D lo(cl)>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D loro] [PRO.deva [[D lo(cl)] PRO.are]]]

20.
		Consume "v"

		[[D loro] [deva [[D lo(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva [[D lo(cl)] PRO.are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D lo(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva [[D lo(cl)] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D lo(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.deva [[D lo(cl)] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva [[D lo(cl)] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [[D lo(cl)] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.deva [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Moving "D lo(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.deva [[D lo(cl)] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:43 [PRO.deva [[D lo(cl)]:44 [PRO.are [(DP):43 [PRO.v [PRO.lava (DP):44]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:43 [PRO.deva [[D lo(cl)]:44 [PRO.are [(DP):43 [PRO.v [PRO.lava (DP):44]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:43 [phi.deva [[D lo(cl)]:44 [phi.are [(DP):43 [PRO.v [PRO.lava (DP):44]]]]]]]
			= [[D loro] [deva [[D lo(cl)] [are [[D loro] [v [lava [D lo(cl)]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:43 [phi.deva [[D lo(cl)]:44 [phi.are [(DP):43 [PRO.v [PRO.lava (DP):44]]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. are 3. [D lo(cl)] 4. deva 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. [D loro] 3. are 4. [D lo(cl)] 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D lo(cl)])', 'PRO.v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[[D loro] [deva [[D lo(cl)] [are [[D loro] [v [lava [D lo(cl)]]]]]]]]
		Grammar: [[D loro]:1 [phi.deva [[D lo(cl)]:2 [phi.are [(DP):1 [PRO.v [PRO.lava (DP):2]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [INF [__:1 [v [V __:2]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.deva: [TT/fin]
D: [D, TT/fin]
lo(cl): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 63
['loro', 'devono', 'lavare#lo']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

9.
		Decomposing a polymorphemic word lavare#lo.
		Next word contains multiple morphemes ['lo_', 'lavare']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] deva] + D
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] D] due to bad left branch.
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva D]]

18.
		Consume "lo(cl)"

		[[D loro] [deva D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [PRO.deva D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [deva D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [deva <D lo(cl)>]] PRO.are] due to bad left branch.
				Reject [[deva <D lo(cl)>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D loro] [PRO.deva [[D lo(cl)] PRO.are]]]

20.
		Consume "v"

		[[D loro] [deva [[D lo(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva [[D lo(cl)] PRO.are{v}]]]

21.
		Consume "lava"

		[[D loro] [deva [[D lo(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva [[D lo(cl)] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [[D lo(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.deva [[D lo(cl)] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva [[D lo(cl)] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [[D lo(cl)] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.deva [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Moving "D lo(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.deva [[D lo(cl)] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:45 [PRO.deva [[D lo(cl)]:46 [PRO.are [(DP):45 [PRO.v [PRO.lava (DP):46]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:45 [PRO.deva [[D lo(cl)]:46 [PRO.are [(DP):45 [PRO.v [PRO.lava (DP):46]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:45 [phi.deva [[D lo(cl)]:46 [phi.are [(DP):45 [PRO.v [PRO.lava (DP):46]]]]]]]
			= [[D loro] [deva [[D lo(cl)] [are [[D loro] [v [lava [D lo(cl)]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:45 [phi.deva [[D lo(cl)]:46 [phi.are [(DP):45 [PRO.v [PRO.lava (DP):46]]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. are 3. [D lo(cl)] 4. deva 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. [D loro] 3. are 4. [D lo(cl)] 5. deva 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D lo(cl)])', 'PRO.v([D loro])']
!--->		Tests passed (with 22/189 operations) <------------------------------------
		Solution:
		[[D loro] [deva [[D lo(cl)] [are [[D loro] [v [lava [D lo(cl)]]]]]]]]
		Grammar: [[D loro]:1 [phi.deva [[D lo(cl)]:2 [phi.are [(DP):1 [PRO.v [PRO.lava (DP):2]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [INF [__:1 [v [V __:2]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.deva: [TT/fin]
D: [D, TT/fin]
lo(cl): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 64
['loro', 'devono', 'lo#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

9.
		Decomposing a polymorphemic word lo#lavare.
		Next word contains multiple morphemes ['lavare_', 'lo']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[D loro] deva] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva PRO.are]]

11.
		Consume "v"

		[[D loro] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva PRO.are{v}]]

12.
		Consume "lava"

		[[D loro] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva PRO.are{v,V}]]

13.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [deva are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[[D loro] [PRO.deva PRO.are{v,V}]] + D = -98]
				[PRO.deva PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = 59]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.deva PRO.are{v,V}]; D]
			3. [[[D loro] [PRO.deva PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[[D loro] [PRO.deva [PRO.are{v,V} D]]]

21.
		Consume "lo(cl)"

		[[D loro] [deva [are{v,V} D]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [PRO.deva [PRO.are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.deva PRO.are{v,V}] D]
			Transferring [PRO.deva PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [PRO.are [PRO.v PRO.lava]]]
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.deva [PRO.are [PRO.v PRO.lava]]]
			=[[D loro] [[phi.deva [PRO.are [PRO.v PRO.lava]]] D]]

23.
		Consume "lo(cl)"

		[[D loro] [[deva [are [v lava]]] D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [[phi.deva [PRO.are [PRO.v PRO.lava]]] D{N}]]

24.
	>>>	Trying candidate parse [[D loro] [[deva [are [v lava]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.deva PRO.are{v,V}]] D]
			Transferring [[D loro] [PRO.deva PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.are
					Result [[D loro] [PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent (DP):51 from memory buffer into Spec of PRO.v
					Result [[D loro]:51 [PRO.deva [(DP):51 [PRO.are [(DP):51 [PRO.v PRO.lava]]]]]]
					=[[D loro]:51 [PRO.deva [(DP):51 [PRO.are [(DP):51 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:51 [phi.deva [(DP):51 [phi.are [(DP):51 [PRO.v PRO.lava]]]]]]
			=[[[D loro]:51 [phi.deva [(DP):51 [phi.are [(DP):51 [PRO.v PRO.lava]]]]]] D]

25.
		Consume "lo(cl)"

		[[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:51 [phi.deva [(DP):51 [phi.are [(DP):51 [PRO.v PRO.lava]]]]]] D{N}]

26.
	>>>	Trying candidate parse [[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 65
['loro', 'mi#stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#stanno.
		Next word contains multiple morphemes ['stanno_', 'mi']
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "sta"

		[[D loro] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[D loro] PRO.T/fin{V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D loro] [T/fin{V} D{N}]] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + PRG = -98]
				[PRO.T/fin{V} D{N}] + PRG = -96]
				D{N} + PRG = 106]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[PRO.T/fin{V} D{N}]; PRG]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.PRG]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v}]]]

22.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] PRG{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]]].
						Extracted head "PRO.sta" and reconstructed it = [[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] PRO.PRG{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]]
					=[[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.sta
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:57 [PRO.T/fin [(DP):57 [PRO.sta [[D mi(cl)]:58 [PRO.PRG [PRO.v [PRO.lava (DP):58]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:57 [PRO.T/fin [(DP):57 [PRO.sta [[D mi(cl)]:58 [PRO.PRG [PRO.v [PRO.lava (DP):58]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF from the edge of phi.PRG.
					phi.PRG acquired PHI:GEN:M from the edge of phi.PRG.
					phi.PRG acquired PHI:NUM:SG from the edge of phi.PRG.
					phi.PRG acquired PHI:PER:1 from the edge of phi.PRG.
					=[[D loro]:57 [phi.T/fin [(DP):57 [PRO.sta [[D mi(cl)]:58 [phi.PRG [PRO.v [PRO.lava (DP):58]]]]]]]]
			= [[D loro] [T/fin [[D loro] [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:57 [phi.T/fin [(DP):57 [PRO.sta [[D mi(cl)]:58 [phi.PRG [PRO.v [PRO.lava (DP):58]]]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. PRG 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D mi(cl)])', 'PRO.sta([[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]])', 'PRO.v(PRG)']
!--->		Tests passed (with 23/227 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.sta [[D mi(cl)]:2 [phi.PRG [PRO.v [PRO.lava (DP):2]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [INF [v [V __:2]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:EN', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:EN', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sta: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
phi.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]
(D): [D, V, v, INF, V, TT/fin]
(N): [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 66
['mi#stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#stanno.
		Next word contains multiple morphemes ['stanno_', 'mi']
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "mi(cl)"

		[T/fin{V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[PRO.T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.PRG]]

15.
		Consume "v"

		[T/fin{V} [[D mi(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D mi(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D mi(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta [[D mi(cl)] PRO.PRG{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
					=[PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.sta [[D mi(cl)]:149 [PRO.PRG [PRO.v [PRO.lava (DP):149]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.sta [[D mi(cl)]:149 [PRO.PRG [PRO.v [PRO.lava (DP):149]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:149.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF from the edge of phi.PRG.
					phi.PRG acquired PHI:GEN:M from the edge of phi.PRG.
					phi.PRG acquired PHI:NUM:SG from the edge of phi.PRG.
					phi.PRG acquired PHI:PER:1 from the edge of phi.PRG.
					=[phi.T/fin [PRO.sta [[D mi(cl)]:149 [phi.PRG [PRO.v [PRO.lava (DP):149]]]]]]
			= [T/fin [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.sta [[D mi(cl)]:149 [phi.PRG [PRO.v [PRO.lava (DP):149]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D mi(cl)] 3. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. PRG 3. [D mi(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D mi(cl)])', 'PRO.sta([[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]])', 'PRO.v(PRG)']
!--->		Tests passed (with 17/170 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]
		Grammar: [phi.T/fin [PRO.sta [[D mi(cl)]:1 [phi.PRG [PRO.v [PRO.lava (DP):1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.sta: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
phi.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]
(D): [D, V, v, INF, V, TT/fin]
(N): [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 67
['la#stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#stanno.
		Next word contains multiple morphemes ['stanno_', 'la']
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "la(cl)"

		[T/fin{V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[PRO.T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[PRO.T/fin{V} [[D la(cl)] PRO.PRG]]

15.
		Consume "v"

		[T/fin{V} [[D la(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[PRO.T/fin{V} [[D la(cl)] PRO.PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D la(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[PRO.T/fin{V} [[D la(cl)] PRO.PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D la(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D la(cl)] PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D la(cl)] PRO.PRG{v,V}]].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta [[D la(cl)] PRO.PRG{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [PRO.T/fin [PRO.sta [[D la(cl)] [PRO.PRG PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.sta [[D la(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
					=[PRO.T/fin [PRO.sta [[D la(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [[D la(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [[D la(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.sta [[D la(cl)]:150 [PRO.PRG [PRO.v [PRO.lava (DP):150]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.sta [[D la(cl)]:150 [PRO.PRG [PRO.v [PRO.lava (DP):150]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)]:150.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF from the edge of phi.PRG.
					phi.PRG acquired PHI:GEN:F from the edge of phi.PRG.
					phi.PRG acquired PHI:NUM:SG from the edge of phi.PRG.
					phi.PRG acquired PHI:PER:3 from the edge of phi.PRG.
					=[phi.T/fin [PRO.sta [[D la(cl)]:150 [phi.PRG [PRO.v [PRO.lava (DP):150]]]]]]
			= [T/fin [sta [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.sta [[D la(cl)]:150 [phi.PRG [PRO.v [PRO.lava (DP):150]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D la(cl)] 3. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. PRG 3. [D la(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D la(cl)])', 'PRO.sta([[D la(cl)] [PRG [v [lava [D la(cl)]]]]])', 'PRO.v(PRG)']
!--->		Tests passed (with 17/170 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]]]
		Grammar: [phi.T/fin [PRO.sta [[D la(cl)]:1 [phi.PRG [PRO.v [PRO.lava (DP):1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.sta: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
phi.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]
(D): [D, V, v, INF, V, TT/fin]
(N): [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 68
['lo#stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lo#stanno.
		Next word contains multiple morphemes ['stanno_', 'lo']
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "lo(cl)"

		[T/fin{V} D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[PRO.T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[PRO.T/fin{V} [[D lo(cl)] PRO.PRG]]

15.
		Consume "v"

		[T/fin{V} [[D lo(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[PRO.T/fin{V} [[D lo(cl)] PRO.PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D lo(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[PRO.T/fin{V} [[D lo(cl)] PRO.PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D lo(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D lo(cl)] PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D lo(cl)] PRO.PRG{v,V}]].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta [[D lo(cl)] PRO.PRG{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [PRO.T/fin [PRO.sta [[D lo(cl)] [PRO.PRG PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.sta [[D lo(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
					=[PRO.T/fin [PRO.sta [[D lo(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [[D lo(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [[D lo(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) " into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.sta [[D lo(cl)]:151 [PRO.PRG [PRO.v [PRO.lava (DP):151]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.sta [[D lo(cl)]:151 [PRO.PRG [PRO.v [PRO.lava (DP):151]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)]:151.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF from the edge of phi.PRG.
					phi.PRG acquired PHI:GEN:M from the edge of phi.PRG.
					phi.PRG acquired PHI:NUM:SG from the edge of phi.PRG.
					phi.PRG acquired PHI:PER:3 from the edge of phi.PRG.
					=[phi.T/fin [PRO.sta [[D lo(cl)]:151 [phi.PRG [PRO.v [PRO.lava (DP):151]]]]]]
			= [T/fin [sta [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.sta [[D lo(cl)]:151 [phi.PRG [PRO.v [PRO.lava (DP):151]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D lo(cl)] 3. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. PRG 3. [D lo(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D lo(cl)])', 'PRO.sta([[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]])', 'PRO.v(PRG)']
!--->		Tests passed (with 17/170 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]]]
		Grammar: [phi.T/fin [PRO.sta [[D lo(cl)]:1 [phi.PRG [PRO.v [PRO.lava (DP):1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.sta: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
phi.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]
(D): [D, V, v, INF, V, TT/fin]
(N): [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 69
['loro', 'stanno', 'lavando#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "sta"

		[[D loro] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lavando#mi.
		Next word contains multiple morphemes ['mi_', 'lavando']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D loro] [T/fin{V} D{N}]] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + PRG = -98]
				[PRO.T/fin{V} D{N}] + PRG = -96]
				D{N} + PRG = 106]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[PRO.T/fin{V} D{N}]; PRG]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.PRG]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v}]]]

22.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] PRG{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]]].
						Extracted head "PRO.sta" and reconstructed it = [[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] PRO.PRG{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]]
					=[[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.sta
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:63 [PRO.T/fin [(DP):63 [PRO.sta [[D mi(cl)]:64 [PRO.PRG [PRO.v [PRO.lava (DP):64]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:63 [PRO.T/fin [(DP):63 [PRO.sta [[D mi(cl)]:64 [PRO.PRG [PRO.v [PRO.lava (DP):64]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF from the edge of phi.PRG.
					phi.PRG acquired PHI:GEN:M from the edge of phi.PRG.
					phi.PRG acquired PHI:NUM:SG from the edge of phi.PRG.
					phi.PRG acquired PHI:PER:1 from the edge of phi.PRG.
					=[[D loro]:63 [phi.T/fin [(DP):63 [PRO.sta [[D mi(cl)]:64 [phi.PRG [PRO.v [PRO.lava (DP):64]]]]]]]]
			= [[D loro] [T/fin [[D loro] [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:63 [phi.T/fin [(DP):63 [PRO.sta [[D mi(cl)]:64 [phi.PRG [PRO.v [PRO.lava (DP):64]]]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. PRG 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D mi(cl)])', 'PRO.sta([[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]])', 'PRO.v(PRG)']
!--->		Tests passed (with 23/227 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.sta [[D mi(cl)]:2 [phi.PRG [PRO.v [PRO.lava (DP):2]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [INF [v [V __:2]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:EN', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:EN', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sta: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
phi.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]
(D): [D, V, v, INF, V, TT/fin]
(N): [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 70
['stanno', 'lavando#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word lavando#mi.
		Next word contains multiple morphemes ['mi_', 'lavando']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "mi(cl)"

		[T/fin{V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[PRO.T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.PRG]]

15.
		Consume "v"

		[T/fin{V} [[D mi(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D mi(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D mi(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D mi(cl)] PRO.PRG{v,V}]].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta [[D mi(cl)] PRO.PRG{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
					=[PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [[D mi(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.sta [[D mi(cl)]:152 [PRO.PRG [PRO.v [PRO.lava (DP):152]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.sta [[D mi(cl)]:152 [PRO.PRG [PRO.v [PRO.lava (DP):152]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:152.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF from the edge of phi.PRG.
					phi.PRG acquired PHI:GEN:M from the edge of phi.PRG.
					phi.PRG acquired PHI:NUM:SG from the edge of phi.PRG.
					phi.PRG acquired PHI:PER:1 from the edge of phi.PRG.
					=[phi.T/fin [PRO.sta [[D mi(cl)]:152 [phi.PRG [PRO.v [PRO.lava (DP):152]]]]]]
			= [T/fin [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.sta [[D mi(cl)]:152 [phi.PRG [PRO.v [PRO.lava (DP):152]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D mi(cl)] 3. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. PRG 3. [D mi(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D mi(cl)])', 'PRO.sta([[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]])', 'PRO.v(PRG)']
!--->		Tests passed (with 17/170 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D mi(cl)] [PRG [v [lava [D mi(cl)]]]]]]]
		Grammar: [phi.T/fin [PRO.sta [[D mi(cl)]:1 [phi.PRG [PRO.v [PRO.lava (DP):1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.sta: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
phi.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]
(D): [D, V, v, INF, V, TT/fin]
(N): [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 71
['stanno', 'lavando#la']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word lavando#la.
		Next word contains multiple morphemes ['la_', 'lavando']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "la(cl)"

		[T/fin{V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[PRO.T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[PRO.T/fin{V} [[D la(cl)] PRO.PRG]]

15.
		Consume "v"

		[T/fin{V} [[D la(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[PRO.T/fin{V} [[D la(cl)] PRO.PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D la(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[PRO.T/fin{V} [[D la(cl)] PRO.PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D la(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D la(cl)] PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D la(cl)] PRO.PRG{v,V}]].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta [[D la(cl)] PRO.PRG{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [PRO.T/fin [PRO.sta [[D la(cl)] [PRO.PRG PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.sta [[D la(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
					=[PRO.T/fin [PRO.sta [[D la(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [[D la(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [[D la(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.sta [[D la(cl)]:153 [PRO.PRG [PRO.v [PRO.lava (DP):153]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.sta [[D la(cl)]:153 [PRO.PRG [PRO.v [PRO.lava (DP):153]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)]:153.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF from the edge of phi.PRG.
					phi.PRG acquired PHI:GEN:F from the edge of phi.PRG.
					phi.PRG acquired PHI:NUM:SG from the edge of phi.PRG.
					phi.PRG acquired PHI:PER:3 from the edge of phi.PRG.
					=[phi.T/fin [PRO.sta [[D la(cl)]:153 [phi.PRG [PRO.v [PRO.lava (DP):153]]]]]]
			= [T/fin [sta [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.sta [[D la(cl)]:153 [phi.PRG [PRO.v [PRO.lava (DP):153]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D la(cl)] 3. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. PRG 3. [D la(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D la(cl)])', 'PRO.sta([[D la(cl)] [PRG [v [lava [D la(cl)]]]]])', 'PRO.v(PRG)']
!--->		Tests passed (with 17/170 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D la(cl)] [PRG [v [lava [D la(cl)]]]]]]]
		Grammar: [phi.T/fin [PRO.sta [[D la(cl)]:1 [phi.PRG [PRO.v [PRO.lava (DP):1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.sta: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
phi.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]
(D): [D, V, v, INF, V, TT/fin]
(N): [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 72
['stanno', 'lavando#lo']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word lavando#lo.
		Next word contains multiple morphemes ['lo_', 'lavando']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "lo(cl)"

		[T/fin{V} D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[T/fin{V} D{N}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + PRG = -98]
				D{N} + PRG = 104]
		Ranking completed:
			1. [D{N}; PRG]
			2. [[PRO.T/fin{V} D{N}]; PRG]
		Exploring solution number (1) =[D{N} PRG]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[PRO.T/fin{V} [[D lo(cl)] PRO.PRG]]

15.
		Consume "v"

		[T/fin{V} [[D lo(cl)] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[PRO.T/fin{V} [[D lo(cl)] PRO.PRG{v}]]

16.
		Consume "lava"

		[T/fin{V} [[D lo(cl)] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[PRO.T/fin{V} [[D lo(cl)] PRO.PRG{v,V}]]

17.
	>>>	Trying candidate parse [T/fin{V} [[D lo(cl)] PRG{v,V}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D lo(cl)] PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D lo(cl)] PRO.PRG{v,V}]].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta [[D lo(cl)] PRO.PRG{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [PRO.T/fin [PRO.sta [[D lo(cl)] [PRO.PRG PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.sta [[D lo(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
					=[PRO.T/fin [PRO.sta [[D lo(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [[D lo(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [[D lo(cl)] [PRO.PRG [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) " into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[D N]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.sta [[D lo(cl)]:154 [PRO.PRG [PRO.v [PRO.lava (DP):154]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.sta [[D lo(cl)]:154 [PRO.PRG [PRO.v [PRO.lava (DP):154]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)]:154.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.PRG acquired PHI:DET:DEF from the edge of phi.PRG.
					phi.PRG acquired PHI:GEN:M from the edge of phi.PRG.
					phi.PRG acquired PHI:NUM:SG from the edge of phi.PRG.
					phi.PRG acquired PHI:PER:3 from the edge of phi.PRG.
					=[phi.T/fin [PRO.sta [[D lo(cl)]:154 [phi.PRG [PRO.v [PRO.lava (DP):154]]]]]]
			= [T/fin [sta [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.sta [[D lo(cl)]:154 [phi.PRG [PRO.v [PRO.lava (DP):154]]]]]] into Conceptual-Intentional system...
				PRO.sta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. PRG    (alternatives: 2. [D lo(cl)] 3. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. PRG 3. [D lo(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([D lo(cl)])', 'PRO.sta([[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]])', 'PRO.v(PRG)']
!--->		Tests passed (with 17/170 operations) <------------------------------------
		Solution:
		[T/fin [sta [[D lo(cl)] [PRG [v [lava [D lo(cl)]]]]]]]
		Grammar: [phi.T/fin [PRO.sta [[D lo(cl)]:1 [phi.PRG [PRO.v [PRO.lava (DP):1]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [INF [v [V __:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.sta: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
phi.PRG: [INF, V, TT/fin]
PRO.v: [v, INF, V, TT/fin]
PRO.lava: [V, v, INF, V, TT/fin]
(D): [D, V, v, INF, V, TT/fin]
(N): [N, D, V, v, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 73
['loro', 'hanno', 'mi#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word mi#lavato.
		Next word contains multiple morphemes ['lavato_', 'mi']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

15.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

17.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] + D = -98]
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -96]
				PRO.T/prt{v,V} + D = 65]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D]]]

25.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D]]

27.
		Consume "mi(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] D]
			Transferring [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]]
					=[[D loro]:69 [PRO.T/fin [(DP):69 [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[D loro]:69 [phi.T/fin [(DP):69 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]]
			=[[[D loro]:69 [phi.T/fin [(DP):69 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]] D]

29.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:69 [phi.T/fin [(DP):69 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:70 [PRO.T/fin [(DP):70 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]]
			=[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] PRO.T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] PRO.T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] PRO.T/prt{v,V}]

33.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				phi.T/prt has unaccetable specifier [[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]].
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [PRO.T/prt{v,V} D]]

41.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [PRO.T/prt{v,V} D{N}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] PRO.T/prt{v,V}] D]
			Transferring [[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]]
			=[[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]] D]

43.
		Consume "mi(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[[D loro]:70 [phi.T/fin [(DP):70 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]] D{N}]

44.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 74
['loro', 'hanno', 'la#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word la#lavato.
		Next word contains multiple morphemes ['lavato_', 'la']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

15.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

17.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] + D = -98]
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -96]
				PRO.T/prt{v,V} + D = 65]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D]]]

25.
		Consume "la(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D]]

27.
		Consume "la(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] D]
			Transferring [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]]
					=[[D loro]:75 [PRO.T/fin [(DP):75 [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[D loro]:75 [phi.T/fin [(DP):75 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]]
			=[[[D loro]:75 [phi.T/fin [(DP):75 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]] D]

29.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:75 [phi.T/fin [(DP):75 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:76 [PRO.T/fin [(DP):76 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]]
			=[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] PRO.T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] PRO.T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] PRO.T/prt{v,V}]

33.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				phi.T/prt has unaccetable specifier [[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]].
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [PRO.T/prt{v,V} D]]

41.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [PRO.T/prt{v,V} D{N}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] PRO.T/prt{v,V}] D]
			Transferring [[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]]
			=[[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]] D]

43.
		Consume "la(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[[D loro]:76 [phi.T/fin [(DP):76 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]] D{N}]

44.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 75
['hanno', 'mi#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word mi#lavato.
		Next word contains multiple morphemes ['lavato_', 'mi']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.T/prt]

9.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} PRO.T/prt{v}]

10.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[PRO.T/fin{V} PRO.T/prt{v,V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 60]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D]]

19.
		Consume "mi(cl)"

		[T/fin{V} [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} D{N}]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]
			=[[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D]

21.
		Consume "mi(cl)"

		[[T/fin [ha [T/prt [v lava]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D{N}]

22.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v lava]]]] D{N}] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 76
['io', 'sono#mi', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word sono#mi.
		Next word contains multiple morphemes ['mi_', 'sono']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "mi(cl)"

		[[D io] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D io] D{N}]

18.
		Consume "?"

		[[D io] D{N}] + ?
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D io] D{N}] + ? = 1]
				D{N} + ? = 2]
		Ranking completed:
			1. [D{N}; ?]
			2. [[[D io] D{N}]; ?]
		Exploring solution number (1) =[D{N} ?]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D io] [[D mi(cl)] ?]]

19.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D mi(cl)] ?]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [[D mi(cl)] ?]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				[[D mi(cl)] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[D mi(cl)] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D io] [[D mi(cl)] [? PRO.T/prt]]]

23.
		Consume "v"

		[[D io] [[D mi(cl)] [? T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [[D mi(cl)] [? PRO.T/prt{v}]]]

24.
		Consume "lava"

		[[D io] [[D mi(cl)] [? T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [[D mi(cl)] [? PRO.T/prt{v,V}]]]

25.
	>>>	Trying candidate parse [[D io] [[D mi(cl)] [? T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mi(cl)] ?] T/prt]
			Transferring [[D mi(cl)] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] ?].
					=[[D mi(cl)] ?]
				2. Feature processing:
					=[[D mi(cl)] ?]
				3. Floater movement reconstruction:
					=[[D mi(cl)] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[D mi(cl)] ?]
				5. Agreement reconstruction:
					=[[D mi(cl)] ?]
			=[[D io] [[[D mi(cl)] ?] PRO.T/prt]]

26.
		Consume "v"

		[[D io] [[[D mi(cl)] ?] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [[[D mi(cl)] ?] PRO.T/prt{v}]]

27.
		Consume "lava"

		[[D io] [[[D mi(cl)] ?] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [[[D mi(cl)] ?] PRO.T/prt{v,V}]]

28.
	>>>	Trying candidate parse [[D io] [[[D mi(cl)] ?] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [[[D mi(cl)] ?] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [[[D mi(cl)] ?] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D io] [[[D mi(cl)] ?] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D io] [[[D mi(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D io] [[[D mi(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D io] [[[D mi(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D io] [[[D mi(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) ? " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D io " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[[D N] ], [D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [? [[[D mi(cl)] ?] [PRO.T/prt [[D io] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				[D mi(cl)] has no thematic role due to a selecting -PHI head.
					=[[D io]:155 [? [[[D mi(cl)] ?] [PRO.T/prt [(DP):155 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:1 by phi-Agree from (DP):155.
					=[[D io]:155 [? [[[D mi(cl)] ?] [phi.T/prt [(DP):155 [PRO.v PRO.lava]]]]]]
			= [[D io] [? [[[D mi(cl)] ?] [T/prt [[D io] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D mi(cl)] has no thematic role due to a selecting -PHI head.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
?: [?]
D: [D, ?]
mi(cl): [N, D, ?]
?: [, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] D{N}] ?]
			Transferring [[D io] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] D{N}].
					Extracted head "mi(cl)" from D and created [[D io] [D mi(cl)]]
					=[[D io] [D mi(cl)]]
				2. Feature processing:
					=[[D io] [D mi(cl)]]
				3. Floater movement reconstruction:
					=[[D io] [D mi(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D io].
					Extraposition will be tried on [[D io] [D mi(cl)]].
						<D mi(cl)> was made an adjunct.
					<D mi(cl)> was made adjunct by an extraposition rule.
					=[[D io] <D mi(cl)>]
				5. Agreement reconstruction:
					=[[D io] <D mi(cl)>]
			=[[[D io] <D mi(cl)>] ?]

29.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D io] <D mi(cl)>] ?] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D io] <D mi(cl)>] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[[D io] <D mi(cl)>] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D io] <D mi(cl)>] [? PRO.T/prt]]

33.
		Consume "v"

		[[[D io] <D mi(cl)>] [? T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D io] <D mi(cl)>] [? PRO.T/prt{v}]]

34.
		Consume "lava"

		[[[D io] <D mi(cl)>] [? T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D io] <D mi(cl)>] [? PRO.T/prt{v,V}]]

35.
	>>>	Trying candidate parse [[[D io] <D mi(cl)>] [? T/prt{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io] <D mi(cl)>] [? PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D mi(cl)>] [? PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D io] <D mi(cl)>] [? [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D io] <D mi(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[[D io] <D mi(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D io] <D mi(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D io] <D mi(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D mi(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D io] <D mi(cl)>] [? [phi.T/prt [PRO.v PRO.lava]]]]
			= [[[D io] <D mi(cl)>] [? [T/prt [v lava]]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D io] <D mi(cl)>] [? [phi.T/prt [PRO.v PRO.lava]]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
					1. [[D io] <D mi(cl)>]    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D io] <D mi(cl)>]    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D io] <D mi(cl)>]    (alternatives: )
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
mi(cl): [N, D]
?: []
phi.T/prt: [T, ]
PRO.v: [v, T, ]
PRO.lava: [V, v, T, ]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D io] <D mi(cl)>] ?] T/prt]
			Transferring [[[D io] <D mi(cl)>] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D mi(cl)>] ?].
					=[[[D io] <D mi(cl)>] ?]
				2. Feature processing:
					=[[[D io] <D mi(cl)>] ?]
				3. Floater movement reconstruction:
					=[[[D io] <D mi(cl)>] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D mi(cl)>] ?]
				5. Agreement reconstruction:
					=[[[D io] <D mi(cl)>] ?]
			=[[[[D io] <D mi(cl)>] ?] PRO.T/prt]

36.
		Consume "v"

		[[[[D io] <D mi(cl)>] ?] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D io] <D mi(cl)>] ?] PRO.T/prt{v}]

37.
		Consume "lava"

		[[[[D io] <D mi(cl)>] ?] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D io] <D mi(cl)>] ?] PRO.T/prt{v,V}]

38.
	>>>	Trying candidate parse [[[[D io] <D mi(cl)>] ?] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D io] <D mi(cl)>] ?] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D io] <D mi(cl)>] ?] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D io] <D mi(cl)>] ?] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D io] <D mi(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D io] <D mi(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D io] <D mi(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D io] <D mi(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io D mi(cl) ? " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [D N]] ]]
					=[[[[D io] <D mi(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D io] <D mi(cl)>] ?] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D io] <D mi(cl)>] ?] [T/prt [v lava]]]
		Checking LF-interface conditions.
			Trying to transfer [[[[D io] <D mi(cl)>] ?] [phi.T/prt [PRO.v PRO.lava]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
mi(cl): [N, D]
?: []
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 77
['loro', 'hanno', 'lo#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lo#lavato.
		Next word contains multiple morphemes ['lavato_', 'lo']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

15.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

17.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] + D = -98]
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -96]
				PRO.T/prt{v,V} + D = 65]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D]]]

25.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D]]

27.
		Consume "lo(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] D]
			Transferring [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]]
					=[[D loro]:81 [PRO.T/fin [(DP):81 [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[D loro]:81 [phi.T/fin [(DP):81 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]]
			=[[[D loro]:81 [phi.T/fin [(DP):81 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]] D]

29.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:81 [phi.T/fin [(DP):81 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:82 [PRO.T/fin [(DP):82 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]]
			=[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] PRO.T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] PRO.T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] PRO.T/prt{v,V}]

33.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				phi.T/prt has unaccetable specifier [[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]].
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [PRO.T/prt{v,V} D]]

41.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [PRO.T/prt{v,V} D{N}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] PRO.T/prt{v,V}] D]
			Transferring [[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]]
			=[[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]] D]

43.
		Consume "lo(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[[D loro]:82 [phi.T/fin [(DP):82 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]] D{N}]

44.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 78
['hanno', 'lo#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word lo#lavato.
		Next word contains multiple morphemes ['lavato_', 'lo']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.T/prt]

9.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} PRO.T/prt{v}]

10.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[PRO.T/fin{V} PRO.T/prt{v,V}]

11.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 60]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D]]

19.
		Consume "lo(cl)"

		[T/fin{V} [T/prt{v,V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} D{N}]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]
			=[[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D]

21.
		Consume "lo(cl)"

		[[T/fin [ha [T/prt [v lava]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D{N}]

22.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v lava]]]] D{N}] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 79
['hanno', 'la#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word la#lavato.
		Next word contains multiple morphemes ['lavato_', 'la']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.T/prt]

9.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} PRO.T/prt{v}]

10.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[PRO.T/fin{V} PRO.T/prt{v,V}]

11.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 60]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D]]

19.
		Consume "la(cl)"

		[T/fin{V} [T/prt{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} D{N}]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]
			=[[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D]

21.
		Consume "la(cl)"

		[[T/fin [ha [T/prt [v lava]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D{N}]

22.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v lava]]]] D{N}] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 80
['loro', 'hanno', 'lavato#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lavato#mi.
		Next word contains multiple morphemes ['mi_', 'lavato']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} D{N}] T/prt]
			Transferring [PRO.T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} D{N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha D{N}]]
					Extracted head "mi(cl)" from D and created [PRO.T/fin [PRO.ha [D mi(cl)]]]
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)].
					=[phi.T/fin [PRO.ha [D mi(cl)]]]
			=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] PRO.T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] PRO.T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] PRO.T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D mi(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha [D mi(cl)]]] [PRO.T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D mi(cl)]]].
					Extraposition will be tried on [[D loro]:87 [? [[phi.T/fin [PRO.ha [D mi(cl)]]] [PRO.T/prt [(DP):87 [PRO.v PRO.lava]]]]]].
					=[[D loro]:87 [? [[phi.T/fin [PRO.ha [D mi(cl)]]] [PRO.T/prt [(DP):87 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:3 by phi-Agree from (DP):87.
					=[[D loro]:87 [? [[phi.T/fin [PRO.ha [D mi(cl)]]] [phi.T/prt [(DP):87 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D mi(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				phi.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D mi(cl)]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
mi(cl): [N, D, V, TT/fin, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [PRO.T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha D{N}]]]
					Extracted head "mi(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [D mi(cl)]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [D mi(cl)]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [D mi(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [D mi(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [D mi(cl)]]]]]
					=[[D loro]:88 [PRO.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]]
			=[[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] PRO.T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] PRO.T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] PRO.T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D mi(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]].
					Extraposition will be tried on [[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[D loro]:88 [phi.T/fin [(DP):88 [PRO.ha [D mi(cl)]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] D]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:89 [PRO.T/fin [(DP):89 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]]
			=[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] D]

33.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] [[D mi(cl)] PRO.T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] [[D mi(cl)] PRO.T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] [[D mi(cl)] PRO.T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] D{N}] T/prt]
			Transferring [[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] D{N}].
					Extracted head "mi(cl)" from D and created [[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] [D mi(cl)]]
					=[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] [D mi(cl)]]
				2. Feature processing:
					=[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] [D mi(cl)]]
				3. Floater movement reconstruction:
					=[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] [D mi(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] [D mi(cl)]].
						<D mi(cl)> was made an adjunct.
					<D mi(cl)> was made adjunct by an extraposition rule.
					=[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>]
			=[[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] PRO.T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] PRO.T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] PRO.T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D mi(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				PRO.T/prt has unaccetable specifier [[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>].
					Extraposition will be tried on [[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[[D loro]:89 [phi.T/fin [(DP):89 PRO.ha]]] <D mi(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D]
mi(cl): [N, D]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 81
['loro', 'hanno', 'lavato#la']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lavato#la.
		Next word contains multiple morphemes ['la_', 'lavato']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "la(cl)"

		[[D loro] [T/fin{V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} D{N}] T/prt]
			Transferring [PRO.T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} D{N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha D{N}]]
					Extracted head "la(cl)" from D and created [PRO.T/fin [PRO.ha [D la(cl)]]]
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)].
					=[phi.T/fin [PRO.ha [D la(cl)]]]
			=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D la(cl)]]].
					Extraposition will be tried on [[D loro]:94 [? [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [(DP):94 [PRO.v PRO.lava]]]]]].
					=[[D loro]:94 [? [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [(DP):94 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:3 by phi-Agree from (DP):94.
					=[[D loro]:94 [? [[phi.T/fin [PRO.ha [D la(cl)]]] [phi.T/prt [(DP):94 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D la(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				phi.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D la(cl)]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
la(cl): [N, D, V, TT/fin, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [PRO.T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha D{N}]]]
					Extracted head "la(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [D la(cl)]]]]]
					=[[D loro]:95 [PRO.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]]
			=[[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] PRO.T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]].
					Extraposition will be tried on [[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[D loro]:95 [phi.T/fin [(DP):95 [PRO.ha [D la(cl)]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] D]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:96 [PRO.T/fin [(DP):96 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]]
			=[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] D]

33.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] [[D la(cl)] PRO.T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] [[D la(cl)] PRO.T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] [[D la(cl)] PRO.T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] D{N}] T/prt]
			Transferring [[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] D{N}].
					Extracted head "la(cl)" from D and created [[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] [D la(cl)]]
					=[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] [D la(cl)]]
				2. Feature processing:
					=[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>]
			=[[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] PRO.T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] PRO.T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] PRO.T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				PRO.T/prt has unaccetable specifier [[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>].
					Extraposition will be tried on [[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[[D loro]:96 [phi.T/fin [(DP):96 PRO.ha]]] <D la(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D]
la(cl): [N, D]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 82
['loro', 'hanno', 'lavato#lo']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lavato#lo.
		Next word contains multiple morphemes ['lo_', 'lavato']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D loro] [PRO.T/fin{V} [[D lo(cl)] PRO.T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D lo(cl)] PRO.T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D lo(cl)] PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} D{N}] T/prt]
			Transferring [PRO.T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} D{N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha D{N}]]
					Extracted head "lo(cl)" from D and created [PRO.T/fin [PRO.ha [D lo(cl)]]]
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					=[phi.T/fin [PRO.ha [D lo(cl)]]]
			=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] PRO.T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] PRO.T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] PRO.T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D lo(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D lo(cl)]]].
					Extraposition will be tried on [[D loro]:101 [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [(DP):101 [PRO.v PRO.lava]]]]]].
					=[[D loro]:101 [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [(DP):101 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:3 by phi-Agree from (DP):101.
					=[[D loro]:101 [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [phi.T/prt [(DP):101 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D lo(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				phi.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D lo(cl)]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
lo(cl): [N, D, V, TT/fin, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [PRO.T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha D{N}]]]
					Extracted head "lo(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [D lo(cl)]]]]]
					=[[D loro]:102 [PRO.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]]
			=[[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] PRO.T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] PRO.T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] PRO.T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]].
					Extraposition will be tried on [[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[D loro]:102 [phi.T/fin [(DP):102 [PRO.ha [D lo(cl)]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] D]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:103 [PRO.T/fin [(DP):103 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]]
			=[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] D]

33.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] [[D lo(cl)] PRO.T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] [[D lo(cl)] PRO.T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] [[D lo(cl)] PRO.T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] D{N}] T/prt]
			Transferring [[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] D{N}].
					Extracted head "lo(cl)" from D and created [[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] [D lo(cl)]]
					=[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] [D lo(cl)]]
				2. Feature processing:
					=[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] [D lo(cl)]]
				3. Floater movement reconstruction:
					=[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] [D lo(cl)]].
						<D lo(cl)> was made an adjunct.
					<D lo(cl)> was made adjunct by an extraposition rule.
					=[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>]
			=[[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] PRO.T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] PRO.T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] PRO.T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				PRO.T/prt has unaccetable specifier [[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>].
					Extraposition will be tried on [[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[[D loro]:103 [phi.T/fin [(DP):103 PRO.ha]]] <D lo(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D]
lo(cl): [N, D]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 83
['mi#io', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#io.
		Next word contains multiple morphemes ['io_', 'mi']
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

8.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

9.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "mi(cl)"

		[[D io] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D io] D{N}]

18.
		Consume "?"

		[[D io] D{N}] + ?
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D io] D{N}] + ? = 1]
				D{N} + ? = 2]
		Ranking completed:
			1. [D{N}; ?]
			2. [[[D io] D{N}]; ?]
		Exploring solution number (1) =[D{N} ?]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D io] [[D mi(cl)] ?]]

19.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D mi(cl)] ?]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [[D mi(cl)] ?]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				[[D mi(cl)] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[D mi(cl)] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D io] [[D mi(cl)] [? PRO.T/prt]]]

23.
		Consume "v"

		[[D io] [[D mi(cl)] [? T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [[D mi(cl)] [? PRO.T/prt{v}]]]

24.
		Consume "lava"

		[[D io] [[D mi(cl)] [? T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [[D mi(cl)] [? PRO.T/prt{v,V}]]]

25.
	>>>	Trying candidate parse [[D io] [[D mi(cl)] [? T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [[D mi(cl)] [? PRO.T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [[D mi(cl)] [? PRO.T/prt{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D io] [[D mi(cl)] [? [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D io] [[D mi(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
					=[[D io] [[D mi(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D io] [[D mi(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D io] [[D mi(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				? has double specifiers.
					=[[D io] [[D mi(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[D io] [[D mi(cl)] [? [phi.T/prt [PRO.v PRO.lava]]]]]
			= [[D io] [[D mi(cl)] [? [T/prt [v lava]]]]]
		Checking LF-interface conditions.
				? has double specifiers.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
mi(cl): [N, D]
?: []
phi.T/prt: [T, ]
PRO.v: [v, T, ]
PRO.lava: [V, v, T, ]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mi(cl)] ?] T/prt]
			Transferring [[D mi(cl)] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] ?].
					=[[D mi(cl)] ?]
				2. Feature processing:
					=[[D mi(cl)] ?]
				3. Floater movement reconstruction:
					=[[D mi(cl)] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[D mi(cl)] ?]
				5. Agreement reconstruction:
					=[[D mi(cl)] ?]
			=[[D io] [[[D mi(cl)] ?] PRO.T/prt]]

26.
		Consume "v"

		[[D io] [[[D mi(cl)] ?] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [[[D mi(cl)] ?] PRO.T/prt{v}]]

27.
		Consume "lava"

		[[D io] [[[D mi(cl)] ?] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [[[D mi(cl)] ?] PRO.T/prt{v,V}]]

28.
	>>>	Trying candidate parse [[D io] [[[D mi(cl)] ?] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [[[D mi(cl)] ?] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [[[D mi(cl)] ?] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D io] [[[D mi(cl)] ?] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D io] [[[D mi(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D io] [[[D mi(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D io] [[[D mi(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D io] [[[D mi(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) ? " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D io " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[[D N] ], [D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [? [[[D mi(cl)] ?] [PRO.T/prt [[D io] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				[D mi(cl)] has no thematic role due to a selecting -PHI head.
					=[[D io]:156 [? [[[D mi(cl)] ?] [PRO.T/prt [(DP):156 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:1 by phi-Agree from (DP):156.
					=[[D io]:156 [? [[[D mi(cl)] ?] [phi.T/prt [(DP):156 [PRO.v PRO.lava]]]]]]
			= [[D io] [? [[[D mi(cl)] ?] [T/prt [[D io] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D mi(cl)] has no thematic role due to a selecting -PHI head.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
?: [?]
D: [D, ?]
mi(cl): [N, D, ?]
?: [, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] D{N}] ?]
			Transferring [[D io] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] D{N}].
					Extracted head "mi(cl)" from D and created [[D io] [D mi(cl)]]
					=[[D io] [D mi(cl)]]
				2. Feature processing:
					=[[D io] [D mi(cl)]]
				3. Floater movement reconstruction:
					=[[D io] [D mi(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D io].
					Extraposition will be tried on [[D io] [D mi(cl)]].
						<D mi(cl)> was made an adjunct.
					<D mi(cl)> was made adjunct by an extraposition rule.
					=[[D io] <D mi(cl)>]
				5. Agreement reconstruction:
					=[[D io] <D mi(cl)>]
			=[[[D io] <D mi(cl)>] ?]

29.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D io] <D mi(cl)>] ?] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D io] <D mi(cl)>] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[[D io] <D mi(cl)>] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D io] <D mi(cl)>] [? PRO.T/prt]]

33.
		Consume "v"

		[[[D io] <D mi(cl)>] [? T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D io] <D mi(cl)>] [? PRO.T/prt{v}]]

34.
		Consume "lava"

		[[[D io] <D mi(cl)>] [? T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D io] <D mi(cl)>] [? PRO.T/prt{v,V}]]

35.
	>>>	Trying candidate parse [[[D io] <D mi(cl)>] [? T/prt{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io] <D mi(cl)>] [? PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D mi(cl)>] [? PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D io] <D mi(cl)>] [? [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D io] <D mi(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[[D io] <D mi(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D io] <D mi(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D io] <D mi(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D mi(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D io] <D mi(cl)>] [? [phi.T/prt [PRO.v PRO.lava]]]]
			= [[[D io] <D mi(cl)>] [? [T/prt [v lava]]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D io] <D mi(cl)>] [? [phi.T/prt [PRO.v PRO.lava]]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
					1. [[D io] <D mi(cl)>]    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D io] <D mi(cl)>]    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D io] <D mi(cl)>]    (alternatives: )
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
mi(cl): [N, D]
?: []
phi.T/prt: [T, ]
PRO.v: [v, T, ]
PRO.lava: [V, v, T, ]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D io] <D mi(cl)>] ?] T/prt]
			Transferring [[[D io] <D mi(cl)>] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D mi(cl)>] ?].
					=[[[D io] <D mi(cl)>] ?]
				2. Feature processing:
					=[[[D io] <D mi(cl)>] ?]
				3. Floater movement reconstruction:
					=[[[D io] <D mi(cl)>] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D mi(cl)>] ?]
				5. Agreement reconstruction:
					=[[[D io] <D mi(cl)>] ?]
			=[[[[D io] <D mi(cl)>] ?] PRO.T/prt]

36.
		Consume "v"

		[[[[D io] <D mi(cl)>] ?] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D io] <D mi(cl)>] ?] PRO.T/prt{v}]

37.
		Consume "lava"

		[[[[D io] <D mi(cl)>] ?] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D io] <D mi(cl)>] ?] PRO.T/prt{v,V}]

38.
	>>>	Trying candidate parse [[[[D io] <D mi(cl)>] ?] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D io] <D mi(cl)>] ?] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D io] <D mi(cl)>] ?] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D io] <D mi(cl)>] ?] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D io] <D mi(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D io] <D mi(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D io] <D mi(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D io] <D mi(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io D mi(cl) ? " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [D N]] ]]
					=[[[[D io] <D mi(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D io] <D mi(cl)>] ?] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D io] <D mi(cl)>] ?] [T/prt [v lava]]]
		Checking LF-interface conditions.
			Trying to transfer [[[[D io] <D mi(cl)>] ?] [phi.T/prt [PRO.v PRO.lava]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
mi(cl): [N, D]
?: []
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 84
['io#mi', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io#mi.
		Next word contains multiple morphemes ['mi_', 'io']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

17.
		Consume "io"

		[[D mi(cl)] D] + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=[[D mi(cl)] D{N}]

18.
		Consume "?"

		[[D mi(cl)] D{N}] + ?
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D mi(cl)] D{N}] + ? = 1]
				D{N} + ? = 2]
		Ranking completed:
			1. [D{N}; ?]
			2. [[[D mi(cl)] D{N}]; ?]
		Exploring solution number (1) =[D{N} ?]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D mi(cl)] [[D io] ?]]

19.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D mi(cl)] [[D io] ?]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [[D io] ?]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				[[D io] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[D io] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D mi(cl)] [[D io] [? PRO.T/prt]]]

23.
		Consume "v"

		[[D mi(cl)] [[D io] [? T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D mi(cl)] [[D io] [? PRO.T/prt{v}]]]

24.
		Consume "lava"

		[[D mi(cl)] [[D io] [? T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D mi(cl)] [[D io] [? PRO.T/prt{v,V}]]]

25.
	>>>	Trying candidate parse [[D mi(cl)] [[D io] [? T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] ?] T/prt]
			Transferring [[D io] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] ?].
					=[[D io] ?]
				2. Feature processing:
					=[[D io] ?]
				3. Floater movement reconstruction:
					=[[D io] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[D io] ?]
				5. Agreement reconstruction:
					=[[D io] ?]
			=[[D mi(cl)] [[[D io] ?] PRO.T/prt]]

26.
		Consume "v"

		[[D mi(cl)] [[[D io] ?] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D mi(cl)] [[[D io] ?] PRO.T/prt{v}]]

27.
		Consume "lava"

		[[D mi(cl)] [[[D io] ?] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D mi(cl)] [[[D io] ?] PRO.T/prt{v,V}]]

28.
	>>>	Trying candidate parse [[D mi(cl)] [[[D io] ?] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mi(cl)] D{N}] ?]
			Transferring [[D mi(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] D{N}].
					Extracted head "io" from D and created [[D mi(cl)] [D io]]
					=[[D mi(cl)] [D io]]
				2. Feature processing:
					=[[D mi(cl)] [D io]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [D io]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D mi(cl)].
					Extraposition will be tried on [[D mi(cl)] [D io]].
						<D io> was made an adjunct.
					<D io> was made adjunct by an extraposition rule.
					=[[D mi(cl)] <D io>]
				5. Agreement reconstruction:
					=[[D mi(cl)] <D io>]
			=[[[D mi(cl)] <D io>] ?]

29.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D mi(cl)] <D io>] ?] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D mi(cl)] <D io>] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[[D mi(cl)] <D io>] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D mi(cl)] <D io>] [? PRO.T/prt]]

33.
		Consume "v"

		[[[D mi(cl)] <D io>] [? T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D mi(cl)] <D io>] [? PRO.T/prt{v}]]

34.
		Consume "lava"

		[[[D mi(cl)] <D io>] [? T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D mi(cl)] <D io>] [? PRO.T/prt{v,V}]]

35.
	>>>	Trying candidate parse [[[D mi(cl)] <D io>] [? T/prt{v,V}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D mi(cl)] <D io>] ?] T/prt]
			Transferring [[[D mi(cl)] <D io>] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D mi(cl)] <D io>] ?].
					=[[[D mi(cl)] <D io>] ?]
				2. Feature processing:
					=[[[D mi(cl)] <D io>] ?]
				3. Floater movement reconstruction:
					=[[[D mi(cl)] <D io>] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D mi(cl)] <D io>] ?]
				5. Agreement reconstruction:
					=[[[D mi(cl)] <D io>] ?]
			=[[[[D mi(cl)] <D io>] ?] PRO.T/prt]

36.
		Consume "v"

		[[[[D mi(cl)] <D io>] ?] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D mi(cl)] <D io>] ?] PRO.T/prt{v}]

37.
		Consume "lava"

		[[[[D mi(cl)] <D io>] ?] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D mi(cl)] <D io>] ?] PRO.T/prt{v,V}]

38.
	>>>	Trying candidate parse [[[[D mi(cl)] <D io>] ?] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D mi(cl)] <D io>] ?] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D mi(cl)] <D io>] ?] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D mi(cl)] <D io>] ?] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D mi(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D mi(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D mi(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D mi(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) D io ? " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [D N]] ]]
					=[[[[D mi(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D mi(cl)] <D io>] ?] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D mi(cl)] <D io>] ?] [T/prt [v lava]]]
		Checking LF-interface conditions.
			Trying to transfer [[[[D mi(cl)] <D io>] ?] [phi.T/prt [PRO.v PRO.lava]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
mi(cl): [N, D]
D: [D]
io: [N, D]
?: []
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 85
['loro#mi', 'hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#mi.
		Next word contains multiple morphemes ['mi_', 'loro']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

16.
		Consume "loro"

		[[D mi(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D mi(cl)] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D mi(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D mi(cl)] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D mi(cl)] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D mi(cl)] [[D loro] PRO.T/fin]]

19.
		Consume "ha"

		[[D mi(cl)] [[D loro] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D mi(cl)] [[D loro] PRO.T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D mi(cl)] [[D loro] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [? [[D loro] [T/fin [[D loro] ha]]]]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D mi(cl)] [[D loro] [PRO.T/fin{V} PRO.T/prt]]]

24.
		Consume "v"

		[[D mi(cl)] [[D loro] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D mi(cl)] [[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]]

25.
		Consume "lava"

		[[D mi(cl)] [[D loro] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D mi(cl)] [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:160 [PRO.T/fin [(DP):160 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:160 [phi.T/fin [(DP):160 PRO.ha]]]
			=[[D mi(cl)] [[[D loro]:160 [phi.T/fin [(DP):160 PRO.ha]]] PRO.T/prt]]

27.
		Consume "v"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D mi(cl)] [[[D loro]:160 [phi.T/fin [(DP):160 PRO.ha]]] PRO.T/prt{v}]]

28.
		Consume "lava"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D mi(cl)] [[[D loro]:160 [phi.T/fin [(DP):160 PRO.ha]]] PRO.T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mi(cl)] D{N}] T/fin]
			Transferring [[D mi(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] D{N}].
					Extracted head "loro" from D and created [[D mi(cl)] [D loro]]
					=[[D mi(cl)] [D loro]]
				2. Feature processing:
					=[[D mi(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D mi(cl)].
					Extraposition will be tried on [[D mi(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D mi(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D mi(cl)] <D loro>]
			=[[[D mi(cl)] <D loro>] PRO.T/fin]

30.
		Consume "ha"

		[[[D mi(cl)] <D loro>] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[[D mi(cl)] <D loro>] PRO.T/fin{V}]

31.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D mi(cl)] <D loro>] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
				Reject [[[[D mi(cl)] <D loro>] [T/fin ha]] PRO.T/prt] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[[D mi(cl)] <D loro>] [PRO.T/fin{V} PRO.T/prt]]

35.
		Consume "v"

		[[[D mi(cl)] <D loro>] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D mi(cl)] <D loro>] [PRO.T/fin{V} PRO.T/prt{v}]]

36.
		Consume "lava"

		[[[D mi(cl)] <D loro>] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D mi(cl)] <D loro>] [PRO.T/fin{V} PRO.T/prt{v,V}]]

37.
	>>>	Trying candidate parse [[[D mi(cl)] <D loro>] [T/fin{V} T/prt{v,V}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 86
['la#io', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#io.
		Next word contains multiple morphemes ['io_', 'la']
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

8.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

9.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "la(cl)"

		[[D io] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D io] D{N}]

18.
		Consume "?"

		[[D io] D{N}] + ?
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D io] D{N}] + ? = 1]
				D{N} + ? = 2]
		Ranking completed:
			1. [D{N}; ?]
			2. [[[D io] D{N}]; ?]
		Exploring solution number (1) =[D{N} ?]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D io] [[D la(cl)] ?]]

19.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D la(cl)] ?]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [[D la(cl)] ?]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				[[D la(cl)] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[D la(cl)] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D io] [[D la(cl)] [? PRO.T/prt]]]

23.
		Consume "v"

		[[D io] [[D la(cl)] [? T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [[D la(cl)] [? PRO.T/prt{v}]]]

24.
		Consume "lava"

		[[D io] [[D la(cl)] [? T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [[D la(cl)] [? PRO.T/prt{v,V}]]]

25.
	>>>	Trying candidate parse [[D io] [[D la(cl)] [? T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [[D la(cl)] [? PRO.T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [[D la(cl)] [? PRO.T/prt{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D io] [[D la(cl)] [? [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D io] [[D la(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
					=[[D io] [[D la(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D io] [[D la(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D io] [[D la(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				? has double specifiers.
					=[[D io] [[D la(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[D io] [[D la(cl)] [? [phi.T/prt [PRO.v PRO.lava]]]]]
			= [[D io] [[D la(cl)] [? [T/prt [v lava]]]]]
		Checking LF-interface conditions.
				? has double specifiers.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
la(cl): [N, D]
?: []
phi.T/prt: [T, ]
PRO.v: [v, T, ]
PRO.lava: [V, v, T, ]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D la(cl)] ?] T/prt]
			Transferring [[D la(cl)] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D la(cl)] ?].
					=[[D la(cl)] ?]
				2. Feature processing:
					=[[D la(cl)] ?]
				3. Floater movement reconstruction:
					=[[D la(cl)] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[D la(cl)] ?]
				5. Agreement reconstruction:
					=[[D la(cl)] ?]
			=[[D io] [[[D la(cl)] ?] PRO.T/prt]]

26.
		Consume "v"

		[[D io] [[[D la(cl)] ?] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [[[D la(cl)] ?] PRO.T/prt{v}]]

27.
		Consume "lava"

		[[D io] [[[D la(cl)] ?] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [[[D la(cl)] ?] PRO.T/prt{v,V}]]

28.
	>>>	Trying candidate parse [[D io] [[[D la(cl)] ?] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [[[D la(cl)] ?] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [[[D la(cl)] ?] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D io] [[[D la(cl)] ?] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D io] [[[D la(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D io] [[[D la(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D io] [[[D la(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D io] [[[D la(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) ? " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D io " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[[D N] ], [D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [? [[[D la(cl)] ?] [PRO.T/prt [[D io] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				[D la(cl)] has no thematic role due to a selecting -PHI head.
					=[[D io]:161 [? [[[D la(cl)] ?] [PRO.T/prt [(DP):161 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:1 by phi-Agree from (DP):161.
					=[[D io]:161 [? [[[D la(cl)] ?] [phi.T/prt [(DP):161 [PRO.v PRO.lava]]]]]]
			= [[D io] [? [[[D la(cl)] ?] [T/prt [[D io] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D la(cl)] has no thematic role due to a selecting -PHI head.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
?: [?]
D: [D, ?]
la(cl): [N, D, ?]
?: [, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] D{N}] ?]
			Transferring [[D io] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] D{N}].
					Extracted head "la(cl)" from D and created [[D io] [D la(cl)]]
					=[[D io] [D la(cl)]]
				2. Feature processing:
					=[[D io] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[D io] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D io].
					Extraposition will be tried on [[D io] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[D io] <D la(cl)>]
				5. Agreement reconstruction:
					=[[D io] <D la(cl)>]
			=[[[D io] <D la(cl)>] ?]

29.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D io] <D la(cl)>] ?] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D io] <D la(cl)>] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[[D io] <D la(cl)>] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D io] <D la(cl)>] [? PRO.T/prt]]

33.
		Consume "v"

		[[[D io] <D la(cl)>] [? T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D io] <D la(cl)>] [? PRO.T/prt{v}]]

34.
		Consume "lava"

		[[[D io] <D la(cl)>] [? T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D io] <D la(cl)>] [? PRO.T/prt{v,V}]]

35.
	>>>	Trying candidate parse [[[D io] <D la(cl)>] [? T/prt{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io] <D la(cl)>] [? PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D la(cl)>] [? PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D io] <D la(cl)>] [? [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D io] <D la(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[[D io] <D la(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D io] <D la(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D io] <D la(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D la(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D io] <D la(cl)>] [? [phi.T/prt [PRO.v PRO.lava]]]]
			= [[[D io] <D la(cl)>] [? [T/prt [v lava]]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D io] <D la(cl)>] [? [phi.T/prt [PRO.v PRO.lava]]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
					1. [[D io] <D la(cl)>]    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D io] <D la(cl)>]    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D io] <D la(cl)>]    (alternatives: )
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
la(cl): [N, D]
?: []
phi.T/prt: [T, ]
PRO.v: [v, T, ]
PRO.lava: [V, v, T, ]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D io] <D la(cl)>] ?] T/prt]
			Transferring [[[D io] <D la(cl)>] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D la(cl)>] ?].
					=[[[D io] <D la(cl)>] ?]
				2. Feature processing:
					=[[[D io] <D la(cl)>] ?]
				3. Floater movement reconstruction:
					=[[[D io] <D la(cl)>] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D la(cl)>] ?]
				5. Agreement reconstruction:
					=[[[D io] <D la(cl)>] ?]
			=[[[[D io] <D la(cl)>] ?] PRO.T/prt]

36.
		Consume "v"

		[[[[D io] <D la(cl)>] ?] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D io] <D la(cl)>] ?] PRO.T/prt{v}]

37.
		Consume "lava"

		[[[[D io] <D la(cl)>] ?] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D io] <D la(cl)>] ?] PRO.T/prt{v,V}]

38.
	>>>	Trying candidate parse [[[[D io] <D la(cl)>] ?] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D io] <D la(cl)>] ?] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D io] <D la(cl)>] ?] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D io] <D la(cl)>] ?] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D io] <D la(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D io] <D la(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D io] <D la(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D io] <D la(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io D la(cl) ? " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [D N]] ]]
					=[[[[D io] <D la(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D io] <D la(cl)>] ?] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D io] <D la(cl)>] ?] [T/prt [v lava]]]
		Checking LF-interface conditions.
			Trying to transfer [[[[D io] <D la(cl)>] ?] [phi.T/prt [PRO.v PRO.lava]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
la(cl): [N, D]
?: []
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 87
['io#la', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io#la.
		Next word contains multiple morphemes ['la_', 'io']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "la(cl)"

		D + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D la(cl)] D]

17.
		Consume "io"

		[[D la(cl)] D] + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=[[D la(cl)] D{N}]

18.
		Consume "?"

		[[D la(cl)] D{N}] + ?
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D la(cl)] D{N}] + ? = 1]
				D{N} + ? = 2]
		Ranking completed:
			1. [D{N}; ?]
			2. [[[D la(cl)] D{N}]; ?]
		Exploring solution number (1) =[D{N} ?]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D la(cl)] [[D io] ?]]

19.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D la(cl)] [[D io] ?]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] [[D io] ?]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				[[D io] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[D io] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D la(cl)] [[D io] [? PRO.T/prt]]]

23.
		Consume "v"

		[[D la(cl)] [[D io] [? T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D la(cl)] [[D io] [? PRO.T/prt{v}]]]

24.
		Consume "lava"

		[[D la(cl)] [[D io] [? T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D la(cl)] [[D io] [? PRO.T/prt{v,V}]]]

25.
	>>>	Trying candidate parse [[D la(cl)] [[D io] [? T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] ?] T/prt]
			Transferring [[D io] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] ?].
					=[[D io] ?]
				2. Feature processing:
					=[[D io] ?]
				3. Floater movement reconstruction:
					=[[D io] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[D io] ?]
				5. Agreement reconstruction:
					=[[D io] ?]
			=[[D la(cl)] [[[D io] ?] PRO.T/prt]]

26.
		Consume "v"

		[[D la(cl)] [[[D io] ?] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D la(cl)] [[[D io] ?] PRO.T/prt{v}]]

27.
		Consume "lava"

		[[D la(cl)] [[[D io] ?] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D la(cl)] [[[D io] ?] PRO.T/prt{v,V}]]

28.
	>>>	Trying candidate parse [[D la(cl)] [[[D io] ?] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D la(cl)] D{N}] ?]
			Transferring [[D la(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D la(cl)] D{N}].
					Extracted head "io" from D and created [[D la(cl)] [D io]]
					=[[D la(cl)] [D io]]
				2. Feature processing:
					=[[D la(cl)] [D io]]
				3. Floater movement reconstruction:
					=[[D la(cl)] [D io]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D la(cl)].
					Extraposition will be tried on [[D la(cl)] [D io]].
						<D io> was made an adjunct.
					<D io> was made adjunct by an extraposition rule.
					=[[D la(cl)] <D io>]
				5. Agreement reconstruction:
					=[[D la(cl)] <D io>]
			=[[[D la(cl)] <D io>] ?]

29.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D la(cl)] <D io>] ?] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D la(cl)] <D io>] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[[D la(cl)] <D io>] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D la(cl)] <D io>] [? PRO.T/prt]]

33.
		Consume "v"

		[[[D la(cl)] <D io>] [? T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D la(cl)] <D io>] [? PRO.T/prt{v}]]

34.
		Consume "lava"

		[[[D la(cl)] <D io>] [? T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D la(cl)] <D io>] [? PRO.T/prt{v,V}]]

35.
	>>>	Trying candidate parse [[[D la(cl)] <D io>] [? T/prt{v,V}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D la(cl)] <D io>] ?] T/prt]
			Transferring [[[D la(cl)] <D io>] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D la(cl)] <D io>] ?].
					=[[[D la(cl)] <D io>] ?]
				2. Feature processing:
					=[[[D la(cl)] <D io>] ?]
				3. Floater movement reconstruction:
					=[[[D la(cl)] <D io>] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D la(cl)] <D io>] ?]
				5. Agreement reconstruction:
					=[[[D la(cl)] <D io>] ?]
			=[[[[D la(cl)] <D io>] ?] PRO.T/prt]

36.
		Consume "v"

		[[[[D la(cl)] <D io>] ?] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D la(cl)] <D io>] ?] PRO.T/prt{v}]

37.
		Consume "lava"

		[[[[D la(cl)] <D io>] ?] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D la(cl)] <D io>] ?] PRO.T/prt{v,V}]

38.
	>>>	Trying candidate parse [[[[D la(cl)] <D io>] ?] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D la(cl)] <D io>] ?] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D la(cl)] <D io>] ?] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D la(cl)] <D io>] ?] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D la(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D la(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D la(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D la(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) D io ? " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [D N]] ]]
					=[[[[D la(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D la(cl)] <D io>] ?] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D la(cl)] <D io>] ?] [T/prt [v lava]]]
		Checking LF-interface conditions.
			Trying to transfer [[[[D la(cl)] <D io>] ?] [phi.T/prt [PRO.v PRO.lava]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
la(cl): [N, D]
D: [D]
io: [N, D]
?: []
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 88
['loro#la', 'hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#la.
		Next word contains multiple morphemes ['la_', 'loro']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "la(cl)"

		D + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D la(cl)] D]

16.
		Consume "loro"

		[[D la(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D la(cl)] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D la(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D la(cl)] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D la(cl)] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D la(cl)] [[D loro] PRO.T/fin]]

19.
		Consume "ha"

		[[D la(cl)] [[D loro] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D la(cl)] [[D loro] PRO.T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D la(cl)] [[D loro] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] [? [[D loro] [T/fin [[D loro] ha]]]]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D la(cl)] [[D loro] [PRO.T/fin{V} PRO.T/prt]]]

24.
		Consume "v"

		[[D la(cl)] [[D loro] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D la(cl)] [[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]]

25.
		Consume "lava"

		[[D la(cl)] [[D loro] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D la(cl)] [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D la(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:165 [PRO.T/fin [(DP):165 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:165 [phi.T/fin [(DP):165 PRO.ha]]]
			=[[D la(cl)] [[[D loro]:165 [phi.T/fin [(DP):165 PRO.ha]]] PRO.T/prt]]

27.
		Consume "v"

		[[D la(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D la(cl)] [[[D loro]:165 [phi.T/fin [(DP):165 PRO.ha]]] PRO.T/prt{v}]]

28.
		Consume "lava"

		[[D la(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D la(cl)] [[[D loro]:165 [phi.T/fin [(DP):165 PRO.ha]]] PRO.T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D la(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D la(cl)] D{N}] T/fin]
			Transferring [[D la(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D la(cl)] D{N}].
					Extracted head "loro" from D and created [[D la(cl)] [D loro]]
					=[[D la(cl)] [D loro]]
				2. Feature processing:
					=[[D la(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D la(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D la(cl)].
					Extraposition will be tried on [[D la(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D la(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D la(cl)] <D loro>]
			=[[[D la(cl)] <D loro>] PRO.T/fin]

30.
		Consume "ha"

		[[[D la(cl)] <D loro>] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[[D la(cl)] <D loro>] PRO.T/fin{V}]

31.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D la(cl)] <D loro>] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
				Reject [[[[D la(cl)] <D loro>] [T/fin ha]] PRO.T/prt] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[[D la(cl)] <D loro>] [PRO.T/fin{V} PRO.T/prt]]

35.
		Consume "v"

		[[[D la(cl)] <D loro>] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D la(cl)] <D loro>] [PRO.T/fin{V} PRO.T/prt{v}]]

36.
		Consume "lava"

		[[[D la(cl)] <D loro>] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D la(cl)] <D loro>] [PRO.T/fin{V} PRO.T/prt{v,V}]]

37.
	>>>	Trying candidate parse [[[D la(cl)] <D loro>] [T/fin{V} T/prt{v,V}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 89
['lo#io', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lo#io.
		Next word contains multiple morphemes ['io_', 'lo']
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

8.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

9.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "lo(cl)"

		[[D io] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D io] D{N}]

18.
		Consume "?"

		[[D io] D{N}] + ?
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D io] D{N}] + ? = 1]
				D{N} + ? = 2]
		Ranking completed:
			1. [D{N}; ?]
			2. [[[D io] D{N}]; ?]
		Exploring solution number (1) =[D{N} ?]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D io] [[D lo(cl)] ?]]

19.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D lo(cl)] ?]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [[D lo(cl)] ?]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				[[D lo(cl)] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[D lo(cl)] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D io] [[D lo(cl)] [? PRO.T/prt]]]

23.
		Consume "v"

		[[D io] [[D lo(cl)] [? T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [[D lo(cl)] [? PRO.T/prt{v}]]]

24.
		Consume "lava"

		[[D io] [[D lo(cl)] [? T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [[D lo(cl)] [? PRO.T/prt{v,V}]]]

25.
	>>>	Trying candidate parse [[D io] [[D lo(cl)] [? T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [[D lo(cl)] [? PRO.T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [[D lo(cl)] [? PRO.T/prt{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D io] [[D lo(cl)] [? [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D io] [[D lo(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
					=[[D io] [[D lo(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D io] [[D lo(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D io] [[D lo(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				? has double specifiers.
					=[[D io] [[D lo(cl)] [? [PRO.T/prt [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[D io] [[D lo(cl)] [? [phi.T/prt [PRO.v PRO.lava]]]]]
			= [[D io] [[D lo(cl)] [? [T/prt [v lava]]]]]
		Checking LF-interface conditions.
				? has double specifiers.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
lo(cl): [N, D]
?: []
phi.T/prt: [T, ]
PRO.v: [v, T, ]
PRO.lava: [V, v, T, ]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D lo(cl)] ?] T/prt]
			Transferring [[D lo(cl)] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lo(cl)] ?].
					=[[D lo(cl)] ?]
				2. Feature processing:
					=[[D lo(cl)] ?]
				3. Floater movement reconstruction:
					=[[D lo(cl)] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[D lo(cl)] ?]
				5. Agreement reconstruction:
					=[[D lo(cl)] ?]
			=[[D io] [[[D lo(cl)] ?] PRO.T/prt]]

26.
		Consume "v"

		[[D io] [[[D lo(cl)] ?] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [[[D lo(cl)] ?] PRO.T/prt{v}]]

27.
		Consume "lava"

		[[D io] [[[D lo(cl)] ?] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [[[D lo(cl)] ?] PRO.T/prt{v,V}]]

28.
	>>>	Trying candidate parse [[D io] [[[D lo(cl)] ?] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [[[D lo(cl)] ?] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [[[D lo(cl)] ?] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D io] [[[D lo(cl)] ?] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D io] [[[D lo(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D io] [[[D lo(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D io] [[[D lo(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D io] [[[D lo(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) ? " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D io " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[[D N] ], [D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [? [[[D lo(cl)] ?] [PRO.T/prt [[D io] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				[D lo(cl)] has no thematic role due to a selecting -PHI head.
					=[[D io]:166 [? [[[D lo(cl)] ?] [PRO.T/prt [(DP):166 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:1 by phi-Agree from (DP):166.
					=[[D io]:166 [? [[[D lo(cl)] ?] [phi.T/prt [(DP):166 [PRO.v PRO.lava]]]]]]
			= [[D io] [? [[[D lo(cl)] ?] [T/prt [[D io] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D lo(cl)] has no thematic role due to a selecting -PHI head.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
?: [?]
D: [D, ?]
lo(cl): [N, D, ?]
?: [, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] D{N}] ?]
			Transferring [[D io] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] D{N}].
					Extracted head "lo(cl)" from D and created [[D io] [D lo(cl)]]
					=[[D io] [D lo(cl)]]
				2. Feature processing:
					=[[D io] [D lo(cl)]]
				3. Floater movement reconstruction:
					=[[D io] [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D io].
					Extraposition will be tried on [[D io] [D lo(cl)]].
						<D lo(cl)> was made an adjunct.
					<D lo(cl)> was made adjunct by an extraposition rule.
					=[[D io] <D lo(cl)>]
				5. Agreement reconstruction:
					=[[D io] <D lo(cl)>]
			=[[[D io] <D lo(cl)>] ?]

29.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D io] <D lo(cl)>] ?] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D io] <D lo(cl)>] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[[D io] <D lo(cl)>] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D io] <D lo(cl)>] [? PRO.T/prt]]

33.
		Consume "v"

		[[[D io] <D lo(cl)>] [? T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D io] <D lo(cl)>] [? PRO.T/prt{v}]]

34.
		Consume "lava"

		[[[D io] <D lo(cl)>] [? T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D io] <D lo(cl)>] [? PRO.T/prt{v,V}]]

35.
	>>>	Trying candidate parse [[[D io] <D lo(cl)>] [? T/prt{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io] <D lo(cl)>] [? PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D lo(cl)>] [? PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D io] <D lo(cl)>] [? [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D io] <D lo(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[[D io] <D lo(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D io] <D lo(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D io] <D lo(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D lo(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D io] <D lo(cl)>] [? [phi.T/prt [PRO.v PRO.lava]]]]
			= [[[D io] <D lo(cl)>] [? [T/prt [v lava]]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D io] <D lo(cl)>] [? [phi.T/prt [PRO.v PRO.lava]]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
					1. [[D io] <D lo(cl)>]    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D io] <D lo(cl)>]    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D io] <D lo(cl)>]    (alternatives: )
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
lo(cl): [N, D]
?: []
phi.T/prt: [T, ]
PRO.v: [v, T, ]
PRO.lava: [V, v, T, ]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D io] <D lo(cl)>] ?] T/prt]
			Transferring [[[D io] <D lo(cl)>] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D lo(cl)>] ?].
					=[[[D io] <D lo(cl)>] ?]
				2. Feature processing:
					=[[[D io] <D lo(cl)>] ?]
				3. Floater movement reconstruction:
					=[[[D io] <D lo(cl)>] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D lo(cl)>] ?]
				5. Agreement reconstruction:
					=[[[D io] <D lo(cl)>] ?]
			=[[[[D io] <D lo(cl)>] ?] PRO.T/prt]

36.
		Consume "v"

		[[[[D io] <D lo(cl)>] ?] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D io] <D lo(cl)>] ?] PRO.T/prt{v}]

37.
		Consume "lava"

		[[[[D io] <D lo(cl)>] ?] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D io] <D lo(cl)>] ?] PRO.T/prt{v,V}]

38.
	>>>	Trying candidate parse [[[[D io] <D lo(cl)>] ?] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D io] <D lo(cl)>] ?] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D io] <D lo(cl)>] ?] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D io] <D lo(cl)>] ?] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D io] <D lo(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D io] <D lo(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D io] <D lo(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D io] <D lo(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io D lo(cl) ? " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [D N]] ]]
					=[[[[D io] <D lo(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D io] <D lo(cl)>] ?] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D io] <D lo(cl)>] ?] [T/prt [v lava]]]
		Checking LF-interface conditions.
			Trying to transfer [[[[D io] <D lo(cl)>] ?] [phi.T/prt [PRO.v PRO.lava]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
lo(cl): [N, D]
?: []
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 90
['io#lo', 'sono', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io#lo.
		Next word contains multiple morphemes ['lo_', 'io']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "lo(cl)"

		D + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D lo(cl)] D]

17.
		Consume "io"

		[[D lo(cl)] D] + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=[[D lo(cl)] D{N}]

18.
		Consume "?"

		[[D lo(cl)] D{N}] + ?
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D lo(cl)] D{N}] + ? = 1]
				D{N} + ? = 2]
		Ranking completed:
			1. [D{N}; ?]
			2. [[[D lo(cl)] D{N}]; ?]
		Exploring solution number (1) =[D{N} ?]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D lo(cl)] [[D io] ?]]

19.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D lo(cl)] [[D io] ?]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] [[D io] ?]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				[[D io] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[D io] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D lo(cl)] [[D io] [? PRO.T/prt]]]

23.
		Consume "v"

		[[D lo(cl)] [[D io] [? T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D lo(cl)] [[D io] [? PRO.T/prt{v}]]]

24.
		Consume "lava"

		[[D lo(cl)] [[D io] [? T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D lo(cl)] [[D io] [? PRO.T/prt{v,V}]]]

25.
	>>>	Trying candidate parse [[D lo(cl)] [[D io] [? T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] ?] T/prt]
			Transferring [[D io] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] ?].
					=[[D io] ?]
				2. Feature processing:
					=[[D io] ?]
				3. Floater movement reconstruction:
					=[[D io] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[D io] ?]
				5. Agreement reconstruction:
					=[[D io] ?]
			=[[D lo(cl)] [[[D io] ?] PRO.T/prt]]

26.
		Consume "v"

		[[D lo(cl)] [[[D io] ?] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D lo(cl)] [[[D io] ?] PRO.T/prt{v}]]

27.
		Consume "lava"

		[[D lo(cl)] [[[D io] ?] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D lo(cl)] [[[D io] ?] PRO.T/prt{v,V}]]

28.
	>>>	Trying candidate parse [[D lo(cl)] [[[D io] ?] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D lo(cl)] D{N}] ?]
			Transferring [[D lo(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lo(cl)] D{N}].
					Extracted head "io" from D and created [[D lo(cl)] [D io]]
					=[[D lo(cl)] [D io]]
				2. Feature processing:
					=[[D lo(cl)] [D io]]
				3. Floater movement reconstruction:
					=[[D lo(cl)] [D io]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D lo(cl)].
					Extraposition will be tried on [[D lo(cl)] [D io]].
						<D io> was made an adjunct.
					<D io> was made adjunct by an extraposition rule.
					=[[D lo(cl)] <D io>]
				5. Agreement reconstruction:
					=[[D lo(cl)] <D io>]
			=[[[D lo(cl)] <D io>] ?]

29.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D lo(cl)] <D io>] ?] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D lo(cl)] <D io>] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[[D lo(cl)] <D io>] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D lo(cl)] <D io>] [? PRO.T/prt]]

33.
		Consume "v"

		[[[D lo(cl)] <D io>] [? T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D lo(cl)] <D io>] [? PRO.T/prt{v}]]

34.
		Consume "lava"

		[[[D lo(cl)] <D io>] [? T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D lo(cl)] <D io>] [? PRO.T/prt{v,V}]]

35.
	>>>	Trying candidate parse [[[D lo(cl)] <D io>] [? T/prt{v,V}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D lo(cl)] <D io>] ?] T/prt]
			Transferring [[[D lo(cl)] <D io>] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D lo(cl)] <D io>] ?].
					=[[[D lo(cl)] <D io>] ?]
				2. Feature processing:
					=[[[D lo(cl)] <D io>] ?]
				3. Floater movement reconstruction:
					=[[[D lo(cl)] <D io>] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D lo(cl)] <D io>] ?]
				5. Agreement reconstruction:
					=[[[D lo(cl)] <D io>] ?]
			=[[[[D lo(cl)] <D io>] ?] PRO.T/prt]

36.
		Consume "v"

		[[[[D lo(cl)] <D io>] ?] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D lo(cl)] <D io>] ?] PRO.T/prt{v}]

37.
		Consume "lava"

		[[[[D lo(cl)] <D io>] ?] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D lo(cl)] <D io>] ?] PRO.T/prt{v,V}]

38.
	>>>	Trying candidate parse [[[[D lo(cl)] <D io>] ?] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D lo(cl)] <D io>] ?] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D lo(cl)] <D io>] ?] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D lo(cl)] <D io>] ?] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D lo(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D lo(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D lo(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D lo(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) D io ? " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [D N]] ]]
					=[[[[D lo(cl)] <D io>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D lo(cl)] <D io>] ?] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D lo(cl)] <D io>] ?] [T/prt [v lava]]]
		Checking LF-interface conditions.
			Trying to transfer [[[[D lo(cl)] <D io>] ?] [phi.T/prt [PRO.v PRO.lava]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
lo(cl): [N, D]
D: [D]
io: [N, D]
?: []
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 91
['loro#lo', 'hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#lo.
		Next word contains multiple morphemes ['lo_', 'loro']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "lo(cl)"

		D + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D lo(cl)] D]

16.
		Consume "loro"

		[[D lo(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D lo(cl)] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D lo(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D lo(cl)] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D lo(cl)] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D lo(cl)] [[D loro] PRO.T/fin]]

19.
		Consume "ha"

		[[D lo(cl)] [[D loro] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D lo(cl)] [[D loro] PRO.T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D lo(cl)] [[D loro] T/fin{V}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] [? [[D loro] [T/fin [[D loro] ha]]]]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D lo(cl)] [[D loro] [PRO.T/fin{V} PRO.T/prt]]]

24.
		Consume "v"

		[[D lo(cl)] [[D loro] [T/fin{V} T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D lo(cl)] [[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]]

25.
		Consume "lava"

		[[D lo(cl)] [[D loro] [T/fin{V} T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D lo(cl)] [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D lo(cl)] [[D loro] [T/fin{V} T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:170 [PRO.T/fin [(DP):170 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]]
			=[[D lo(cl)] [[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] PRO.T/prt]]

27.
		Consume "v"

		[[D lo(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D lo(cl)] [[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] PRO.T/prt{v}]]

28.
		Consume "lava"

		[[D lo(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D lo(cl)] [[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] PRO.T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D lo(cl)] [[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D lo(cl)] D{N}] T/fin]
			Transferring [[D lo(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lo(cl)] D{N}].
					Extracted head "loro" from D and created [[D lo(cl)] [D loro]]
					=[[D lo(cl)] [D loro]]
				2. Feature processing:
					=[[D lo(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D lo(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D lo(cl)].
					Extraposition will be tried on [[D lo(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D lo(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D lo(cl)] <D loro>]
			=[[[D lo(cl)] <D loro>] PRO.T/fin]

30.
		Consume "ha"

		[[[D lo(cl)] <D loro>] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[[D lo(cl)] <D loro>] PRO.T/fin{V}]

31.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D lo(cl)] <D loro>] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
				Reject [[[[D lo(cl)] <D loro>] [T/fin ha]] PRO.T/prt] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[[D lo(cl)] <D loro>] [PRO.T/fin{V} PRO.T/prt]]

35.
		Consume "v"

		[[[D lo(cl)] <D loro>] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D lo(cl)] <D loro>] [PRO.T/fin{V} PRO.T/prt{v}]]

36.
		Consume "lava"

		[[[D lo(cl)] <D loro>] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D lo(cl)] <D loro>] [PRO.T/fin{V} PRO.T/prt{v,V}]]

37.
	>>>	Trying candidate parse [[[D lo(cl)] <D loro>] [T/fin{V} T/prt{v,V}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 92
['io', 'sono#la', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word sono#la.
		Next word contains multiple morphemes ['la_', 'sono']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "la(cl)"

		[[D io] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D io] D{N}]

18.
		Consume "?"

		[[D io] D{N}] + ?
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D io] D{N}] + ? = 1]
				D{N} + ? = 2]
		Ranking completed:
			1. [D{N}; ?]
			2. [[[D io] D{N}]; ?]
		Exploring solution number (1) =[D{N} ?]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D io] [[D la(cl)] ?]]

19.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D la(cl)] ?]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [[D la(cl)] ?]] T/prt] due to bad left branch.
			Ranking remaining sites...
				[[D la(cl)] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[D la(cl)] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D io] [[D la(cl)] [? T/prt]]]

26.
		Consume "v"

		[[D io] [[D la(cl)] [? T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D io] [[D la(cl)] [? T/prt{v}]]]

27.
		Consume "lava"

		[[D io] [[D la(cl)] [? T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D io] [[D la(cl)] [? T/prt{v,V}]]]

28.
	>>>	Trying candidate parse [[D io] [[D la(cl)] [? T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D la(cl)] ?] T/prt]
			Transferring [[D la(cl)] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D la(cl)] ?].
					=[[D la(cl)] ?]
				2. Feature processing:
					=[[D la(cl)] ?]
				3. Floater movement reconstruction:
					=[[D la(cl)] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[D la(cl)] ?]
				5. Agreement reconstruction:
					=[[D la(cl)] ?]
			=[[D io] [[[D la(cl)] ?] T/prt]]

29.
		Consume "v"

		[[D io] [[[D la(cl)] ?] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D io] [[[D la(cl)] ?] T/prt{v}]]

30.
		Consume "lava"

		[[D io] [[[D la(cl)] ?] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D io] [[[D la(cl)] ?] T/prt{v,V}]]

31.
	>>>	Trying candidate parse [[D io] [[[D la(cl)] ?] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [[[D la(cl)] ?] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [[[D la(cl)] ?] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[D io] [[[D la(cl)] ?] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D io] [[[D la(cl)] ?] [T/prt [PRO.v PRO.lava]]]]
					=[[D io] [[[D la(cl)] ?] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D io] [[[D la(cl)] ?] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D io] [[[D la(cl)] ?] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) ? " into memory buffer from SPEC of "T/prt".
					Moving "D io " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[[D N] ], [D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [? [[[D la(cl)] ?] [T/prt [[D io] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				[D la(cl)] has no thematic role due to a selecting -PHI head.
					=[[D io]:171 [? [[[D la(cl)] ?] [T/prt [(DP):171 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from (DP):171.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N by phi-Agree from (DP):171.
					T/prt acquired PHI:NUM:SG by phi-Agree from (DP):171.
					T/prt acquired PHI:PER:1 by phi-Agree from (DP):171.
					=[[D io]:171 [? [[[D la(cl)] ?] [T/prt [(DP):171 [PRO.v PRO.lava]]]]]]
			= [[D io] [? [[[D la(cl)] ?] [T/prt [[D io] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D la(cl)] has no thematic role due to a selecting -PHI head.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
?: [?]
D: [D, ?]
la(cl): [N, D, ?]
?: [, ?]
T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] D{N}] ?]
			Transferring [[D io] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] D{N}].
					Extracted head "la(cl)" from D and created [[D io] [D la(cl)]]
					=[[D io] [D la(cl)]]
				2. Feature processing:
					=[[D io] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[D io] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D io].
					Extraposition will be tried on [[D io] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[D io] <D la(cl)>]
				5. Agreement reconstruction:
					=[[D io] <D la(cl)>]
			=[[[D io] <D la(cl)>] ?]

32.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D io] <D la(cl)>] ?] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D io] <D la(cl)>] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[[D io] <D la(cl)>] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D io] <D la(cl)>] [? T/prt]]

39.
		Consume "v"

		[[[D io] <D la(cl)>] [? T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D io] <D la(cl)>] [? T/prt{v}]]

40.
		Consume "lava"

		[[[D io] <D la(cl)>] [? T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D io] <D la(cl)>] [? T/prt{v,V}]]

41.
	>>>	Trying candidate parse [[[D io] <D la(cl)>] [? T/prt{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io] <D la(cl)>] [? T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D la(cl)>] [? T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[[D io] <D la(cl)>] [? [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D io] <D la(cl)>] [? [T/prt [PRO.v PRO.lava]]]]
					=[[[D io] <D la(cl)>] [? [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D io] <D la(cl)>] [? [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D io] <D la(cl)>] [? [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					=[[[D io] <D la(cl)>] [? [T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D io] <D la(cl)>] [? [T/prt [PRO.v PRO.lava]]]]
			= [[[D io] <D la(cl)>] [? [T/prt [v lava]]]]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
la(cl): [N, D]
?: []
T/prt: [T, ]
PRO.v: [v, T, ]
PRO.lava: [V, v, T, ]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D io] <D la(cl)>] ?] T/prt]
			Transferring [[[D io] <D la(cl)>] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D la(cl)>] ?].
					=[[[D io] <D la(cl)>] ?]
				2. Feature processing:
					=[[[D io] <D la(cl)>] ?]
				3. Floater movement reconstruction:
					=[[[D io] <D la(cl)>] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D la(cl)>] ?]
				5. Agreement reconstruction:
					=[[[D io] <D la(cl)>] ?]
			=[[[[D io] <D la(cl)>] ?] T/prt]

42.
		Consume "v"

		[[[[D io] <D la(cl)>] ?] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D io] <D la(cl)>] ?] T/prt{v}]

43.
		Consume "lava"

		[[[[D io] <D la(cl)>] ?] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D io] <D la(cl)>] ?] T/prt{v,V}]

44.
	>>>	Trying candidate parse [[[[D io] <D la(cl)>] ?] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D io] <D la(cl)>] ?] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D io] <D la(cl)>] ?] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[[D io] <D la(cl)>] ?] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D io] <D la(cl)>] ?] [T/prt [PRO.v PRO.lava]]]
					=[[[[D io] <D la(cl)>] ?] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D io] <D la(cl)>] ?] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D io] <D la(cl)>] ?] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io D la(cl) ? " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [D N]] ]]
					=[[[[D io] <D la(cl)>] ?] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D io] <D la(cl)>] ?] [T/prt [PRO.v PRO.lava]]]
			= [[[[D io] <D la(cl)>] ?] [T/prt [v lava]]]
		Checking LF-interface conditions.
			Trying to transfer [[[[D io] <D la(cl)>] ?] [T/prt [PRO.v PRO.lava]]] into Conceptual-Intentional system...
				T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: )
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
la(cl): [N, D]
?: []
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 93
['io', 'sono#lo', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word io-#D#sg#1p#def#hum#n.
		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'io-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "io"

		D + io
			Filtering out impossible merge sites...
			Sink "io" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*io]
			=D{N}

8.
		Decomposing a polymorphemic word sono#lo.
		Next word contains multiple morphemes ['lo_', 'sono']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					Reconstructing head movement for D{N}.
					Extracted head "io" from D and created [D io]
					D was opened into [D io].
					=[D io]
				2. Feature processing:
					=[D io]
				3. Floater movement reconstruction:
					=[D io]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D io]
				5. Agreement reconstruction:
					=[D io]
			=[[D io] D]

17.
		Consume "lo(cl)"

		[[D io] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D io] D{N}]

18.
		Consume "?"

		[[D io] D{N}] + ?
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D io] D{N}] + ? = 1]
				D{N} + ? = 2]
		Ranking completed:
			1. [D{N}; ?]
			2. [[[D io] D{N}]; ?]
		Exploring solution number (1) =[D{N} ?]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D io] [[D lo(cl)] ?]]

19.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D io] [[D lo(cl)] ?]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D io] [[D lo(cl)] ?]] PRO.T/prt] due to bad left branch.
			Ranking remaining sites...
				[[D lo(cl)] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[D lo(cl)] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D io] [[D lo(cl)] [? PRO.T/prt]]]

23.
		Consume "v"

		[[D io] [[D lo(cl)] [? T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [[D lo(cl)] [? PRO.T/prt{v}]]]

24.
		Consume "lava"

		[[D io] [[D lo(cl)] [? T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [[D lo(cl)] [? PRO.T/prt{v,V}]]]

25.
	>>>	Trying candidate parse [[D io] [[D lo(cl)] [? T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D lo(cl)] ?] T/prt]
			Transferring [[D lo(cl)] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lo(cl)] ?].
					=[[D lo(cl)] ?]
				2. Feature processing:
					=[[D lo(cl)] ?]
				3. Floater movement reconstruction:
					=[[D lo(cl)] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[D lo(cl)] ?]
				5. Agreement reconstruction:
					=[[D lo(cl)] ?]
			=[[D io] [[[D lo(cl)] ?] PRO.T/prt]]

26.
		Consume "v"

		[[D io] [[[D lo(cl)] ?] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D io] [[[D lo(cl)] ?] PRO.T/prt{v}]]

27.
		Consume "lava"

		[[D io] [[[D lo(cl)] ?] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D io] [[[D lo(cl)] ?] PRO.T/prt{v,V}]]

28.
	>>>	Trying candidate parse [[D io] [[[D lo(cl)] ?] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D io] [[[D lo(cl)] ?] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] [[[D lo(cl)] ?] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D io] [[[D lo(cl)] ?] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D io] [[[D lo(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D io] [[[D lo(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D io] [[[D lo(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D io] [[[D lo(cl)] ?] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) ? " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D io " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[[D N] ], [D N]]
					Dropping constituent [D io] from memory buffer into Spec of PRO.v
					Result [[D io] [? [[[D lo(cl)] ?] [PRO.T/prt [[D io] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				[D lo(cl)] has no thematic role due to a selecting -PHI head.
					=[[D io]:172 [? [[[D lo(cl)] ?] [PRO.T/prt [(DP):172 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:1 by phi-Agree from (DP):172.
					=[[D io]:172 [? [[[D lo(cl)] ?] [phi.T/prt [(DP):172 [PRO.v PRO.lava]]]]]]
			= [[D io] [? [[[D lo(cl)] ?] [T/prt [[D io] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D lo(cl)] has no thematic role due to a selecting -PHI head.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
?: [?]
D: [D, ?]
lo(cl): [N, D, ?]
?: [, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D io] D{N}] ?]
			Transferring [[D io] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D io] D{N}].
					Extracted head "lo(cl)" from D and created [[D io] [D lo(cl)]]
					=[[D io] [D lo(cl)]]
				2. Feature processing:
					=[[D io] [D lo(cl)]]
				3. Floater movement reconstruction:
					=[[D io] [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D io].
					Extraposition will be tried on [[D io] [D lo(cl)]].
						<D lo(cl)> was made an adjunct.
					<D lo(cl)> was made adjunct by an extraposition rule.
					=[[D io] <D lo(cl)>]
				5. Agreement reconstruction:
					=[[D io] <D lo(cl)>]
			=[[[D io] <D lo(cl)>] ?]

29.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D io] <D lo(cl)>] ?] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D io] <D lo(cl)>] ?] + T/prt = 1]
				? + T/prt = 2]
		Ranking completed:
			1. [?; T/prt]
			2. [[[[D io] <D lo(cl)>] ?]; T/prt]
		Exploring solution number (1) =[? T/prt]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D io] <D lo(cl)>] [? PRO.T/prt]]

33.
		Consume "v"

		[[[D io] <D lo(cl)>] [? T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D io] <D lo(cl)>] [? PRO.T/prt{v}]]

34.
		Consume "lava"

		[[[D io] <D lo(cl)>] [? T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D io] <D lo(cl)>] [? PRO.T/prt{v,V}]]

35.
	>>>	Trying candidate parse [[[D io] <D lo(cl)>] [? T/prt{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D io] <D lo(cl)>] [? PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D lo(cl)>] [? PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D io] <D lo(cl)>] [? [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D io] <D lo(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[[D io] <D lo(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D io] <D lo(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D io] <D lo(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D lo(cl)>] [? [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D io] <D lo(cl)>] [? [phi.T/prt [PRO.v PRO.lava]]]]
			= [[[D io] <D lo(cl)>] [? [T/prt [v lava]]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D io] <D lo(cl)>] [? [phi.T/prt [PRO.v PRO.lava]]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
					1. [[D io] <D lo(cl)>]    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D io] <D lo(cl)>]    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D io] <D lo(cl)>]    (alternatives: )
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
lo(cl): [N, D]
?: []
phi.T/prt: [T, ]
PRO.v: [v, T, ]
PRO.lava: [V, v, T, ]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D io] <D lo(cl)>] ?] T/prt]
			Transferring [[[D io] <D lo(cl)>] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D io] <D lo(cl)>] ?].
					=[[[D io] <D lo(cl)>] ?]
				2. Feature processing:
					=[[[D io] <D lo(cl)>] ?]
				3. Floater movement reconstruction:
					=[[[D io] <D lo(cl)>] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D io] <D lo(cl)>] ?]
				5. Agreement reconstruction:
					=[[[D io] <D lo(cl)>] ?]
			=[[[[D io] <D lo(cl)>] ?] PRO.T/prt]

36.
		Consume "v"

		[[[[D io] <D lo(cl)>] ?] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D io] <D lo(cl)>] ?] PRO.T/prt{v}]

37.
		Consume "lava"

		[[[[D io] <D lo(cl)>] ?] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D io] <D lo(cl)>] ?] PRO.T/prt{v,V}]

38.
	>>>	Trying candidate parse [[[[D io] <D lo(cl)>] ?] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D io] <D lo(cl)>] ?] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D io] <D lo(cl)>] ?] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D io] <D lo(cl)>] ?] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D io] <D lo(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D io] <D lo(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D io] <D lo(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D io] <D lo(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D io D lo(cl) ? " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [D N]] ]]
					=[[[[D io] <D lo(cl)>] ?] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D io] <D lo(cl)>] ?] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D io] <D lo(cl)>] ?] [T/prt [v lava]]]
		Checking LF-interface conditions.
			Trying to transfer [[[[D io] <D lo(cl)>] ?] [phi.T/prt [PRO.v PRO.lava]]] into Conceptual-Intentional system...
				phi.T/prt with ['PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
io:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:I', 'PF:io', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
?:['CAT:X', 'PF:?']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
io: [N, D]
D: [D]
lo(cl): [N, D]
?: []
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sono#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 94
['loro', 'devono', 'mi#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

9.
		Decomposing a polymorphemic word mi#lavare.
		Next word contains multiple morphemes ['lavare_', 'mi']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[D loro] deva] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva PRO.are]]

11.
		Consume "v"

		[[D loro] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva PRO.are{v}]]

12.
		Consume "lava"

		[[D loro] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva PRO.are{v,V}]]

13.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [deva are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[[D loro] [PRO.deva PRO.are{v,V}]] + D = -98]
				[PRO.deva PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = 59]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.deva PRO.are{v,V}]; D]
			3. [[[D loro] [PRO.deva PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[[D loro] [PRO.deva [PRO.are{v,V} D]]]

21.
		Consume "mi(cl)"

		[[D loro] [deva [are{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.deva [PRO.are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.deva PRO.are{v,V}] D]
			Transferring [PRO.deva PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [PRO.are [PRO.v PRO.lava]]]
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.deva [PRO.are [PRO.v PRO.lava]]]
			=[[D loro] [[phi.deva [PRO.are [PRO.v PRO.lava]]] D]]

23.
		Consume "mi(cl)"

		[[D loro] [[deva [are [v lava]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[phi.deva [PRO.are [PRO.v PRO.lava]]] D{N}]]

24.
	>>>	Trying candidate parse [[D loro] [[deva [are [v lava]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.deva PRO.are{v,V}]] D]
			Transferring [[D loro] [PRO.deva PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.are
					Result [[D loro] [PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent (DP):108 from memory buffer into Spec of PRO.v
					Result [[D loro]:108 [PRO.deva [(DP):108 [PRO.are [(DP):108 [PRO.v PRO.lava]]]]]]
					=[[D loro]:108 [PRO.deva [(DP):108 [PRO.are [(DP):108 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:108 [phi.deva [(DP):108 [phi.are [(DP):108 [PRO.v PRO.lava]]]]]]
			=[[[D loro]:108 [phi.deva [(DP):108 [phi.are [(DP):108 [PRO.v PRO.lava]]]]]] D]

25.
		Consume "mi(cl)"

		[[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:108 [phi.deva [(DP):108 [phi.are [(DP):108 [PRO.v PRO.lava]]]]]] D{N}]

26.
	>>>	Trying candidate parse [[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 95
['loro#mi', 'devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#mi.
		Next word contains multiple morphemes ['mi_', 'loro']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

16.
		Consume "loro"

		[[D mi(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D mi(cl)] D{N}]

17.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		[[D mi(cl)] D{N}] + deva
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D mi(cl)] D{N}] + deva = 1]
				D{N} + deva = 2]
		Ranking completed:
			1. [D{N}; deva]
			2. [[[D mi(cl)] D{N}]; deva]
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D mi(cl)] [[D loro] PRO.deva]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D mi(cl)] [[D loro] deva]] + are
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [[D loro] [deva [D mi(cl)]]]] PRO.are] due to bad left branch.
				Reject [[[D loro] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D mi(cl)] [[D loro] [PRO.deva PRO.are]]]

20.
		Consume "v"

		[[D mi(cl)] [[D loro] [deva are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D mi(cl)] [[D loro] [PRO.deva PRO.are{v}]]]

21.
		Consume "lava"

		[[D mi(cl)] [[D loro] [deva are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D mi(cl)] [[D loro] [PRO.deva PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] [deva are{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mi(cl)] D{N}] deva]
			Transferring [[D mi(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] D{N}].
					Extracted head "loro" from D and created [[D mi(cl)] [D loro]]
					=[[D mi(cl)] [D loro]]
				2. Feature processing:
					=[[D mi(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D mi(cl)].
					Extraposition will be tried on [[D mi(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D mi(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D mi(cl)] <D loro>]
			=[[[D mi(cl)] <D loro>] PRO.deva]

23.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D mi(cl)] <D loro>] deva] + are
			Filtering out impossible merge sites...
				Reject [[[[D mi(cl)] <D loro>] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[[D mi(cl)] <D loro>] [PRO.deva PRO.are]]

24.
		Consume "v"

		[[[D mi(cl)] <D loro>] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D mi(cl)] <D loro>] [PRO.deva PRO.are{v}]]

25.
		Consume "lava"

		[[[D mi(cl)] <D loro>] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D mi(cl)] <D loro>] [PRO.deva PRO.are{v,V}]]

26.
	>>>	Trying candidate parse [[[D mi(cl)] <D loro>] [deva are{v,V}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 96
['loro', 'devono', 'la#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		D{N} + deva
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.deva]

9.
		Decomposing a polymorphemic word la#lavare.
		Next word contains multiple morphemes ['lavare_', 'la']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[D loro] deva] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D loro] [PRO.deva PRO.are]]

11.
		Consume "v"

		[[D loro] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.deva PRO.are{v}]]

12.
		Consume "lava"

		[[D loro] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.deva PRO.are{v,V}]]

13.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [deva are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[[D loro] [PRO.deva PRO.are{v,V}]] + D = -98]
				[PRO.deva PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = 59]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.deva PRO.are{v,V}]; D]
			3. [[[D loro] [PRO.deva PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[[D loro] [PRO.deva [PRO.are{v,V} D]]]

21.
		Consume "la(cl)"

		[[D loro] [deva [are{v,V} D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.deva [PRO.are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [[D loro] [deva [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.deva PRO.are{v,V}] D]
			Transferring [PRO.deva PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [PRO.are [PRO.v PRO.lava]]]
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.deva [PRO.are [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.deva [PRO.are [PRO.v PRO.lava]]]
			=[[D loro] [[phi.deva [PRO.are [PRO.v PRO.lava]]] D]]

23.
		Consume "la(cl)"

		[[D loro] [[deva [are [v lava]]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[phi.deva [PRO.are [PRO.v PRO.lava]]] D{N}]]

24.
	>>>	Trying candidate parse [[D loro] [[deva [are [v lava]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.deva PRO.are{v,V}]] D]
			Transferring [[D loro] [PRO.deva PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.deva PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.deva [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.deva [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.deva".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.are
					Result [[D loro] [PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent (DP):114 from memory buffer into Spec of PRO.v
					Result [[D loro]:114 [PRO.deva [(DP):114 [PRO.are [(DP):114 [PRO.v PRO.lava]]]]]]
					=[[D loro]:114 [PRO.deva [(DP):114 [PRO.are [(DP):114 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:114 [phi.deva [(DP):114 [phi.are [(DP):114 [PRO.v PRO.lava]]]]]]
			=[[[D loro]:114 [phi.deva [(DP):114 [phi.are [(DP):114 [PRO.v PRO.lava]]]]]] D]

25.
		Consume "la(cl)"

		[[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:114 [phi.deva [(DP):114 [phi.are [(DP):114 [PRO.v PRO.lava]]]]]] D{N}]

26.
	>>>	Trying candidate parse [[[D loro] [deva [[D loro] [are [[D loro] [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 97
['loro#la', 'devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#la.
		Next word contains multiple morphemes ['la_', 'loro']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "la(cl)"

		D + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D la(cl)] D]

16.
		Consume "loro"

		[[D la(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D la(cl)] D{N}]

17.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		[[D la(cl)] D{N}] + deva
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D la(cl)] D{N}] + deva = 1]
				D{N} + deva = 2]
		Ranking completed:
			1. [D{N}; deva]
			2. [[[D la(cl)] D{N}]; deva]
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D la(cl)] [[D loro] PRO.deva]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D la(cl)] [[D loro] deva]] + are
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] [[D loro] [deva [D la(cl)]]]] PRO.are] due to bad left branch.
				Reject [[[D loro] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D la(cl)] [[D loro] [PRO.deva PRO.are]]]

20.
		Consume "v"

		[[D la(cl)] [[D loro] [deva are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D la(cl)] [[D loro] [PRO.deva PRO.are{v}]]]

21.
		Consume "lava"

		[[D la(cl)] [[D loro] [deva are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D la(cl)] [[D loro] [PRO.deva PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [[D la(cl)] [[D loro] [deva are{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D la(cl)] D{N}] deva]
			Transferring [[D la(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D la(cl)] D{N}].
					Extracted head "loro" from D and created [[D la(cl)] [D loro]]
					=[[D la(cl)] [D loro]]
				2. Feature processing:
					=[[D la(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D la(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D la(cl)].
					Extraposition will be tried on [[D la(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D la(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D la(cl)] <D loro>]
			=[[[D la(cl)] <D loro>] PRO.deva]

23.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D la(cl)] <D loro>] deva] + are
			Filtering out impossible merge sites...
				Reject [[[[D la(cl)] <D loro>] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[[D la(cl)] <D loro>] [PRO.deva PRO.are]]

24.
		Consume "v"

		[[[D la(cl)] <D loro>] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D la(cl)] <D loro>] [PRO.deva PRO.are{v}]]

25.
		Consume "lava"

		[[[D la(cl)] <D loro>] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D la(cl)] <D loro>] [PRO.deva PRO.are{v,V}]]

26.
	>>>	Trying candidate parse [[[D la(cl)] <D loro>] [deva are{v,V}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 98
['loro#lo', 'devono', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#lo.
		Next word contains multiple morphemes ['lo_', 'loro']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "lo(cl)"

		D + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D lo(cl)] D]

16.
		Consume "loro"

		[[D lo(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D lo(cl)] D{N}]

17.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
		Consume "deva"

		[[D lo(cl)] D{N}] + deva
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D lo(cl)] D{N}] + deva = 1]
				D{N} + deva = 2]
		Ranking completed:
			1. [D{N}; deva]
			2. [[[D lo(cl)] D{N}]; deva]
		Exploring solution number (1) =[D{N} deva]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D lo(cl)] [[D loro] PRO.deva]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D lo(cl)] [[D loro] deva]] + are
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] [[D loro] [deva [D lo(cl)]]]] PRO.are] due to bad left branch.
				Reject [[[D loro] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[D lo(cl)] [[D loro] [PRO.deva PRO.are]]]

20.
		Consume "v"

		[[D lo(cl)] [[D loro] [deva are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D lo(cl)] [[D loro] [PRO.deva PRO.are{v}]]]

21.
		Consume "lava"

		[[D lo(cl)] [[D loro] [deva are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D lo(cl)] [[D loro] [PRO.deva PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [[D lo(cl)] [[D loro] [deva are{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D lo(cl)] D{N}] deva]
			Transferring [[D lo(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lo(cl)] D{N}].
					Extracted head "loro" from D and created [[D lo(cl)] [D loro]]
					=[[D lo(cl)] [D loro]]
				2. Feature processing:
					=[[D lo(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D lo(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D lo(cl)].
					Extraposition will be tried on [[D lo(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D lo(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D lo(cl)] <D loro>]
			=[[[D lo(cl)] <D loro>] PRO.deva]

23.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D lo(cl)] <D loro>] deva] + are
			Filtering out impossible merge sites...
				Reject [[[[D lo(cl)] <D loro>] deva] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.deva are]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[[[D lo(cl)] <D loro>] [PRO.deva PRO.are]]

24.
		Consume "v"

		[[[D lo(cl)] <D loro>] [deva are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D lo(cl)] <D loro>] [PRO.deva PRO.are{v}]]

25.
		Consume "lava"

		[[[D lo(cl)] <D loro>] [deva are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D lo(cl)] <D loro>] [PRO.deva PRO.are{v,V}]]

26.
	>>>	Trying candidate parse [[[D lo(cl)] <D loro>] [deva are{v,V}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 99
['loro', 'stanno', 'mi#lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "sta"

		[[D loro] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word mi#lavando.
		Next word contains multiple morphemes ['lavando_', 'mi']
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['inc$', 'ndo$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ndo$"

		Adding inflectional features to PRG
		Consume "PRG"

		[[D loro] T/fin{V}] + PRG
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D loro] PRO.T/fin{V}] + PRG = -98]
				PRO.T/fin{V} + PRG = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; PRG]
			2. [[[D loro] PRO.T/fin{V}]; PRG]
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.PRG]]

12.
		Consume "v"

		[[D loro] [T/fin{V} PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D loro] [PRO.T/fin{V} PRO.PRG{v}]]

13.
		Consume "lava"

		[[D loro] [T/fin{V} PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]]

14.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} PRG{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [PRG{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.PRG{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]] + D = -98]
				[PRO.T/fin{V} PRO.PRG{v,V}] + D = -96]
				PRO.PRG{v,V} + D = -38]
		Ranking completed:
			1. [PRO.PRG{v,V}; D]
			2. [[PRO.T/fin{V} PRO.PRG{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]]; D]
		Exploring solution number (1) =[PRO.PRG{v,V} D]
			Transferring PRO.PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.PRG{v,V}
				2. Feature processing:
					=PRO.PRG{v,V}
				3. Floater movement reconstruction:
					=PRO.PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.PRG{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.PRG{v,V}" lacks complement
					=PRO.PRG{v,V}
				5. Agreement reconstruction:
					=PRO.PRG{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.PRG{v,V} D]]]

22.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [PRG{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.PRG{v,V} D{N}]]]

23.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [PRG{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.PRG{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.PRG{v,V}].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta PRO.PRG{v,V}]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [PRO.T/fin [PRO.sta [PRO.PRG PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
			=[[D loro] [[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]] D]]

24.
		Consume "mi(cl)"

		[[D loro] [[T/fin [sta [PRG [v lava]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]] D{N}]]

25.
	>>>	Trying candidate parse [[D loro] [[T/fin [sta [PRG [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]] D]
			Transferring [[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]].
						Extracted head "PRO.sta" and reconstructed it = [[D loro] [PRO.T/fin [PRO.sta PRO.PRG{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [[D loro] [PRO.T/fin [PRO.sta [PRO.PRG PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.sta
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
					=[[D loro]:120 [PRO.T/fin [(DP):120 [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:120 [phi.T/fin [(DP):120 [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]]
			=[[[D loro]:120 [phi.T/fin [(DP):120 [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]] D]

26.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] [sta [PRG [v lava]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:120 [phi.T/fin [(DP):120 [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]]] D{N}]

27.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [sta [PRG [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] PRG]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.sta" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.sta]]
					=[[D loro] [PRO.T/fin PRO.sta]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.sta]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.sta
					Result [[D loro] [PRO.T/fin [[D loro] PRO.sta]]]
					=[[D loro]:121 [PRO.T/fin [(DP):121 PRO.sta]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]]
			=[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] PRO.PRG]

28.
		Consume "v"

		[[[D loro] [T/fin [[D loro] sta]]] PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] PRO.PRG{v}]

29.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] sta]]] PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] PRO.PRG{v,V}]

30.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] sta]]] PRG{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				PRO.PRG has unaccetable specifier [[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]].
				Avoid [[[D loro] [T/fin [[D loro] sta]]] [PRG [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [PRG{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] PRO.PRG{v,V}] + D = -98]
				PRO.PRG{v,V} + D = 56]
		Ranking completed:
			1. [PRO.PRG{v,V}; D]
			2. [[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] PRO.PRG{v,V}]; D]
		Exploring solution number (1) =[PRO.PRG{v,V} D]
			Transferring PRO.PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.PRG{v,V}
				2. Feature processing:
					=PRO.PRG{v,V}
				3. Floater movement reconstruction:
					=PRO.PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.PRG{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.PRG{v,V}" lacks complement
					=PRO.PRG{v,V}
				5. Agreement reconstruction:
					=PRO.PRG{v,V}
			=[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG{v,V} D]]

38.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] sta]]] [PRG{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG{v,V} D{N}]]

39.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] sta]]] [PRG{v,V} D{N}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] PRO.PRG{v,V}] D]
			Transferring [[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] PRO.PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] PRO.PRG{v,V}].
					Extracted head "PRO.v{V}" from PRO.PRG and created [[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]
					=[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __sta " into memory buffer from SPEC of "PRO.PRG".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRO.PRG has unaccetable specifier [[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]].
					Extraposition will be tried on [[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]].
					=[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]
			=[[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]] D]

40.
		Consume "mi(cl)"

		[[[[D loro] [T/fin [[D loro] sta]]] [PRG [v lava]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[[D loro]:121 [phi.T/fin [(DP):121 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]] D{N}]

41.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] sta]]] [PRG [v lava]]] D{N}] (5.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ndo$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 100
['stanno', 'mi#lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word mi#lavando.
		Next word contains multiple morphemes ['lavando_', 'mi']
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['inc$', 'ndo$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ndo$"

		Adding inflectional features to PRG
		Consume "PRG"

		T/fin{V} + PRG
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.PRG]

6.
		Consume "v"

		[T/fin{V} PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[PRO.T/fin{V} PRO.PRG{v}]

7.
		Consume "lava"

		[T/fin{V} PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[PRO.T/fin{V} PRO.PRG{v,V}]

8.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} PRG{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [PRG{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.PRG{v,V} because it could break words.
				[PRO.T/fin{V} PRO.PRG{v,V}] + D = -98]
				PRO.PRG{v,V} + D = -42]
		Ranking completed:
			1. [PRO.PRG{v,V}; D]
			2. [[PRO.T/fin{V} PRO.PRG{v,V}]; D]
		Exploring solution number (1) =[PRO.PRG{v,V} D]
			Transferring PRO.PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.PRG{v,V}
				2. Feature processing:
					=PRO.PRG{v,V}
				3. Floater movement reconstruction:
					=PRO.PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.PRG{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.PRG{v,V}" lacks complement
					=PRO.PRG{v,V}
				5. Agreement reconstruction:
					=PRO.PRG{v,V}
			=[PRO.T/fin{V} [PRO.PRG{v,V} D]]

16.
		Consume "mi(cl)"

		[T/fin{V} [PRG{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} [PRO.PRG{v,V} D{N}]]

17.
	>>>	Trying candidate parse [T/fin{V} [PRG{v,V} D{N}]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.PRG{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.PRG{v,V}].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta PRO.PRG{v,V}]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [PRO.T/fin [PRO.sta [PRO.PRG PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
			=[[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]] D]

18.
		Consume "mi(cl)"

		[[T/fin [sta [PRG [v lava]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]] D{N}]

19.
	>>>	Trying candidate parse [[T/fin [sta [PRG [v lava]]]] D{N}] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ndo$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 101
['stanno', 'la#lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word la#lavando.
		Next word contains multiple morphemes ['lavando_', 'la']
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['inc$', 'ndo$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ndo$"

		Adding inflectional features to PRG
		Consume "PRG"

		T/fin{V} + PRG
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.PRG]

6.
		Consume "v"

		[T/fin{V} PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[PRO.T/fin{V} PRO.PRG{v}]

7.
		Consume "lava"

		[T/fin{V} PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[PRO.T/fin{V} PRO.PRG{v,V}]

8.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} PRG{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [PRG{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.PRG{v,V} because it could break words.
				[PRO.T/fin{V} PRO.PRG{v,V}] + D = -98]
				PRO.PRG{v,V} + D = -42]
		Ranking completed:
			1. [PRO.PRG{v,V}; D]
			2. [[PRO.T/fin{V} PRO.PRG{v,V}]; D]
		Exploring solution number (1) =[PRO.PRG{v,V} D]
			Transferring PRO.PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.PRG{v,V}
				2. Feature processing:
					=PRO.PRG{v,V}
				3. Floater movement reconstruction:
					=PRO.PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.PRG{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.PRG{v,V}" lacks complement
					=PRO.PRG{v,V}
				5. Agreement reconstruction:
					=PRO.PRG{v,V}
			=[PRO.T/fin{V} [PRO.PRG{v,V} D]]

16.
		Consume "la(cl)"

		[T/fin{V} [PRG{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.T/fin{V} [PRO.PRG{v,V} D{N}]]

17.
	>>>	Trying candidate parse [T/fin{V} [PRG{v,V} D{N}]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.PRG{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.PRG{v,V}].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta PRO.PRG{v,V}]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [PRO.T/fin [PRO.sta [PRO.PRG PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
			=[[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]] D]

18.
		Consume "la(cl)"

		[[T/fin [sta [PRG [v lava]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]] D{N}]

19.
	>>>	Trying candidate parse [[T/fin [sta [PRG [v lava]]]] D{N}] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ndo$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 102
['stanno', 'lo#lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "sta"

		T/fin + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word lo#lavando.
		Next word contains multiple morphemes ['lavando_', 'lo']
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['inc$', 'ndo$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ndo$"

		Adding inflectional features to PRG
		Consume "PRG"

		T/fin{V} + PRG
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.PRG]

6.
		Consume "v"

		[T/fin{V} PRG] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[PRO.T/fin{V} PRO.PRG{v}]

7.
		Consume "lava"

		[T/fin{V} PRG{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[PRO.T/fin{V} PRO.PRG{v,V}]

8.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} PRG{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [PRG{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.PRG{v,V} because it could break words.
				[PRO.T/fin{V} PRO.PRG{v,V}] + D = -98]
				PRO.PRG{v,V} + D = -42]
		Ranking completed:
			1. [PRO.PRG{v,V}; D]
			2. [[PRO.T/fin{V} PRO.PRG{v,V}]; D]
		Exploring solution number (1) =[PRO.PRG{v,V} D]
			Transferring PRO.PRG{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.PRG{v,V}
				2. Feature processing:
					=PRO.PRG{v,V}
				3. Floater movement reconstruction:
					=PRO.PRG{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.PRG{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.PRG{v,V}" lacks complement
					=PRO.PRG{v,V}
				5. Agreement reconstruction:
					=PRO.PRG{v,V}
			=[PRO.T/fin{V} [PRO.PRG{v,V} D]]

16.
		Consume "lo(cl)"

		[T/fin{V} [PRG{v,V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[PRO.T/fin{V} [PRO.PRG{v,V} D{N}]]

17.
	>>>	Trying candidate parse [T/fin{V} [PRG{v,V} D{N}]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.PRG{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.PRG{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.PRG{v,V}].
						Extracted head "PRO.sta" and reconstructed it = [PRO.T/fin [PRO.sta PRO.PRG{v,V}]]
					Extracted head "PRO.v{V}" from PRO.PRG and created [PRO.T/fin [PRO.sta [PRO.PRG PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]]
			=[[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]] D]

18.
		Consume "lo(cl)"

		[[T/fin [sta [PRG [v lava]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[phi.T/fin [PRO.sta [PRO.PRG [PRO.v PRO.lava]]]] D{N}]

19.
	>>>	Trying candidate parse [[T/fin [sta [PRG [v lava]]]] D{N}] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ndo$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 103
['loro#mi', 'stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#mi.
		Next word contains multiple morphemes ['mi_', 'loro']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

16.
		Consume "loro"

		[[D mi(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D mi(cl)] D{N}]

17.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D mi(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D mi(cl)] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D mi(cl)] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D mi(cl)] [[D loro] PRO.T/fin]]

19.
		Consume "sta"

		[[D mi(cl)] [[D loro] T/fin]] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[D mi(cl)] [[D loro] PRO.T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D mi(cl)] [[D loro] T/fin{V}]] + PRG
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [? [[D loro] [T/fin [[D loro] sta]]]]] PRO.PRG] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D loro] PRO.T/fin{V}] + PRG = -98]
				PRO.T/fin{V} + PRG = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; PRG]
			2. [[[D loro] PRO.T/fin{V}]; PRG]
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D mi(cl)] [[D loro] [PRO.T/fin{V} PRO.PRG]]]

21.
		Consume "v"

		[[D mi(cl)] [[D loro] [T/fin{V} PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D mi(cl)] [[D loro] [PRO.T/fin{V} PRO.PRG{v}]]]

22.
		Consume "lava"

		[[D mi(cl)] [[D loro] [T/fin{V} PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D mi(cl)] [[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]]]

23.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] [T/fin{V} PRG{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] PRG]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.sta" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.sta]]
					=[[D loro] [PRO.T/fin PRO.sta]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.sta]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.sta
					Result [[D loro] [PRO.T/fin [[D loro] PRO.sta]]]
					=[[D loro]:179 [PRO.T/fin [(DP):179 PRO.sta]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]]
			=[[D mi(cl)] [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] PRO.PRG]]

24.
		Consume "v"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D mi(cl)] [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] PRO.PRG{v}]]

25.
		Consume "lava"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D mi(cl)] [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] PRO.PRG{v,V}]]

26.
	>>>	Trying candidate parse [[D mi(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D mi(cl)] [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] PRO.PRG{v,V}]].
					Extracted head "PRO.v{V}" from PRO.PRG and created [[D mi(cl)] [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] [PRO.PRG PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D mi(cl)] [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
					=[[D mi(cl)] [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D mi(cl)] [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __sta " into memory buffer from SPEC of "PRO.PRG".
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.PRG".
					New head was spawned due to multiple specifiers at PRO.PRG but its category is unknown!
					Memory buffer: [[[D N] [TT/fin [[D N] V]]], [D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D mi(cl)]:180 [? [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):180]]]]]]
					Remaining items in memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.PRG has unaccetable specifier [[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]].
					Extraposition will be tried on [[D mi(cl)]:180 [? [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):180]]]]]].
					=[[D mi(cl)]:180 [? [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):180]]]]]]
				5. Agreement reconstruction:
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D mi(cl)]:180 [? [[[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):180]]]]]]
			= [[D mi(cl)] [? [[[D loro] [T/fin [[D loro] sta]]] [PRG [v [lava [D mi(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				PRO.PRG has unaccetable specifier [[D loro]:179 [phi.T/fin [(DP):179 PRO.sta]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
mi(cl): [N, D]
?: [?]
D: [D, ?]
loro: [N, D, ?]
phi.T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.sta: [V, TT/fin, ?]
PRO.PRG: [INF, ?]
PRO.v: [v, INF, ?]
PRO.lava: [V, v, INF, ?]
(D): [D, V, v, INF, ?]
(N): [N, D, V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mi(cl)] D{N}] T/fin]
			Transferring [[D mi(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] D{N}].
					Extracted head "loro" from D and created [[D mi(cl)] [D loro]]
					=[[D mi(cl)] [D loro]]
				2. Feature processing:
					=[[D mi(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D mi(cl)].
					Extraposition will be tried on [[D mi(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D mi(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D mi(cl)] <D loro>]
			=[[[D mi(cl)] <D loro>] PRO.T/fin]

27.
		Consume "sta"

		[[[D mi(cl)] <D loro>] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[[D mi(cl)] <D loro>] PRO.T/fin{V}]

28.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[[D mi(cl)] <D loro>] T/fin{V}] + PRG
			Filtering out impossible merge sites...
				Reject [[[[D mi(cl)] <D loro>] [T/fin sta]] PRO.PRG] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[[D mi(cl)] <D loro>] [PRO.T/fin{V} PRO.PRG]]

29.
		Consume "v"

		[[[D mi(cl)] <D loro>] [T/fin{V} PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[[D mi(cl)] <D loro>] [PRO.T/fin{V} PRO.PRG{v}]]

30.
		Consume "lava"

		[[[D mi(cl)] <D loro>] [T/fin{V} PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[[D mi(cl)] <D loro>] [PRO.T/fin{V} PRO.PRG{v,V}]]

31.
	>>>	Trying candidate parse [[[D mi(cl)] <D loro>] [T/fin{V} PRG{v,V}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 104
['loro#la', 'stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#la.
		Next word contains multiple morphemes ['la_', 'loro']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "la(cl)"

		D + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D la(cl)] D]

16.
		Consume "loro"

		[[D la(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D la(cl)] D{N}]

17.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D la(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D la(cl)] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D la(cl)] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D la(cl)] [[D loro] PRO.T/fin]]

19.
		Consume "sta"

		[[D la(cl)] [[D loro] T/fin]] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[D la(cl)] [[D loro] PRO.T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D la(cl)] [[D loro] T/fin{V}]] + PRG
			Filtering out impossible merge sites...
				Reject [[[D la(cl)] [? [[D loro] [T/fin [[D loro] sta]]]]] PRO.PRG] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D loro] PRO.T/fin{V}] + PRG = -98]
				PRO.T/fin{V} + PRG = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; PRG]
			2. [[[D loro] PRO.T/fin{V}]; PRG]
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D la(cl)] [[D loro] [PRO.T/fin{V} PRO.PRG]]]

21.
		Consume "v"

		[[D la(cl)] [[D loro] [T/fin{V} PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D la(cl)] [[D loro] [PRO.T/fin{V} PRO.PRG{v}]]]

22.
		Consume "lava"

		[[D la(cl)] [[D loro] [T/fin{V} PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D la(cl)] [[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]]]

23.
	>>>	Trying candidate parse [[D la(cl)] [[D loro] [T/fin{V} PRG{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] PRG]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.sta" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.sta]]
					=[[D loro] [PRO.T/fin PRO.sta]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.sta]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.sta
					Result [[D loro] [PRO.T/fin [[D loro] PRO.sta]]]
					=[[D loro]:184 [PRO.T/fin [(DP):184 PRO.sta]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]]
			=[[D la(cl)] [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] PRO.PRG]]

24.
		Consume "v"

		[[D la(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D la(cl)] [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] PRO.PRG{v}]]

25.
		Consume "lava"

		[[D la(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D la(cl)] [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] PRO.PRG{v,V}]]

26.
	>>>	Trying candidate parse [[D la(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D la(cl)] [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D la(cl)] [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] PRO.PRG{v,V}]].
					Extracted head "PRO.v{V}" from PRO.PRG and created [[D la(cl)] [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] [PRO.PRG PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D la(cl)] [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
					=[[D la(cl)] [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D la(cl)] [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D la(cl)] [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __sta " into memory buffer from SPEC of "PRO.PRG".
					Moving "D la(cl) " into memory buffer from SPEC of "PRO.PRG".
					New head was spawned due to multiple specifiers at PRO.PRG but its category is unknown!
					Memory buffer: [[[D N] [TT/fin [[D N] V]]], [D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D la(cl)]:185 [? [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):185]]]]]]
					Remaining items in memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.PRG has unaccetable specifier [[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]].
					Extraposition will be tried on [[D la(cl)]:185 [? [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):185]]]]]].
					=[[D la(cl)]:185 [? [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):185]]]]]]
				5. Agreement reconstruction:
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D la(cl)]:185 [? [[[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):185]]]]]]
			= [[D la(cl)] [? [[[D loro] [T/fin [[D loro] sta]]] [PRG [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				PRO.PRG has unaccetable specifier [[D loro]:184 [phi.T/fin [(DP):184 PRO.sta]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D: [D]
la(cl): [N, D]
?: [?]
D: [D, ?]
loro: [N, D, ?]
phi.T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.sta: [V, TT/fin, ?]
PRO.PRG: [INF, ?]
PRO.v: [v, INF, ?]
PRO.lava: [V, v, INF, ?]
(D): [D, V, v, INF, ?]
(N): [N, D, V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D la(cl)] D{N}] T/fin]
			Transferring [[D la(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D la(cl)] D{N}].
					Extracted head "loro" from D and created [[D la(cl)] [D loro]]
					=[[D la(cl)] [D loro]]
				2. Feature processing:
					=[[D la(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D la(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D la(cl)].
					Extraposition will be tried on [[D la(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D la(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D la(cl)] <D loro>]
			=[[[D la(cl)] <D loro>] PRO.T/fin]

27.
		Consume "sta"

		[[[D la(cl)] <D loro>] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[[D la(cl)] <D loro>] PRO.T/fin{V}]

28.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[[D la(cl)] <D loro>] T/fin{V}] + PRG
			Filtering out impossible merge sites...
				Reject [[[[D la(cl)] <D loro>] [T/fin sta]] PRO.PRG] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[[D la(cl)] <D loro>] [PRO.T/fin{V} PRO.PRG]]

29.
		Consume "v"

		[[[D la(cl)] <D loro>] [T/fin{V} PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[[D la(cl)] <D loro>] [PRO.T/fin{V} PRO.PRG{v}]]

30.
		Consume "lava"

		[[[D la(cl)] <D loro>] [T/fin{V} PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[[D la(cl)] <D loro>] [PRO.T/fin{V} PRO.PRG{v,V}]]

31.
	>>>	Trying candidate parse [[[D la(cl)] <D loro>] [T/fin{V} PRG{v,V}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 105
['loro#lo', 'stanno', 'lavando']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#lo.
		Next word contains multiple morphemes ['lo_', 'loro']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "lo(cl)"

		D + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D lo(cl)] D]

16.
		Consume "loro"

		[[D lo(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D lo(cl)] D{N}]

17.
		Decomposing a polymorphemic word sta-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'sta-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D lo(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D lo(cl)] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D lo(cl)] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D lo(cl)] [[D loro] PRO.T/fin]]

19.
		Consume "sta"

		[[D lo(cl)] [[D loro] T/fin]] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[D lo(cl)] [[D loro] PRO.T/fin{V}]]

20.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[D lo(cl)] [[D loro] T/fin{V}]] + PRG
			Filtering out impossible merge sites...
				Reject [[[D lo(cl)] [? [[D loro] [T/fin [[D loro] sta]]]]] PRO.PRG] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, PRG.
				Prioritize [sta PRG] due to complement selection.
				[[D loro] PRO.T/fin{V}] + PRG = -98]
				PRO.T/fin{V} + PRG = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; PRG]
			2. [[[D loro] PRO.T/fin{V}]; PRG]
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D lo(cl)] [[D loro] [PRO.T/fin{V} PRO.PRG]]]

21.
		Consume "v"

		[[D lo(cl)] [[D loro] [T/fin{V} PRG]]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D lo(cl)] [[D loro] [PRO.T/fin{V} PRO.PRG{v}]]]

22.
		Consume "lava"

		[[D lo(cl)] [[D loro] [T/fin{V} PRG{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D lo(cl)] [[D loro] [PRO.T/fin{V} PRO.PRG{v,V}]]]

23.
	>>>	Trying candidate parse [[D lo(cl)] [[D loro] [T/fin{V} PRG{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] PRG]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.sta" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.sta]]
					=[[D loro] [PRO.T/fin PRO.sta]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.sta]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.sta]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.sta
					Result [[D loro] [PRO.T/fin [[D loro] PRO.sta]]]
					=[[D loro]:189 [PRO.T/fin [(DP):189 PRO.sta]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]]
			=[[D lo(cl)] [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] PRO.PRG]]

24.
		Consume "v"

		[[D lo(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[D lo(cl)] [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] PRO.PRG{v}]]

25.
		Consume "lava"

		[[D lo(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[D lo(cl)] [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] PRO.PRG{v,V}]]

26.
	>>>	Trying candidate parse [[D lo(cl)] [[[D loro] [T/fin [[D loro] sta]]] PRG{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D lo(cl)] [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] PRO.PRG{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lo(cl)] [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] PRO.PRG{v,V}]].
					Extracted head "PRO.v{V}" from PRO.PRG and created [[D lo(cl)] [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] [PRO.PRG PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D lo(cl)] [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
					=[[D lo(cl)] [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D lo(cl)] [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D lo(cl)] [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] [PRO.PRG [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __sta " into memory buffer from SPEC of "PRO.PRG".
					Moving "D lo(cl) " into memory buffer from SPEC of "PRO.PRG".
					New head was spawned due to multiple specifiers at PRO.PRG but its category is unknown!
					Memory buffer: [[[D N] [TT/fin [[D N] V]]], [D N]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D lo(cl)]:190 [? [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):190]]]]]]
					Remaining items in memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.PRG has unaccetable specifier [[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]].
					Extraposition will be tried on [[D lo(cl)]:190 [? [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):190]]]]]].
					=[[D lo(cl)]:190 [? [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):190]]]]]]
				5. Agreement reconstruction:
					PRO.PRG has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D lo(cl)]:190 [? [[[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]] [PRO.PRG [PRO.v [PRO.lava (DP):190]]]]]]
			= [[D lo(cl)] [? [[[D loro] [T/fin [[D loro] sta]]] [PRG [v [lava [D lo(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				PRO.PRG has unaccetable specifier [[D loro]:189 [phi.T/fin [(DP):189 PRO.sta]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
sta:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PRG', 'LANG:IT', 'LF:stay', 'PF:sta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
PRG:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/PRG', 'CAT:INF', 'CAT:PRG', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ing', 'PF:PRG', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

D: [D]
lo(cl): [N, D]
?: [?]
D: [D, ?]
loro: [N, D, ?]
phi.T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.sta: [V, TT/fin, ?]
PRO.PRG: [INF, ?]
PRO.v: [v, INF, ?]
PRO.lava: [V, v, INF, ?]
(D): [D, V, v, INF, ?]
(N): [N, D, V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D lo(cl)] D{N}] T/fin]
			Transferring [[D lo(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lo(cl)] D{N}].
					Extracted head "loro" from D and created [[D lo(cl)] [D loro]]
					=[[D lo(cl)] [D loro]]
				2. Feature processing:
					=[[D lo(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D lo(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D lo(cl)].
					Extraposition will be tried on [[D lo(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D lo(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D lo(cl)] <D loro>]
			=[[[D lo(cl)] <D loro>] PRO.T/fin]

27.
		Consume "sta"

		[[[D lo(cl)] <D loro>] T/fin] + sta
			Filtering out impossible merge sites...
			Sink "sta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sta]
			=[[[D lo(cl)] <D loro>] PRO.T/fin{V}]

28.
		Decomposing a polymorphemic word lava-#v#ndo.
		Next word contains multiple morphemes ['ndo$', 'v$', 'lava-']
		Consume "PRG"

		[[[D lo(cl)] <D loro>] T/fin{V}] + PRG
			Filtering out impossible merge sites...
				Reject [[[[D lo(cl)] <D loro>] [T/fin sta]] PRO.PRG] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} PRG]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[[D lo(cl)] <D loro>] [PRO.T/fin{V} PRO.PRG]]

29.
		Consume "v"

		[[[D lo(cl)] <D loro>] [T/fin{V} PRG]] + v
			Filtering out impossible merge sites...
			Sink "v" into PRG because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG*v]
			=[[[D lo(cl)] <D loro>] [PRO.T/fin{V} PRO.PRG{v}]]

30.
		Consume "lava"

		[[[D lo(cl)] <D loro>] [T/fin{V} PRG{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.PRG{v}*lava]
			=[[[D lo(cl)] <D loro>] [PRO.T/fin{V} PRO.PRG{v,V}]]

31.
	>>>	Trying candidate parse [[[D lo(cl)] <D loro>] [T/fin{V} PRG{v,V}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavando".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "stanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 106
['loro', 'la#hanno', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

11.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "la(cl)"

		[[D loro] [T/fin{V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] PRO.T/prt{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [PRO.T/prt PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[D la(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]]]]
					Moving "D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:126 [PRO.T/fin [(DP):126 [PRO.ha [[D la(cl)]:127 [PRO.T/prt [PRO.v [PRO.lava (DP):127]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:126 [PRO.T/fin [(DP):126 [PRO.ha [[D la(cl)]:127 [PRO.T/prt [PRO.v [PRO.lava (DP):127]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					Feature PHI:GEN:F was not matched in phi.T/prt and was marked as bad.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[D loro]:126 [phi.T/fin [(DP):126 [PRO.ha [[D la(cl)]:127 [T/prt [PRO.v [PRO.lava (DP):127]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:126 [phi.T/fin [(DP):126 [PRO.ha [[D la(cl)]:127 [T/prt [PRO.v [PRO.lava (DP):127]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				T/prt induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D la(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/prt 3. [D la(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} D{N}] T/prt]
			Transferring [PRO.T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} D{N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha D{N}]]
					Extracted head "la(cl)" from D and created [PRO.T/fin [PRO.ha [D la(cl)]]]
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)].
					=[phi.T/fin [PRO.ha [D la(cl)]]]
			=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D la(cl)]]].
					Extraposition will be tried on [[D loro]:128 [? [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [(DP):128 [PRO.v PRO.lava]]]]]].
					=[[D loro]:128 [? [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [(DP):128 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:3 by phi-Agree from (DP):128.
					=[[D loro]:128 [? [[phi.T/fin [PRO.ha [D la(cl)]]] [phi.T/prt [(DP):128 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D la(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				phi.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D la(cl)]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
la(cl): [N, D, V, TT/fin, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [PRO.T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha D{N}]]]
					Extracted head "la(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [D la(cl)]]]]]
					=[[D loro]:129 [PRO.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]]
			=[[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] PRO.T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]].
					Extraposition will be tried on [[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[D loro]:129 [phi.T/fin [(DP):129 [PRO.ha [D la(cl)]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] D]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:130 [PRO.T/fin [(DP):130 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]]
			=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] D]

33.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [[D la(cl)] PRO.T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [[D la(cl)] PRO.T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [[D la(cl)] PRO.T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [[D la(cl)] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [[D la(cl)] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [[D la(cl)] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [[D la(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [[D la(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [[D la(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [[D la(cl)] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[D N], [[D N] [TT/fin [[D N] V]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [? [[D la(cl)]:131 [PRO.T/prt [PRO.v [PRO.lava (DP):131]]]]]]
					Remaining items in memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [? [[D la(cl)]:131 [PRO.T/prt [PRO.v [PRO.lava (DP):131]]]]]].
					=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [? [[D la(cl)]:131 [PRO.T/prt [PRO.v [PRO.lava (DP):131]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					Feature PHI:GEN:F was not matched in phi.T/prt and was marked as bad.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [? [[D la(cl)]:131 [T/prt [PRO.v [PRO.lava (DP):131]]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [? [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F*', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
?: [?]
D: [D, ?]
la(cl): [N, D, ?]
T/prt: [T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]
(D): [D, V, v, T, ?]
(N): [N, D, V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] D{N}] T/prt]
			Transferring [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] D{N}].
					Extracted head "la(cl)" from D and created [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [D la(cl)]]
					=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [D la(cl)]]
				2. Feature processing:
					=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>]
			=[[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] PRO.T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] PRO.T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] PRO.T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				PRO.T/prt has unaccetable specifier [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>].
					Extraposition will be tried on [[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[[D loro]:130 [phi.T/fin [(DP):130 PRO.ha]]] <D la(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D]
la(cl): [N, D]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 107
['loro', 'mi#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] T/prt]]]

27.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] T/prt{v}]]]

28.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] T/prt{v,V}]]]

29.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D mi(cl)] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D mi(cl)] T/prt{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] T/prt{v,V}]]]]
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [T/prt PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [T/prt [PRO.v PRO.lava]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [T/prt [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [T/prt [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [T/prt [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[D mi(cl)] [T/prt [PRO.v PRO.lava]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:136 [PRO.T/fin [(DP):136 [PRO.ha [[D mi(cl)]:137 [T/prt [PRO.v [PRO.lava (DP):137]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:136 [PRO.T/fin [(DP):136 [PRO.ha [[D mi(cl)]:137 [T/prt [PRO.v [PRO.lava (DP):137]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:M was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:1 from the edge of T/prt.
					=[[D loro]:136 [phi.T/fin [(DP):136 [PRO.ha [[D mi(cl)]:137 [T/prt [PRO.v [PRO.lava (DP):137]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:136 [phi.T/fin [(DP):136 [PRO.ha [[D mi(cl)]:137 [T/prt [PRO.v [PRO.lava (DP):137]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				T/prt induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. T/prt 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} D{N}] T/prt]
			Transferring [PRO.T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} D{N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha D{N}]]
					Extracted head "mi(cl)" from D and created [PRO.T/fin [PRO.ha [D mi(cl)]]]
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)].
					=[phi.T/fin [PRO.ha [D mi(cl)]]]
			=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] T/prt]]

30.
		Consume "v"

		[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] T/prt{v}]]

31.
		Consume "lava"

		[[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] T/prt{v,V}]]

32.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D mi(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] [T/prt [PRO.v PRO.lava]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [D mi(cl)]]] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D mi(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha [D mi(cl)]]] [T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D mi(cl)]]].
					Extraposition will be tried on [[D loro]:138 [? [[phi.T/fin [PRO.ha [D mi(cl)]]] [T/prt [(DP):138 [PRO.v PRO.lava]]]]]].
					=[[D loro]:138 [? [[phi.T/fin [PRO.ha [D mi(cl)]]] [T/prt [(DP):138 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from (DP):138.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N by phi-Agree from (DP):138.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL by phi-Agree from (DP):138.
					T/prt acquired PHI:PER:3 by phi-Agree from (DP):138.
					=[[D loro]:138 [? [[phi.T/fin [PRO.ha [D mi(cl)]]] [T/prt [(DP):138 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D mi(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D mi(cl)]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
mi(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [PRO.T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha D{N}]]]
					Extracted head "mi(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [D mi(cl)]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [D mi(cl)]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [D mi(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [D mi(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [D mi(cl)]]]]]
					=[[D loro]:139 [PRO.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]]
			=[[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] T/prt]

33.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] T/prt{v}]

34.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] T/prt{v,V}]

35.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unaccetable specifier [[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]].
					Extraposition will be tried on [[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] [T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D mi(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[D loro]:139 [phi.T/fin [(DP):139 [PRO.ha [D mi(cl)]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] D]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:140 [PRO.T/fin [(DP):140 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]]
			=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] D]

36.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] D{N}]

37.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [[D mi(cl)] T/prt]]

44.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [[D mi(cl)] T/prt{v}]]

45.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [[D mi(cl)] T/prt{v,V}]]

46.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D mi(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [[D mi(cl)] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [[D mi(cl)] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [[D mi(cl)] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [[D mi(cl)] [T/prt [PRO.v PRO.lava]]]]
					=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [[D mi(cl)] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [[D mi(cl)] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [[D mi(cl)] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [[D N] [TT/fin [[D N] V]]]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [? [[D mi(cl)]:141 [T/prt [PRO.v [PRO.lava (DP):141]]]]]]
					Remaining items in memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [? [[D mi(cl)]:141 [T/prt [PRO.v [PRO.lava (DP):141]]]]]].
					=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [? [[D mi(cl)]:141 [T/prt [PRO.v [PRO.lava (DP):141]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:M was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:1 from the edge of T/prt.
					=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [? [[D mi(cl)]:141 [T/prt [PRO.v [PRO.lava (DP):141]]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [? [[D mi(cl)] [T/prt [v [lava [D mi(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
?: [?]
D: [D, ?]
mi(cl): [N, D, ?]
T/prt: [T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]
(D): [D, V, v, T, ?]
(N): [N, D, V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] D{N}] T/prt]
			Transferring [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] D{N}].
					Extracted head "mi(cl)" from D and created [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [D mi(cl)]]
					=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [D mi(cl)]]
				2. Feature processing:
					=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [D mi(cl)]]
				3. Floater movement reconstruction:
					=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [D mi(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] [D mi(cl)]].
						<D mi(cl)> was made an adjunct.
					<D mi(cl)> was made adjunct by an extraposition rule.
					=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>]
			=[[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] T/prt]

47.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] T/prt{v}]

48.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] T/prt{v,V}]

49.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] [T/prt [PRO.v PRO.lava]]]
					=[[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D mi(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unaccetable specifier [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>].
					Extraposition will be tried on [[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] [T/prt [PRO.v PRO.lava]]].
					=[[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>] [T/prt [PRO.v PRO.lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D mi(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[[D loro]:140 [phi.T/fin [(DP):140 PRO.ha]]] <D mi(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D]
mi(cl): [N, D]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 108
['loro', 'lo#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word lo#hanno.
		Next word contains multiple morphemes ['hanno_', 'lo']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

11.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D loro] [PRO.T/fin{V} [[D lo(cl)] T/prt]]]

27.
		Consume "v"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D lo(cl)] T/prt{v}]]]

28.
		Consume "lava"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D lo(cl)] T/prt{v,V}]]]

29.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D lo(cl)] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D lo(cl)] T/prt{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D lo(cl)] T/prt{v,V}]]]]
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [PRO.T/fin [PRO.ha [[D lo(cl)] [T/prt PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [[D lo(cl)] [T/prt [PRO.v PRO.lava]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[D lo(cl)] [T/prt [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[D lo(cl)] [T/prt [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [[D lo(cl)] [T/prt [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[D lo(cl)] [T/prt [PRO.v PRO.lava]]]]]]]
					Moving "D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:146 [PRO.T/fin [(DP):146 [PRO.ha [[D lo(cl)]:147 [T/prt [PRO.v [PRO.lava (DP):147]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:146 [PRO.T/fin [(DP):146 [PRO.ha [[D lo(cl)]:147 [T/prt [PRO.v [PRO.lava (DP):147]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:M was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[D loro]:146 [phi.T/fin [(DP):146 [PRO.ha [[D lo(cl)]:147 [T/prt [PRO.v [PRO.lava (DP):147]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:146 [phi.T/fin [(DP):146 [PRO.ha [[D lo(cl)]:147 [T/prt [PRO.v [PRO.lava (DP):147]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				T/prt induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D lo(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/prt 3. [D lo(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} D{N}] T/prt]
			Transferring [PRO.T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} D{N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha D{N}]]
					Extracted head "lo(cl)" from D and created [PRO.T/fin [PRO.ha [D lo(cl)]]]
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					=[phi.T/fin [PRO.ha [D lo(cl)]]]
			=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] T/prt]]

30.
		Consume "v"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] T/prt{v}]]

31.
		Consume "lava"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] T/prt{v,V}]]

32.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [T/prt [PRO.v PRO.lava]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D lo(cl)]]].
					Extraposition will be tried on [[D loro]:148 [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [T/prt [(DP):148 [PRO.v PRO.lava]]]]]].
					=[[D loro]:148 [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [T/prt [(DP):148 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from (DP):148.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N by phi-Agree from (DP):148.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL by phi-Agree from (DP):148.
					T/prt acquired PHI:PER:3 by phi-Agree from (DP):148.
					=[[D loro]:148 [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [T/prt [(DP):148 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D lo(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D lo(cl)]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
lo(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [PRO.T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha D{N}]]]
					Extracted head "lo(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [D lo(cl)]]]]]
					=[[D loro]:149 [PRO.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]]
			=[[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] T/prt]

33.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] T/prt{v}]

34.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] T/prt{v,V}]

35.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				T/prt has unaccetable specifier [[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]].
					Extraposition will be tried on [[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] [T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]] [T/prt [PRO.v PRO.lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[D loro]:149 [phi.T/fin [(DP):149 [PRO.ha [D lo(cl)]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] D]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:150 [PRO.T/fin [(DP):150 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]]
			=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] D]

36.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] D{N}]

37.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [[D lo(cl)] T/prt]]

44.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [[D lo(cl)] T/prt{v}]]

45.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [[D lo(cl)] T/prt{v,V}]]

46.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [[D lo(cl)] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [[D lo(cl)] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [[D lo(cl)] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [[D lo(cl)] [T/prt [PRO.v PRO.lava]]]]
					=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [[D lo(cl)] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [[D lo(cl)] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [[D lo(cl)] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [[D N] [TT/fin [[D N] V]]]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [? [[D lo(cl)]:151 [T/prt [PRO.v [PRO.lava (DP):151]]]]]]
					Remaining items in memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [? [[D lo(cl)]:151 [T/prt [PRO.v [PRO.lava (DP):151]]]]]].
					=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [? [[D lo(cl)]:151 [T/prt [PRO.v [PRO.lava (DP):151]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:M was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:M from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [? [[D lo(cl)]:151 [T/prt [PRO.v [PRO.lava (DP):151]]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [? [[D lo(cl)] [T/prt [v [lava [D lo(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
?: [?]
D: [D, ?]
lo(cl): [N, D, ?]
T/prt: [T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]
(D): [D, V, v, T, ?]
(N): [N, D, V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] D{N}] T/prt]
			Transferring [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] D{N}].
					Extracted head "lo(cl)" from D and created [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [D lo(cl)]]
					=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [D lo(cl)]]
				2. Feature processing:
					=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [D lo(cl)]]
				3. Floater movement reconstruction:
					=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] [D lo(cl)]].
						<D lo(cl)> was made an adjunct.
					<D lo(cl)> was made adjunct by an extraposition rule.
					=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>]
			=[[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] T/prt]

47.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] T/prt{v}]

48.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] T/prt{v,V}]

49.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] [T/prt [PRO.v PRO.lava]]]
					=[[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				T/prt has unaccetable specifier [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>].
					Extraposition will be tried on [[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] [T/prt [PRO.v PRO.lava]]].
					=[[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>] [T/prt [PRO.v PRO.lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[[D loro]:150 [phi.T/fin [(DP):150 PRO.ha]]] <D lo(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D]
lo(cl): [N, D]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 109
['loro', 'hanno', 'la#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word la#lavato.
		Next word contains multiple morphemes ['lavato_', 'la']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

15.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

17.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] + D = -98]
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -96]
				PRO.T/prt{v,V} + D = 65]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D]]]

25.
		Consume "la(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D]]

27.
		Consume "la(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] D]
			Transferring [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]]
					=[[D loro]:156 [PRO.T/fin [(DP):156 [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[D loro]:156 [phi.T/fin [(DP):156 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]]
			=[[[D loro]:156 [phi.T/fin [(DP):156 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]] D]

29.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:156 [phi.T/fin [(DP):156 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:157 [PRO.T/fin [(DP):157 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]]
			=[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] PRO.T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] PRO.T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] PRO.T/prt{v,V}]

33.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				phi.T/prt has unaccetable specifier [[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]].
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [PRO.T/prt{v,V} D]]

41.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [PRO.T/prt{v,V} D{N}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] PRO.T/prt{v,V}] D]
			Transferring [[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]]
			=[[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]] D]

43.
		Consume "la(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[[D loro]:157 [phi.T/fin [(DP):157 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]] D{N}]

44.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 110
['loro', 'hanno', 'lo#lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lo#lavato.
		Next word contains multiple morphemes ['lavato_', 'lo']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

15.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

17.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] + D = -98]
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -96]
				PRO.T/prt{v,V} + D = 65]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D]]]

25.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D]]

27.
		Consume "lo(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] D]
			Transferring [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]]
					=[[D loro]:162 [PRO.T/fin [(DP):162 [PRO.ha [PRO.T/prt [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[D loro]:162 [phi.T/fin [(DP):162 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]]
			=[[[D loro]:162 [phi.T/fin [(DP):162 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]] D]

29.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:162 [phi.T/fin [(DP):162 [PRO.ha [phi.T/prt [PRO.v PRO.lava]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:163 [PRO.T/fin [(DP):163 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]]
			=[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] PRO.T/prt]

31.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] PRO.T/prt{v}]

32.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] PRO.T/prt{v,V}]

33.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				phi.T/prt has unaccetable specifier [[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]].
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [PRO.T/prt{v,V} D]]

41.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [PRO.T/prt{v,V} D{N}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] PRO.T/prt{v,V}] D]
			Transferring [[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]]
			=[[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]] D]

43.
		Consume "lo(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[[D loro]:163 [phi.T/fin [(DP):163 PRO.ha]]] [phi.T/prt [PRO.v PRO.lava]]] D{N}]

44.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] (5.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 111
['loro', 'hanno', 'lavato#la']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lavato#la.
		Next word contains multiple morphemes ['la_', 'lavato']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "la(cl)"

		[[D loro] [T/fin{V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D la(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} D{N}] T/prt]
			Transferring [PRO.T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} D{N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha D{N}]]
					Extracted head "la(cl)" from D and created [PRO.T/fin [PRO.ha [D la(cl)]]]
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)].
					=[phi.T/fin [PRO.ha [D la(cl)]]]
			=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D la(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D la(cl)]]].
					Extraposition will be tried on [[D loro]:168 [? [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [(DP):168 [PRO.v PRO.lava]]]]]].
					=[[D loro]:168 [? [[phi.T/fin [PRO.ha [D la(cl)]]] [PRO.T/prt [(DP):168 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:3 by phi-Agree from (DP):168.
					=[[D loro]:168 [? [[phi.T/fin [PRO.ha [D la(cl)]]] [phi.T/prt [(DP):168 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D la(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				phi.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D la(cl)]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
la(cl): [N, D, V, TT/fin, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [PRO.T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha D{N}]]]
					Extracted head "la(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [D la(cl)]]]]]
					=[[D loro]:169 [PRO.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]]
			=[[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] PRO.T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]].
					Extraposition will be tried on [[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D la(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[D loro]:169 [phi.T/fin [(DP):169 [PRO.ha [D la(cl)]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] D]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:170 [PRO.T/fin [(DP):170 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]]
			=[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] D]

33.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] [[D la(cl)] PRO.T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] [[D la(cl)] PRO.T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] [[D la(cl)] PRO.T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D la(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] D{N}] T/prt]
			Transferring [[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] D{N}].
					Extracted head "la(cl)" from D and created [[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] [D la(cl)]]
					=[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] [D la(cl)]]
				2. Feature processing:
					=[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>]
			=[[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] PRO.T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] PRO.T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] PRO.T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D la(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				PRO.T/prt has unaccetable specifier [[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>].
					Extraposition will be tried on [[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[[D loro]:170 [phi.T/fin [(DP):170 PRO.ha]]] <D la(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D]
la(cl): [N, D]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 112
['loro', 'hanno', 'lavato#lo']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word lavato#lo.
		Next word contains multiple morphemes ['lo_', 'lavato']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[D loro] [PRO.T/fin{V} [[D lo(cl)] PRO.T/prt]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D lo(cl)] PRO.T/prt{v}]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D lo(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D lo(cl)] PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D lo(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} D{N}] T/prt]
			Transferring [PRO.T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} D{N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha D{N}]]
					Extracted head "lo(cl)" from D and created [PRO.T/fin [PRO.ha [D lo(cl)]]]
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [D lo(cl)]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					=[phi.T/fin [PRO.ha [D lo(cl)]]]
			=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] PRO.T/prt]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] PRO.T/prt{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] PRO.T/prt{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [D lo(cl)]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D lo(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [D N]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D lo(cl)]]].
					Extraposition will be tried on [[D loro]:175 [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [(DP):175 [PRO.v PRO.lava]]]]]].
					=[[D loro]:175 [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [PRO.T/prt [(DP):175 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:3 by phi-Agree from (DP):175.
					=[[D loro]:175 [? [[phi.T/fin [PRO.ha [D lo(cl)]]] [phi.T/prt [(DP):175 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[T/fin [ha [D lo(cl)]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				phi.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [D lo(cl)]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
D: [D, V, TT/fin, ?]
lo(cl): [N, D, V, TT/fin, ?]
phi.T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} D{N}]] T/prt]
			Transferring [[D loro] [PRO.T/fin{V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha D{N}]]]
					Extracted head "lo(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [D lo(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [D lo(cl)]]]]]
					=[[D loro]:176 [PRO.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]]
			=[[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] PRO.T/prt]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] PRO.T/prt{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] PRO.T/prt{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [D N]]]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]].
					Extraposition will be tried on [[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [D lo(cl)]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[D loro]:176 [phi.T/fin [(DP):176 [PRO.ha [D lo(cl)]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
lo(cl): [N, D, V, TT/fin]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] D]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:177 [PRO.T/fin [(DP):177 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]]
			=[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] D]

33.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] [[D lo(cl)] PRO.T/prt]]

38.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] [[D lo(cl)] PRO.T/prt{v}]]

39.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] [[D lo(cl)] PRO.T/prt{v,V}]]

40.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[D lo(cl)] T/prt{v,V}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] D{N}] T/prt]
			Transferring [[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] D{N}].
					Extracted head "lo(cl)" from D and created [[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] [D lo(cl)]]
					=[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] [D lo(cl)]]
				2. Feature processing:
					=[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] [D lo(cl)]]
				3. Floater movement reconstruction:
					=[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] [D lo(cl)]].
						<D lo(cl)> was made an adjunct.
					<D lo(cl)> was made adjunct by an extraposition rule.
					=[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>]
			=[[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] PRO.T/prt]

41.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] PRO.T/prt{v}]

42.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] PRO.T/prt{v,V}]

43.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] T/prt{v,V}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha D lo(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] [D N]]]
				PRO.T/prt has unaccetable specifier [[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>].
					Extraposition will be tried on [[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <D lo(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[[D loro]:177 [phi.T/fin [(DP):177 PRO.ha]]] <D lo(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D]
lo(cl): [N, D]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 113
['mi#hanno', 'loro', 'lavato']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "mi(cl)"

		[T/fin{V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + D = -98]
				D{N} + D = 104]
		Ranking completed:
			1. [D{N}; D]
			2. [[PRO.T/fin{V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[PRO.T/fin{V} [[D mi(cl)] D]]

19.
		Consume "loro"

		[T/fin{V} [[D mi(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.T/fin{V} [[D mi(cl)] D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} [[D mi(cl)] D{N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D N] D] PRO.T/prt] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				[PRO.T/fin{V} [[D mi(cl)] D{N}]] + T/prt = -98]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} [[D mi(cl)] D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.T/fin{V} [[D mi(cl)] [[D loro] PRO.T/prt]]]

24.
		Consume "v"

		[T/fin{V} [[D mi(cl)] [[D loro] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} [[D mi(cl)] [[D loro] PRO.T/prt{v}]]]

25.
		Consume "lava"

		[T/fin{V} [[D mi(cl)] [[D loro] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[PRO.T/fin{V} [[D mi(cl)] [[D loro] PRO.T/prt{v,V}]]]

26.
	>>>	Trying candidate parse [T/fin{V} [[D mi(cl)] [[D loro] T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D mi(cl)] [[D loro] PRO.T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D mi(cl)] [[D loro] PRO.T/prt{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[D mi(cl)] [[D loro] PRO.T/prt{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [[D mi(cl)] [[D loro] [PRO.T/prt PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [[D mi(cl)] [[D loro] [PRO.T/prt [PRO.v PRO.lava]]]]]]
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [[D loro] [PRO.T/prt [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [[D loro] [PRO.T/prt [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [[D loro] [PRO.T/prt [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/prt".
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.T/fin [PRO.ha [[D mi(cl)] [? [[D loro] [PRO.T/prt [[D loro] [PRO.v PRO.lava]]]]]]]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.ha [[D mi(cl)]:179 [? [[D loro]:178 [PRO.T/prt [(DP):178 [PRO.v [PRO.lava (DP):179]]]]]]]]]
					Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [PRO.T/fin [PRO.ha [[D mi(cl)]:179 [? [[D loro]:178 [PRO.T/prt [(DP):178 [PRO.v [PRO.lava (DP):179]]]]]]]]].
					=[PRO.T/fin [PRO.ha [[D mi(cl)]:179 [? [[D loro]:178 [PRO.T/prt [(DP):178 [PRO.v [PRO.lava (DP):179]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:179.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					Feature PHI:GEN:N was not matched in phi.T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N from the edge of T/prt.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[phi.T/fin [PRO.ha [[D mi(cl)]:179 [? [[D loro]:178 [T/prt [(DP):178 [PRO.v [PRO.lava (DP):179]]]]]]]]]
			= [T/fin [ha [[D mi(cl)] [? [[D loro] [T/prt [[D loro] [v [lava [D mi(cl)]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
?: [?, V, TT/fin]
D: [D, ?, V, TT/fin]
loro: [N, D, ?, V, TT/fin]
T/prt: [T, ?, V, TT/fin]
(D): [D, T, ?, V, TT/fin]
(N): [N, D, T, ?, V, TT/fin]
PRO.v: [v, T, ?, V, TT/fin]
PRO.lava: [V, v, T, ?, V, TT/fin]
(D): [D, V, v, T, ?, V, TT/fin]
(N): [N, D, V, v, T, ?, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} [[D mi(cl)] D{N}]] T/prt]
			Transferring [PRO.T/fin{V} [[D mi(cl)] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D mi(cl)] D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[D mi(cl)] D{N}]]]
					Extracted head "loro" from D and created [PRO.T/fin [PRO.ha [[D mi(cl)] [D loro]]]]
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [D loro]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [D loro]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [D loro]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D mi(cl)].
					Extraposition will be tried on [PRO.T/fin [PRO.ha [[D mi(cl)] [D loro]]]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[PRO.T/fin [PRO.ha [[D mi(cl)] <D loro>]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)].
					=[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]]
			=[[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] PRO.T/prt]

27.
		Consume "v"

		[[T/fin [ha [[D mi(cl)] <D loro>]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] PRO.T/prt{v}]

28.
		Consume "lava"

		[[T/fin [ha [[D mi(cl)] <D loro>]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] PRO.T/prt{v,V}]

29.
	>>>	Trying candidate parse [[T/fin [ha [[D mi(cl)] <D loro>]]] T/prt{v,V}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D mi(cl) D loro " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[TT/fin [V [[D N] [D N]]]]]
				PRO.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]].
					Extraposition will be tried on [[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]] [phi.T/prt [PRO.v PRO.lava]]]
			= [[T/fin [ha [[D mi(cl)] <D loro>]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [phi.T/fin [PRO.ha [[D mi(cl)] <D loro>]]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
D: [D, V, TT/fin]
loro: [N, D, V, TT/fin]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} D{N}] D]
			Transferring [PRO.T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} D{N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha D{N}]]
					Extracted head "mi(cl)" from D and created [PRO.T/fin [PRO.ha [D mi(cl)]]]
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [D mi(cl)]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)].
					=[phi.T/fin [PRO.ha [D mi(cl)]]]
			=[[phi.T/fin [PRO.ha [D mi(cl)]]] D]

30.
		Consume "loro"

		[[T/fin [ha [D mi(cl)]]] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[phi.T/fin [PRO.ha [D mi(cl)]]] D{N}]

31.
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[T/fin [ha [D mi(cl)]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[phi.T/fin [PRO.ha [D mi(cl)]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[phi.T/fin [PRO.ha [D mi(cl)]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[phi.T/fin [PRO.ha [D mi(cl)]]] [[D loro] PRO.T/prt]]

35.
		Consume "v"

		[[T/fin [ha [D mi(cl)]]] [[D loro] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[phi.T/fin [PRO.ha [D mi(cl)]]] [[D loro] PRO.T/prt{v}]]

36.
		Consume "lava"

		[[T/fin [ha [D mi(cl)]]] [[D loro] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[phi.T/fin [PRO.ha [D mi(cl)]]] [[D loro] PRO.T/prt{v,V}]]

37.
	>>>	Trying candidate parse [[T/fin [ha [D mi(cl)]]] [[D loro] T/prt{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[phi.T/fin [PRO.ha [D mi(cl)]]] [[D loro] PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [D mi(cl)]]] [[D loro] PRO.T/prt{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[phi.T/fin [PRO.ha [D mi(cl)]]] [[D loro] [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[phi.T/fin [PRO.ha [D mi(cl)]]] [[D loro] [PRO.T/prt [PRO.v PRO.lava]]]]
					=[[phi.T/fin [PRO.ha [D mi(cl)]]] [[D loro] [PRO.T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [D mi(cl)]]] [[D loro] [PRO.T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha [D mi(cl)]]] [[D loro] [PRO.T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/prt".
					Moving "T/fin ha D mi(cl) " into memory buffer from SPEC of "PRO.T/prt".
					New head was spawned due to multiple specifiers at PRO.T/prt but its category is unknown!
					Memory buffer: [[D N], [TT/fin [V [D N]]]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[phi.T/fin [PRO.ha [D mi(cl)]]] [? [[D loro] [PRO.T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[phi.T/fin [PRO.ha [D mi(cl)]]] [? [[D loro]:180 [PRO.T/prt [(DP):180 [PRO.v PRO.lava]]]]]].
					=[[phi.T/fin [PRO.ha [D mi(cl)]]] [? [[D loro]:180 [PRO.T/prt [(DP):180 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					Feature PHI:GEN:N was not matched in phi.T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N from the edge of T/prt.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[phi.T/fin [PRO.ha [D mi(cl)]]] [? [[D loro]:180 [T/prt [(DP):180 [PRO.v PRO.lava]]]]]]
			= [[T/fin [ha [D mi(cl)]]] [? [[D loro] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
?: [?]
D: [D, ?]
loro: [N, D, ?]
T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.T/fin [PRO.ha [D mi(cl)]]] D{N}] T/prt]
			Transferring [[phi.T/fin [PRO.ha [D mi(cl)]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [D mi(cl)]]] D{N}].
					Extracted head "loro" from D and created [[phi.T/fin [PRO.ha [D mi(cl)]]] [D loro]]
					=[[phi.T/fin [PRO.ha [D mi(cl)]]] [D loro]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [D mi(cl)]]] [D loro]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha [D mi(cl)]]] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [phi.T/fin [PRO.ha [D mi(cl)]]].
					Extraposition will be tried on [[phi.T/fin [PRO.ha [D mi(cl)]]] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>]
				5. Agreement reconstruction:
					=[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>]
			=[[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] PRO.T/prt]

38.
		Consume "v"

		[[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] PRO.T/prt{v}]

39.
		Consume "lava"

		[[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*lava]
			=[[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] PRO.T/prt{v,V}]

40.
	>>>	Trying candidate parse [[[T/fin [ha [D mi(cl)]]] <D loro>] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] [PRO.T/prt [PRO.v PRO.lava]]]
					=[[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] [PRO.T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] [PRO.T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] [PRO.T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D mi(cl) D loro " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[TT/fin [V [D N]]] [D N]]]
				PRO.T/prt has unaccetable specifier [[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>].
					Extraposition will be tried on [[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] [PRO.T/prt [PRO.v PRO.lava]]].
					=[[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] [PRO.T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					=[[[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>] [phi.T/prt [PRO.v PRO.lava]]]
			= [[[T/fin [ha [D mi(cl)]]] <D loro>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				phi.T/prt has unaccetable specifier [[phi.T/fin [PRO.ha [D mi(cl)]]] <D loro>].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
D: [D]
loro: [N, D]
phi.T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 114
['la#hanno', 'loro', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "la(cl)"

		[T/fin{V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + D = -98]
				D{N} + D = 104]
		Ranking completed:
			1. [D{N}; D]
			2. [[PRO.T/fin{V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[PRO.T/fin{V} [[D la(cl)] D]]

19.
		Consume "loro"

		[T/fin{V} [[D la(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.T/fin{V} [[D la(cl)] D{N}]]

20.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} [[D la(cl)] D{N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D N] D] T/prt] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				[PRO.T/fin{V} [[D la(cl)] D{N}]] + T/prt = -98]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} [[D la(cl)] D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.T/fin{V} [[D la(cl)] [[D loro] T/prt]]]

27.
		Consume "v"

		[T/fin{V} [[D la(cl)] [[D loro] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[PRO.T/fin{V} [[D la(cl)] [[D loro] T/prt{v}]]]

28.
		Consume "lava"

		[T/fin{V} [[D la(cl)] [[D loro] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[PRO.T/fin{V} [[D la(cl)] [[D loro] T/prt{v,V}]]]

29.
	>>>	Trying candidate parse [T/fin{V} [[D la(cl)] [[D loro] T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D la(cl)] [[D loro] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D la(cl)] [[D loro] T/prt{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[D la(cl)] [[D loro] T/prt{v,V}]]]]
					Extracted head "PRO.v{V}" from T/prt and created [PRO.T/fin [PRO.ha [[D la(cl)] [[D loro] [T/prt PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [[D la(cl)] [[D loro] [T/prt [PRO.v PRO.lava]]]]]]
					=[PRO.T/fin [PRO.ha [[D la(cl)] [[D loro] [T/prt [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[D la(cl)] [[D loro] [T/prt [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [[D la(cl)] [[D loro] [T/prt [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.T/fin [PRO.ha [[D la(cl)] [? [[D loro] [T/prt [[D loro] [PRO.v PRO.lava]]]]]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.ha [[D la(cl)]:182 [? [[D loro]:181 [T/prt [(DP):181 [PRO.v [PRO.lava (DP):182]]]]]]]]]
					Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [PRO.T/fin [PRO.ha [[D la(cl)]:182 [? [[D loro]:181 [T/prt [(DP):181 [PRO.v [PRO.lava (DP):182]]]]]]]]].
					=[PRO.T/fin [PRO.ha [[D la(cl)]:182 [? [[D loro]:181 [T/prt [(DP):181 [PRO.v [PRO.lava (DP):182]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)]:182.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N from the edge of T/prt.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[phi.T/fin [PRO.ha [[D la(cl)]:182 [? [[D loro]:181 [T/prt [(DP):181 [PRO.v [PRO.lava (DP):182]]]]]]]]]
			= [T/fin [ha [[D la(cl)] [? [[D loro] [T/prt [[D loro] [v [lava [D la(cl)]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
?: [?, V, TT/fin]
D: [D, ?, V, TT/fin]
loro: [N, D, ?, V, TT/fin]
T/prt: [T, ?, V, TT/fin]
(D): [D, T, ?, V, TT/fin]
(N): [N, D, T, ?, V, TT/fin]
PRO.v: [v, T, ?, V, TT/fin]
PRO.lava: [V, v, T, ?, V, TT/fin]
(D): [D, V, v, T, ?, V, TT/fin]
(N): [N, D, V, v, T, ?, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} [[D la(cl)] D{N}]] T/prt]
			Transferring [PRO.T/fin{V} [[D la(cl)] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D la(cl)] D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[D la(cl)] D{N}]]]
					Extracted head "loro" from D and created [PRO.T/fin [PRO.ha [[D la(cl)] [D loro]]]]
					=[PRO.T/fin [PRO.ha [[D la(cl)] [D loro]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[D la(cl)] [D loro]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [[D la(cl)] [D loro]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D la(cl)].
					Extraposition will be tried on [PRO.T/fin [PRO.ha [[D la(cl)] [D loro]]]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[PRO.T/fin [PRO.ha [[D la(cl)] <D loro>]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)].
					=[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]]
			=[[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] T/prt]

30.
		Consume "v"

		[[T/fin [ha [[D la(cl)] <D loro>]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] T/prt{v}]

31.
		Consume "lava"

		[[T/fin [ha [[D la(cl)] <D loro>]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] T/prt{v,V}]

32.
	>>>	Trying candidate parse [[T/fin [ha [[D la(cl)] <D loro>]]] T/prt{v,V}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] [T/prt [PRO.v PRO.lava]]]
					=[[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D la(cl) D loro " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[TT/fin [V [[D N] [D N]]]]]
				T/prt has unaccetable specifier [phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]].
					Extraposition will be tried on [[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] [T/prt [PRO.v PRO.lava]]].
					=[[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]] [T/prt [PRO.v PRO.lava]]]
			= [[T/fin [ha [[D la(cl)] <D loro>]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [phi.T/fin [PRO.ha [[D la(cl)] <D loro>]]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
D: [D, V, TT/fin]
loro: [N, D, V, TT/fin]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} D{N}] D]
			Transferring [PRO.T/fin{V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} D{N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha D{N}]]
					Extracted head "la(cl)" from D and created [PRO.T/fin [PRO.ha [D la(cl)]]]
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [D la(cl)]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)].
					=[phi.T/fin [PRO.ha [D la(cl)]]]
			=[[phi.T/fin [PRO.ha [D la(cl)]]] D]

33.
		Consume "loro"

		[[T/fin [ha [D la(cl)]]] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[phi.T/fin [PRO.ha [D la(cl)]]] D{N}]

34.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[T/fin [ha [D la(cl)]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[phi.T/fin [PRO.ha [D la(cl)]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[phi.T/fin [PRO.ha [D la(cl)]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[phi.T/fin [PRO.ha [D la(cl)]]] [[D loro] T/prt]]

41.
		Consume "v"

		[[T/fin [ha [D la(cl)]]] [[D loro] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[phi.T/fin [PRO.ha [D la(cl)]]] [[D loro] T/prt{v}]]

42.
		Consume "lava"

		[[T/fin [ha [D la(cl)]]] [[D loro] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[phi.T/fin [PRO.ha [D la(cl)]]] [[D loro] T/prt{v,V}]]

43.
	>>>	Trying candidate parse [[T/fin [ha [D la(cl)]]] [[D loro] T/prt{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[phi.T/fin [PRO.ha [D la(cl)]]] [[D loro] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [D la(cl)]]] [[D loro] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[phi.T/fin [PRO.ha [D la(cl)]]] [[D loro] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[phi.T/fin [PRO.ha [D la(cl)]]] [[D loro] [T/prt [PRO.v PRO.lava]]]]
					=[[phi.T/fin [PRO.ha [D la(cl)]]] [[D loro] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [D la(cl)]]] [[D loro] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha [D la(cl)]]] [[D loro] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					Moving "T/fin ha D la(cl) " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [TT/fin [V [D N]]]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[phi.T/fin [PRO.ha [D la(cl)]]] [? [[D loro] [T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[phi.T/fin [PRO.ha [D la(cl)]]] [? [[D loro]:183 [T/prt [(DP):183 [PRO.v PRO.lava]]]]]].
					=[[phi.T/fin [PRO.ha [D la(cl)]]] [? [[D loro]:183 [T/prt [(DP):183 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N from the edge of T/prt.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[phi.T/fin [PRO.ha [D la(cl)]]] [? [[D loro]:183 [T/prt [(DP):183 [PRO.v PRO.lava]]]]]]
			= [[T/fin [ha [D la(cl)]]] [? [[D loro] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
?: [?]
D: [D, ?]
loro: [N, D, ?]
T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.T/fin [PRO.ha [D la(cl)]]] D{N}] T/prt]
			Transferring [[phi.T/fin [PRO.ha [D la(cl)]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [D la(cl)]]] D{N}].
					Extracted head "loro" from D and created [[phi.T/fin [PRO.ha [D la(cl)]]] [D loro]]
					=[[phi.T/fin [PRO.ha [D la(cl)]]] [D loro]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [D la(cl)]]] [D loro]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha [D la(cl)]]] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [phi.T/fin [PRO.ha [D la(cl)]]].
					Extraposition will be tried on [[phi.T/fin [PRO.ha [D la(cl)]]] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>]
				5. Agreement reconstruction:
					=[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>]
			=[[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] T/prt]

44.
		Consume "v"

		[[[T/fin [ha [D la(cl)]]] <D loro>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] T/prt{v}]

45.
		Consume "lava"

		[[[T/fin [ha [D la(cl)]]] <D loro>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] T/prt{v,V}]

46.
	>>>	Trying candidate parse [[[T/fin [ha [D la(cl)]]] <D loro>] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] [T/prt [PRO.v PRO.lava]]]
					=[[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha D la(cl) D loro " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[TT/fin [V [D N]]] [D N]]]
				T/prt has unaccetable specifier [[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>].
					Extraposition will be tried on [[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] [T/prt [PRO.v PRO.lava]]].
					=[[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>] [T/prt [PRO.v PRO.lava]]]
			= [[[T/fin [ha [D la(cl)]]] <D loro>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[phi.T/fin [PRO.ha [D la(cl)]]] <D loro>].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
D: [D]
loro: [N, D]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 115
['mi#devono', 'loro', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#devono.
		Next word contains multiple morphemes ['devono_', 'mi']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=PRO.deva

4.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[PRO.deva D]

12.
		Consume "mi(cl)"

		[deva D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.deva D{N}]

13.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D mi(cl)>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[PRO.deva [[D mi(cl)] D]]

18.
		Consume "loro"

		[deva [[D mi(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.deva [[D mi(cl)] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D mi(cl)] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva [[D mi(cl)] <D loro>]] PRO.are] due to bad left branch.
			Ranking remaining sites...
				Avoid [[[D mi(cl)] D{N}], PRO.are] because the operation breaks up an existing selectional dependency.
				[[D mi(cl)] D{N}] + are = -98]
				D{N} + are = 2]
		Ranking completed:
			1. [D{N}; are]
			2. [[[D mi(cl)] D{N}]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.deva [[D mi(cl)] [[D loro] PRO.are]]]

20.
		Consume "v"

		[deva [[D mi(cl)] [[D loro] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[D mi(cl)] [[D loro] PRO.are{v}]]]

21.
		Consume "lava"

		[deva [[D mi(cl)] [[D loro] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[D mi(cl)] [[D loro] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D mi(cl)] [[D loro] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[D mi(cl)] [[D loro] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[D mi(cl)] [[D loro] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[D mi(cl)] [[D loro] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[D mi(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
					=[PRO.deva [[D mi(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.deva [[D mi(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[D mi(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[D mi(cl)] [? [[D loro] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.deva [[D mi(cl)]:185 [? [[D loro]:184 [PRO.are [(DP):184 [PRO.v [PRO.lava (DP):185]]]]]]]]
					Remaining items in memory buffer: []
					PRO.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [PRO.deva [[D mi(cl)]:185 [? [[D loro]:184 [PRO.are [(DP):184 [PRO.v [PRO.lava (DP):185]]]]]]]].
					=[PRO.deva [[D mi(cl)]:185 [? [[D loro]:184 [PRO.are [(DP):184 [PRO.v [PRO.lava (DP):185]]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:185.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[D mi(cl)]:185 [? [[D loro]:184 [phi.are [(DP):184 [PRO.v [PRO.lava (DP):185]]]]]]]]
			= [deva [[D mi(cl)] [? [[D loro] [are [[D loro] [v [lava [D mi(cl)]]]]]]]]]
		Checking LF-interface conditions.
					phi.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

phi.deva: [TT/fin]
D: [D, TT/fin]
mi(cl): [N, D, TT/fin]
?: [?, TT/fin]
D: [D, ?, TT/fin]
loro: [N, D, ?, TT/fin]
phi.are: [INF, ?, TT/fin]
(D): [D, INF, ?, TT/fin]
(N): [N, D, INF, ?, TT/fin]
PRO.v: [v, INF, ?, TT/fin]
PRO.lava: [V, v, INF, ?, TT/fin]
(D): [D, V, v, INF, ?, TT/fin]
(N): [N, D, V, v, INF, ?, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mi(cl)] D{N}] are]
			Transferring [[D mi(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] D{N}].
					Extracted head "loro" from D and created [[D mi(cl)] [D loro]]
					=[[D mi(cl)] [D loro]]
				2. Feature processing:
					=[[D mi(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D mi(cl)].
					Extraposition will be tried on [[D mi(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D mi(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D mi(cl)] <D loro>]
			=[PRO.deva [[[D mi(cl)] <D loro>] PRO.are]]

23.
		Consume "v"

		[deva [[[D mi(cl)] <D loro>] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[[D mi(cl)] <D loro>] PRO.are{v}]]

24.
		Consume "lava"

		[deva [[[D mi(cl)] <D loro>] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[[D mi(cl)] <D loro>] PRO.are{v,V}]]

25.
	>>>	Trying candidate parse [deva [[[D mi(cl)] <D loro>] are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[[D mi(cl)] <D loro>] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[[D mi(cl)] <D loro>] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[[D mi(cl)] <D loro>] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[[D mi(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
					=[PRO.deva [[[D mi(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.deva [[[D mi(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[[D mi(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) D loro " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [D N]]]
					Dropping [[D N] [D N]](=D mi(cl) D loro ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.deva [[[D mi(cl)] <D loro>]:186 [PRO.are [PRO.v [PRO.lava (DP):186]]]]]
					Remaining items in memory buffer: []
					=[PRO.deva [[[D mi(cl)] <D loro>]:186 [PRO.are [PRO.v [PRO.lava (DP):186]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:M by phi-Agree from [D mi(cl)].
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:1 from the edge of phi.are.
					=[phi.deva [[[D mi(cl)] <D loro>]:186 [phi.are [PRO.v [PRO.lava (DP):186]]]]]
			= [deva [[[D mi(cl)] <D loro>] [are [v [lava [[D mi(cl)] <D loro>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.deva [[[D mi(cl)] <D loro>]:186 [phi.are [PRO.v [PRO.lava (DP):186]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. are    (alternatives: 2. [[D mi(cl)] <D loro>] 3. deva )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] <D loro>]    (alternatives: 2. are 3. [[D mi(cl)] <D loro>] 4. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([[D mi(cl)] <D loro>])', 'PRO.v(are)']
!--->		Tests passed (with 25/279 operations) <------------------------------------
		Solution:
		[deva [[[D mi(cl)] <D loro>] [are [v [lava [[D mi(cl)] <D loro>]]]]]]
		Grammar: [phi.deva [[[D mi(cl)] <D loro>]:1 [phi.are [PRO.v [PRO.lava (DP):1]]]]]
		Spellout TT/finP = [TT/fin [DP:1 [INF [v [V __:1]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

phi.deva: [TT/fin]
D: [D, TT/fin]
mi(cl): [N, D, TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
phi.are: [INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 116
['devono', 'loro', 'lavare#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=PRO.deva

3.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[PRO.deva D]

8.
		Consume "loro"

		[deva D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.deva D{N}]

9.
		Decomposing a polymorphemic word lavare#mi.
		Next word contains multiple morphemes ['mi_', 'lavare']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D loro>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.deva [[D loro] D]]

18.
		Consume "mi(cl)"

		[deva [[D loro] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.deva [[D loro] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D loro] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva [[D loro] <D mi(cl)>]] PRO.are] due to bad left branch.
			Ranking remaining sites...
				Avoid [[[D loro] D{N}], PRO.are] because the operation breaks up an existing selectional dependency.
				[[D loro] D{N}] + are = -98]
				D{N} + are = 2]
		Ranking completed:
			1. [D{N}; are]
			2. [[[D loro] D{N}]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[PRO.deva [[D loro] [[D mi(cl)] PRO.are]]]

20.
		Consume "v"

		[deva [[D loro] [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[D loro] [[D mi(cl)] PRO.are{v}]]]

21.
		Consume "lava"

		[deva [[D loro] [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[D loro] [[D mi(cl)] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D loro] [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[D loro] [[D mi(cl)] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[D loro] [[D mi(cl)] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[D loro] [[D mi(cl)] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[D loro] [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
					=[PRO.deva [[D loro] [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.deva [[D loro] [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[D loro] [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.are".
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[D loro] [? [[D mi(cl)] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.deva [[D loro]:187 [? [[D mi(cl)]:188 [PRO.are [(DP):187 [PRO.v [PRO.lava (DP):188]]]]]]]]
					Remaining items in memory buffer: []
					PRO.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [PRO.deva [[D loro]:187 [? [[D mi(cl)]:188 [PRO.are [(DP):187 [PRO.v [PRO.lava (DP):188]]]]]]]].
					=[PRO.deva [[D loro]:187 [? [[D mi(cl)]:188 [PRO.are [(DP):187 [PRO.v [PRO.lava (DP):188]]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N by phi-Agree from [D loro]:187.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:1 from the edge of phi.are.
					=[phi.deva [[D loro]:187 [? [[D mi(cl)]:188 [phi.are [(DP):187 [PRO.v [PRO.lava (DP):188]]]]]]]]
			= [deva [[D loro] [? [[D mi(cl)] [are [[D loro] [v [lava [D mi(cl)]]]]]]]]]
		Checking LF-interface conditions.
					phi.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

phi.deva: [TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
?: [?, TT/fin]
D: [D, ?, TT/fin]
mi(cl): [N, D, ?, TT/fin]
phi.are: [INF, ?, TT/fin]
(D): [D, INF, ?, TT/fin]
(N): [N, D, INF, ?, TT/fin]
PRO.v: [v, INF, ?, TT/fin]
PRO.lava: [V, v, INF, ?, TT/fin]
(D): [D, V, v, INF, ?, TT/fin]
(N): [N, D, V, v, INF, ?, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] D{N}] are]
			Transferring [[D loro] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] D{N}].
					Extracted head "mi(cl)" from D and created [[D loro] [D mi(cl)]]
					=[[D loro] [D mi(cl)]]
				2. Feature processing:
					=[[D loro] [D mi(cl)]]
				3. Floater movement reconstruction:
					=[[D loro] [D mi(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D loro].
					Extraposition will be tried on [[D loro] [D mi(cl)]].
						<D mi(cl)> was made an adjunct.
					<D mi(cl)> was made adjunct by an extraposition rule.
					=[[D loro] <D mi(cl)>]
				5. Agreement reconstruction:
					=[[D loro] <D mi(cl)>]
			=[PRO.deva [[[D loro] <D mi(cl)>] PRO.are]]

23.
		Consume "v"

		[deva [[[D loro] <D mi(cl)>] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[[D loro] <D mi(cl)>] PRO.are{v}]]

24.
		Consume "lava"

		[deva [[[D loro] <D mi(cl)>] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[[D loro] <D mi(cl)>] PRO.are{v,V}]]

25.
	>>>	Trying candidate parse [deva [[[D loro] <D mi(cl)>] are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[[D loro] <D mi(cl)>] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[[D loro] <D mi(cl)>] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[[D loro] <D mi(cl)>] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[[D loro] <D mi(cl)>] [PRO.are [PRO.v PRO.lava]]]]
					=[PRO.deva [[[D loro] <D mi(cl)>] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.deva [[[D loro] <D mi(cl)>] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[[D loro] <D mi(cl)>] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro D mi(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent [[D loro] <D mi(cl)>] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[[D loro] <D mi(cl)>] [PRO.are [[[D loro] <D mi(cl)>] [PRO.v PRO.lava]]]]]
				h(D) failed internal tail test.
					Extraposition will be tried on [PRO.deva [[[D loro] <D mi(cl)>]:189 [PRO.are [(DP):189 [PRO.v PRO.lava]]]]].
					=[PRO.deva [[[D loro] <D mi(cl)>]:189 [PRO.are [(DP):189 [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N by phi-Agree from [D loro].
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[[D loro] <D mi(cl)>]:189 [phi.are [(DP):189 [PRO.v PRO.lava]]]]]
			= [deva [[[D loro] <D mi(cl)>] [are [[[D loro] <D mi(cl)>] [v lava]]]]]
		Checking LF-interface conditions.
				h(D) failed internal tail test.
			LF-interface condition(s) violated
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.deva: [TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
D: [D, TT/fin]
mi(cl): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 117
['devono', 'loro', 'mi#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=PRO.deva

3.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[PRO.deva D]

8.
		Consume "loro"

		[deva D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.deva D{N}]

9.
		Decomposing a polymorphemic word mi#lavare.
		Next word contains multiple morphemes ['lavare_', 'mi']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[deva D{N}] + are
			Filtering out impossible merge sites...
				Reject [[deva <D loro>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.deva [[D loro] PRO.are]]

11.
		Consume "v"

		[deva [[D loro] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[D loro] PRO.are{v}]]

12.
		Consume "lava"

		[deva [[D loro] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[D loro] PRO.are{v,V}]]

13.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva [[D loro] are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [[[D loro] PRO.are{v,V}], D] because the operation breaks up an existing selectional dependency.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[PRO.deva [[D loro] PRO.are{v,V}]] + D = -98]
				[[D loro] PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = 59]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[[D loro] PRO.are{v,V}]; D]
			3. [[PRO.deva [[D loro] PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[PRO.deva [[D loro] [PRO.are{v,V} D]]]

21.
		Consume "mi(cl)"

		[deva [[D loro] [are{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.deva [[D loro] [PRO.are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [deva [[D loro] [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.are{v,V}] D]
			Transferring [[D loro] PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.are [PRO.v PRO.lava]]]
					=[[D loro] [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[D loro] [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.are [[D loro] [PRO.v PRO.lava]]]]
					=[[D loro]:194 [PRO.are [(DP):194 [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:194 [phi.are [(DP):194 [PRO.v PRO.lava]]]]
			=[PRO.deva [[[D loro]:194 [phi.are [(DP):194 [PRO.v PRO.lava]]]] D]]

23.
		Consume "mi(cl)"

		[deva [[[D loro] [are [[D loro] [v lava]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.deva [[[D loro]:194 [phi.are [(DP):194 [PRO.v PRO.lava]]]] D{N}]]

24.
	>>>	Trying candidate parse [deva [[[D loro] [are [[D loro] [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.deva [[D loro] PRO.are{v,V}]] D]
			Transferring [PRO.deva [[D loro] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[D loro] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[D loro] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
					=[PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[D loro] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]
					=[PRO.deva [[D loro]:195 [PRO.are [(DP):195 [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N by phi-Agree from [D loro]:195.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[D loro]:195 [phi.are [(DP):195 [PRO.v PRO.lava]]]]]
			=[[phi.deva [[D loro]:195 [phi.are [(DP):195 [PRO.v PRO.lava]]]]] D]

25.
		Consume "mi(cl)"

		[[deva [[D loro] [are [[D loro] [v lava]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[phi.deva [[D loro]:195 [phi.are [(DP):195 [PRO.v PRO.lava]]]]] D{N}]

26.
	>>>	Trying candidate parse [[deva [[D loro] [are [[D loro] [v lava]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 118
['la#devono', 'loro', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#devono.
		Next word contains multiple morphemes ['devono_', 'la']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=PRO.deva

4.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[PRO.deva D]

12.
		Consume "la(cl)"

		[deva D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.deva D{N}]

13.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D la(cl)>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[PRO.deva [[D la(cl)] D]]

18.
		Consume "loro"

		[deva [[D la(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.deva [[D la(cl)] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D la(cl)] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva [[D la(cl)] <D loro>]] PRO.are] due to bad left branch.
			Ranking remaining sites...
				Avoid [[[D la(cl)] D{N}], PRO.are] because the operation breaks up an existing selectional dependency.
				[[D la(cl)] D{N}] + are = -98]
				D{N} + are = 2]
		Ranking completed:
			1. [D{N}; are]
			2. [[[D la(cl)] D{N}]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.deva [[D la(cl)] [[D loro] PRO.are]]]

20.
		Consume "v"

		[deva [[D la(cl)] [[D loro] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[D la(cl)] [[D loro] PRO.are{v}]]]

21.
		Consume "lava"

		[deva [[D la(cl)] [[D loro] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[D la(cl)] [[D loro] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D la(cl)] [[D loro] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[D la(cl)] [[D loro] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[D la(cl)] [[D loro] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[D la(cl)] [[D loro] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[D la(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
					=[PRO.deva [[D la(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.deva [[D la(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[D la(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					Moving "D la(cl) " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[D la(cl)] [? [[D loro] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.deva [[D la(cl)]:197 [? [[D loro]:196 [PRO.are [(DP):196 [PRO.v [PRO.lava (DP):197]]]]]]]]
					Remaining items in memory buffer: []
					PRO.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [PRO.deva [[D la(cl)]:197 [? [[D loro]:196 [PRO.are [(DP):196 [PRO.v [PRO.lava (DP):197]]]]]]]].
					=[PRO.deva [[D la(cl)]:197 [? [[D loro]:196 [PRO.are [(DP):196 [PRO.v [PRO.lava (DP):197]]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:F by phi-Agree from [D la(cl)]:197.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[D la(cl)]:197 [? [[D loro]:196 [phi.are [(DP):196 [PRO.v [PRO.lava (DP):197]]]]]]]]
			= [deva [[D la(cl)] [? [[D loro] [are [[D loro] [v [lava [D la(cl)]]]]]]]]]
		Checking LF-interface conditions.
					phi.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

phi.deva: [TT/fin]
D: [D, TT/fin]
la(cl): [N, D, TT/fin]
?: [?, TT/fin]
D: [D, ?, TT/fin]
loro: [N, D, ?, TT/fin]
phi.are: [INF, ?, TT/fin]
(D): [D, INF, ?, TT/fin]
(N): [N, D, INF, ?, TT/fin]
PRO.v: [v, INF, ?, TT/fin]
PRO.lava: [V, v, INF, ?, TT/fin]
(D): [D, V, v, INF, ?, TT/fin]
(N): [N, D, V, v, INF, ?, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D la(cl)] D{N}] are]
			Transferring [[D la(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D la(cl)] D{N}].
					Extracted head "loro" from D and created [[D la(cl)] [D loro]]
					=[[D la(cl)] [D loro]]
				2. Feature processing:
					=[[D la(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D la(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D la(cl)].
					Extraposition will be tried on [[D la(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D la(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D la(cl)] <D loro>]
			=[PRO.deva [[[D la(cl)] <D loro>] PRO.are]]

23.
		Consume "v"

		[deva [[[D la(cl)] <D loro>] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[[D la(cl)] <D loro>] PRO.are{v}]]

24.
		Consume "lava"

		[deva [[[D la(cl)] <D loro>] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[[D la(cl)] <D loro>] PRO.are{v,V}]]

25.
	>>>	Trying candidate parse [deva [[[D la(cl)] <D loro>] are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[[D la(cl)] <D loro>] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[[D la(cl)] <D loro>] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[[D la(cl)] <D loro>] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[[D la(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
					=[PRO.deva [[[D la(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.deva [[[D la(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[[D la(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) D loro " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [D N]]]
					Dropping [[D N] [D N]](=D la(cl) D loro ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.deva [[[D la(cl)] <D loro>]:198 [PRO.are [PRO.v [PRO.lava (DP):198]]]]]
					Remaining items in memory buffer: []
					=[PRO.deva [[[D la(cl)] <D loro>]:198 [PRO.are [PRO.v [PRO.lava (DP):198]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:F by phi-Agree from [D la(cl)].
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:F from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[[D la(cl)] <D loro>]:198 [phi.are [PRO.v [PRO.lava (DP):198]]]]]
			= [deva [[[D la(cl)] <D loro>] [are [v [lava [[D la(cl)] <D loro>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.deva [[[D la(cl)] <D loro>]:198 [phi.are [PRO.v [PRO.lava (DP):198]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. are    (alternatives: 2. [[D la(cl)] <D loro>] 3. deva )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] <D loro>]    (alternatives: 2. are 3. [[D la(cl)] <D loro>] 4. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([[D la(cl)] <D loro>])', 'PRO.v(are)']
!--->		Tests passed (with 25/279 operations) <------------------------------------
		Solution:
		[deva [[[D la(cl)] <D loro>] [are [v [lava [[D la(cl)] <D loro>]]]]]]
		Grammar: [phi.deva [[[D la(cl)] <D loro>]:1 [phi.are [PRO.v [PRO.lava (DP):1]]]]]
		Spellout TT/finP = [TT/fin [DP:1 [INF [v [V __:1]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

phi.deva: [TT/fin]
D: [D, TT/fin]
la(cl): [N, D, TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
phi.are: [INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 119
['devono', 'loro', 'lavare#la']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=PRO.deva

3.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[PRO.deva D]

8.
		Consume "loro"

		[deva D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.deva D{N}]

9.
		Decomposing a polymorphemic word lavare#la.
		Next word contains multiple morphemes ['la_', 'lavare']
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D loro>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.deva [[D loro] D]]

18.
		Consume "la(cl)"

		[deva [[D loro] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.deva [[D loro] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D loro] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva [[D loro] <D la(cl)>]] PRO.are] due to bad left branch.
			Ranking remaining sites...
				Avoid [[[D loro] D{N}], PRO.are] because the operation breaks up an existing selectional dependency.
				[[D loro] D{N}] + are = -98]
				D{N} + are = 2]
		Ranking completed:
			1. [D{N}; are]
			2. [[[D loro] D{N}]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[PRO.deva [[D loro] [[D la(cl)] PRO.are]]]

20.
		Consume "v"

		[deva [[D loro] [[D la(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[D loro] [[D la(cl)] PRO.are{v}]]]

21.
		Consume "lava"

		[deva [[D loro] [[D la(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[D loro] [[D la(cl)] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D loro] [[D la(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[D loro] [[D la(cl)] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[D loro] [[D la(cl)] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[D loro] [[D la(cl)] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[D loro] [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
					=[PRO.deva [[D loro] [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.deva [[D loro] [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[D loro] [[D la(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "PRO.are".
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[D loro] [? [[D la(cl)] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.deva [[D loro]:199 [? [[D la(cl)]:200 [PRO.are [(DP):199 [PRO.v [PRO.lava (DP):200]]]]]]]]
					Remaining items in memory buffer: []
					PRO.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [PRO.deva [[D loro]:199 [? [[D la(cl)]:200 [PRO.are [(DP):199 [PRO.v [PRO.lava (DP):200]]]]]]]].
					=[PRO.deva [[D loro]:199 [? [[D la(cl)]:200 [PRO.are [(DP):199 [PRO.v [PRO.lava (DP):200]]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N by phi-Agree from [D loro]:199.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:F from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[D loro]:199 [? [[D la(cl)]:200 [phi.are [(DP):199 [PRO.v [PRO.lava (DP):200]]]]]]]]
			= [deva [[D loro] [? [[D la(cl)] [are [[D loro] [v [lava [D la(cl)]]]]]]]]]
		Checking LF-interface conditions.
					phi.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

phi.deva: [TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
?: [?, TT/fin]
D: [D, ?, TT/fin]
la(cl): [N, D, ?, TT/fin]
phi.are: [INF, ?, TT/fin]
(D): [D, INF, ?, TT/fin]
(N): [N, D, INF, ?, TT/fin]
PRO.v: [v, INF, ?, TT/fin]
PRO.lava: [V, v, INF, ?, TT/fin]
(D): [D, V, v, INF, ?, TT/fin]
(N): [N, D, V, v, INF, ?, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] D{N}] are]
			Transferring [[D loro] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] D{N}].
					Extracted head "la(cl)" from D and created [[D loro] [D la(cl)]]
					=[[D loro] [D la(cl)]]
				2. Feature processing:
					=[[D loro] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[D loro] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D loro].
					Extraposition will be tried on [[D loro] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[D loro] <D la(cl)>]
				5. Agreement reconstruction:
					=[[D loro] <D la(cl)>]
			=[PRO.deva [[[D loro] <D la(cl)>] PRO.are]]

23.
		Consume "v"

		[deva [[[D loro] <D la(cl)>] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[[D loro] <D la(cl)>] PRO.are{v}]]

24.
		Consume "lava"

		[deva [[[D loro] <D la(cl)>] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[[D loro] <D la(cl)>] PRO.are{v,V}]]

25.
	>>>	Trying candidate parse [deva [[[D loro] <D la(cl)>] are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[[D loro] <D la(cl)>] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[[D loro] <D la(cl)>] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[[D loro] <D la(cl)>] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[[D loro] <D la(cl)>] [PRO.are [PRO.v PRO.lava]]]]
					=[PRO.deva [[[D loro] <D la(cl)>] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.deva [[[D loro] <D la(cl)>] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[[D loro] <D la(cl)>] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro D la(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent [[D loro] <D la(cl)>] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[[D loro] <D la(cl)>] [PRO.are [[[D loro] <D la(cl)>] [PRO.v PRO.lava]]]]]
				h(D) failed internal tail test.
					Extraposition will be tried on [PRO.deva [[[D loro] <D la(cl)>]:201 [PRO.are [(DP):201 [PRO.v PRO.lava]]]]].
					=[PRO.deva [[[D loro] <D la(cl)>]:201 [PRO.are [(DP):201 [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N by phi-Agree from [D loro].
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[[D loro] <D la(cl)>]:201 [phi.are [(DP):201 [PRO.v PRO.lava]]]]]
			= [deva [[[D loro] <D la(cl)>] [are [[[D loro] <D la(cl)>] [v lava]]]]]
		Checking LF-interface conditions.
				h(D) failed internal tail test.
			LF-interface condition(s) violated
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.deva: [TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
D: [D, TT/fin]
la(cl): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare#la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 120
['devono', 'loro', 'la#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=PRO.deva

3.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[PRO.deva D]

8.
		Consume "loro"

		[deva D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.deva D{N}]

9.
		Decomposing a polymorphemic word la#lavare.
		Next word contains multiple morphemes ['lavare_', 'la']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[deva D{N}] + are
			Filtering out impossible merge sites...
				Reject [[deva <D loro>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.deva [[D loro] PRO.are]]

11.
		Consume "v"

		[deva [[D loro] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[D loro] PRO.are{v}]]

12.
		Consume "lava"

		[deva [[D loro] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[D loro] PRO.are{v,V}]]

13.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva [[D loro] are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [[[D loro] PRO.are{v,V}], D] because the operation breaks up an existing selectional dependency.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[PRO.deva [[D loro] PRO.are{v,V}]] + D = -98]
				[[D loro] PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = 59]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[[D loro] PRO.are{v,V}]; D]
			3. [[PRO.deva [[D loro] PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[PRO.deva [[D loro] [PRO.are{v,V} D]]]

21.
		Consume "la(cl)"

		[deva [[D loro] [are{v,V} D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.deva [[D loro] [PRO.are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [deva [[D loro] [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.are{v,V}] D]
			Transferring [[D loro] PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.are [PRO.v PRO.lava]]]
					=[[D loro] [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[D loro] [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.are [[D loro] [PRO.v PRO.lava]]]]
					=[[D loro]:206 [PRO.are [(DP):206 [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:206 [phi.are [(DP):206 [PRO.v PRO.lava]]]]
			=[PRO.deva [[[D loro]:206 [phi.are [(DP):206 [PRO.v PRO.lava]]]] D]]

23.
		Consume "la(cl)"

		[deva [[[D loro] [are [[D loro] [v lava]]]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.deva [[[D loro]:206 [phi.are [(DP):206 [PRO.v PRO.lava]]]] D{N}]]

24.
	>>>	Trying candidate parse [deva [[[D loro] [are [[D loro] [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.deva [[D loro] PRO.are{v,V}]] D]
			Transferring [PRO.deva [[D loro] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[D loro] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[D loro] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
					=[PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[D loro] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]
					=[PRO.deva [[D loro]:207 [PRO.are [(DP):207 [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N by phi-Agree from [D loro]:207.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[D loro]:207 [phi.are [(DP):207 [PRO.v PRO.lava]]]]]
			=[[phi.deva [[D loro]:207 [phi.are [(DP):207 [PRO.v PRO.lava]]]]] D]

25.
		Consume "la(cl)"

		[[deva [[D loro] [are [[D loro] [v lava]]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[phi.deva [[D loro]:207 [phi.are [(DP):207 [PRO.v PRO.lava]]]]] D{N}]

26.
	>>>	Trying candidate parse [[deva [[D loro] [are [[D loro] [v lava]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 121
['lo#devono', 'loro', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word lo#devono.
		Next word contains multiple morphemes ['devono_', 'lo']
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'deva']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=PRO.deva

4.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[PRO.deva D]

12.
		Consume "lo(cl)"

		[deva D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[PRO.deva D{N}]

13.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D lo(cl)>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[PRO.deva [[D lo(cl)] D]]

18.
		Consume "loro"

		[deva [[D lo(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.deva [[D lo(cl)] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D lo(cl)] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva [[D lo(cl)] <D loro>]] PRO.are] due to bad left branch.
			Ranking remaining sites...
				Avoid [[[D lo(cl)] D{N}], PRO.are] because the operation breaks up an existing selectional dependency.
				[[D lo(cl)] D{N}] + are = -98]
				D{N} + are = 2]
		Ranking completed:
			1. [D{N}; are]
			2. [[[D lo(cl)] D{N}]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.deva [[D lo(cl)] [[D loro] PRO.are]]]

20.
		Consume "v"

		[deva [[D lo(cl)] [[D loro] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[D lo(cl)] [[D loro] PRO.are{v}]]]

21.
		Consume "lava"

		[deva [[D lo(cl)] [[D loro] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[D lo(cl)] [[D loro] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D lo(cl)] [[D loro] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[D lo(cl)] [[D loro] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[D lo(cl)] [[D loro] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[D lo(cl)] [[D loro] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[D lo(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
					=[PRO.deva [[D lo(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.deva [[D lo(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[D lo(cl)] [[D loro] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					Moving "D lo(cl) " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[D lo(cl)] [? [[D loro] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.deva [[D lo(cl)]:209 [? [[D loro]:208 [PRO.are [(DP):208 [PRO.v [PRO.lava (DP):209]]]]]]]]
					Remaining items in memory buffer: []
					PRO.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [PRO.deva [[D lo(cl)]:209 [? [[D loro]:208 [PRO.are [(DP):208 [PRO.v [PRO.lava (DP):209]]]]]]]].
					=[PRO.deva [[D lo(cl)]:209 [? [[D loro]:208 [PRO.are [(DP):208 [PRO.v [PRO.lava (DP):209]]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:M by phi-Agree from [D lo(cl)]:209.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[D lo(cl)]:209 [? [[D loro]:208 [phi.are [(DP):208 [PRO.v [PRO.lava (DP):209]]]]]]]]
			= [deva [[D lo(cl)] [? [[D loro] [are [[D loro] [v [lava [D lo(cl)]]]]]]]]]
		Checking LF-interface conditions.
					phi.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

phi.deva: [TT/fin]
D: [D, TT/fin]
lo(cl): [N, D, TT/fin]
?: [?, TT/fin]
D: [D, ?, TT/fin]
loro: [N, D, ?, TT/fin]
phi.are: [INF, ?, TT/fin]
(D): [D, INF, ?, TT/fin]
(N): [N, D, INF, ?, TT/fin]
PRO.v: [v, INF, ?, TT/fin]
PRO.lava: [V, v, INF, ?, TT/fin]
(D): [D, V, v, INF, ?, TT/fin]
(N): [N, D, V, v, INF, ?, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D lo(cl)] D{N}] are]
			Transferring [[D lo(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D lo(cl)] D{N}].
					Extracted head "loro" from D and created [[D lo(cl)] [D loro]]
					=[[D lo(cl)] [D loro]]
				2. Feature processing:
					=[[D lo(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D lo(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D lo(cl)].
					Extraposition will be tried on [[D lo(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D lo(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D lo(cl)] <D loro>]
			=[PRO.deva [[[D lo(cl)] <D loro>] PRO.are]]

23.
		Consume "v"

		[deva [[[D lo(cl)] <D loro>] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[[D lo(cl)] <D loro>] PRO.are{v}]]

24.
		Consume "lava"

		[deva [[[D lo(cl)] <D loro>] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[[D lo(cl)] <D loro>] PRO.are{v,V}]]

25.
	>>>	Trying candidate parse [deva [[[D lo(cl)] <D loro>] are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[[D lo(cl)] <D loro>] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[[D lo(cl)] <D loro>] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[[D lo(cl)] <D loro>] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[[D lo(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
					=[PRO.deva [[[D lo(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.deva [[[D lo(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[[D lo(cl)] <D loro>] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) D loro " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [D N]]]
					Dropping [[D N] [D N]](=D lo(cl) D loro ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.deva [[[D lo(cl)] <D loro>]:210 [PRO.are [PRO.v [PRO.lava (DP):210]]]]]
					Remaining items in memory buffer: []
					=[PRO.deva [[[D lo(cl)] <D loro>]:210 [PRO.are [PRO.v [PRO.lava (DP):210]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[[D lo(cl)] <D loro>]:210 [phi.are [PRO.v [PRO.lava (DP):210]]]]]
			= [deva [[[D lo(cl)] <D loro>] [are [v [lava [[D lo(cl)] <D loro>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.deva [[[D lo(cl)] <D loro>]:210 [phi.are [PRO.v [PRO.lava (DP):210]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. are    (alternatives: 2. [[D lo(cl)] <D loro>] 3. deva )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D lo(cl)] <D loro>]    (alternatives: 2. are 3. [[D lo(cl)] <D loro>] 4. deva )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lava([[D lo(cl)] <D loro>])', 'PRO.v(are)']
!--->		Tests passed (with 25/279 operations) <------------------------------------
		Solution:
		[deva [[[D lo(cl)] <D loro>] [are [v [lava [[D lo(cl)] <D loro>]]]]]]
		Grammar: [phi.deva [[[D lo(cl)] <D loro>]:1 [phi.are [PRO.v [PRO.lava (DP):1]]]]]
		Spellout TT/finP = [TT/fin [DP:1 [INF [v [V __:1]]]]]
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

phi.deva: [TT/fin]
D: [D, TT/fin]
lo(cl): [N, D, TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
phi.are: [INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]
(D): [D, V, v, INF, TT/fin]
(N): [N, D, V, v, INF, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 122
['devono', 'loro', 'lavare#lo']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=PRO.deva

3.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[PRO.deva D]

8.
		Consume "loro"

		[deva D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.deva D{N}]

9.
		Decomposing a polymorphemic word lavare#lo.
		Next word contains multiple morphemes ['lo_', 'lavare']
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva D{N}] + D
			Filtering out impossible merge sites...
				Reject [[deva <D loro>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.deva [[D loro] D]]

18.
		Consume "lo(cl)"

		[deva [[D loro] D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[PRO.deva [[D loro] D{N}]]

19.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[deva [[D loro] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[deva [[D loro] <D lo(cl)>]] PRO.are] due to bad left branch.
			Ranking remaining sites...
				Avoid [[[D loro] D{N}], PRO.are] because the operation breaks up an existing selectional dependency.
				[[D loro] D{N}] + are = -98]
				D{N} + are = 2]
		Ranking completed:
			1. [D{N}; are]
			2. [[[D loro] D{N}]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [D lo(cl)]
					D was opened into [D lo(cl)].
					=[D lo(cl)]
				2. Feature processing:
					=[D lo(cl)]
				3. Floater movement reconstruction:
					=[D lo(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D lo(cl)]
				5. Agreement reconstruction:
					=[D lo(cl)]
			=[PRO.deva [[D loro] [[D lo(cl)] PRO.are]]]

20.
		Consume "v"

		[deva [[D loro] [[D lo(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[D loro] [[D lo(cl)] PRO.are{v}]]]

21.
		Consume "lava"

		[deva [[D loro] [[D lo(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[D loro] [[D lo(cl)] PRO.are{v,V}]]]

22.
	>>>	Trying candidate parse [deva [[D loro] [[D lo(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[D loro] [[D lo(cl)] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[D loro] [[D lo(cl)] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[D loro] [[D lo(cl)] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[D loro] [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
					=[PRO.deva [[D loro] [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.deva [[D loro] [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[D loro] [[D lo(cl)] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lo(cl) " into memory buffer from SPEC of "PRO.are".
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[D loro] [? [[D lo(cl)] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]]
					Dropping [D N](=D lo(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.deva [[D loro]:211 [? [[D lo(cl)]:212 [PRO.are [(DP):211 [PRO.v [PRO.lava (DP):212]]]]]]]]
					Remaining items in memory buffer: []
					PRO.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [PRO.deva [[D loro]:211 [? [[D lo(cl)]:212 [PRO.are [(DP):211 [PRO.v [PRO.lava (DP):212]]]]]]]].
					=[PRO.deva [[D loro]:211 [? [[D lo(cl)]:212 [PRO.are [(DP):211 [PRO.v [PRO.lava (DP):212]]]]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N by phi-Agree from [D loro]:211.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[D loro]:211 [? [[D lo(cl)]:212 [phi.are [(DP):211 [PRO.v [PRO.lava (DP):212]]]]]]]]
			= [deva [[D loro] [? [[D lo(cl)] [are [[D loro] [v [lava [D lo(cl)]]]]]]]]]
		Checking LF-interface conditions.
					phi.deva (deva) is missing a mandatory complement ARE/inf
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

phi.deva: [TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
?: [?, TT/fin]
D: [D, ?, TT/fin]
lo(cl): [N, D, ?, TT/fin]
phi.are: [INF, ?, TT/fin]
(D): [D, INF, ?, TT/fin]
(N): [N, D, INF, ?, TT/fin]
PRO.v: [v, INF, ?, TT/fin]
PRO.lava: [V, v, INF, ?, TT/fin]
(D): [D, V, v, INF, ?, TT/fin]
(N): [N, D, V, v, INF, ?, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] D{N}] are]
			Transferring [[D loro] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] D{N}].
					Extracted head "lo(cl)" from D and created [[D loro] [D lo(cl)]]
					=[[D loro] [D lo(cl)]]
				2. Feature processing:
					=[[D loro] [D lo(cl)]]
				3. Floater movement reconstruction:
					=[[D loro] [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D loro].
					Extraposition will be tried on [[D loro] [D lo(cl)]].
						<D lo(cl)> was made an adjunct.
					<D lo(cl)> was made adjunct by an extraposition rule.
					=[[D loro] <D lo(cl)>]
				5. Agreement reconstruction:
					=[[D loro] <D lo(cl)>]
			=[PRO.deva [[[D loro] <D lo(cl)>] PRO.are]]

23.
		Consume "v"

		[deva [[[D loro] <D lo(cl)>] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[[D loro] <D lo(cl)>] PRO.are{v}]]

24.
		Consume "lava"

		[deva [[[D loro] <D lo(cl)>] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[[D loro] <D lo(cl)>] PRO.are{v,V}]]

25.
	>>>	Trying candidate parse [deva [[[D loro] <D lo(cl)>] are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.deva [[[D loro] <D lo(cl)>] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[[D loro] <D lo(cl)>] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[[D loro] <D lo(cl)>] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[[D loro] <D lo(cl)>] [PRO.are [PRO.v PRO.lava]]]]
					=[PRO.deva [[[D loro] <D lo(cl)>] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.deva [[[D loro] <D lo(cl)>] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[[D loro] <D lo(cl)>] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro D lo(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent [[D loro] <D lo(cl)>] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[[D loro] <D lo(cl)>] [PRO.are [[[D loro] <D lo(cl)>] [PRO.v PRO.lava]]]]]
				h(D) failed internal tail test.
					Extraposition will be tried on [PRO.deva [[[D loro] <D lo(cl)>]:213 [PRO.are [(DP):213 [PRO.v PRO.lava]]]]].
					=[PRO.deva [[[D loro] <D lo(cl)>]:213 [PRO.are [(DP):213 [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N by phi-Agree from [D loro].
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[[D loro] <D lo(cl)>]:213 [phi.are [(DP):213 [PRO.v PRO.lava]]]]]
			= [deva [[[D loro] <D lo(cl)>] [are [[[D loro] <D lo(cl)>] [v lava]]]]]
		Checking LF-interface conditions.
				h(D) failed internal tail test.
			LF-interface condition(s) violated
deva:['!COMP:*', '!COMP:ARE/inf', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARE', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LANG:IT', 'LF:must', 'PF:deva', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.deva: [TT/fin]
D: [D, TT/fin]
loro: [N, D, TT/fin]
D: [D, TT/fin]
lo(cl): [N, D, TT/fin]
phi.are: [INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
(D): [D, INF, TT/fin]
(N): [N, D, INF, TT/fin]
PRO.v: [v, INF, TT/fin]
PRO.lava: [V, v, INF, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare#lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 123
['devono', 'loro', 'lo#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word deva#[-no].
		Next word contains multiple morphemes ['[-no]$', 'deva']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "deva"

		Adding inflectional features to deva
			=PRO.deva

3.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		deva + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.deva D]
			Transferring PRO.deva to LF.
				1. Head movement reconstruction:
					=PRO.deva
				2. Feature processing:
					=PRO.deva
				3. Floater movement reconstruction:
					=PRO.deva
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.deva probing for CAT:V failed.
				A phi-marked head "PRO.deva" lacks complement
				PRO.deva (deva) is missing complement ARE/inf
					Extraposition will be tried on PRO.deva.
					=PRO.deva
				5. Agreement reconstruction:
					=PRO.deva
			=[PRO.deva D]

8.
		Consume "loro"

		[deva D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[PRO.deva D{N}]

9.
		Decomposing a polymorphemic word lo#lavare.
		Next word contains multiple morphemes ['lavare_', 'lo']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[deva D{N}] + are
			Filtering out impossible merge sites...
				Reject [[deva <D loro>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[PRO.deva [[D loro] PRO.are]]

11.
		Consume "v"

		[deva [[D loro] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.deva [[D loro] PRO.are{v}]]

12.
		Consume "lava"

		[deva [[D loro] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.deva [[D loro] PRO.are{v,V}]]

13.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[deva [[D loro] are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [[[D loro] PRO.are{v,V}], D] because the operation breaks up an existing selectional dependency.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				[PRO.deva [[D loro] PRO.are{v,V}]] + D = -98]
				[[D loro] PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = 59]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[[D loro] PRO.are{v,V}]; D]
			3. [[PRO.deva [[D loro] PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[PRO.deva [[D loro] [PRO.are{v,V} D]]]

21.
		Consume "lo(cl)"

		[deva [[D loro] [are{v,V} D]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[PRO.deva [[D loro] [PRO.are{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [deva [[D loro] [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.are{v,V}] D]
			Transferring [[D loro] PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.are [PRO.v PRO.lava]]]
					=[[D loro] [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[D loro] [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.are [[D loro] [PRO.v PRO.lava]]]]
					=[[D loro]:218 [PRO.are [(DP):218 [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[[D loro]:218 [phi.are [(DP):218 [PRO.v PRO.lava]]]]
			=[PRO.deva [[[D loro]:218 [phi.are [(DP):218 [PRO.v PRO.lava]]]] D]]

23.
		Consume "lo(cl)"

		[deva [[[D loro] [are [[D loro] [v lava]]]] D]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[PRO.deva [[[D loro]:218 [phi.are [(DP):218 [PRO.v PRO.lava]]]] D{N}]]

24.
	>>>	Trying candidate parse [deva [[[D loro] [are [[D loro] [v lava]]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.deva [[D loro] PRO.are{v,V}]] D]
			Transferring [PRO.deva [[D loro] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.deva [[D loro] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.deva [[D loro] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
					=[PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.deva [[D loro] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [PRO.deva [[D loro] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]
					=[PRO.deva [[D loro]:219 [PRO.are [(DP):219 [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.deva has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.deva acquired PHI:DET:DEF from the edge of phi.deva.
					phi.deva acquired PHI:NUM:PL from the edge of phi.deva.
					phi.deva acquired PHI:PER:3 from the edge of phi.deva.
					phi.deva acquired PHI:GEN:N by phi-Agree from [D loro]:219.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:N from the edge of phi.are.
					phi.are acquired PHI:NUM:PL from the edge of phi.are.
					phi.are acquired PHI:PER:3 from the edge of phi.are.
					=[phi.deva [[D loro]:219 [phi.are [(DP):219 [PRO.v PRO.lava]]]]]
			=[[phi.deva [[D loro]:219 [phi.are [(DP):219 [PRO.v PRO.lava]]]]] D]

25.
		Consume "lo(cl)"

		[[deva [[D loro] [are [[D loro] [v lava]]]]] D] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lo(cl)]
			=[[phi.deva [[D loro]:219 [phi.are [(DP):219 [PRO.v PRO.lava]]]]] D{N}]

26.
	>>>	Trying candidate parse [[deva [[D loro] [are [[D loro] [v lava]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "deva".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "devono".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 124
['loro', 'mi#hanno', 'voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

19.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

20.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] [T/fin{V} D{N}]] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + T/prt = -98]
				[PRO.T/fin{V} D{N}] + T/prt = -96]
				D{N} + T/prt = 106]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt]]]

21.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v}]]]

22.
		Consume "volu"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v}]]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v,V}]]]

23.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} [[D mi(cl)] T/prt{v,V}]]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v volu]]]]]]] PRO.are] due to bad left branch.
				Reject [[T/fin [ha [[D mi(cl)] [T/prt [v volu]]]]] PRO.are] due to bad left branch.
				Reject [[[D mi(cl)] [T/prt [v volu]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] [PRO.T/prt{v,V} PRO.are]]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] [PRO.T/prt{v,V} PRO.are{v}]]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D mi(cl)] [PRO.T/prt{v,V} PRO.are{v,V}]]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v,V}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D mi(cl)] [PRO.T/prt{v,V} PRO.are{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D mi(cl)] [PRO.T/prt{v,V} PRO.are{v,V}]]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt{v,V} PRO.are{v,V}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]]]]]
						Extracted head "PRO.volu" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[D N]]
					Dropping constituent [D mi(cl)] from memory buffer into Spec of PRO.are
					Result [[D loro]:196 [PRO.T/fin [(DP):196 [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping [D N](=____) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:196 [PRO.T/fin [(DP):196 [PRO.ha [[D mi(cl)]:197 [PRO.T/prt [PRO.v [PRO.volu [(DP):197 [PRO.are [PRO.v [PRO.lava (DP):197]]]]]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:196 [PRO.T/fin [(DP):196 [PRO.ha [[D mi(cl)]:197 [PRO.T/prt [PRO.v [PRO.volu [(DP):197 [PRO.are [PRO.v [PRO.lava (DP):197]]]]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:1 from the edge of phi.T/prt.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:1 from the edge of phi.are.
					=[[D loro]:196 [phi.T/fin [(DP):196 [PRO.ha [[D mi(cl)]:197 [phi.T/prt [PRO.v [PRO.volu [(DP):197 [phi.are [PRO.v [PRO.lava (DP):197]]]]]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:196 [phi.T/fin [(DP):196 [PRO.ha [[D mi(cl)]:197 [phi.T/prt [PRO.v [PRO.volu [(DP):197 [phi.are [PRO.v [PRO.lava (DP):197]]]]]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				PRO.volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]    (alternatives: 2. T/prt 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. are    (alternatives: 2. [D mi(cl)] 3. T/prt 4. [D mi(cl)] 5. [D loro] 6. T/fin 7. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. are 3. [D mi(cl)] 4. T/prt 5. [D mi(cl)] 6. [D loro] 7. T/fin 8. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha([[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]])', 'PRO.lava([D mi(cl)])', 'PRO.v(T/prt)', 'PRO.v(are)', 'PRO.volu([[D mi(cl)] [are [v [lava [D mi(cl)]]]]])']
!--->		Tests passed (with 26/281 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.ha [[D mi(cl)]:2 [phi.T/prt [PRO.v [PRO.volu [(DP):2 [phi.are [PRO.v [PRO.lava (DP):2]]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [T [v [V [__:2 [INF [v [V __:2]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
phi.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
(D): [D, V, v, T, V, TT/fin]
(N): [N, D, V, v, T, V, TT/fin]
phi.are: [INF, V, v, T, V, TT/fin]
PRO.v: [v, INF, V, v, T, V, TT/fin]
PRO.lava: [V, v, INF, V, v, T, V, TT/fin]
(D): [D, V, v, INF, V, v, T, V, TT/fin]
(N): [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 125
['loro', 'hanno', 'voluto', 'lavare#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

11.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

12.
		Consume "volu"

		[[D loro] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

13.
		Decomposing a polymorphemic word lavare#mi.
		Next word contains multiple morphemes ['mi_', 'lavare']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.volu" lacks complement
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.volu" lacks complement
				Avoid [T/fin [ha [T/prt [v volu]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] + D = -197]
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -194]
				PRO.T/prt{v,V} + D = -38]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D]]]

22.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]

23.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + are
			Filtering out impossible merge sites...
				Reject [[T D] PRO.are] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]] + are = -98]
				[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] + are = -96]
				D{N} + are = 106]
		Ranking completed:
			1. [D{N}; are]
			2. [[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]; are]
			3. [[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are]]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v}]]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} [[D mi(cl)] PRO.are{v,V}]]]]]]
						Extracted head "PRO.volu" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] PRO.are{v,V}]]]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are PRO.v{V}]]]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]]]
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:205 [PRO.T/fin [(DP):205 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)]:206 [PRO.are [PRO.v [PRO.lava (DP):206]]]]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:205 [PRO.T/fin [(DP):205 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)]:206 [PRO.are [PRO.v [PRO.lava (DP):206]]]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:1 from the edge of phi.are.
					=[[D loro]:205 [phi.T/fin [(DP):205 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)]:206 [phi.are [PRO.v [PRO.lava (DP):206]]]]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:205 [phi.T/fin [(DP):205 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)]:206 [phi.are [PRO.v [PRO.lava (DP):206]]]]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. are    (alternatives: 2. [D mi(cl)] 3. [D loro] 4. T/fin 5. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. are 3. [D mi(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.T/prt([D loro])', 'PRO.ha([D loro])', 'PRO.lava([D mi(cl)])', 'PRO.v([D loro])', 'PRO.v(are)', 'PRO.volu([[D mi(cl)] [are [v [lava [D mi(cl)]]]]])']
!--->		Tests passed (with 26/290 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)]:2 [phi.are [PRO.v [PRO.lava (DP):2]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [T [v [V [DP:2 [INF [v [V __:2]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
mi(cl): [N, D, V, v, T, V, TT/fin]
phi.are: [INF, V, v, T, V, TT/fin]
PRO.v: [v, INF, V, v, T, V, TT/fin]
PRO.lava: [V, v, INF, V, v, T, V, TT/fin]
(D): [D, V, v, INF, V, v, T, V, TT/fin]
(N): [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 126
['mi#hanno', 'voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#hanno.
		Next word contains multiple morphemes ['hanno_', 'mi']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

13.
		Consume "mi(cl)"

		[T/fin{V} D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} D{N}]

14.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[T/fin{V} D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + T/prt = -98]
				D{N} + T/prt = 104]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.T/prt]]

15.
		Consume "v"

		[T/fin{V} [[D mi(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v}]]

16.
		Consume "volu"

		[T/fin{V} [[D mi(cl)] T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[PRO.T/fin{V} [[D mi(cl)] PRO.T/prt{v,V}]]

17.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[T/fin{V} [[D mi(cl)] T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[T/fin [ha [[D mi(cl)] [T/prt [v volu]]]]] PRO.are] due to bad left branch.
				Reject [[[D mi(cl)] [T/prt [v volu]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[PRO.T/fin{V} [[D mi(cl)] [PRO.T/prt{v,V} PRO.are]]]

18.
		Consume "v"

		[T/fin{V} [[D mi(cl)] [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.T/fin{V} [[D mi(cl)] [PRO.T/prt{v,V} PRO.are{v}]]]

19.
		Consume "lava"

		[T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.T/fin{V} [[D mi(cl)] [PRO.T/prt{v,V} PRO.are{v,V}]]]

20.
	>>>	Trying candidate parse [T/fin{V} [[D mi(cl)] [T/prt{v,V} are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D mi(cl)] [PRO.T/prt{v,V} PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D mi(cl)] [PRO.T/prt{v,V} PRO.are{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt{v,V} PRO.are{v,V}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]]]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[D N]]
					Dropping constituent [D mi(cl)] from memory buffer into Spec of PRO.are
					Result [PRO.T/fin [PRO.ha [[D mi(cl)] [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping [D N](=____) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.ha [[D mi(cl)]:207 [PRO.T/prt [PRO.v [PRO.volu [(DP):207 [PRO.are [PRO.v [PRO.lava (DP):207]]]]]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.ha [[D mi(cl)]:207 [PRO.T/prt [PRO.v [PRO.volu [(DP):207 [PRO.are [PRO.v [PRO.lava (DP):207]]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D mi(cl)]:207.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/prt acquired PHI:DET:DEF from the edge of phi.T/prt.
					phi.T/prt acquired PHI:GEN:M from the edge of phi.T/prt.
					phi.T/prt acquired PHI:NUM:SG from the edge of phi.T/prt.
					phi.T/prt acquired PHI:PER:1 from the edge of phi.T/prt.
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:1 from the edge of phi.are.
					=[phi.T/fin [PRO.ha [[D mi(cl)]:207 [phi.T/prt [PRO.v [PRO.volu [(DP):207 [phi.are [PRO.v [PRO.lava (DP):207]]]]]]]]]]
			= [T/fin [ha [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.ha [[D mi(cl)]:207 [phi.T/prt [PRO.v [PRO.volu [(DP):207 [phi.are [PRO.v [PRO.lava (DP):207]]]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. [D mi(cl)] 3. T/fin )
				PRO.volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]    (alternatives: 2. T/prt 3. [D mi(cl)] 4. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. are    (alternatives: 2. [D mi(cl)] 3. T/prt 4. [D mi(cl)] 5. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. are 3. [D mi(cl)] 4. T/prt 5. [D mi(cl)] 6. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ha([[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]])', 'PRO.lava([D mi(cl)])', 'PRO.v(T/prt)', 'PRO.v(are)', 'PRO.volu([[D mi(cl)] [are [v [lava [D mi(cl)]]]]])']
!--->		Tests passed (with 20/223 operations) <------------------------------------
		Solution:
		[T/fin [ha [[D mi(cl)] [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]]
		Grammar: [phi.T/fin [PRO.ha [[D mi(cl)]:1 [phi.T/prt [PRO.v [PRO.volu [(DP):1 [phi.are [PRO.v [PRO.lava (DP):1]]]]]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [T [v [V [__:1 [INF [v [V __:1]]]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
mi(cl): [N, D, V, TT/fin]
phi.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
(D): [D, V, v, T, V, TT/fin]
(N): [N, D, V, v, T, V, TT/fin]
phi.are: [INF, V, v, T, V, TT/fin]
PRO.v: [v, INF, V, v, T, V, TT/fin]
PRO.lava: [V, v, INF, V, v, T, V, TT/fin]
(D): [D, V, v, INF, V, v, T, V, TT/fin]
(N): [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 127
['hanno', 'voluto', 'lavare#mi']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.T/prt]

5.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} PRO.T/prt{v}]

6.
		Consume "volu"

		[T/fin{V} T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[PRO.T/fin{V} PRO.T/prt{v,V}]

7.
		Decomposing a polymorphemic word lavare#mi.
		Next word contains multiple morphemes ['mi_', 'lavare']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.volu" lacks complement
				Avoid [T/fin [ha [T/prt [v volu]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -197]
				PRO.T/prt{v,V} + D = -42]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D]]

16.
		Consume "mi(cl)"

		[T/fin{V} [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]

17.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[T/fin{V} [T/prt{v,V} D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[T D] PRO.are] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] + are = -98]
				D{N} + are = 104]
		Ranking completed:
			1. [D{N}; are]
			2. [[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are]]]

18.
		Consume "v"

		[T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v}]]]

19.
		Consume "lava"

		[T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} [[D mi(cl)] PRO.are{v,V}]]]]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] PRO.are{v,V}]]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are PRO.v{V}]]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)] [PRO.are [PRO.v PRO.lava]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)]:209 [PRO.are [PRO.v [PRO.lava (DP):209]]]]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)]:209 [PRO.are [PRO.v [PRO.lava (DP):209]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF from the edge of phi.are.
					phi.are acquired PHI:GEN:M from the edge of phi.are.
					phi.are acquired PHI:NUM:SG from the edge of phi.are.
					phi.are acquired PHI:PER:1 from the edge of phi.are.
					=[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)]:209 [phi.are [PRO.v [PRO.lava (DP):209]]]]]]]]]
			= [T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)]:209 [phi.are [PRO.v [PRO.lava (DP):209]]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.T/prt with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.volu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. are    (alternatives: 2. [D mi(cl)] 3. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mi(cl)]    (alternatives: 2. are 3. [D mi(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.T/prt(T/fin)', 'PRO.ha(T/fin)', 'PRO.lava([D mi(cl)])', 'PRO.v(T/fin)', 'PRO.v(are)', 'PRO.volu([[D mi(cl)] [are [v [lava [D mi(cl)]]]]])']
!--->		Tests passed (with 20/227 operations) <------------------------------------
		Solution:
		[T/fin [ha [T/prt [v [volu [[D mi(cl)] [are [v [lava [D mi(cl)]]]]]]]]]]
		Grammar: [phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [[D mi(cl)]:1 [phi.are [PRO.v [PRO.lava (DP):1]]]]]]]]]
		Spellout TT/finP = [TT/fin [V [T [v [V [DP:1 [INF [v [V __:1]]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
PRO.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
mi(cl): [N, D, V, v, T, V, TT/fin]
phi.are: [INF, V, v, T, V, TT/fin]
PRO.v: [v, INF, V, v, T, V, TT/fin]
PRO.lava: [V, v, INF, V, v, T, V, TT/fin]
(D): [D, V, v, INF, V, v, T, V, TT/fin]
(N): [N, D, V, v, INF, V, v, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 128
['loro', 'hanno', 'mi#voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word mi#voluto.
		Next word contains multiple morphemes ['voluto_', 'mi']
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['inc$', 'to$', 'v$', 'volu-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

12.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

13.
		Consume "volu"

		[[D loro] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

14.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.volu" lacks complement
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.volu" lacks complement
				Avoid [T/fin [ha [T/prt [v volu]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] + D = -197]
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -194]
				PRO.T/prt{v,V} + D = -38]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D]]]

22.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]

23.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + are
			Filtering out impossible merge sites...
				Reject [[T D] PRO.are] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]] + are = -98]
				[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] + are = -96]
				D{N} + are = 106]
		Ranking completed:
			1. [D{N}; are]
			2. [[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]; are]
			3. [[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are]]]]

24.
		Consume "v"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v}]]]]

25.
		Consume "lava"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] are]
			Transferring [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} D{N}]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} D{N}]]]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu D{N}]]]]]
					Extracted head "mi(cl)" from D and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] PRO.are]]

27.
		Consume "v"

		[[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] PRO.are{v}]]

28.
		Consume "lava"

		[[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] PRO.are{v,V}]]

29.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha T/prt v volu D mi(cl) " into memory buffer from SPEC of "PRO.are".
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[TT/fin [V [T [v [V [D N]]]]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.are has unaccetable specifier [phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]].
					Extraposition will be tried on [[D loro]:216 [? [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [(DP):216 [PRO.v PRO.lava]]]]]].
					=[[D loro]:216 [? [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [(DP):216 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF by phi-Agree from (DP):216.
					phi.are acquired PHI:GEN:N by phi-Agree from (DP):216.
					phi.are acquired PHI:NUM:PL by phi-Agree from (DP):216.
					phi.are acquired PHI:PER:3 by phi-Agree from (DP):216.
					=[[D loro]:216 [? [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [phi.are [(DP):216 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				phi.are has unaccetable specifier [phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
PRO.T/prt: [T, V, TT/fin, ?]
PRO.v: [v, T, V, TT/fin, ?]
PRO.volu: [V, v, T, V, TT/fin, ?]
D: [D, V, v, T, V, TT/fin, ?]
mi(cl): [N, D, V, v, T, V, TT/fin, ?]
phi.are: [INF, ?]
(D): [D, INF, ?]
(N): [N, D, INF, ?]
PRO.v: [v, INF, ?]
PRO.lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]] are]
			Transferring [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} D{N}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} D{N}]]]]]
						Extracted head "PRO.volu" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu D{N}]]]]]]
					Extracted head "mi(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]]
					=[[D loro]:217 [PRO.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]]
			=[[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] PRO.are]

30.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] PRO.are{v}]

31.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] PRO.are{v,V}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D mi(cl)]]]]]]]] are{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] [PRO.are [PRO.v PRO.lava]]]
					=[[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha T/prt v volu D mi(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [T [v [V [D N]]]]]]]]]
				PRO.are has unaccetable specifier [[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]].
					Extraposition will be tried on [[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] [PRO.are [PRO.v PRO.lava]]].
					=[[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] [PRO.are [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]] [PRO.are [PRO.v PRO.lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [D mi(cl)]]]]]]]] [are [v lava]]]
		Checking LF-interface conditions.
				PRO.are has unaccetable specifier [[D loro]:217 [phi.T/fin [(DP):217 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
mi(cl): [N, D, V, v, T, V, TT/fin]
PRO.are: [INF]
PRO.v: [v, INF]
PRO.lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.volu" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				A phi-marked head "PRO.volu" lacks complement
					Extraposition will be tried on [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]].
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]] D]]

33.
		Consume "mi(cl)"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]] D{N}]]

34.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [[T/fin [ha [T/prt [v volu]]]] <D mi(cl)>]] PRO.are] due to bad left branch.
				Reject [[[T/fin [ha [T/prt [v volu]]]] <D mi(cl)>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]] [[D mi(cl)] PRO.are]]]

35.
		Consume "v"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]] [[D mi(cl)] PRO.are{v}]]]

36.
		Consume "lava"

		[[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]] [[D mi(cl)] PRO.are{v,V}]]]

37.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v,V}]]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] D]
			Transferring [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.volu" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]]
				A phi-marked head "PRO.volu" lacks complement
					Extraposition will be tried on [[D loro]:218 [PRO.T/fin [(DP):218 [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]].
					=[[D loro]:218 [PRO.T/fin [(DP):218 [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:218 [phi.T/fin [(DP):218 [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]]
			=[[[D loro]:218 [phi.T/fin [(DP):218 [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]] D]

38.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:218 [phi.T/fin [(DP):218 [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]] D{N}]

39.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] D{N}] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] <D mi(cl)>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[D loro]:218 [phi.T/fin [(DP):218 [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]] [[D mi(cl)] PRO.are]]

40.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] [[D mi(cl)] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D loro]:218 [phi.T/fin [(DP):218 [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]] [[D mi(cl)] PRO.are{v}]]

41.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] [[D mi(cl)] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D loro]:218 [phi.T/fin [(DP):218 [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]]] [[D mi(cl)] PRO.are{v,V}]]

42.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] [[D mi(cl)] are{v,V}]] (5.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:219 [PRO.T/fin [(DP):219 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]]
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] PRO.T/prt]

43.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] PRO.T/prt{v}]

44.
		Consume "volu"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] PRO.T/prt{v,V}]

45.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				PRO.T/prt has unaccetable specifier [[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]].
				A phi-marked head "PRO.volu" lacks complement
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] PRO.T/prt{v,V}] + D = -98]
				PRO.T/prt{v,V} + D = 56]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt{v,V} D]]

53.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt{v,V} D{N}]]

54.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [volu [D mi(cl)]]]]] PRO.are] due to bad left branch.
			Ranking remaining sites...
				Avoid D{N} because it could break words.
				[PRO.T/prt{v,V} D{N}] + are = 1]
				D{N} + are = -96]
		Ranking completed:
			1. [[PRO.T/prt{v,V} D{N}]; are]
			2. [D{N}; are]
		Exploring solution number (1) =[[PRO.T/prt{v,V} D{N}] are]
			Transferring [PRO.T/prt{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/prt{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/prt [PRO.v{V} D{N}]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/prt [PRO.v [PRO.volu D{N}]]]
					Extracted head "mi(cl)" from D and created [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]
					=[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]
				2. Feature processing:
					=[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]
				3. Floater movement reconstruction:
					=[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] PRO.are]]

55.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [D mi(cl)]]]] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] PRO.are{v}]]

56.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [D mi(cl)]]]] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] PRO.are{v,V}]]

57.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [D mi(cl)]]]] are{v,V}]] (6.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] [PRO.are [PRO.v PRO.lava]]]]
					=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/prt v volu D mi(cl) " into memory buffer from SPEC of "PRO.are".
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[T [v [V [D N]]]], [[D N] [TT/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [? [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] [PRO.are [PRO.v PRO.lava]]]]].
					=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [? [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] [PRO.are [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [? [[PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]] [PRO.are [PRO.v PRO.lava]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [? [[T/prt [v [volu [D mi(cl)]]]] [are [v lava]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:IT']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
?: [?]
PRO.T/prt: [T, ?]
PRO.v: [v, T, ?]
PRO.volu: [V, v, T, ?]
D: [D, V, v, T, ?]
mi(cl): [N, D, V, v, T, ?]
PRO.are: [INF, ?]
PRO.v: [v, INF, ?]
PRO.lava: [V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt{v,V} [[D mi(cl)] PRO.are]]]

58.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v}]]]

59.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]]

60.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D mi(cl)] are{v,V}]]] (7.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] PRO.T/prt{v,V}] D]
			Transferring [[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] PRO.T/prt{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/prt and created [[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.volu" from PRO.v and created [[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]]
					=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]]
				2. Feature processing:
					=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]]
				3. Floater movement reconstruction:
					=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]].
				A phi-marked head "PRO.volu" lacks complement
					Extraposition will be tried on [[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]].
					=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]]
			=[[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]] D]

61.
		Consume "mi(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]] D{N}]

62.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] D{N}] + are
			Filtering out impossible merge sites...
				Reject [[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] <D mi(cl)>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]] [[D mi(cl)] PRO.are]]

63.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] [[D mi(cl)] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]] [[D mi(cl)] PRO.are{v}]]

64.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] [[D mi(cl)] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[[D loro]:219 [phi.T/fin [(DP):219 PRO.ha]]] [PRO.T/prt [PRO.v PRO.volu]]] [[D mi(cl)] PRO.are{v,V}]]

65.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] [[D mi(cl)] are{v,V}]] (8.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 129
['loro', 'hanno', 'voluto', 'mi#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.T/prt]]

11.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v}]]

12.
		Consume "volu"

		[[D loro] [T/fin{V} T/prt{v}]] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[D loro] [PRO.T/fin{V} PRO.T/prt{v,V}]]

13.
		Decomposing a polymorphemic word mi#lavare.
		Next word contains multiple morphemes ['lavare_', 'mi']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[D loro] [T/fin{V} T/prt{v,V}]] + are
			Filtering out impossible merge sites...
				Reject [[[D loro] [T/fin [[D loro] [ha [T/prt [v volu]]]]]] PRO.are] due to bad left branch.
				Reject [[T/fin [ha [T/prt [v volu]]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are]]]

15.
		Consume "v"

		[[D loro] [T/fin{V} [T/prt{v,V} are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v}]]]

16.
		Consume "lava"

		[[D loro] [T/fin{V} [T/prt{v,V} are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]]

17.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} [T/prt{v,V} are{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid [[PRO.T/prt{v,V} PRO.are{v,V}], D] because the operation breaks up an existing selectional dependency.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.are{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]] + D = -98]
				[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]] + D = -96]
				[PRO.T/prt{v,V} PRO.are{v,V}] + D = -94]
				PRO.are{v,V} + D = -34]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.T/prt{v,V} PRO.are{v,V}]; D]
			3. [[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]; D]
			4. [[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D]]]]

25.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D]]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]]]

26.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/prt{v,V} PRO.are{v,V}] D]
			Transferring [PRO.T/prt{v,V} PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/prt{v,V} PRO.are{v,V}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
			=[[D loro] [PRO.T/fin{V} [[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]] D]]]

27.
		Consume "mi(cl)"

		[[D loro] [T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [PRO.T/fin{V} [[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]] D{N}]]]

28.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D{N}]]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]] D]
			Transferring [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} PRO.are{v,V}]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]] D]]

29.
		Consume "mi(cl)"

		[[D loro] [[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]] D{N}]]

30.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D{N}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]] D]
			Transferring [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} PRO.are{v,V}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]]]]
						Extracted head "PRO.volu" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
					=[[D loro]:225 [PRO.T/fin [(DP):225 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:225 [phi.T/fin [(DP):225 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]]
			=[[[D loro]:225 [phi.T/fin [(DP):225 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]] D]

31.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v lava]]]]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:225 [phi.T/fin [(DP):225 [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]]] D{N}]

32.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v [volu [are [v lava]]]]]]]]] D{N}] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:226 [PRO.T/fin [(DP):226 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]]
			=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] PRO.T/prt]

33.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] PRO.T/prt{v}]

34.
		Consume "volu"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] PRO.T/prt{v,V}]

35.
		Decomposing a polymorphemic word mi#lavare.
		Next word contains multiple morphemes ['lavare_', 'mi']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + are
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v volu]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt{v,V} PRO.are]]

37.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v}]]

38.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v,V}]]

39.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				PRO.T/prt has unaccetable specifier [[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]]:228.
				PRO.are has unaccetable specifier (TT/finP):228.
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [volu [[[D loro] [T/fin [[D loro] ha]]] [are [v lava]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.are{v,V} because it could break words.
				[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v,V}]] + D = -98]
				[PRO.T/prt{v,V} PRO.are{v,V}] + D = 2]
				PRO.are{v,V} + D = -38]
		Ranking completed:
			1. [[PRO.T/prt{v,V} PRO.are{v,V}]; D]
			2. [PRO.are{v,V}; D]
			3. [[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v,V}]]; D]
		Exploring solution number (1) =[[PRO.T/prt{v,V} PRO.are{v,V}] D]
			Transferring [PRO.T/prt{v,V} PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/prt{v,V} PRO.are{v,V}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
			=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]] D]]

47.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [are [v lava]]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]] D{N}]]

48.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [volu [are [v lava]]]]] D{N}]] (5.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt{v,V} [PRO.are{v,V} D]]]

49.
		Consume "mi(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [are{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]]

50.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [are{v,V} D{N}]]] (6.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v,V}]] D]
			Transferring [[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt{v,V} PRO.are{v,V}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]]
						Extracted head "PRO.volu" and reconstructed it = [[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]
					=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "PRO.T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
					Dropping constituent [[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] from memory buffer into Spec of PRO.are
					Result [[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.T/prt [PRO.v [PRO.volu [[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]] [PRO.are [PRO.v PRO.lava]]]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				PRO.T/prt has unaccetable specifier [[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]]:229.
				PRO.are has unaccetable specifier (TT/finP):229.
					Extraposition will be tried on [[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]]:229 [PRO.T/prt [PRO.v [PRO.volu [(TT/finP):229 [PRO.are [PRO.v PRO.lava]]]]]]].
					=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]]:229 [PRO.T/prt [PRO.v [PRO.volu [(TT/finP):229 [PRO.are [PRO.v PRO.lava]]]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]]:229 [PRO.T/prt [PRO.v [PRO.volu [(TT/finP):229 [PRO.are [PRO.v PRO.lava]]]]]]]
			=[[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]]:229 [PRO.T/prt [PRO.v [PRO.volu [(TT/finP):229 [PRO.are [PRO.v PRO.lava]]]]]]] D]

51.
		Consume "mi(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [volu [[[D loro] [T/fin [[D loro] ha]]] [are [v lava]]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[[[D loro]:226 [phi.T/fin [(DP):226 PRO.ha]]]:229 [PRO.T/prt [PRO.v [PRO.volu [(TT/finP):229 [PRO.are [PRO.v PRO.lava]]]]]]] D{N}]

52.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [volu [[[D loro] [T/fin [[D loro] ha]]] [are [v lava]]]]]]] D{N}] (7.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 130
['loro#mi', 'hanno', 'volute', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro#mi.
		Next word contains multiple morphemes ['mi_', 'loro']
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

10.
		Consume "mi(cl)"

		D + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=D{N}

11.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D mi(cl)] D]

16.
		Consume "loro"

		[[D mi(cl)] D] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[D mi(cl)] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D mi(cl)] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D mi(cl)] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D mi(cl)] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D mi(cl)] [[D loro] PRO.T/fin]]

19.
		Consume "ha"

		[[D mi(cl)] [[D loro] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D mi(cl)] [[D loro] PRO.T/fin{V}]]

20.
		Consume "?"

		[[D mi(cl)] [[D loro] T/fin{V}]] + ?
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [? [[D loro] [T/fin [[D loro] ha]]]]] ?] due to bad left branch.
			Ranking remaining sites...
				[[D loro] PRO.T/fin{V}] + ? = 1]
				PRO.T/fin{V} + ? = 2]
		Ranking completed:
			1. [PRO.T/fin{V}; ?]
			2. [[[D loro] PRO.T/fin{V}]; ?]
		Exploring solution number (1) =[PRO.T/fin{V} ?]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D mi(cl)] [[D loro] [PRO.T/fin{V} ?]]]

21.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D mi(cl)] [[D loro] [T/fin{V} ?]]] + are
			Filtering out impossible merge sites...
				Reject [[[D mi(cl)] [? [[D loro] [T/fin [[D loro] [ha ?]]]]]] PRO.are] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid TT/finP as SPEC, are.
				Avoid ? because it could break words.
				[[D loro] [PRO.T/fin{V} ?]] + are = -98]
				[PRO.T/fin{V} ?] + are = -96]
				? + are = -94]
		Ranking completed:
			1. [?; are]
			2. [[PRO.T/fin{V} ?]; are]
			3. [[[D loro] [PRO.T/fin{V} ?]]; are]
		Exploring solution number (1) =[? are]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D mi(cl)] [[D loro] [PRO.T/fin{V} [? PRO.are]]]]

22.
		Consume "v"

		[[D mi(cl)] [[D loro] [T/fin{V} [? are]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D mi(cl)] [[D loro] [PRO.T/fin{V} [? PRO.are{v}]]]]

23.
		Consume "lava"

		[[D mi(cl)] [[D loro] [T/fin{V} [? are{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D mi(cl)] [[D loro] [PRO.T/fin{V} [? PRO.are{v,V}]]]]

24.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] [T/fin{V} [? are{v,V}]]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} ?] are]
			Transferring [PRO.T/fin{V} ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} ?].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha ?]]
					=[PRO.T/fin [PRO.ha ?]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha ?]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha ?]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha ?]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.ha ?]]
			=[[D mi(cl)] [[D loro] [[phi.T/fin [PRO.ha ?]] PRO.are]]]

25.
		Consume "v"

		[[D mi(cl)] [[D loro] [[T/fin [ha ?]] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D mi(cl)] [[D loro] [[phi.T/fin [PRO.ha ?]] PRO.are{v}]]]

26.
		Consume "lava"

		[[D mi(cl)] [[D loro] [[T/fin [ha ?]] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D mi(cl)] [[D loro] [[phi.T/fin [PRO.ha ?]] PRO.are{v,V}]]]

27.
	>>>	Trying candidate parse [[D mi(cl)] [[D loro] [[T/fin [ha ?]] are{v,V}]]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D mi(cl)] [[D loro] [[phi.T/fin [PRO.ha ?]] PRO.are{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] [[D loro] [[phi.T/fin [PRO.ha ?]] PRO.are{v,V}]]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D mi(cl)] [[D loro] [[phi.T/fin [PRO.ha ?]] [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D mi(cl)] [[D loro] [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v PRO.lava]]]]]
					=[[D mi(cl)] [[D loro] [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D mi(cl)] [[D loro] [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [[D loro] [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha ? " into memory buffer from SPEC of "PRO.are".
					Moving "D loro " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[TT/fin [V ]], [D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D mi(cl)] [? [[D loro] [? [[phi.T/fin [PRO.ha ?]] [PRO.are [[D loro] [PRO.v PRO.lava]]]]]]]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D mi(cl)]:237 [? [[D loro]:236 [? [[phi.T/fin [PRO.ha ?]] [PRO.are [(DP):236 [PRO.v [PRO.lava (DP):237]]]]]]]]]
					Remaining items in memory buffer: [[TT/fin [V ]]]
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				PRO.are has unaccetable specifier [phi.T/fin [PRO.ha ?]].
					Extraposition will be tried on [[D mi(cl)]:237 [? [[D loro]:236 [? [[phi.T/fin [PRO.ha ?]] [PRO.are [(DP):236 [PRO.v [PRO.lava (DP):237]]]]]]]]].
					=[[D mi(cl)]:237 [? [[D loro]:236 [? [[phi.T/fin [PRO.ha ?]] [PRO.are [(DP):236 [PRO.v [PRO.lava (DP):237]]]]]]]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.are acquired PHI:DET:DEF by phi-Agree from (DP):236.
					phi.are acquired PHI:GEN:N by phi-Agree from (DP):236.
					phi.are acquired PHI:NUM:PL by phi-Agree from (DP):236.
					phi.are acquired PHI:PER:3 by phi-Agree from (DP):236.
					=[[D mi(cl)]:237 [? [[D loro]:236 [? [[phi.T/fin [PRO.ha ?]] [phi.are [(DP):236 [PRO.v [PRO.lava (DP):237]]]]]]]]]
			= [[D mi(cl)] [? [[D loro] [? [[T/fin [ha ?]] [are [[D loro] [v [lava [D mi(cl)]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				phi.are has unaccetable specifier [phi.T/fin [PRO.ha ?]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
?:['CAT:X', 'PF:?']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
mi(cl): [N, D]
?: [?]
D: [D, ?]
loro: [N, D, ?]
?: [?, ?]
phi.T/fin: [TT/fin, ?, ?]
PRO.ha: [V, TT/fin, ?, ?]
?: [, V, TT/fin, ?, ?]
phi.are: [INF, ?, ?]
(D): [D, INF, ?, ?]
(N): [N, D, INF, ?, ?]
PRO.v: [v, INF, ?, ?]
PRO.lava: [V, v, INF, ?, ?]
(D): [D, V, v, INF, ?, ?]
(N): [N, D, V, v, INF, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} ?]] are]
			Transferring [[D loro] [PRO.T/fin{V} ?]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} ?]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha ?]]]
					=[[D loro] [PRO.T/fin [PRO.ha ?]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha ?]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha ?]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha ?]]]]
					=[[D loro]:238 [PRO.T/fin [(DP):238 [PRO.ha ?]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]]
			=[[D mi(cl)] [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] PRO.are]]

28.
		Consume "v"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] [ha ?]]]] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D mi(cl)] [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] PRO.are{v}]]

29.
		Consume "lava"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] [ha ?]]]] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D mi(cl)] [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] PRO.are{v,V}]]

30.
	>>>	Trying candidate parse [[D mi(cl)] [[[D loro] [T/fin [[D loro] [ha ?]]]] are{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D mi(cl)] [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D mi(cl)] [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D mi(cl)] [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] [PRO.are [PRO.v PRO.lava]]]]
					=[[D mi(cl)] [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D mi(cl)] [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha ? " into memory buffer from SPEC of "PRO.are".
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[[D N] [TT/fin [[D N] [V ]]]], [D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D mi(cl)]:239 [? [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] [PRO.are [PRO.v [PRO.lava (DP):239]]]]]]
					Remaining items in memory buffer: [[[D N] [TT/fin [[D N] [V ]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.are has unaccetable specifier [[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]].
					Extraposition will be tried on [[D mi(cl)]:239 [? [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] [PRO.are [PRO.v [PRO.lava (DP):239]]]]]].
					=[[D mi(cl)]:239 [? [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] [PRO.are [PRO.v [PRO.lava (DP):239]]]]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D mi(cl)]:239 [? [[[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]] [PRO.are [PRO.v [PRO.lava (DP):239]]]]]]
			= [[D mi(cl)] [? [[[D loro] [T/fin [[D loro] [ha ?]]]] [are [v [lava [D mi(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				PRO.are has unaccetable specifier [[D loro]:238 [phi.T/fin [(DP):238 [PRO.ha ?]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
?:['CAT:X', 'PF:?']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
mi(cl): [N, D]
?: [?]
D: [D, ?]
loro: [N, D, ?]
phi.T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
?: [, V, TT/fin, ?]
PRO.are: [INF, ?]
PRO.v: [v, INF, ?]
PRO.lava: [V, v, INF, ?]
(D): [D, V, v, INF, ?]
(N): [N, D, V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] ?]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:240 [PRO.T/fin [(DP):240 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]]
			=[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]]

31.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] ?]] + are
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] + are = 1]
				[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] + are = 2]
				? + are = 3]
		Ranking completed:
			1. [?; are]
			2. [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]; are]
			3. [[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]]; are]
		Exploring solution number (1) =[? are]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] [? PRO.are]]]

32.
		Consume "v"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] [? are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] [? PRO.are{v}]]]

33.
		Consume "lava"

		[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] [? are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] [? PRO.are{v,V}]]]

34.
	>>>	Trying candidate parse [[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] [? are{v,V}]]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] are]
			Transferring [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?].
					=[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]
				2. Feature processing:
					=[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]
				3. Floater movement reconstruction:
					=[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]
				5. Agreement reconstruction:
					=[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]
			=[[D mi(cl)] [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] PRO.are]]

35.
		Consume "v"

		[[D mi(cl)] [[[[D loro] [T/fin [[D loro] ha]]] ?] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[D mi(cl)] [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] PRO.are{v}]]

36.
		Consume "lava"

		[[D mi(cl)] [[[[D loro] [T/fin [[D loro] ha]]] ?] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[D mi(cl)] [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] PRO.are{v,V}]]

37.
	>>>	Trying candidate parse [[D mi(cl)] [[[[D loro] [T/fin [[D loro] ha]]] ?] are{v,V}]] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D mi(cl)] [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[D mi(cl)] [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D mi(cl)] [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] [PRO.are [PRO.v PRO.lava]]]]
					=[[D mi(cl)] [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D mi(cl)] [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha ? " into memory buffer from SPEC of "PRO.are".
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[[[D N] [TT/fin [[D N] V]]] ], [D N]]
					Dropping [D N](=D mi(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D mi(cl)]:241 [? [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] [PRO.are [PRO.v [PRO.lava (DP):241]]]]]]
					Remaining items in memory buffer: [[[[D N] [TT/fin [[D N] V]]] ]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[D mi(cl)]:241 [? [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] [PRO.are [PRO.v [PRO.lava (DP):241]]]]]].
					=[[D mi(cl)]:241 [? [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] [PRO.are [PRO.v [PRO.lava (DP):241]]]]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D mi(cl)]:241 [? [[[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?] [PRO.are [PRO.v [PRO.lava (DP):241]]]]]]
			= [[D mi(cl)] [? [[[[D loro] [T/fin [[D loro] ha]]] ?] [are [v [lava [D mi(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
?:['CAT:X', 'PF:?']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']

D: [D]
mi(cl): [N, D]
?: [?]
D: [D, ?]
loro: [N, D, ?]
phi.T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
?: [, ?]
PRO.are: [INF, ?]
PRO.v: [v, INF, ?]
PRO.lava: [V, v, INF, ?]
(D): [D, V, v, INF, ?]
(N): [N, D, V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] are]
			Transferring [[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]].
					=[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]]
				2. Feature processing:
					=[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]]
				5. Agreement reconstruction:
					=[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]]
			=[[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] PRO.are]

38.
		Consume "v"

		[[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] ?]] are] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] PRO.are{v}]

39.
		Consume "lava"

		[[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] ?]] are{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] PRO.are{v,V}]

40.
	>>>	Trying candidate parse [[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] ?]] are{v,V}] (6.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] [PRO.are [PRO.v PRO.lava]]]
					=[[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) D loro T/fin __ha ? " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[[D N] [[[D N] [TT/fin [[D N] V]]] ]]]
					=[[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] [PRO.are [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] [PRO.are [PRO.v PRO.lava]]]
			= [[[D mi(cl)] [[[D loro] [T/fin [[D loro] ha]]] ?]] [are [v lava]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D mi(cl)] [[[D loro]:240 [phi.T/fin [(DP):240 PRO.ha]]] ?]] [PRO.are [PRO.v PRO.lava]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] 4. [D mi(cl)] )
				PRO.are with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
?:['CAT:X', 'PF:?']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
mi(cl): [N, D]
D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
?: []
PRO.are: [INF]
PRO.v: [v, INF]
PRO.lava: [V, v, INF]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volute".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mi(cl)] D{N}] T/fin]
			Transferring [[D mi(cl)] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D mi(cl)] D{N}].
					Extracted head "loro" from D and created [[D mi(cl)] [D loro]]
					=[[D mi(cl)] [D loro]]
				2. Feature processing:
					=[[D mi(cl)] [D loro]]
				3. Floater movement reconstruction:
					=[[D mi(cl)] [D loro]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D mi(cl)].
					Extraposition will be tried on [[D mi(cl)] [D loro]].
						<D loro> was made an adjunct.
					<D loro> was made adjunct by an extraposition rule.
					=[[D mi(cl)] <D loro>]
				5. Agreement reconstruction:
					=[[D mi(cl)] <D loro>]
			=[[[D mi(cl)] <D loro>] PRO.T/fin]

41.
		Consume "ha"

		[[[D mi(cl)] <D loro>] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[[D mi(cl)] <D loro>] PRO.T/fin{V}]

42.
		Consume "?"

		[[[D mi(cl)] <D loro>] T/fin{V}] + ?
			Filtering out impossible merge sites...
				Reject [[[[D mi(cl)] <D loro>] [T/fin ha]] ?] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} ?]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[[D mi(cl)] <D loro>] [PRO.T/fin{V} ?]]

43.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[[D mi(cl)] <D loro>] [T/fin{V} ?]] + are
			Filtering out impossible merge sites...
				Reject [[[[D mi(cl)] <D loro>] [T/fin [ha ?]]] PRO.are] due to bad left branch.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid ? because it could break words.
				[PRO.T/fin{V} ?] + are = -98]
				? + are = -96]
		Ranking completed:
			1. [?; are]
			2. [[PRO.T/fin{V} ?]; are]
		Exploring solution number (1) =[? are]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D mi(cl)] <D loro>] [PRO.T/fin{V} [? PRO.are]]]

44.
		Consume "v"

		[[[D mi(cl)] <D loro>] [T/fin{V} [? are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D mi(cl)] <D loro>] [PRO.T/fin{V} [? PRO.are{v}]]]

45.
		Consume "lava"

		[[[D mi(cl)] <D loro>] [T/fin{V} [? are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D mi(cl)] <D loro>] [PRO.T/fin{V} [? PRO.are{v,V}]]]

46.
	>>>	Trying candidate parse [[[D mi(cl)] <D loro>] [T/fin{V} [? are{v,V}]]] (7.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} ?] are]
			Transferring [PRO.T/fin{V} ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} ?].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha ?]]
					=[PRO.T/fin [PRO.ha ?]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha ?]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha ?]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha ?]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.ha ?]]
			=[[[D mi(cl)] <D loro>] [[phi.T/fin [PRO.ha ?]] PRO.are]]

47.
		Consume "v"

		[[[D mi(cl)] <D loro>] [[T/fin [ha ?]] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[[D mi(cl)] <D loro>] [[phi.T/fin [PRO.ha ?]] PRO.are{v}]]

48.
		Consume "lava"

		[[[D mi(cl)] <D loro>] [[T/fin [ha ?]] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[[D mi(cl)] <D loro>] [[phi.T/fin [PRO.ha ?]] PRO.are{v,V}]]

49.
	>>>	Trying candidate parse [[[D mi(cl)] <D loro>] [[T/fin [ha ?]] are{v,V}]] (8.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D mi(cl)] <D loro>] [[phi.T/fin [PRO.ha ?]] PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D mi(cl)] <D loro>] [[phi.T/fin [PRO.ha ?]] PRO.are{v,V}]].
					Extracted head "PRO.v{V}" from PRO.are and created [[[D mi(cl)] <D loro>] [[phi.T/fin [PRO.ha ?]] [PRO.are PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D mi(cl)] <D loro>] [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v PRO.lava]]]]
					=[[[D mi(cl)] <D loro>] [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D mi(cl)] <D loro>] [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D mi(cl)] <D loro>] [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha ? " into memory buffer from SPEC of "PRO.are".
					Moving "D mi(cl) D loro " into memory buffer from SPEC of "PRO.are".
					New head was spawned due to multiple specifiers at PRO.are but its category is unknown!
					Memory buffer: [[TT/fin [V ]], [[D N] [D N]]]
					Dropping [[D N] [D N]](=D mi(cl) D loro ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[[D mi(cl)] <D loro>]:242 [? [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v [PRO.lava (DP):242]]]]]]
					Remaining items in memory buffer: [[TT/fin [V ]]]
				An uninterpretable grammatical head without lexical category was detected.
				PRO.are has unaccetable specifier [phi.T/fin [PRO.ha ?]].
					Extraposition will be tried on [[[D mi(cl)] <D loro>]:242 [? [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v [PRO.lava (DP):242]]]]]].
					=[[[D mi(cl)] <D loro>]:242 [? [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v [PRO.lava (DP):242]]]]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D mi(cl)] <D loro>]:242 [? [[phi.T/fin [PRO.ha ?]] [PRO.are [PRO.v [PRO.lava (DP):242]]]]]]
			= [[[D mi(cl)] <D loro>] [? [[T/fin [ha ?]] [are [v [lava [[D mi(cl)] <D loro>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				PRO.are has unaccetable specifier [phi.T/fin [PRO.ha ?]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
?:['CAT:X', 'PF:?']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']

D: [D]
mi(cl): [N, D]
D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
?: [, V, TT/fin, ?]
PRO.are: [INF, ?]
PRO.v: [v, INF, ?]
PRO.lava: [V, v, INF, ?]
(D): [D, V, v, INF, ?]
(N): [N, D, V, v, INF, ?]
(D): [D, V, v, INF, ?]
(N): [N, D, V, v, INF, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volute".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro#mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 131
['mi#loro', 'hanno', 'volute', 'lavere']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word mi#loro.
		Next word contains multiple morphemes ['loro_', 'mi']
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['inc$', 'n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "n$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

7.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

8.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] D]

16.
		Consume "mi(cl)"

		[[D loro] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[D loro] D{N}]

17.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		[[D loro] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D loro] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D loro] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[D loro] [[D mi(cl)] PRO.T/fin]]

19.
		Consume "ha"

		[[D loro] [[D mi(cl)] T/fin]] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] [[D mi(cl)] PRO.T/fin{V}]]

20.
		Consume "?"

		[[D loro] [[D mi(cl)] T/fin{V}]] + ?
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[D mi(cl)] [T/fin [[D loro] ha]]]]] ?] due to bad left branch.
				Reject [[[D mi(cl)] [T/fin ha]] ?] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} ?]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [[D mi(cl)] [PRO.T/fin{V} ?]]]

21.
		Consume "?"

		[[D loro] [[D mi(cl)] [T/fin{V} ?]]] + ?
			Filtering out impossible merge sites...
				Reject [[[D loro] [? [[D mi(cl)] [T/fin [[D loro] [ha ?]]]]]] ?] due to bad left branch.
				Reject [[[D mi(cl)] [T/fin [ha ?]]] ?] due to bad left branch.
			Ranking remaining sites...
				Avoid ? because it could break words.
				[PRO.T/fin{V} ?] + ? = 1]
				? + ? = -96]
		Ranking completed:
			1. [[PRO.T/fin{V} ?]; ?]
			2. [?; ?]
		Exploring solution number (1) =[[PRO.T/fin{V} ?] ?]
			Transferring [PRO.T/fin{V} ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} ?].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha ?]]
					=[PRO.T/fin [PRO.ha ?]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha ?]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha ?]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha ?]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.ha ?]]
			=[[D loro] [[D mi(cl)] [[phi.T/fin [PRO.ha ?]] ?]]]

22.
	>>>	Trying candidate parse [[D loro] [[D mi(cl)] [[T/fin [ha ?]] ?]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D mi(cl)] [[phi.T/fin [PRO.ha ?]] ?]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D mi(cl)] [[phi.T/fin [PRO.ha ?]] ?]]].
					=[[D loro] [[D mi(cl)] [[phi.T/fin [PRO.ha ?]] ?]]]
				2. Feature processing:
					=[[D loro] [[D mi(cl)] [[phi.T/fin [PRO.ha ?]] ?]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D mi(cl)] [[phi.T/fin [PRO.ha ?]] ?]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				? has double specifiers.
					Extraposition will be tried on [[D loro] [[D mi(cl)] [[phi.T/fin [PRO.ha ?]] ?]]].
					=[[D loro] [[D mi(cl)] [[phi.T/fin [PRO.ha ?]] ?]]]
				5. Agreement reconstruction:
					=[[D loro] [[D mi(cl)] [[phi.T/fin [PRO.ha ?]] ?]]]
			= [[D loro] [[D mi(cl)] [[T/fin [ha ?]] ?]]]
		Checking LF-interface conditions.
				? has double specifiers.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
?:['CAT:X', 'PF:?']
?:['CAT:X', 'PF:?']

D: [D]
loro: [N, D]
D: [D]
mi(cl): [N, D]
phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
?: [, V, TT/fin]
?: []


		Trying to find other solutions...
		Exploring solution number (2) =[? ?]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[D loro] [[D mi(cl)] [PRO.T/fin{V} [? ?]]]]

23.
	>>>	Trying candidate parse [[D loro] [[D mi(cl)] [T/fin{V} [? ?]]]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[D mi(cl)] [PRO.T/fin{V} [? ?]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[D mi(cl)] [PRO.T/fin{V} [? ?]]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [[D mi(cl)] [PRO.T/fin [PRO.ha [? ?]]]]]
					=[[D loro] [[D mi(cl)] [PRO.T/fin [PRO.ha [? ?]]]]]
				2. Feature processing:
					=[[D loro] [[D mi(cl)] [PRO.T/fin [PRO.ha [? ?]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[D mi(cl)] [PRO.T/fin [PRO.ha [? ?]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mi(cl) " into memory buffer from SPEC of "PRO.T/fin".
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					New head was spawned due to multiple specifiers at PRO.T/fin but its category is unknown!
					Memory buffer: [[D N], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [? [[D mi(cl)] [PRO.T/fin [[D loro] [PRO.ha [? ?]]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				[D mi(cl)] has no thematic role.
					Extraposition will be tried on [[D loro]:245 [? [[D mi(cl)] [PRO.T/fin [(DP):245 [PRO.ha [? ?]]]]]]].
					=[[D loro]:245 [? [[D mi(cl)] [PRO.T/fin [(DP):245 [PRO.ha [? ?]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M from the edge of phi.T/fin.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 from the edge of T/fin.
					=[[D loro]:245 [? [[D mi(cl)] [T/fin [(DP):245 [PRO.ha [? ?]]]]]]]
			= [[D loro] [? [[D mi(cl)] [T/fin [[D loro] [ha [? ?]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D mi(cl)] has no thematic role.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
?:['CAT:X', 'PF:?']
?:['CAT:X', 'PF:?']

D: [D]
loro: [N, D]
?: [?]
D: [D, ?]
mi(cl): [N, D, ?]
T/fin: [TT/fin, ?]
(D): [D, TT/fin, ?]
(N): [N, D, TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
?: [, V, TT/fin, ?]
?: [, , V, TT/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lavere".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volute".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] D{N}] T/fin]
			Transferring [[D loro] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] D{N}].
					Extracted head "mi(cl)" from D and created [[D loro] [D mi(cl)]]
					=[[D loro] [D mi(cl)]]
				2. Feature processing:
					=[[D loro] [D mi(cl)]]
				3. Floater movement reconstruction:
					=[[D loro] [D mi(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [D loro].
					Extraposition will be tried on [[D loro] [D mi(cl)]].
						<D mi(cl)> was made an adjunct.
					<D mi(cl)> was made adjunct by an extraposition rule.
					=[[D loro] <D mi(cl)>]
				5. Agreement reconstruction:
					=[[D loro] <D mi(cl)>]
			=[[[D loro] <D mi(cl)>] PRO.T/fin]

24.
		Consume "ha"

		[[[D loro] <D mi(cl)>] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[[D loro] <D mi(cl)>] PRO.T/fin{V}]

25.
		Consume "?"

		[[[D loro] <D mi(cl)>] T/fin{V}] + ?
			Filtering out impossible merge sites...
				Reject [[[[D loro] <D mi(cl)>] [T/fin [[[D loro] <D mi(cl)>] ha]]] ?] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} ?]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[[D loro] <D mi(cl)>] [PRO.T/fin{V} ?]]

26.
		Consume "?"

		[[[D loro] <D mi(cl)>] [T/fin{V} ?]] + ?
			Filtering out impossible merge sites...
				Reject [[[[D loro] <D mi(cl)>] [T/fin [[[D loro] <D mi(cl)>] [ha ?]]]] ?] due to bad left branch.
			Ranking remaining sites...
				Avoid ? because it could break words.
				[PRO.T/fin{V} ?] + ? = 1]
				? + ? = -96]
		Ranking completed:
			1. [[PRO.T/fin{V} ?]; ?]
			2. [?; ?]
		Exploring solution number (1) =[[PRO.T/fin{V} ?] ?]
			Transferring [PRO.T/fin{V} ?] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} ?].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha ?]]
					=[PRO.T/fin [PRO.ha ?]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha ?]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha ?]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha ?]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.ha ?]]
			=[[[D loro] <D mi(cl)>] [[phi.T/fin [PRO.ha ?]] ?]]

27.
	>>>	Trying candidate parse [[[D loro] <D mi(cl)>] [[T/fin [ha ?]] ?]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro] <D mi(cl)>] [[phi.T/fin [PRO.ha ?]] ?]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro] <D mi(cl)>] [[phi.T/fin [PRO.ha ?]] ?]].
					=[[[D loro] <D mi(cl)>] [[phi.T/fin [PRO.ha ?]] ?]]
				2. Feature processing:
					=[[[D loro] <D mi(cl)>] [[phi.T/fin [PRO.ha ?]] ?]]
				3. Floater movement reconstruction:
					=[[[D loro] <D mi(cl)>] [[phi.T/fin [PRO.ha ?]] ?]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro] <D mi(cl)>] [[phi.T/fin [PRO.ha ?]] ?]]
				5. Agreement reconstruction:
					=[[[D loro] <D mi(cl)>] [[phi.T/fin [PRO.ha ?]] ?]]
			= [[[D loro] <D mi(cl)>] [[T/fin [ha ?]] ?]]
		Checking LF-interface conditions.
			Trying to transfer [[[D loro] <D mi(cl)>] [[phi.T/fin [PRO.ha ?]] ?]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: 2. [[D loro] <D mi(cl)>] )
				Transfer to C-I successful.
			D<[D]> failed to tail features [-VAL][ARG]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
?:['CAT:X', 'PF:?']
?:['CAT:X', 'PF:?']

D: [D]
loro: [N, D]
D: [D]
mi(cl): [N, D]
phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
?: [, V, TT/fin]
?: []

			Let's find another solution...
.
.
.
		Exploring solution number (2) =[? ?]
			Transferring ? to LF.
				1. Head movement reconstruction:
					=?
				2. Feature processing:
					=?
				3. Floater movement reconstruction:
					=?
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=?
				5. Agreement reconstruction:
					=?
			=[[[D loro] <D mi(cl)>] [PRO.T/fin{V} [? ?]]]

28.
	>>>	Trying candidate parse [[[D loro] <D mi(cl)>] [T/fin{V} [? ?]]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro] <D mi(cl)>] [PRO.T/fin{V} [? ?]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro] <D mi(cl)>] [PRO.T/fin{V} [? ?]]].
						Extracted head "PRO.ha" and reconstructed it = [[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.ha [? ?]]]]
					=[[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.ha [? ?]]]]
				2. Feature processing:
					=[[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.ha [? ?]]]]
				3. Floater movement reconstruction:
					=[[[D loro] <D mi(cl)>] [PRO.T/fin [PRO.ha [? ?]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro D mi(cl) " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[[D N] [D N]]]
					Dropping constituent [[D loro] <D mi(cl)>] from memory buffer into Spec of PRO.ha
					Result [[[D loro] <D mi(cl)>] [PRO.T/fin [[[D loro] <D mi(cl)>] [PRO.ha [? ?]]]]]
				h(D) failed internal tail test.
					Extraposition will be tried on [[[D loro] <D mi(cl)>]:248 [PRO.T/fin [(DP):248 [PRO.ha [? ?]]]]].
					=[[[D loro] <D mi(cl)>]:248 [PRO.T/fin [(DP):248 [PRO.ha [? ?]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[[D loro] <D mi(cl)>]:248 [phi.T/fin [(DP):248 [PRO.ha [? ?]]]]]
			= [[[D loro] <D mi(cl)>] [T/fin [[[D loro] <D mi(cl)>] [ha [? ?]]]]]
		Checking LF-interface conditions.
				h(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
?:['CAT:X', 'PF:?']
?:['CAT:X', 'PF:?']

D: [D]
loro: [N, D]
D: [D]
mi(cl): [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
?: [, V, TT/fin]
?: [, , V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lavere".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volute".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "n$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 132
['hanno', 'mi#voluto', 'lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word mi#voluto.
		Next word contains multiple morphemes ['voluto_', 'mi']
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['inc$', 'to$', 'v$', 'volu-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.T/prt]

6.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} PRO.T/prt{v}]

7.
		Consume "volu"

		[T/fin{V} T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[PRO.T/fin{V} PRO.T/prt{v,V}]

8.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.volu" lacks complement
				Avoid [T/fin [ha [T/prt [v volu]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Avoid PRO.T/prt{v,V} because it could break words.
				[PRO.T/fin{V} PRO.T/prt{v,V}] + D = -197]
				PRO.T/prt{v,V} + D = -42]
		Ranking completed:
			1. [PRO.T/prt{v,V}; D]
			2. [[PRO.T/fin{V} PRO.T/prt{v,V}]; D]
		Exploring solution number (1) =[PRO.T/prt{v,V} D]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D]]

16.
		Consume "mi(cl)"

		[T/fin{V} [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]

17.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[T/fin{V} [T/prt{v,V} D{N}]] + are
			Filtering out impossible merge sites...
				Reject [[T D] PRO.are] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, are.
				Avoid D{N} because it could break words.
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] + are = -98]
				D{N} + are = 104]
		Ranking completed:
			1. [D{N}; are]
			2. [[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]]; are]
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are]]]

18.
		Consume "v"

		[T/fin{V} [T/prt{v,V} [[D mi(cl)] are]]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v}]]]

19.
		Consume "lava"

		[T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} [[D mi(cl)] PRO.are{v,V}]]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [[D mi(cl)] are{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] are]
			Transferring [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [PRO.T/prt{v,V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} D{N}]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} D{N}]]]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu D{N}]]]]]
					Extracted head "mi(cl)" from D and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]]
			=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] PRO.are]

21.
		Consume "v"

		[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] PRO.are{v}]

22.
		Consume "lava"

		[[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] PRO.are{v,V}]

23.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] are{v,V}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] PRO.are{v,V}].
					Extracted head "PRO.v{V}" from PRO.are and created [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]]
					=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha T/prt v volu D mi(cl) " into memory buffer from SPEC of "PRO.are".
					Memory buffer: [[TT/fin [V [T [v [V [D N]]]]]]]
				PRO.are has unaccetable specifier [phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]].
					Extraposition will be tried on [[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]].
					=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]] [PRO.are [PRO.v PRO.lava]]]
			= [[T/fin [ha [T/prt [v [volu [D mi(cl)]]]]]] [are [v lava]]]
		Checking LF-interface conditions.
				PRO.are has unaccetable specifier [phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [D mi(cl)]]]]]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
volu:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:IT', 'LF:want', 'PF:volu', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
mi(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:me', 'PF:mi(cl)', 'SPEC:A']
are:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARE/inf', 'CAT:ARE/inf/ARG/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:ARE/inf', 'PF:are', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
PRO.T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.volu: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
mi(cl): [N, D, V, v, T, V, TT/fin]
PRO.are: [INF]
PRO.v: [v, INF]
PRO.lava: [V, v, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} PRO.T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.T/prt{v,V}]]
					Extracted head "PRO.v{V}" from PRO.T/prt and created [PRO.T/fin [PRO.ha [PRO.T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.volu" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				A phi-marked head "PRO.volu" lacks complement
					Extraposition will be tried on [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]].
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]]
			=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]] D]

24.
		Consume "mi(cl)"

		[[T/fin [ha [T/prt [v volu]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]] D{N}]

25.
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['ARE/inf$', 'v$', 'lava-']
		Consume "are"

		[[T/fin [ha [T/prt [v volu]]]] D{N}] + are
			Filtering out impossible merge sites...
				Reject [[[T/fin [ha [T/prt [v volu]]]] <D mi(cl)>] PRO.are] due to bad left branch.
		Exploring solution number (1) =[D{N} are]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "mi(cl)" from D and created [D mi(cl)]
					D was opened into [D mi(cl)].
					=[D mi(cl)]
				2. Feature processing:
					=[D mi(cl)]
				3. Floater movement reconstruction:
					=[D mi(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D mi(cl)]
				5. Agreement reconstruction:
					=[D mi(cl)]
			=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]] [[D mi(cl)] PRO.are]]

26.
		Consume "v"

		[[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]] [[D mi(cl)] PRO.are{v}]]

27.
		Consume "lava"

		[[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v PRO.volu]]]] [[D mi(cl)] PRO.are{v,V}]]

28.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v volu]]]] [[D mi(cl)] are{v,V}]] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 133
['hanno', 'voluto', 'mi#lavare']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word volu-#v#to.
		Next word contains multiple morphemes ['to$', 'v$', 'volu-']
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.T/prt]

5.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt*v]
			=[PRO.T/fin{V} PRO.T/prt{v}]

6.
		Consume "volu"

		[T/fin{V} T/prt{v}] + volu
			Filtering out impossible merge sites...
			Sink "volu" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/prt{v}*volu]
			=[PRO.T/fin{V} PRO.T/prt{v,V}]

7.
		Decomposing a polymorphemic word mi#lavare.
		Next word contains multiple morphemes ['lavare_', 'mi']
		Decomposing a polymorphemic word lava-#v#ARE/inf.
		Next word contains multiple morphemes ['inc$', 'ARE/inf$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "ARE/inf$"

		Adding inflectional features to are
		Consume "are"

		[T/fin{V} T/prt{v,V}] + are
			Filtering out impossible merge sites...
				Reject [[T/fin [ha [T/prt [v volu]]]] PRO.are] due to bad left branch.
		Exploring solution number (1) =[PRO.T/prt{v,V} are]
			Transferring PRO.T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/prt{v,V}
				2. Feature processing:
					=PRO.T/prt{v,V}
				3. Floater movement reconstruction:
					=PRO.T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/prt{v,V}" lacks complement
					=PRO.T/prt{v,V}
				5. Agreement reconstruction:
					=PRO.T/prt{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are]]

9.
		Consume "v"

		[T/fin{V} [T/prt{v,V} are]] + v
			Filtering out impossible merge sites...
			Sink "v" into are because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are*v]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v}]]

10.
		Consume "lava"

		[T/fin{V} [T/prt{v,V} are{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.are{v}*lava]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} [T/prt{v,V} are{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [[PRO.T/prt{v,V} PRO.are{v,V}], D] because the operation breaks up an existing selectional dependency.
				Avoid [are{v,V} D] due to local agreement failure.
				Prioritize [lava D] due to complement selection.
				Avoid PRO.are{v,V} because it could break words.
				[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]] + D = -98]
				[PRO.T/prt{v,V} PRO.are{v,V}] + D = -96]
				PRO.are{v,V} + D = -38]
		Ranking completed:
			1. [PRO.are{v,V}; D]
			2. [[PRO.T/prt{v,V} PRO.are{v,V}]; D]
			3. [[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]]; D]
		Exploring solution number (1) =[PRO.are{v,V} D]
			Transferring PRO.are{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.are{v,V}
				2. Feature processing:
					=PRO.are{v,V}
				3. Floater movement reconstruction:
					=PRO.are{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.are{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.are{v,V}" lacks complement
					=PRO.are{v,V}
				5. Agreement reconstruction:
					=PRO.are{v,V}
			=[PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D]]]

19.
		Consume "mi(cl)"

		[T/fin{V} [T/prt{v,V} [are{v,V} D]]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} [PRO.T/prt{v,V} [PRO.are{v,V} D{N}]]]

20.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [are{v,V} D{N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/prt{v,V} PRO.are{v,V}] D]
			Transferring [PRO.T/prt{v,V} PRO.are{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/prt{v,V} PRO.are{v,V}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
				5. Agreement reconstruction:
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]
			=[PRO.T/fin{V} [[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]] D]]

21.
		Consume "mi(cl)"

		[T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[PRO.T/fin{V} [[PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]] D{N}]]

22.
	>>>	Trying candidate parse [T/fin{V} [[T/prt [v [volu [are [v lava]]]]] D{N}]] (2.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]] D]
			Transferring [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [PRO.T/prt{v,V} PRO.are{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt{v,V} PRO.are{v,V}]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v{V} PRO.are{v,V}]]]]
						Extracted head "PRO.volu" and reconstructed it = [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu PRO.are{v,V}]]]]]
					Extracted head "PRO.v{V}" from PRO.are and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are PRO.v{V}]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					PRO.T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					PRO.are has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]]
			=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]] D]

23.
		Consume "mi(cl)"

		[[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[phi.T/fin [PRO.ha [PRO.T/prt [PRO.v [PRO.volu [PRO.are [PRO.v PRO.lava]]]]]]] D{N}]

24.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v [volu [are [v lava]]]]]]] D{N}] (3.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ARE/inf$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavare".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "volu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "voluto".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 134
['loro', 'gli#lavano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word gli#lavano.
		Next word contains multiple morphemes ['lavano_', 'gli']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D loro] PRO.T/fin{v}]

11.
		Consume "lava"

		[[D loro] T/fin{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=[[D loro] PRO.T/fin{v,V}]

12.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[D loro] T/fin{v,V}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				Prioritize [lava P] due to complement selection.
				[[D loro] PRO.T/fin{v,V}] + P = -98]
				PRO.T/fin{v,V} + P = 104]
		Ranking completed:
			1. [PRO.T/fin{v,V}; P]
			2. [[[D loro] PRO.T/fin{v,V}]; P]
		Exploring solution number (1) =[PRO.T/fin{v,V} P]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[[D loro] [PRO.T/fin{v,V} PRO.P]]

14.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{v,V} P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[D loro] [PRO.T/fin{v,V} PRO.P{D}]]

21.
		Consume "lo(cl)"

		[[D loro] [T/fin{v,V} P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[D loro] [PRO.T/fin{v,V} PRO.P{D,N}]]

22.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{v,V} P{D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Prioritize [P{D,N} D] due to complement selection.
				Avoid PRO.P{D,N} because it could break words.
				[[D loro] [PRO.T/fin{v,V} PRO.P{D,N}]] + D = -98]
				[PRO.T/fin{v,V} PRO.P{D,N}] + D = -96]
				PRO.P{D,N} + D = 9]
		Ranking completed:
			1. [PRO.P{D,N}; D]
			2. [[PRO.T/fin{v,V} PRO.P{D,N}]; D]
			3. [[[D loro] [PRO.T/fin{v,V} PRO.P{D,N}]]; D]
		Exploring solution number (1) =[PRO.P{D,N} D]
			Transferring PRO.P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					PRO.P was opened into [PRO.P [D lo(cl)]].
					=[PRO.P [D lo(cl)]]
				2. Feature processing:
					=[PRO.P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[PRO.P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.P [D lo(cl)]]
				5. Agreement reconstruction:
					=[PRO.P [D lo(cl)]]
			=[[D loro] [PRO.T/fin{v,V} [[PRO.P [D lo(cl)]] D]]]

28.
		Consume "Luisa"

		[[D loro] [T/fin{v,V} [[P [D lo(cl)]] D]]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{v,V} [[PRO.P [D lo(cl)]] D{N}]]]

29.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} [[P [D lo(cl)]] D{N}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{v,V} [[PRO.P [D lo(cl)]] D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{v,V} [[PRO.P [D lo(cl)]] D{N}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v{V} [[PRO.P [D lo(cl)]] D{N}]]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] D{N}]]]]]
					Extracted head "Luisa" from D and created [[D loro] [PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]]]
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]]]]
				D has unaccetable specifier [PRO.P [D lo(cl)]].
					Extraposition will be tried on [[D loro]:224 [PRO.T/fin [(DP):224 [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]]]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[[D loro]:224 [PRO.T/fin [(DP):224 [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] <D Luisa>]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:224 [phi.T/fin [(DP):224 [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] <D Luisa>]]]]]]
			= [[D loro] [T/fin [[D loro] [v [lava [[P [D lo(cl)]] <D Luisa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:224 [phi.T/fin [(DP):224 [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] <D Luisa>]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.P([D lo(cl)])', 'PRO.lava([D loro])', 'PRO.v([D loro])']
!--->		Tests passed (with 29/231 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [lava [[P [D lo(cl)]] <D Luisa>]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] <D Luisa>]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [[P [D N]] DP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
PRO.P: [P, V, v, TT/fin]
D: [D, P, V, v, TT/fin]
lo(cl): [N, D, P, V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 135
['gli#lavano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word gli#lavano.
		Next word contains multiple morphemes ['lavano_', 'gli']
		Decomposing a polymorphemic word lava-#v#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

5.
		Consume "lava"

		T/fin{v} + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*lava]
			=PRO.T/fin{v,V}

6.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:IT', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		T/fin{v,V} + P
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} P]
			Transferring PRO.T/fin{v,V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{v,V}
				2. Feature processing:
					=PRO.T/fin{v,V}
				3. Floater movement reconstruction:
					=PRO.T/fin{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
					=PRO.T/fin{v,V}
				5. Agreement reconstruction:
					=PRO.T/fin{v,V}
			=[PRO.T/fin{v,V} PRO.P]

8.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{v,V} P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[PRO.T/fin{v,V} PRO.P{D}]

15.
		Consume "lo(cl)"

		[T/fin{v,V} P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[PRO.T/fin{v,V} PRO.P{D,N}]

16.
		Decomposing a polymorphemic word Luisa-#D#sg#3p#def#hum#f.
		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{v,V} P{D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [P{D,N} D] due to complement selection.
				Avoid PRO.P{D,N} because it could break words.
				[PRO.T/fin{v,V} PRO.P{D,N}] + D = -98]
				PRO.P{D,N} + D = 6]
		Ranking completed:
			1. [PRO.P{D,N}; D]
			2. [[PRO.T/fin{v,V} PRO.P{D,N}]; D]
		Exploring solution number (1) =[PRO.P{D,N} D]
			Transferring PRO.P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					PRO.P was opened into [PRO.P [D lo(cl)]].
					=[PRO.P [D lo(cl)]]
				2. Feature processing:
					=[PRO.P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[PRO.P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.P [D lo(cl)]]
				5. Agreement reconstruction:
					=[PRO.P [D lo(cl)]]
			=[PRO.T/fin{v,V} [[PRO.P [D lo(cl)]] D]]

22.
		Consume "Luisa"

		[T/fin{v,V} [[P [D lo(cl)]] D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} [[PRO.P [D lo(cl)]] D{N}]]

23.
	>>>	Trying candidate parse [T/fin{v,V} [[P [D lo(cl)]] D{N}]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{v,V} [[PRO.P [D lo(cl)]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} [[PRO.P [D lo(cl)]] D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} [[PRO.P [D lo(cl)]] D{N}]]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] D{N}]]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]]
					=[PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [PRO.P [D lo(cl)]].
					Extraposition will be tried on [PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] [D Luisa]]]]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
					=[PRO.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] <D Luisa>]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] <D Luisa>]]]]
			= [T/fin [v [lava [[P [D lo(cl)]] <D Luisa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] <D Luisa>]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.P([D lo(cl)])', 'PRO.lava(T/fin)', 'PRO.v(T/fin)']
!--->		Tests passed (with 23/174 operations) <------------------------------------
		Solution:
		[T/fin [v [lava [[P [D lo(cl)]] <D Luisa>]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.lava [[PRO.P [D lo(cl)]] <D Luisa>]]]]
		Spellout TT/finP = [TT/fin [v [V [[P [D N]] DP]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.lava: [V, v, TT/fin]
PRO.P: [P, V, v, TT/fin]
D: [D, P, V, v, TT/fin]
lo(cl): [N, D, P, V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 136
['loro', 'gli#la#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word gli#la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la_', 'gli']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

11.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D loro] PRO.T/fin{V}] + D = -98]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D loro] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} D]]

20.
		Consume "la(cl)"

		[[D loro] [T/fin{V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.T/fin{V} D{N}]]

21.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[D loro] [T/fin{V} D{N}]] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				Avoid TT/finP as SPEC, P.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} D{N}]] + P = -98]
				[PRO.T/fin{V} D{N}] + P = -96]
				D{N} + P = 106]
		Ranking completed:
			1. [D{N}; P]
			2. [[PRO.T/fin{V} D{N}]; P]
			3. [[[D loro] [PRO.T/fin{V} D{N}]]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.P]]]

23.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} [[D la(cl)] P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.P{D}]]]

30.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} [[D la(cl)] P{D}]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.P{D,N}]]]

31.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} [[D la(cl)] P{D,N}]]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D N] P] T/prt] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.P{D,N}]]] + T/prt = -98]
				[PRO.T/fin{V} [[D la(cl)] PRO.P{D,N}]] + T/prt = -96]
				PRO.P{D,N} + T/prt = 3]
		Ranking completed:
			1. [PRO.P{D,N}; T/prt]
			2. [[PRO.T/fin{V} [[D la(cl)] PRO.P{D,N}]]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} [[D la(cl)] PRO.P{D,N}]]]; T/prt]
		Exploring solution number (1) =[PRO.P{D,N} T/prt]
			Transferring PRO.P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					PRO.P was opened into [PRO.P [D lo(cl)]].
					=[PRO.P [D lo(cl)]]
				2. Feature processing:
					=[PRO.P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[PRO.P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.P [D lo(cl)]]
				5. Agreement reconstruction:
					=[PRO.P [D lo(cl)]]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt]]]]

38.
		Consume "v"

		[[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt{v}]]]]

39.
		Consume "lava"

		[[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt{v,V}]]]]

40.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt{v,V}]]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt{v,V}]]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt{v,V}]]]]]
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [[PRO.P [D lo(cl)]] [T/prt PRO.v{V}]]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [[PRO.P [D lo(cl)]] [T/prt [PRO.v PRO.lava]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [[PRO.P [D lo(cl)]] [T/prt [PRO.v PRO.lava]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [[PRO.P [D lo(cl)]] [T/prt [PRO.v PRO.lava]]]]]]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [PRO.P [D lo(cl)]]
						<PRO.P [D lo(cl)]> was made an adjunct.
						Floater <P [D lo(cl)]> dropped.
						 = [[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v PRO.lava] <PP>:1]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[D la(cl)] [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v PRO.lava] <PP>:1]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[D la(cl)] [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v PRO.lava] <PP>:1]]]]]]]]
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:231 [PRO.T/fin [(DP):231 [PRO.ha [[D la(cl)]:232 [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v [PRO.lava (DP):232]] <PP>:1]]]]]]]]
					Remaining items in memory buffer: []
					=[[D loro]:231 [PRO.T/fin [(DP):231 [PRO.ha [[D la(cl)]:232 [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v [PRO.lava (DP):232]] <PP>:1]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[D loro]:231 [phi.T/fin [(DP):231 [PRO.ha [[D la(cl)]:232 [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v [PRO.lava (DP):232]] <PP>:1]]]]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:231 [phi.T/fin [(DP):231 [PRO.ha [[D la(cl)]:232 [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v [PRO.lava (DP):232]] <PP>:1]]]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. T/prt 3. [D la(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/prt 3. T/prt 4. [D la(cl)] 5. [D loro] 6. T/fin 7. [D loro] )
				(P) with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/prt 3. [D la(cl)] 4. [D loro] 5. T/fin 6. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['(P)([D lo(cl)])', 'PRO.ha([[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]])', 'PRO.lava([D la(cl)])', 'PRO.v(T/prt)']
!--->		Tests passed (with 40/319 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [ha [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.ha [[D la(cl)]:2 [<PRO.P [D lo(cl)]>:3 [T/prt [[PRO.v [PRO.lava (DP):2]] <PP>:3]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [PP:3 [T [[v [V __:2]] __:3]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
PRO.P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(D): [D, V, v, T, V, TT/fin]
(N): [N, D, V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 137
['gli#la#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word gli#la#hanno.
		Next word contains multiple morphemes ['hanno_', 'la_', 'gli']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} D]

14.
		Consume "la(cl)"

		[T/fin{V} D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.T/fin{V} D{N}]

15.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:IT', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[T/fin{V} D{N}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} D{N}] + P = -98]
				D{N} + P = 104]
		Ranking completed:
			1. [D{N}; P]
			2. [[PRO.T/fin{V} D{N}]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[PRO.T/fin{V} [[D la(cl)] PRO.P]]

17.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} [[D la(cl)] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[PRO.T/fin{V} [[D la(cl)] PRO.P{D}]]

24.
		Consume "lo(cl)"

		[T/fin{V} [[D la(cl)] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[PRO.T/fin{V} [[D la(cl)] PRO.P{D,N}]]

25.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} [[D la(cl)] P{D,N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D N] P] T/prt] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				[PRO.T/fin{V} [[D la(cl)] PRO.P{D,N}]] + T/prt = -98]
				PRO.P{D,N} + T/prt = 2]
		Ranking completed:
			1. [PRO.P{D,N}; T/prt]
			2. [[PRO.T/fin{V} [[D la(cl)] PRO.P{D,N}]]; T/prt]
		Exploring solution number (1) =[PRO.P{D,N} T/prt]
			Transferring PRO.P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					PRO.P was opened into [PRO.P [D lo(cl)]].
					=[PRO.P [D lo(cl)]]
				2. Feature processing:
					=[PRO.P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[PRO.P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.P [D lo(cl)]]
				5. Agreement reconstruction:
					=[PRO.P [D lo(cl)]]
			=[PRO.T/fin{V} [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt]]]

32.
		Consume "v"

		[T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[PRO.T/fin{V} [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt{v}]]]

33.
		Consume "lava"

		[T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[PRO.T/fin{V} [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt{v,V}]]]

34.
	>>>	Trying candidate parse [T/fin{V} [[D la(cl)] [[P [D lo(cl)]] T/prt{v,V}]]] (1.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt{v,V}]]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[D la(cl)] [[PRO.P [D lo(cl)]] T/prt{v,V}]]]]
					Extracted head "PRO.v{V}" from T/prt and created [PRO.T/fin [PRO.ha [[D la(cl)] [[PRO.P [D lo(cl)]] [T/prt PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [[D la(cl)] [[PRO.P [D lo(cl)]] [T/prt [PRO.v PRO.lava]]]]]]
					=[PRO.T/fin [PRO.ha [[D la(cl)] [[PRO.P [D lo(cl)]] [T/prt [PRO.v PRO.lava]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[D la(cl)] [[PRO.P [D lo(cl)]] [T/prt [PRO.v PRO.lava]]]]]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [PRO.P [D lo(cl)]]
						<PRO.P [D lo(cl)]> was made an adjunct.
						Floater <P [D lo(cl)]> dropped.
						 = [PRO.T/fin [PRO.ha [[D la(cl)] [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v PRO.lava] <PP>:1]]]]]]
					=[PRO.T/fin [PRO.ha [[D la(cl)] [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v PRO.lava] <PP>:1]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[D N]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [PRO.T/fin [PRO.ha [[D la(cl)]:249 [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v [PRO.lava (DP):249]] <PP>:1]]]]]]
					Remaining items in memory buffer: []
					=[PRO.T/fin [PRO.ha [[D la(cl)]:249 [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v [PRO.lava (DP):249]] <PP>:1]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from [D la(cl)]:249.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[phi.T/fin [PRO.ha [[D la(cl)]:249 [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v [PRO.lava (DP):249]] <PP>:1]]]]]]
			= [T/fin [ha [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.ha [[D la(cl)]:249 [<PRO.P [D lo(cl)]>:1 [T/prt [[PRO.v [PRO.lava (DP):249]] <PP>:1]]]]]] into Conceptual-Intentional system...
				PRO.ha with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/prt    (alternatives: 2. T/prt 3. [D la(cl)] 4. T/fin )
				PRO.lava with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D la(cl)]    (alternatives: 2. T/prt 3. T/prt 4. [D la(cl)] 5. T/fin )
				(P) with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lo(cl)]    (alternatives: 2. T/prt 3. [D la(cl)] 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['(P)([D lo(cl)])', 'PRO.ha([[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]])', 'PRO.lava([D la(cl)])', 'PRO.v(T/prt)']
!--->		Tests passed (with 34/259 operations) <------------------------------------
		Solution:
		[T/fin [ha [[D la(cl)] [<P [D lo(cl)]> [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]]]
		Grammar: [phi.T/fin [PRO.ha [[D la(cl)]:1 [<PRO.P [D lo(cl)]>:2 [T/prt [[PRO.v [PRO.lava (DP):1]] <PP>:2]]]]]]
		Spellout TT/finP = [TT/fin [V [DP:1 [PP:2 [T [[v [V __:1]] __:2]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
PRO.P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(D): [D, V, v, T, V, TT/fin]
(N): [N, D, V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 138
['loro', 'la#gli#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word la#gli#hanno.
		Next word contains multiple morphemes ['hanno_', 'gli_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

10.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

11.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['inc$', 'dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "dat$"
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[D loro] T/fin{V}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				Prioritize [ha P] due to complement selection.
				[[D loro] PRO.T/fin{V}] + P = -98]
				PRO.T/fin{V} + P = 104]
		Ranking completed:
			1. [PRO.T/fin{V}; P]
			2. [[[D loro] PRO.T/fin{V}]; P]
		Exploring solution number (1) =[PRO.T/fin{V} P]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} PRO.P]]

14.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[D loro] [PRO.T/fin{V} PRO.P{D}]]

21.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[D loro] [PRO.T/fin{V} PRO.P{D,N}]]

22.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} P{D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Prioritize [P{D,N} D] due to complement selection.
				Avoid PRO.P{D,N} because it could break words.
				[[D loro] [PRO.T/fin{V} PRO.P{D,N}]] + D = -98]
				[PRO.T/fin{V} PRO.P{D,N}] + D = -96]
				PRO.P{D,N} + D = 9]
		Ranking completed:
			1. [PRO.P{D,N}; D]
			2. [[PRO.T/fin{V} PRO.P{D,N}]; D]
			3. [[[D loro] [PRO.T/fin{V} PRO.P{D,N}]]; D]
		Exploring solution number (1) =[PRO.P{D,N} D]
			Transferring PRO.P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					PRO.P was opened into [PRO.P [D lo(cl)]].
					=[PRO.P [D lo(cl)]]
				2. Feature processing:
					=[PRO.P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[PRO.P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.P [D lo(cl)]]
				5. Agreement reconstruction:
					=[PRO.P [D lo(cl)]]
			=[[D loro] [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D]]]

30.
		Consume "la(cl)"

		[[D loro] [T/fin{V} [[P [D lo(cl)]] D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]]]

31.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [T/fin{V} [[P [D lo(cl)]] D{N}]]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[P [D N]] D] T/prt] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Avoid TT/finP as SPEC, T/prt.
				[[D loro] [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]]] + T/prt = -98]
				[PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]] + T/prt = -96]
				D{N} + T/prt = 3]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]]; T/prt]
			3. [[[D loro] [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [PRO.T/fin{V} [[PRO.P [D lo(cl)]] [[D la(cl)] T/prt]]]]

38.
		Consume "v"

		[[D loro] [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [PRO.T/fin{V} [[PRO.P [D lo(cl)]] [[D la(cl)] T/prt{v}]]]]

39.
		Consume "lava"

		[[D loro] [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v}]]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} [[PRO.P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]]]

40.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]] T/prt]
			Transferring [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] D{N}]]]
					Extracted head "la(cl)" from D and created [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]
					=[PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [PRO.P [D lo(cl)]]
					=[PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [PRO.P [D lo(cl)]].
					Extraposition will be tried on [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					=[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]
			=[[D loro] [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] T/prt]]

41.
		Consume "v"

		[[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] T/prt{v}]]

42.
		Consume "lava"

		[[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}]]

43.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[TT/fin [V [[P [D N]] [D N]]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				T/prt has unaccetable specifier [phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]].
					Extraposition will be tried on [[D loro]:239 [? [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [(DP):239 [PRO.v PRO.lava]]]]]].
					=[[D loro]:239 [? [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [(DP):239 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from (DP):239.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N by phi-Agree from (DP):239.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL by phi-Agree from (DP):239.
					T/prt acquired PHI:PER:3 by phi-Agree from (DP):239.
					=[[D loro]:239 [? [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [(DP):239 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				T/prt has unaccetable specifier [phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
PRO.P: [P, V, TT/fin, ?]
D: [D, P, V, TT/fin, ?]
lo(cl): [N, D, P, V, TT/fin, ?]
D: [D, V, TT/fin, ?]
la(cl): [N, D, V, TT/fin, ?]
T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]]] T/prt]
			Transferring [[D loro] [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] D{N}]]]]
					Extracted head "la(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [PRO.P [D lo(cl)]]
					=[[D loro] [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]]]
				D has unaccetable specifier [PRO.P [D lo(cl)]].
					Extraposition will be tried on [[D loro]:240 [PRO.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[D loro]:240 [PRO.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]]
			=[[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] T/prt]

44.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v}]

45.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v,V}]

46.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [[P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v,V}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [[P [D N]] [D N]]]]]]]
				T/prt has unaccetable specifier [[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]].
					Extraposition will be tried on [[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [PRO.v PRO.lava]]]
			= [[[D loro] [T/fin [[D loro] [ha [[P [D lo(cl)]] <D la(cl)>]]]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[D loro]:240 [phi.T/fin [(DP):240 [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.P{D,N}] D]
			Transferring [PRO.T/fin{V} PRO.P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.P{D,N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.P{D,N}]]
					Extracted head "D{N}" from PRO.P and created [PRO.T/fin [PRO.ha [PRO.P D{N}]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.T/fin [PRO.ha [PRO.P [D lo(cl)]]]]
					=[PRO.T/fin [PRO.ha [PRO.P [D lo(cl)]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.P [D lo(cl)]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
					=[PRO.T/fin [PRO.ha <PRO.P [D lo(cl)]>]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha <PRO.P [D lo(cl)]>]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]]
			=[[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D]]

47.
		Consume "la(cl)"

		[[D loro] [[T/fin [ha <P [D lo(cl)]>]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}]]

48.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] [[T/fin [ha <P [D lo(cl)]>]] D{N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[D loro] [[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>]] T/prt] due to bad left branch.
			Ranking remaining sites...
				[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] T/prt]]]

55.
		Consume "v"

		[[D loro] [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] T/prt{v}]]]

56.
		Consume "lava"

		[[D loro] [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]]]

57.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]]] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]]].
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] [T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]
					=[[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "T/fin ha P D lo(cl) " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [TT/fin [V [P [D N]]]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [? [[D la(cl)] [T/prt [[D loro] [PRO.v PRO.lava]]]]]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[D loro]:241 [? [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [? [[D la(cl)]:242 [T/prt [(DP):241 [PRO.v [PRO.lava (DP):242]]]]]]]]]
					Remaining items in memory buffer: [[TT/fin [V [P [D N]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[D loro]:241 [? [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [? [[D la(cl)]:242 [T/prt [(DP):241 [PRO.v [PRO.lava (DP):242]]]]]]]]].
					=[[D loro]:241 [? [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [? [[D la(cl)]:242 [T/prt [(DP):241 [PRO.v [PRO.lava (DP):242]]]]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[D loro]:241 [? [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [? [[D la(cl)]:242 [T/prt [(DP):241 [PRO.v [PRO.lava (DP):242]]]]]]]]]
			= [[D loro] [? [[T/fin [ha <P [D lo(cl)]>]] [? [[D la(cl)] [T/prt [[D loro] [v [lava [D la(cl)]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
PRO.P: [P, V, TT/fin, ?]
D: [D, P, V, TT/fin, ?]
lo(cl): [N, D, P, V, TT/fin, ?]
?: [?, ?]
D: [D, ?, ?]
la(cl): [N, D, ?, ?]
T/prt: [T, ?, ?]
(D): [D, T, ?, ?]
(N): [N, D, T, ?, ?]
PRO.v: [v, T, ?, ?]
PRO.lava: [V, v, T, ?, ?]
(D): [D, V, v, T, ?, ?]
(N): [N, D, V, v, T, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}] T/prt]
			Transferring [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}].
					Extracted head "la(cl)" from D and created [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [D la(cl)]]
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [D la(cl)]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]].
					Extraposition will be tried on [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>]
				5. Agreement reconstruction:
					phi.T/fin has unvalued phi-features ['PHI:GEN:_']
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>]
			=[[D loro] [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] T/prt]]

58.
		Consume "v"

		[[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] T/prt{v}]]

59.
		Consume "lava"

		[[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}]]

60.
	>>>	Trying candidate parse [[D loro] [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}]] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]]
					=[[D loro] [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[D loro] [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[D loro] [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[[TT/fin [V [P [D N]]]] [D N]], [D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.v
					Result [[D loro] [? [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [[D loro] [PRO.v PRO.lava]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				T/prt has unaccetable specifier [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>].
					Extraposition will be tried on [[D loro]:243 [? [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [(DP):243 [PRO.v PRO.lava]]]]]].
					=[[D loro]:243 [? [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [(DP):243 [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF by phi-Agree from (DP):243.
					Feature PHI:GEN:N was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:GEN:N by phi-Agree from (DP):243.
					Feature PHI:NUM:PL was not matched in T/prt and was marked as bad.
					T/prt acquired PHI:NUM:PL by phi-Agree from (DP):243.
					T/prt acquired PHI:PER:3 by phi-Agree from (DP):243.
					=[[D loro]:243 [? [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [(DP):243 [PRO.v PRO.lava]]]]]]
			= [[D loro] [? [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [[D loro] [v lava]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				T/prt has unaccetable specifier [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
?: [?]
phi.T/fin: [TT/fin, ?]
PRO.ha: [V, TT/fin, ?]
PRO.P: [P, V, TT/fin, ?]
D: [D, P, V, TT/fin, ?]
lo(cl): [N, D, P, V, TT/fin, ?]
D: [D, ?]
la(cl): [N, D, ?]
T/prt: [T, ?]
(D): [D, T, ?]
(N): [N, D, T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} PRO.P{D,N}]] D]
			Transferring [[D loro] [PRO.T/fin{V} PRO.P{D,N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} PRO.P{D,N}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha PRO.P{D,N}]]]
					Extracted head "D{N}" from PRO.P and created [[D loro] [PRO.T/fin [PRO.ha [PRO.P D{N}]]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [PRO.P [D lo(cl)]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.P [D lo(cl)]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [PRO.P [D lo(cl)]]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
					=[[D loro] [PRO.T/fin [PRO.ha <PRO.P [D lo(cl)]>]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha <PRO.P [D lo(cl)]>]]]]
					=[[D loro]:244 [PRO.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]]
			=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] D]

61.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] D{N}]

62.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [[D la(cl)] T/prt]]

69.
		Consume "v"

		[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [[D la(cl)] T/prt{v}]]

70.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [[D la(cl)] T/prt{v,V}]]

71.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] [[D la(cl)] T/prt{v,V}]] (6.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [[D la(cl)] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [[D la(cl)] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [[D la(cl)] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
					=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro T/fin __ha P D lo(cl) " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [[D N] [TT/fin [[D N] [V [P [D N]]]]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [? [[D la(cl)]:245 [T/prt [PRO.v [PRO.lava (DP):245]]]]]]
					Remaining items in memory buffer: [[[D N] [TT/fin [[D N] [V [P [D N]]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [? [[D la(cl)]:245 [T/prt [PRO.v [PRO.lava (DP):245]]]]]].
					=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [? [[D la(cl)]:245 [T/prt [PRO.v [PRO.lava (DP):245]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [? [[D la(cl)]:245 [T/prt [PRO.v [PRO.lava (DP):245]]]]]]
			= [[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] [? [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
?: [?]
D: [D, ?]
la(cl): [N, D, ?]
T/prt: [T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]
(D): [D, V, v, T, ?]
(N): [N, D, V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] D{N}] T/prt]
			Transferring [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] D{N}].
					Extracted head "la(cl)" from D and created [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [D la(cl)]]
					=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [D la(cl)]]
				2. Feature processing:
					=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]].
					Extraposition will be tried on [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>]
				5. Agreement reconstruction:
					=[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>]
			=[[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] T/prt]

72.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v}]

73.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v,V}]

74.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v,V}] (7.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
					=[[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[D N] [TT/fin [[D N] [V [P [D N]]]]]] [D N]]]
				T/prt has unaccetable specifier [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>].
					Extraposition will be tried on [[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]].
					=[[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
			= [[[[D loro] [T/fin [[D loro] [ha <P [D lo(cl)]>]]]] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[[D loro]:244 [phi.T/fin [(DP):244 [PRO.ha <PRO.P [D lo(cl)]>]]]] <D la(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
D: [D]
la(cl): [N, D]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] P]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:246 [PRO.T/fin [(DP):246 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] PRO.P]

75.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] PRO.P{D}]

82.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] PRO.P{D,N}]

83.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] P{D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid PP as SPEC, D.
				Prioritize [P{D,N} D] due to complement selection.
				[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] PRO.P{D,N}] + D = -98]
				PRO.P{D,N} + D = 104]
		Ranking completed:
			1. [PRO.P{D,N}; D]
			2. [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] PRO.P{D,N}]; D]
		Exploring solution number (1) =[PRO.P{D,N} D]
			Transferring PRO.P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					PRO.P was opened into [PRO.P [D lo(cl)]].
					=[PRO.P [D lo(cl)]]
				2. Feature processing:
					=[PRO.P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[PRO.P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.P [D lo(cl)]]
				5. Agreement reconstruction:
					=[PRO.P [D lo(cl)]]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[PRO.P [D lo(cl)]] D]]

91.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[PRO.P [D lo(cl)]] D{N}]]

92.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] D{N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] <D la(cl)>]] T/prt] due to bad left branch.
			Ranking remaining sites...
				[[PRO.P [D lo(cl)]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[PRO.P [D lo(cl)]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[PRO.P [D lo(cl)]] [[D la(cl)] T/prt]]]

99.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[PRO.P [D lo(cl)]] [[D la(cl)] T/prt{v}]]]

100.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[PRO.P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]]

101.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]] (8.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[PRO.P [D lo(cl)]] D{N}] T/prt]
			Transferring [[PRO.P [D lo(cl)]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[PRO.P [D lo(cl)]] D{N}].
					Extracted head "la(cl)" from D and created [[PRO.P [D lo(cl)]] [D la(cl)]]
					=[[PRO.P [D lo(cl)]] [D la(cl)]]
				2. Feature processing:
					=[[PRO.P [D lo(cl)]] [D la(cl)]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [PRO.P [D lo(cl)]]
					=[[PRO.P [D lo(cl)]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [PRO.P [D lo(cl)]].
					Extraposition will be tried on [[PRO.P [D lo(cl)]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[PRO.P [D lo(cl)]] <D la(cl)>]
				5. Agreement reconstruction:
					=[[PRO.P [D lo(cl)]] <D la(cl)>]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[[PRO.P [D lo(cl)]] <D la(cl)>] T/prt]]

102.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] [[[P [D lo(cl)]] <D la(cl)>] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[[PRO.P [D lo(cl)]] <D la(cl)>] T/prt{v}]]

103.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] [[[P [D lo(cl)]] <D la(cl)>] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[[PRO.P [D lo(cl)]] <D la(cl)>] T/prt{v,V}]]

104.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[[P [D lo(cl)]] <D la(cl)>] T/prt{v,V}]] (9.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[[PRO.P [D lo(cl)]] <D la(cl)>] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[[PRO.P [D lo(cl)]] <D la(cl)>] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[[PRO.P [D lo(cl)]] <D la(cl)>] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[[PRO.P [D lo(cl)]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]]
					=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[[PRO.P [D lo(cl)]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [[[PRO.P [D lo(cl)]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					[[P [D lo(cl)]] <D la(cl)>] failed to tail [CAT:v]
					Dropping [[PRO.P [D lo(cl)]] <D la(cl)>]
						<[PRO.P [D lo(cl)]] <D la(cl)>> was made an adjunct.
						Floater <[P [D lo(cl)]] <D la(cl)>> dropped.
						 = [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [<[PRO.P [D lo(cl)]] <D la(cl)>>:2 [T/prt [PRO.v [PRO.lava <PP>:2]]]]]
					=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [<[PRO.P [D lo(cl)]] <D la(cl)>>:2 [T/prt [PRO.v [PRO.lava <PP>:2]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unaccetable specifier <[PRO.P [D lo(cl)]] <D la(cl)>>:2.
					Extraposition will be tried on [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [<[PRO.P [D lo(cl)]] <D la(cl)>>:2 [T/prt [PRO.v [PRO.lava <PP>:2]]]]].
					=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [<[PRO.P [D lo(cl)]] <D la(cl)>>:2 [T/prt [PRO.v [PRO.lava <PP>:2]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [<[PRO.P [D lo(cl)]] <D la(cl)>>:2 [T/prt [PRO.v [PRO.lava <PP>:2]]]]]
			= [[[D loro] [T/fin [[D loro] ha]]] [<[P [D lo(cl)]] <D la(cl)>> [T/prt [v [lava <[P [D lo(cl)]] <D la(cl)>>]]]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier <[PRO.P [D lo(cl)]] <D la(cl)>>:2.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]
D: [D]
la(cl): [N, D]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]
(P): [P, V, v, T]
(D): [D, P, V, v, T]
(N): [N, D, P, V, v, T]
(D): [D, V, v, T]
(N): [N, D, V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] PRO.P{D,N}] D]
			Transferring [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] PRO.P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] PRO.P{D,N}].
					Extracted head "D{N}" from PRO.P and created [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [PRO.P D{N}]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [PRO.P [D lo(cl)]]]
					=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [PRO.P [D lo(cl)]]]
				2. Feature processing:
					=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] [PRO.P [D lo(cl)]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
					=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>]
				5. Agreement reconstruction:
					=[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>]
			=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] D]

105.
		Consume "la(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] D{N}]

106.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [[D la(cl)] T/prt]]

113.
		Consume "v"

		[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [[D la(cl)] T/prt{v}]]

114.
		Consume "lava"

		[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [[D la(cl)] T/prt{v,V}]]

115.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] [[D la(cl)] T/prt{v,V}]] (10.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [[D la(cl)] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [[D la(cl)] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [[D la(cl)] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
					=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "D loro T/fin __ha P D lo(cl) " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [[[D N] [TT/fin [[D N] V]]] [P [D N]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [? [[D la(cl)]:247 [T/prt [PRO.v [PRO.lava (DP):247]]]]]]
					Remaining items in memory buffer: [[[[D N] [TT/fin [[D N] V]]] [P [D N]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [? [[D la(cl)]:247 [T/prt [PRO.v [PRO.lava (DP):247]]]]]].
					=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [? [[D la(cl)]:247 [T/prt [PRO.v [PRO.lava (DP):247]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [? [[D la(cl)]:247 [T/prt [PRO.v [PRO.lava (DP):247]]]]]]
			= [[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] [? [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]
?: [?]
D: [D, ?]
la(cl): [N, D, ?]
T/prt: [T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]
(D): [D, V, v, T, ?]
(N): [N, D, V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] D{N}] T/prt]
			Transferring [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] D{N}].
					Extracted head "la(cl)" from D and created [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [D la(cl)]]
					=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [D la(cl)]]
				2. Feature processing:
					=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>].
					Extraposition will be tried on [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>]
				5. Agreement reconstruction:
					=[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>]
			=[[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] T/prt]

116.
		Consume "v"

		[[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] T/prt{v}]

117.
		Consume "lava"

		[[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] T/prt{v,V}]

118.
	>>>	Trying candidate parse [[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] <D la(cl)>] T/prt{v,V}] (11.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
					=[[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[[[D N] [TT/fin [[D N] V]]] [P [D N]]] [D N]]]
				T/prt has unaccetable specifier [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>].
					Extraposition will be tried on [[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] [T/prt [PRO.v PRO.lava]]].
					=[[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
			= [[[[[D loro] [T/fin [[D loro] ha]]] <P [D lo(cl)]>] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[[[D loro]:246 [phi.T/fin [(DP):246 PRO.ha]]] <PRO.P [D lo(cl)]>] <D la(cl)>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]
D: [D]
la(cl): [N, D]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "dat$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli_".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#gli#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 139
['la#gli#hanno', 'lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word la#gli#hanno.
		Next word contains multiple morphemes ['hanno_', 'gli_', 'la']
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['inc$', '[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "[-no]$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

4.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

5.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['inc$', 'dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "dat$"
		Storing inflectional feature ['-', 'DAT', 'LANG:IT', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		T/fin{V} + P
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} P]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} PRO.P]

8.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[PRO.T/fin{V} PRO.P{D}]

15.
		Consume "lo(cl)"

		[T/fin{V} P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[PRO.T/fin{V} PRO.P{D,N}]

16.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} P{D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [P{D,N} D] due to complement selection.
				Avoid PRO.P{D,N} because it could break words.
				[PRO.T/fin{V} PRO.P{D,N}] + D = -98]
				PRO.P{D,N} + D = 6]
		Ranking completed:
			1. [PRO.P{D,N}; D]
			2. [[PRO.T/fin{V} PRO.P{D,N}]; D]
		Exploring solution number (1) =[PRO.P{D,N} D]
			Transferring PRO.P{D,N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.P [D lo(cl)]]
					PRO.P was opened into [PRO.P [D lo(cl)]].
					=[PRO.P [D lo(cl)]]
				2. Feature processing:
					=[PRO.P [D lo(cl)]]
				3. Floater movement reconstruction:
					=[PRO.P [D lo(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.P [D lo(cl)]]
				5. Agreement reconstruction:
					=[PRO.P [D lo(cl)]]
			=[PRO.T/fin{V} [[PRO.P [D lo(cl)]] D]]

24.
		Consume "la(cl)"

		[T/fin{V} [[P [D lo(cl)]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]]

25.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[T/fin{V} [[P [D lo(cl)]] D{N}]] + T/prt
			Filtering out impossible merge sites...
				Reject [[[P [D N]] D] T/prt] as Spec because it breaks words.
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				[PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]] + T/prt = -98]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[PRO.T/fin{V} [[PRO.P [D lo(cl)]] [[D la(cl)] T/prt]]]

32.
		Consume "v"

		[T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[PRO.T/fin{V} [[PRO.P [D lo(cl)]] [[D la(cl)] T/prt{v}]]]

33.
		Consume "lava"

		[T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v}]]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[PRO.T/fin{V} [[PRO.P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]]

34.
	>>>	Trying candidate parse [T/fin{V} [[P [D lo(cl)]] [[D la(cl)] T/prt{v,V}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]] T/prt]
			Transferring [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[PRO.P [D lo(cl)]] D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] D{N}]]]
					Extracted head "la(cl)" from D and created [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]
					=[PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]
				3. Floater movement reconstruction:
					[P [D lo(cl)]] failed to tail [CAT:v]
					Dropping [PRO.P [D lo(cl)]]
					=[PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [PRO.P [D lo(cl)]].
					Extraposition will be tried on [PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] [D la(cl)]]]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[PRO.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from [D lo(cl)].
					=[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]]
			=[[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] T/prt]

35.
		Consume "v"

		[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] T/prt{v}]

36.
		Consume "lava"

		[[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}]

37.
	>>>	Trying candidate parse [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]]
					=[[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[TT/fin [V [[P [D N]] [D N]]]]]
				T/prt has unaccetable specifier [phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]].
					Extraposition will be tried on [[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]].
					=[[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]] [T/prt [PRO.v PRO.lava]]]
			= [[T/fin [ha [[P [D lo(cl)]] <D la(cl)>]]] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [phi.T/fin [PRO.ha [[PRO.P [D lo(cl)]] <D la(cl)>]]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
PRO.P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
D: [D, V, TT/fin]
la(cl): [N, D, V, TT/fin]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} PRO.P{D,N}] D]
			Transferring [PRO.T/fin{V} PRO.P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} PRO.P{D,N}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha PRO.P{D,N}]]
					Extracted head "D{N}" from PRO.P and created [PRO.T/fin [PRO.ha [PRO.P D{N}]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.T/fin [PRO.ha [PRO.P [D lo(cl)]]]]
					=[PRO.T/fin [PRO.ha [PRO.P [D lo(cl)]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [PRO.P [D lo(cl)]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
					=[PRO.T/fin [PRO.ha <PRO.P [D lo(cl)]>]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[PRO.T/fin [PRO.ha <PRO.P [D lo(cl)]>]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]]
			=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D]

38.
		Consume "la(cl)"

		[[T/fin [ha <P [D lo(cl)]>]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}]

39.
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[T/fin [ha <P [D lo(cl)]>]] D{N}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}] + T/prt = 1]
				D{N} + T/prt = 2]
		Ranking completed:
			1. [D{N}; T/prt]
			2. [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}]; T/prt]
		Exploring solution number (1) =[D{N} T/prt]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] T/prt]]

46.
		Consume "v"

		[[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] T/prt{v}]]

47.
		Consume "lava"

		[[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]]

48.
	>>>	Trying candidate parse [[T/fin [ha <P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] T/prt{v,V}]].
					Extracted head "PRO.v{V}" from T/prt and created [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [[D la(cl)] [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D la(cl) " into memory buffer from SPEC of "T/prt".
					Moving "T/fin ha P D lo(cl) " into memory buffer from SPEC of "T/prt".
					New head was spawned due to multiple specifiers at T/prt but its category is unknown!
					Memory buffer: [[D N], [TT/fin [V [P [D N]]]]]
					Dropping [D N](=D la(cl) ) from memory buffer into Comp of {'V', 'ARG', 'ARG/V'}.
					Result [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [? [[D la(cl)]:250 [T/prt [PRO.v [PRO.lava (DP):250]]]]]]
					Remaining items in memory buffer: [[TT/fin [V [P [D N]]]]]
				An uninterpretable grammatical head without lexical category was detected.
					Extraposition will be tried on [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [? [[D la(cl)]:250 [T/prt [PRO.v [PRO.lava (DP):250]]]]]].
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [? [[D la(cl)]:250 [T/prt [PRO.v [PRO.lava (DP):250]]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					T/prt acquired PHI:DET:DEF from the edge of T/prt.
					T/prt acquired PHI:GEN:F from the edge of T/prt.
					T/prt acquired PHI:NUM:SG from the edge of T/prt.
					T/prt acquired PHI:PER:3 from the edge of T/prt.
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [? [[D la(cl)]:250 [T/prt [PRO.v [PRO.lava (DP):250]]]]]]
			= [[T/fin [ha <P [D lo(cl)]>]] [? [[D la(cl)] [T/prt [v [lava [D la(cl)]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
:['LANG:IT']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL', 'null']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A', 'null']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
PRO.P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
?: [?]
D: [D, ?]
la(cl): [N, D, ?]
T/prt: [T, ?]
PRO.v: [v, T, ?]
PRO.lava: [V, v, T, ?]
(D): [D, V, v, T, ?]
(N): [N, D, V, v, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}] T/prt]
			Transferring [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] D{N}].
					Extracted head "la(cl)" from D and created [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [D la(cl)]]
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [D la(cl)]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]].
					Extraposition will be tried on [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>]
				5. Agreement reconstruction:
					phi.T/fin has unvalued phi-features ['PHI:GEN:_']
					=[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>]
			=[[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] T/prt]

49.
		Consume "v"

		[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] T/prt{v}]

50.
		Consume "lava"

		[[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}]

51.
	>>>	Trying candidate parse [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
					=[[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin ha P D lo(cl) D la(cl) " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[TT/fin [V [P [D N]]]] [D N]]]
				T/prt has unaccetable specifier [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>].
					Extraposition will be tried on [[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]].
					=[[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>] [T/prt [PRO.v PRO.lava]]]
			= [[[T/fin [ha <P [D lo(cl)]>]] <D la(cl)>] [T/prt [v lava]]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[phi.T/fin [PRO.ha <PRO.P [D lo(cl)]>]] <D la(cl)>].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'INCORPORATED', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
PRO.P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]
D: [D]
la(cl): [N, D]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]


		Trying to find other solutions...
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "dat$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli_".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "[-no]$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la#gli#hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 140
['loro', 'hanno', 'gli#la#lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.
		Consume "D$"

		Adding inflectional features to D
			=D

6.
		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
					=[D loro]
				2. Feature processing:
					=[D loro]
				3. Floater movement reconstruction:
					=[D loro]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D loro]
				5. Agreement reconstruction:
					=[D loro]
			=[[D loro] PRO.T/fin]

9.
		Consume "ha"

		[[D loro] T/fin] + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=[[D loro] PRO.T/fin{V}]

10.
		Decomposing a polymorphemic word gli#la#lavata.
		Next word contains multiple morphemes ['lavata_', 'la_', 'gli']
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['inc$', '3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		[[D loro] T/fin{V}] + T/prt
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, T/prt.
				Prioritize [T/fin{V} T/prt] due to complement selection.
				Prioritize [ha T/prt] due to complement selection.
				[[D loro] PRO.T/fin{V}] + T/prt = -98]
				PRO.T/fin{V} + T/prt = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; T/prt]
			2. [[[D loro] PRO.T/fin{V}]; T/prt]
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[[D loro] [PRO.T/fin{V} T/prt]]

18.
		Consume "v"

		[[D loro] [T/fin{V} T/prt]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[D loro] [PRO.T/fin{V} T/prt{v}]]

19.
		Consume "lava"

		[[D loro] [T/fin{V} T/prt{v}]] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[D loro] [PRO.T/fin{V} T/prt{v,V}]]

20.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} T/prt{v,V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[[D loro] [PRO.T/fin{V} T/prt{v,V}]] + D = -197]
				[PRO.T/fin{V} T/prt{v,V}] + D = -194]
				T/prt{v,V} + D = 65]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[PRO.T/fin{V} T/prt{v,V}]; D]
			3. [[[D loro] [PRO.T/fin{V} T/prt{v,V}]]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "T/prt{v,V}" lacks complement
				An EPP-head "T/prt{v,V}" lacks specifier but needs one.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[D loro] [PRO.T/fin{V} [T/prt{v,V} D]]]

29.
		Consume "la(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} D]]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [PRO.T/fin{V} [T/prt{v,V} D{N}]]]

30.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[D loro] [T/fin{V} [T/prt{v,V} D{N}]]] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D la(cl)]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, P.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T/prt{v,V} D{N}], PRO.P] because the operation breaks up an existing selectional dependency.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [T/prt [v [lava [D la(cl)]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[D loro] [PRO.T/fin{V} [T/prt{v,V} D{N}]]] + P = -197]
				[PRO.T/fin{V} [T/prt{v,V} D{N}]] + P = -194]
				[T/prt{v,V} D{N}] + P = -191]
				D{N} + P = 108]
		Ranking completed:
			1. [D{N}; P]
			2. [[T/prt{v,V} D{N}]; P]
			3. [[PRO.T/fin{V} [T/prt{v,V} D{N}]]; P]
			4. [[[D loro] [PRO.T/fin{V} [T/prt{v,V} D{N}]]]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [PRO.T/fin{V} [T/prt{v,V} [[D la(cl)] PRO.P]]]]

32.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D la(cl)] P]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[D loro] [PRO.T/fin{V} [T/prt{v,V} [[D la(cl)] PRO.P{D}]]]]

39.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} [T/prt{v,V} [[D la(cl)] P{D}]]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[D loro] [PRO.T/fin{V} [T/prt{v,V} [[D la(cl)] PRO.P{D,N}]]]]

40.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [T/prt{v,V} [[D la(cl)] P{D,N}]]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/prt{v,V} D{N}] P]
			Transferring [T/prt{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [T/prt [PRO.v{V} D{N}]]
						Extracted head "PRO.lava" and reconstructed it = [T/prt [PRO.v [PRO.lava D{N}]]]
					Extracted head "la(cl)" from D and created [T/prt [PRO.v [PRO.lava [D la(cl)]]]]
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				2. Feature processing:
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
			=[[D loro] [PRO.T/fin{V} [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P]]]

41.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[D loro] [PRO.T/fin{V} [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D}]]]

48.
		Consume "lo(cl)"

		[[D loro] [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D}]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[D loro] [PRO.T/fin{V} [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]]]

49.
	>>>	Trying candidate parse [[D loro] [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D,N}]]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{V} [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]]]]
					Extracted head "D{N}" from PRO.P and created [[D loro] [PRO.T/fin [PRO.ha [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P D{N}]]]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P [D lo(cl)]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P [D lo(cl)]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P [D lo(cl)]]]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[D loro] [PRO.T/fin [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]] <PRO.P [D lo(cl)]>:3]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]] <PRO.P [D lo(cl)]>:3]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]] <PRO.P [D lo(cl)]>:3]]]]]
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[D loro]:254 [PRO.T/fin [(DP):254 [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]] <PRO.P [D lo(cl)]>:3]]]]].
					=[[D loro]:254 [PRO.T/fin [(DP):254 [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]] <PRO.P [D lo(cl)]>:3]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:254 [phi.T/fin [(DP):254 [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]] <PRO.P [D lo(cl)]>:3]]]]]
			= [[D loro] [T/fin [[D loro] [ha [[T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]] <P [D lo(cl)]>]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
la(cl): [N, D, V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]
PRO.P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.T/fin{V} [T/prt{v,V} D{N}]] P]
			Transferring [PRO.T/fin{V} [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [T/prt{v,V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [T/prt{v,V} D{N}]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [T/prt [PRO.v{V} D{N}]]]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava D{N}]]]]]
					Extracted head "la(cl)" from D and created [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]].
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] PRO.P]]

50.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] PRO.P{D}]]

57.
		Consume "lo(cl)"

		[[D loro] [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] PRO.P{D,N}]]

58.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D,N}]] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] PRO.P{D,N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] PRO.P{D,N}]].
					Extracted head "D{N}" from PRO.P and created [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] [PRO.P D{N}]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] [PRO.P [D lo(cl)]]]]
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] [PRO.P [D lo(cl)]]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] [PRO.P [D lo(cl)]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[D loro] [[phi.T/fin [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:4]]]] <PRO.P [D lo(cl)]>:4]]
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:4]]]] <PRO.P [D lo(cl)]>:4]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "phi.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [[phi.T/fin [[D loro] [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:4]]]]] <PRO.P [D lo(cl)]>:4]]
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[D loro]:255 [[phi.T/fin [(DP):255 [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:4]]]]] <PRO.P [D lo(cl)]>:4]].
					=[[D loro]:255 [[phi.T/fin [(DP):255 [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:4]]]]] <PRO.P [D lo(cl)]>:4]]
				5. Agreement reconstruction:
					phi.T/fin has unvalued phi-features ['PHI:GEN:_']
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:255 [[phi.T/fin [(DP):255 [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:4]]]]] <PRO.P [D lo(cl)]>:4]]
			= [[D loro] [[T/fin [[D loro] [ha [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]] <P [D lo(cl)]>]]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
la(cl): [N, D, V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[[D loro] [PRO.T/fin{V} [T/prt{v,V} D{N}]]] P]
			Transferring [[D loro] [PRO.T/fin{V} [T/prt{v,V} D{N}]]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} [T/prt{v,V} D{N}]]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [T/prt{v,V} D{N}]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v{V} D{N}]]]]]
						Extracted head "PRO.lava" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava D{N}]]]]]]
					Extracted head "la(cl)" from D and created [[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]]
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[D loro]:256 [PRO.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]].
					=[[D loro]:256 [PRO.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]]
			=[[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]] PRO.P]

59.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D la(cl)]]]]]]]] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]] PRO.P{D}]

66.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D la(cl)]]]]]]]] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]] PRO.P{D,N}]

67.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v [lava [D la(cl)]]]]]]]] P{D,N}] (4.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]] PRO.P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]] PRO.P{D,N}].
					Extracted head "D{N}" from PRO.P and created [[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]] [PRO.P D{N}]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]] [PRO.P [D lo(cl)]]]
					=[[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]] [PRO.P [D lo(cl)]]]
				2. Feature processing:
					=[[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]]] [PRO.P [D lo(cl)]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:5]]]]]] <PRO.P [D lo(cl)]>:5]
					=[[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:5]]]]]] <PRO.P [D lo(cl)]>:5]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:5]]]]]] <PRO.P [D lo(cl)]>:5].
					=[[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:5]]]]]] <PRO.P [D lo(cl)]>:5]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:256 [phi.T/fin [(DP):256 [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:5]]]]]] <PRO.P [D lo(cl)]>:5]
			= [[[D loro] [T/fin [[D loro] [ha [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]]]] <P [D lo(cl)]>]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
la(cl): [N, D, V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha T/prt{v,V}]]
					Extracted head "PRO.v{V}" from T/prt and created [PRO.T/fin [PRO.ha [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]].
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
			=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D]]

68.
		Consume "la(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]]

69.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] D{N}]] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[D loro] has no thematic role.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [[D loro] [[T/fin [ha [T/prt [v lava]]]] <D la(cl)>]] as left branch because it constitutes illicit structure.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [[T/fin [ha [T/prt [v lava]]]] <D la(cl)>] as left branch because it constitutes illicit structure.
				[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]] + P = -98]
				[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}] + P = -96]
				D{N} + P = 3]
		Ranking completed:
			1. [D{N}; P]
			2. [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]; P]
			3. [[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [[D la(cl)] PRO.P]]]

71.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [[D la(cl)] PRO.P{D}]]]

78.
		Consume "lo(cl)"

		[[D loro] [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D}]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [[D la(cl)] PRO.P{D,N}]]]

79.
	>>>	Trying candidate parse [[D loro] [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D,N}]]] (5.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}] P]
			Transferring [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}].
					Extracted head "la(cl)" from D and created [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
				D has unaccetable specifier [phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]].
					Extraposition will be tried on [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
				An EPP-head "T/prt" lacks specifier but needs one.
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]
				5. Agreement reconstruction:
					phi.T/fin has unvalued phi-features ['PHI:GEN:_']
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]
			=[[D loro] [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] PRO.P]]

80.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[D loro] [[[T/fin [ha [T/prt [v lava]]]] <D la(cl)>] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[D loro] [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] PRO.P{D}]]

87.
		Consume "lo(cl)"

		[[D loro] [[[T/fin [ha [T/prt [v lava]]]] <D la(cl)>] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[D loro] [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] PRO.P{D,N}]]

88.
	>>>	Trying candidate parse [[D loro] [[[T/fin [ha [T/prt [v lava]]]] <D la(cl)>] P{D,N}]] (6.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[D loro] [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] PRO.P{D,N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] PRO.P{D,N}]].
					Extracted head "D{N}" from PRO.P and created [[D loro] [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] [PRO.P D{N}]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[D loro] [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] [PRO.P [D lo(cl)]]]]
					=[[D loro] [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] [PRO.P [D lo(cl)]]]]
				2. Feature processing:
					=[[D loro] [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] [PRO.P [D lo(cl)]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[D loro] [[[phi.T/fin [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:6]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:6]]
					=[[D loro] [[[phi.T/fin [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:6]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:6]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "phi.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [[[phi.T/fin [[D loro] [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:6]]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:6]]
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[D loro]:257 [[[phi.T/fin [(DP):257 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:6]]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:6]].
					=[[D loro]:257 [[[phi.T/fin [(DP):257 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:6]]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:6]]
				5. Agreement reconstruction:
					phi.T/fin has unvalued phi-features ['PHI:GEN:_']
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:257 [[[phi.T/fin [(DP):257 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:6]]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:6]]
			= [[D loro] [[[T/fin [[D loro] [ha [T/prt [[v lava] <P [D lo(cl)]>]]]]] <D la(cl)>] <P [D lo(cl)]>]]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]
D: [D]
la(cl): [N, D]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]] P]
			Transferring [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]].
					Extracted head "la(cl)" from D and created [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]]
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]]
				2. Feature processing:
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]]
				3. Floater movement reconstruction:
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
				D has unaccetable specifier [phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]].
				D has unaccetable specifier [phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]].
					Extraposition will be tried on [[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
				[D loro] has no thematic role.
				An EPP-head "T/prt" lacks specifier but needs one.
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]]
				5. Agreement reconstruction:
					phi.T/fin has unvalued phi-features ['PHI:GEN:_']
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]]
			=[[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]] PRO.P]

89.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [[T/fin [ha [T/prt [v lava]]]] <D la(cl)>]] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]] PRO.P{D}]

96.
		Consume "lo(cl)"

		[[[D loro] [[T/fin [ha [T/prt [v lava]]]] <D la(cl)>]] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]] PRO.P{D,N}]

97.
	>>>	Trying candidate parse [[[D loro] [[T/fin [ha [T/prt [v lava]]]] <D la(cl)>]] P{D,N}] (7.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]] PRO.P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]] PRO.P{D,N}].
					Extracted head "D{N}" from PRO.P and created [[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]] [PRO.P D{N}]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]] [PRO.P [D lo(cl)]]]
					=[[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]] [PRO.P [D lo(cl)]]]
				2. Feature processing:
					=[[[D loro] [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]] [PRO.P [D lo(cl)]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[[D loro] [[phi.T/fin [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:7]]]] <D la(cl)>]] <PRO.P [D lo(cl)]>:7]
					=[[[D loro] [[phi.T/fin [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:7]]]] <D la(cl)>]] <PRO.P [D lo(cl)]>:7]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "phi.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[[D loro] [[phi.T/fin [[D loro] [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:7]]]]] <D la(cl)>]] <PRO.P [D lo(cl)]>:7]
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[[D loro]:258 [[phi.T/fin [(DP):258 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:7]]]]] <D la(cl)>]] <PRO.P [D lo(cl)]>:7].
					=[[[D loro]:258 [[phi.T/fin [(DP):258 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:7]]]]] <D la(cl)>]] <PRO.P [D lo(cl)]>:7]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:258 [[phi.T/fin [(DP):258 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:7]]]]] <D la(cl)>]] <PRO.P [D lo(cl)]>:7]
			= [[[D loro] [[T/fin [[D loro] [ha [T/prt [[v lava] <P [D lo(cl)]>]]]]] <D la(cl)>]] <P [D lo(cl)]>]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]
D: [D]
la(cl): [N, D]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D loro] [PRO.T/fin{V} T/prt{v,V}]] D]
			Transferring [[D loro] [PRO.T/fin{V} T/prt{v,V}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{V} T/prt{v,V}]].
						Extracted head "PRO.ha" and reconstructed it = [[D loro] [PRO.T/fin [PRO.ha T/prt{v,V}]]]
					Extracted head "PRO.v{V}" from T/prt and created [[D loro] [PRO.T/fin [PRO.ha [T/prt PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]]
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] [PRO.ha [T/prt [PRO.v PRO.lava]]]]]]
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[D loro]:259 [PRO.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]].
					=[[D loro]:259 [PRO.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]]
			=[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D]

98.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D{N}]

99.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] D{N}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] <D la(cl)>] as left branch because it constitutes illicit structure.
				[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D{N}] + P = -98]
				D{N} + P = 2]
		Ranking completed:
			1. [D{N}; P]
			2. [[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D{N}]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [[D la(cl)] PRO.P]]

101.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] [[D la(cl)] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [[D la(cl)] PRO.P{D}]]

108.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] [[D la(cl)] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [[D la(cl)] PRO.P{D,N}]]

109.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] [[D la(cl)] P{D,N}]] (8.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D{N}] P]
			Transferring [[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] D{N}].
					Extracted head "la(cl)" from D and created [[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [D la(cl)]]
					=[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [D la(cl)]]
				2. Feature processing:
					=[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
				D has unaccetable specifier [[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]].
					Extraposition will be tried on [[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
				An EPP-head "T/prt" lacks specifier but needs one.
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>]
			=[[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>] PRO.P]

110.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] <D la(cl)>] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>] PRO.P{D}]

117.
		Consume "lo(cl)"

		[[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] <D la(cl)>] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>] PRO.P{D,N}]

118.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] [ha [T/prt [v lava]]]]]] <D la(cl)>] P{D,N}] (9.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>] PRO.P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>] PRO.P{D,N}].
					Extracted head "D{N}" from PRO.P and created [[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>] [PRO.P D{N}]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>] [PRO.P [D lo(cl)]]]
					=[[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>] [PRO.P [D lo(cl)]]]
				2. Feature processing:
					=[[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [PRO.v PRO.lava]]]]]] <D la(cl)>] [PRO.P [D lo(cl)]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:8]]]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:8]
					=[[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:8]]]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:8]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:8]]]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:8].
					=[[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:8]]]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:8]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:259 [phi.T/fin [(DP):259 [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:8]]]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:8]
			= [[[[D loro] [T/fin [[D loro] [ha [T/prt [[v lava] <P [D lo(cl)]>]]]]]] <D la(cl)>] <P [D lo(cl)]>]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]
D: [D]
la(cl): [N, D]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la_".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D loro] PRO.T/fin{V}] T/prt]
			Transferring [[D loro] PRO.T/fin{V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[D loro] PRO.T/fin{V}].
					Extracted head "PRO.ha" from PRO.T/fin and created [[D loro] [PRO.T/fin PRO.ha]]
					=[[D loro] [PRO.T/fin PRO.ha]]
				2. Feature processing:
					=[[D loro] [PRO.T/fin PRO.ha]]
				3. Floater movement reconstruction:
					=[[D loro] [PRO.T/fin PRO.ha]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro] from memory buffer into Spec of PRO.ha
					Result [[D loro] [PRO.T/fin [[D loro] PRO.ha]]]
					=[[D loro]:260 [PRO.T/fin [(DP):260 PRO.ha]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:GEN:N from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					=[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]]
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] T/prt]

119.
		Consume "v"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] T/prt{v}]

120.
		Consume "lava"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] T/prt{v,V}]

121.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:EN'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:EN', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] T/prt{v,V}] + D = -98]
				T/prt{v,V} + D = 158]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "T/prt{v,V}" lacks complement
				An EPP-head "T/prt{v,V}" lacks specifier but needs one.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt{v,V} D]]

130.
		Consume "la(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt{v,V} D{N}]]

131.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} D{N}]] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
				Avoid [[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [lava [D la(cl)]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [T/prt [v [lava [D la(cl)]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt{v,V} D{N}]] + P = -98]
				[T/prt{v,V} D{N}] + P = -96]
				D{N} + P = 106]
		Ranking completed:
			1. [D{N}; P]
			2. [[T/prt{v,V} D{N}]; P]
			3. [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt{v,V} D{N}]]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt{v,V} [[D la(cl)] PRO.P]]]

133.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D la(cl)] P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt{v,V} [[D la(cl)] PRO.P{D}]]]

140.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D la(cl)] P{D}]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt{v,V} [[D la(cl)] PRO.P{D,N}]]]

141.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [T/prt{v,V} [[D la(cl)] P{D,N}]]] (10.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/prt{v,V} D{N}] P]
			Transferring [T/prt{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [T/prt [PRO.v{V} D{N}]]
						Extracted head "PRO.lava" and reconstructed it = [T/prt [PRO.v [PRO.lava D{N}]]]
					Extracted head "la(cl)" from D and created [T/prt [PRO.v [PRO.lava [D la(cl)]]]]
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				2. Feature processing:
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P]]

142.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [lava [D la(cl)]]]] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D}]]

149.
		Consume "lo(cl)"

		[[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [lava [D la(cl)]]]] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]]

150.
	>>>	Trying candidate parse [[[D loro] [T/fin [[D loro] ha]]] [[T/prt [v [lava [D la(cl)]]]] P{D,N}]] (11.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]].
					Extracted head "D{N}" from PRO.P and created [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P D{N}]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P [D lo(cl)]]]]
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P [D lo(cl)]]]]
				2. Feature processing:
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P [D lo(cl)]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:9]] <PRO.P [D lo(cl)]>:9]]
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:9]] <PRO.P [D lo(cl)]>:9]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:9]] <PRO.P [D lo(cl)]>:9]].
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:9]] <PRO.P [D lo(cl)]>:9]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:9]] <PRO.P [D lo(cl)]>:9]]
			= [[[D loro] [T/fin [[D loro] ha]]] [[T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]] <P [D lo(cl)]>]]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]
D: [D, V, v, T]
la(cl): [N, D, V, v, T]
(P): [P, T]
(D): [D, P, T]
(N): [N, D, P, T]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt{v,V} D{N}]] P]
			Transferring [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v{V} D{N}]]]
						Extracted head "PRO.lava" and reconstructed it = [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava D{N}]]]]
					Extracted head "la(cl)" from D and created [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]
				2. Feature processing:
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]
				3. Floater movement reconstruction:
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]].
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]
			=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]] PRO.P]

151.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [lava [D la(cl)]]]]] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]] PRO.P{D}]

158.
		Consume "lo(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [lava [D la(cl)]]]]] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]] PRO.P{D,N}]

159.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v [lava [D la(cl)]]]]] P{D,N}] (12.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]] PRO.P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]] PRO.P{D,N}].
					Extracted head "D{N}" from PRO.P and created [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]] [PRO.P D{N}]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]] [PRO.P [D lo(cl)]]]
					=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]] [PRO.P [D lo(cl)]]]
				2. Feature processing:
					=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v [PRO.lava [D la(cl)]]]]] [PRO.P [D lo(cl)]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:10]]] <PRO.P [D lo(cl)]>:10]
					=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:10]]] <PRO.P [D lo(cl)]>:10]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
					Extraposition will be tried on [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:10]]] <PRO.P [D lo(cl)]>:10].
					=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:10]]] <PRO.P [D lo(cl)]>:10]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:10]]] <PRO.P [D lo(cl)]>:10]
			= [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]] <P [D lo(cl)]>]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]
D: [D, V, v, T]
la(cl): [N, D, V, v, T]
(P): [P, T]
(D): [D, P, T]
(N): [N, D, P, T]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] T/prt{v,V}] D]
			Transferring [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] T/prt{v,V}].
					Extracted head "PRO.v{V}" from T/prt and created [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
				2. Feature processing:
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
				3. Floater movement reconstruction:
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
					Extraposition will be tried on [[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]].
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]]
			=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D]

160.
		Consume "la(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D{N}]

161.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:EN', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] D{N}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
				Avoid [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] <D la(cl)>] as left branch because it constitutes illicit structure.
				[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D{N}] + P = -98]
				D{N} + P = 2]
		Ranking completed:
			1. [D{N}; P]
			2. [[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D{N}]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [[D la(cl)] PRO.P]]

163.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] [[D la(cl)] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [[D la(cl)] PRO.P{D}]]

170.
		Consume "lo(cl)"

		[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] [[D la(cl)] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [[D la(cl)] PRO.P{D,N}]]

171.
	>>>	Trying candidate parse [[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] [[D la(cl)] P{D,N}]] (13.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D{N}] P]
			Transferring [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] D{N}].
					Extracted head "la(cl)" from D and created [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [D la(cl)]]
					=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [D la(cl)]]
				2. Feature processing:
					=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
					Extraposition will be tried on [[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>]
			=[[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>] PRO.P]

172.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] <D la(cl)>] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>] PRO.P{D}]

179.
		Consume "lo(cl)"

		[[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] <D la(cl)>] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>] PRO.P{D,N}]

180.
	>>>	Trying candidate parse [[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [v lava]]] <D la(cl)>] P{D,N}] (14.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>] PRO.P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>] PRO.P{D,N}].
					Extracted head "D{N}" from PRO.P and created [[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>] [PRO.P D{N}]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>] [PRO.P [D lo(cl)]]]
					=[[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>] [PRO.P [D lo(cl)]]]
				2. Feature processing:
					=[[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [PRO.v PRO.lava]]] <D la(cl)>] [PRO.P [D lo(cl)]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [[PRO.v PRO.lava] <PP>:11]]] <D la(cl)>] <PRO.P [D lo(cl)]>:11]
					=[[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [[PRO.v PRO.lava] <PP>:11]]] <D la(cl)>] <PRO.P [D lo(cl)]>:11]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro T/fin __ha " into memory buffer from SPEC of "T/prt".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
					Extraposition will be tried on [[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [[PRO.v PRO.lava] <PP>:11]]] <D la(cl)>] <PRO.P [D lo(cl)]>:11].
					=[[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [[PRO.v PRO.lava] <PP>:11]]] <D la(cl)>] <PRO.P [D lo(cl)]>:11]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[[[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]] [T/prt [[PRO.v PRO.lava] <PP>:11]]] <D la(cl)>] <PRO.P [D lo(cl)]>:11]
			= [[[[[D loro] [T/fin [[D loro] ha]]] [T/prt [[v lava] <P [D lo(cl)]>]]] <D la(cl)>] <P [D lo(cl)]>]
		Checking LF-interface conditions.
				T/prt has unaccetable specifier [[D loro]:260 [phi.T/fin [(DP):260 PRO.ha]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:EN', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:EN', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:EN', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:EN', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T]
PRO.v: [v, T]
PRO.lava: [V, v, T]
(P): [P, T]
(D): [D, P, T]
(N): [N, D, P, T]
D: [D]
la(cl): [N, D]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la_".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli#la#lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 141
['hanno', 'gli#la#lavata']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"

		Adding inflectional features to T/fin
			=PRO.T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*ha]
			=PRO.T/fin{V}

4.
		Decomposing a polymorphemic word gli#la#lavata.
		Next word contains multiple morphemes ['lavata_', 'la_', 'gli']
		Decomposing a polymorphemic word lava-#v#to#sg#f#def#1p#2p#3p.
		Next word contains multiple morphemes ['inc$', '3p$', '2p$', '1p$', 'def$', 'f$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "2p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"

		Adding inflectional features to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} T/prt]
			Transferring PRO.T/fin{V} to LF.
				1. Head movement reconstruction:
					=PRO.T/fin{V}
				2. Feature processing:
					=PRO.T/fin{V}
				3. Floater movement reconstruction:
					=PRO.T/fin{V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
					=PRO.T/fin{V}
				5. Agreement reconstruction:
					=PRO.T/fin{V}
			=[PRO.T/fin{V} T/prt]

12.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[PRO.T/fin{V} T/prt{v}]

13.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[PRO.T/fin{V} T/prt{v,V}]

14.
		Decomposing a polymorphemic word la-#D#sg#3p#def#hum#f#cl#acc.
		Next word contains multiple morphemes ['inc$', 'acc$', 'cl$', 'f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'la-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "acc$"
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ARG,-VAL'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "f$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[PRO.T/fin{V} T/prt{v,V}] + D = -197]
				T/prt{v,V} + D = 60]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[PRO.T/fin{V} T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
			Transferring T/prt{v,V} to LF.
				1. Head movement reconstruction:
					=T/prt{v,V}
				2. Feature processing:
					=T/prt{v,V}
				3. Floater movement reconstruction:
					=T/prt{v,V}
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/prt{v,V} probing for CAT:V failed.
				A phi-marked head "T/prt{v,V}" lacks complement
				An EPP-head "T/prt{v,V}" lacks specifier but needs one.
					=T/prt{v,V}
				5. Agreement reconstruction:
					=T/prt{v,V}
			=[PRO.T/fin{V} [T/prt{v,V} D]]

23.
		Consume "la(cl)"

		[T/fin{V} [T/prt{v,V} D]] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[PRO.T/fin{V} [T/prt{v,V} D{N}]]

24.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:IT', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[T/fin{V} [T/prt{v,V} D{N}]] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, P.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T/prt{v,V} D{N}], PRO.P] because the operation breaks up an existing selectional dependency.
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [T/prt [v [lava [D la(cl)]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{V} [T/prt{v,V} D{N}]] + P = -197]
				[T/prt{v,V} D{N}] + P = -194]
				D{N} + P = 106]
		Ranking completed:
			1. [D{N}; P]
			2. [[T/prt{v,V} D{N}]; P]
			3. [[PRO.T/fin{V} [T/prt{v,V} D{N}]]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[PRO.T/fin{V} [T/prt{v,V} [[D la(cl)] PRO.P]]]

26.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} [T/prt{v,V} [[D la(cl)] P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[PRO.T/fin{V} [T/prt{v,V} [[D la(cl)] PRO.P{D}]]]

33.
		Consume "lo(cl)"

		[T/fin{V} [T/prt{v,V} [[D la(cl)] P{D}]]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[PRO.T/fin{V} [T/prt{v,V} [[D la(cl)] PRO.P{D,N}]]]

34.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [[D la(cl)] P{D,N}]]] (1.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/prt{v,V} D{N}] P]
			Transferring [T/prt{v,V} D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [T/prt{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [T/prt [PRO.v{V} D{N}]]
						Extracted head "PRO.lava" and reconstructed it = [T/prt [PRO.v [PRO.lava D{N}]]]
					Extracted head "la(cl)" from D and created [T/prt [PRO.v [PRO.lava [D la(cl)]]]]
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				2. Feature processing:
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				3. Floater movement reconstruction:
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
				5. Agreement reconstruction:
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[T/prt [PRO.v [PRO.lava [D la(cl)]]]]
			=[PRO.T/fin{V} [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P]]

35.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[PRO.T/fin{V} [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D}]]

42.
		Consume "lo(cl)"

		[T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[PRO.T/fin{V} [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]]

43.
	>>>	Trying candidate parse [T/fin{V} [[T/prt [v [lava [D la(cl)]]]] P{D,N}]] (2.)
		Checking surface conditions...
		Reconstructing...
			Transferring [PRO.T/fin{V} [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] PRO.P{D,N}]]]
					Extracted head "D{N}" from PRO.P and created [PRO.T/fin [PRO.ha [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P D{N}]]]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [PRO.T/fin [PRO.ha [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P [D lo(cl)]]]]]
					=[PRO.T/fin [PRO.ha [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P [D lo(cl)]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [[T/prt [PRO.v [PRO.lava [D la(cl)]]]] [PRO.P [D lo(cl)]]]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [PRO.T/fin [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:2]] <PRO.P [D lo(cl)]>:2]]]
					=[PRO.T/fin [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:2]] <PRO.P [D lo(cl)]>:2]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [PRO.T/fin [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:2]] <PRO.P [D lo(cl)]>:2]]].
					=[PRO.T/fin [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:2]] <PRO.P [D lo(cl)]>:2]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [[T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:2]] <PRO.P [D lo(cl)]>:2]]]
			= [T/fin [ha [[T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]] <P [D lo(cl)]>]]]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
la(cl): [N, D, V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]
PRO.P: [P, V, TT/fin]
D: [D, P, V, TT/fin]
lo(cl): [N, D, P, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.T/fin{V} [T/prt{v,V} D{N}]] P]
			Transferring [PRO.T/fin{V} [T/prt{v,V} D{N}]] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [T/prt{v,V} D{N}]].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha [T/prt{v,V} D{N}]]]
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.ha [T/prt [PRO.v{V} D{N}]]]]
						Extracted head "PRO.lava" and reconstructed it = [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava D{N}]]]]]
					Extracted head "la(cl)" from D and created [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]].
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]]
			=[[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] PRO.P]

44.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] PRO.P{D}]

51.
		Consume "lo(cl)"

		[[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] PRO.P{D,N}]

52.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v [lava [D la(cl)]]]]]] P{D,N}] (3.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] PRO.P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] PRO.P{D,N}].
					Extracted head "D{N}" from PRO.P and created [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] [PRO.P D{N}]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] [PRO.P [D lo(cl)]]]
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] [PRO.P [D lo(cl)]]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v [PRO.lava [D la(cl)]]]]]] [PRO.P [D lo(cl)]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[phi.T/fin [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]]]] <PRO.P [D lo(cl)]>:3]
					=[[phi.T/fin [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]]]] <PRO.P [D lo(cl)]>:3]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[phi.T/fin [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]]]] <PRO.P [D lo(cl)]>:3].
					=[[phi.T/fin [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]]]] <PRO.P [D lo(cl)]>:3]
				5. Agreement reconstruction:
					phi.T/fin has unvalued phi-features ['PHI:GEN:_']
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[phi.T/fin [PRO.ha [T/prt [[PRO.v [PRO.lava [D la(cl)]]] <PP>:3]]]] <PRO.P [D lo(cl)]>:3]
			= [[T/fin [ha [T/prt [[v [lava [D la(cl)]]] <P [D lo(cl)]>]]]] <P [D lo(cl)]>]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
D: [D, V, v, T, V, TT/fin]
la(cl): [N, D, V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{V} T/prt{v,V}] D]
			Transferring [PRO.T/fin{V} T/prt{v,V}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} T/prt{v,V}].
						Extracted head "PRO.ha" and reconstructed it = [PRO.T/fin [PRO.ha T/prt{v,V}]]
					Extracted head "PRO.v{V}" from T/prt and created [PRO.T/fin [PRO.ha [T/prt PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.lava" from PRO.v and created [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				2. Feature processing:
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				3. Floater movement reconstruction:
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]].
					=[PRO.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
				5. Agreement reconstruction:
					PRO.T/fin has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]]
			=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D]

53.
		Consume "la(cl)"

		[[T/fin [ha [T/prt [v lava]]]] D] + la(cl)
			Filtering out impossible merge sites...
			Sink "la(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*la(cl)]
			=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]

54.
		Decomposing a polymorphemic word lo-#D#sg#3p#def#hum#m#cl#P#dat.
		Next word contains multiple morphemes ['dat$', 'P$', 'cl$', 'm$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'lo-']
		Storing inflectional feature ['-', 'DAT', 'LANG:IT', 'TAIL:CAT:v'] into working memory.
		Consume "P$"

		Adding inflectional features to P
		Consume "P"

		[[T/fin [ha [T/prt [v lava]]]] D{N}] + P
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "T/prt" lacks specifier but needs one.
				Avoid [[T/fin [ha [T/prt [v lava]]]] <D la(cl)>] as left branch because it constitutes illicit structure.
				[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}] + P = -98]
				D{N} + P = 2]
		Ranking completed:
			1. [D{N}; P]
			2. [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}]; P]
		Exploring solution number (1) =[D{N} P]
			Transferring D{N} to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					Reconstructing head movement for D{N}.
					Extracted head "la(cl)" from D and created [D la(cl)]
					D was opened into [D la(cl)].
					=[D la(cl)]
				2. Feature processing:
					=[D la(cl)]
				3. Floater movement reconstruction:
					=[D la(cl)]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					=[D la(cl)]
				5. Agreement reconstruction:
					=[D la(cl)]
			=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [[D la(cl)] PRO.P]]

56.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [[D la(cl)] PRO.P{D}]]

63.
		Consume "lo(cl)"

		[[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D}]] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [[D la(cl)] PRO.P{D,N}]]

64.
	>>>	Trying candidate parse [[T/fin [ha [T/prt [v lava]]]] [[D la(cl)] P{D,N}]] (4.)
		Checking surface conditions...
			Surface condition failure.


		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}] P]
			Transferring [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] D{N}].
					Extracted head "la(cl)" from D and created [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]
				2. Feature processing:
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]
				3. Floater movement reconstruction:
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
				D has unaccetable specifier [phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]].
					Extraposition will be tried on [[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] [D la(cl)]].
						<D la(cl)> was made an adjunct.
					<D la(cl)> was made adjunct by an extraposition rule.
				An EPP-head "T/prt" lacks specifier but needs one.
					The structure is still illicit! Try phi-tailing as a last resort?
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]
				5. Agreement reconstruction:
					phi.T/fin has unvalued phi-features ['PHI:GEN:_']
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>]
			=[[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] PRO.P]

65.
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"

		Adding inflectional features to D
		Consume "D"

		[[[T/fin [ha [T/prt [v lava]]]] <D la(cl)>] P] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] PRO.P{D}]

72.
		Consume "lo(cl)"

		[[[T/fin [ha [T/prt [v lava]]]] <D la(cl)>] P{D}] + lo(cl)
			Filtering out impossible merge sites...
			Sink "lo(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*lo(cl)]
			=[[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] PRO.P{D,N}]

73.
	>>>	Trying candidate parse [[[T/fin [ha [T/prt [v lava]]]] <D la(cl)>] P{D,N}] (5.)
		Checking surface conditions...
		Reconstructing...
			Transferring [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] PRO.P{D,N}] to LF.
				1. Head movement reconstruction:
					Reconstructing head movement for [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] PRO.P{D,N}].
					Extracted head "D{N}" from PRO.P and created [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] [PRO.P D{N}]]
					Reconstructing head movement for D{N}.
					Extracted head "lo(cl)" from D and created [[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] [PRO.P [D lo(cl)]]]
					=[[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] [PRO.P [D lo(cl)]]]
				2. Feature processing:
					=[[[phi.T/fin [PRO.ha [T/prt [PRO.v PRO.lava]]]] <D la(cl)>] [PRO.P [D lo(cl)]]]
				3. Floater movement reconstruction:
					P at the right failed to tail [CAT:v]
						<PRO.P [D lo(cl)]> was made an adjunct.
					Dropping <PRO.P [D lo(cl)]>
						Floater <P [D lo(cl)]> dropped.
						 = [[[phi.T/fin [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:4]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:4]
					=[[[phi.T/fin [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:4]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:4]
				4. Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/prt" lacks specifier but needs one.
					Extraposition will be tried on [[[phi.T/fin [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:4]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:4].
					=[[[phi.T/fin [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:4]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:4]
				5. Agreement reconstruction:
					phi.T/fin has unvalued phi-features ['PHI:GEN:_']
					T/prt has unvalued phi-features ['PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
					=[[[phi.T/fin [PRO.ha [T/prt [[PRO.v PRO.lava] <PP>:4]]]] <D la(cl)>] <PRO.P [D lo(cl)]>:4]
			= [[[T/fin [ha [T/prt [[v lava] <P [D lo(cl)]>]]]] <D la(cl)>] <P [D lo(cl)]>]
		Checking LF-interface conditions.
				An EPP-head "T/prt" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
ha:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:T', 'LANG:IT', 'LF:have', 'PF:ha', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
T/prt:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/T/T/prt/T/T/prt', 'CAT:ARG/T/T/prt', 'CAT:T', 'CAT:T/prt', 'COMP:D', 'COMP:V', 'COMP:v', 'INCORPORATED', 'LANG:IT', 'LF:T/prt', 'PF:T/prt', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
lava:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:wash', 'PF:lava', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:CAT:v', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL', 'null']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'ACC', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'INCORPORATED', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'TAIL:ARG,-VAL', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
la(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:her', 'PF:la(cl)', 'SPEC:A']
P:['!COMP:*', '-', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/P/P', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'DAT', 'LANG:IT', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/CL/D', 'CAT:-ARG/D', 'CAT:CL', 'CAT:D', 'COMP:N', 'LANG:IT', 'LEFT:CAT:D', 'LEFT:CAT:T/fin', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG', 'VAL']
lo(cl):['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:CL', 'CAT:CL/N/PHI', 'CAT:N', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:him', 'PF:lo(cl)', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.ha: [V, TT/fin]
T/prt: [T, V, TT/fin]
PRO.v: [v, T, V, TT/fin]
PRO.lava: [V, v, T, V, TT/fin]
(P): [P, T, V, TT/fin]
(D): [D, P, T, V, TT/fin]
(N): [N, D, P, T, V, TT/fin]
D: [D]
la(cl): [N, D]
PRO.P: [P]
D: [D, P]
lo(cl): [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "lo-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "P$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "acc$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "la_".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "f$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "2p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gli#la#lavata".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
