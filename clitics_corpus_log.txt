

\========================================================================
# 1
['hanno', 'mi#lavato', 'loro']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word ha-#T/fin#[-no].
		Next word contains multiple morphemes ['[-no]$', 'T/fin$', 'ha-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"
		Adding inflectional features {'LANG:IT', '-', 'PHI:PER:3', 'PHI:NUM:PL', 'PHI:DET:DEF'} to T/fin
			=T/fin

3.
		Consume "ha"

		T/fin + ha
			Filtering out impossible merge sites...
			Sink "ha" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*ha]
			=T/fin{V}

4.
		Decomposing a polymorphemic word mi#lavato.
		Next word contains multiple morphemes ['lavato_', 'mi']
		Decomposing a polymorphemic word lava-#v#to#sg#m#def.
		Next word contains multiple morphemes ['inc$', 'def$', 'm$', 'sg$', 'to$', 'v$', 'lava-']
		Storing inflectional feature ['-', 'INCORPORATED', 'LANG:IT'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "to$"
		Adding inflectional features {'LANG:IT', 'PHI:NUM:SG', '-', 'INCORPORATED', 'PHI:GEN:M', 'PHI:DET:DEF'} to T/prt
		Consume "T/prt"

		T/fin{V} + T/prt
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} T/prt]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found; no action was taken.
			=[T/fin{V} T/prt]

9.
		Consume "v"

		[T/fin{V} T/prt] + v
			Filtering out impossible merge sites...
			Sink "v" into T/prt because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt*v]
			=[T/fin{V} T/prt{v}]

10.
		Consume "lava"

		[T/fin{V} T/prt{v}] + lava
			Filtering out impossible merge sites...
			Sink "lava" into v because they are inside the same phonological word.
		Exploring solution number (1) =[T/prt{v}*lava]
			=[T/fin{V} T/prt{v,V}]

11.
		Decomposing a polymorphemic word mi-#D#sg#1p#def#hum#m#cl#acc.
		Next word contains multiple morphemes ['acc$', 'cl$', 'm$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'mi-']
		Storing inflectional feature ['-', '-FLOAT', 'ACC', 'LANG:IT', 'TAIL:ASP,!COMP:*'] into working memory.
		Consume "cl$"
		Storing inflectional feature ['-', 'CAT:CL', 'LANG:IT', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin', 'RIGHT:CAT:ARE/inf', 'RIGHT:CAT:PRG'] into working memory.
		Consume "m$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.
		Consume "D$"
		Adding inflectional features {'LANG:IT', 'RIGHT:CAT:ARE/inf', 'TAIL:ASP,!COMP:*', '-', 'PHI:NUM:SG', 'ACC', '-FLOAT', 'PHI:HUM:HUM', 'RIGHT:CAT:PRG', 'CAT:CL', 'LEFT:CAT:D,CAT:CL', 'LEFT:CAT:T/fin', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:PER:1'} to D
		Consume "D"

		[T/fin{V} T/prt{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"lava" lacks complement.
				Avoid [T/fin [ha [T/prt [v lava]]]] as left branch because it constitutes illicit structure.
				Avoid [T/prt{v,V} D] due to local agreement failure.
				Prioritize [T/prt{v,V} D] due to complement selection.
				Prioritize [lava D] due to complement selection.
				Avoid T/prt{v,V} because it could break words.
				[T/fin{V} T/prt{v,V}] + D = -197]
				T/prt{v,V} + D = 60]
		Ranking completed:
			1. [T/prt{v,V}; D]
			2. [[T/fin{V} T/prt{v,V}]; D]
		Exploring solution number (1) =[T/prt{v,V} D]
				1. Head movement reconstruction:
				=T/prt{v,V}
				2. Feature processing:
				=T/prt{v,V}
				3. Extraposition:
				=T/prt{v,V}
				4. Floater movement reconstruction:
				=T/prt{v,V}
				5. Phrasal movement reconstruction:
				=T/prt{v,V}
				6. Agreement reconstruction:
				=T/prt{v,V}
				7. Last resort extraposition:
				T/prt{v,V} probing for CAT:V failed.
				"T/prt{v,V}" lacks complement.
			=[T/fin{V} [T/prt{v,V} D]]

19.
		Consume "mi(cl)"

		[T/fin{V} [T/prt{v,V} D]] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[T/fin{V} [T/prt{v,V} D{N}]]

20.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"
		Adding inflectional features {'LANG:IT', 'PHI:NUM:PL', 'PHI:GEN:N', '-', 'PHI:PER:3', 'PHI:DET:DEF'} to D
		Consume "D"

		[T/fin{V} [T/prt{v,V} D{N}]] + D
			Filtering out impossible merge sites...
				Reject [[T/fin{V} [T/prt{v,V} D{N}]] D] due to bad left branch.
				Reject [[T/prt{v,V} D{N}] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
				1. Head movement reconstruction:
					D was opened into [D mi(cl)].
				=[D mi(cl)]
				2. Feature processing:
				=[D mi(cl)]
				3. Extraposition:
				=[D mi(cl)]
				4. Floater movement reconstruction:
				=[D mi(cl)]
				5. Phrasal movement reconstruction:
				=[D mi(cl)]
				6. Agreement reconstruction:
				=[D mi(cl)]
				7. Last resort extraposition:
			=[T/fin{V} [T/prt{v,V} [[D mi(cl)] D]]]

25.
		Consume "loro"

		[T/fin{V} [T/prt{v,V} [[D mi(cl)] D]]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[T/fin{V} [T/prt{v,V} [[D mi(cl)] D{N}]]]

26.
	>>>	Trying candidate parse [T/fin{V} [T/prt{v,V} [[D mi(cl)] D{N}]]] (1.)
		Checking surface conditions...
			Clitic [D mi(cl)] not licensed.
			Surface condition failure.


		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} T/prt{v,V}] D]
			=[[T/fin{V} T/prt{v,V}] D]

27.
		Consume "mi(cl)"

		[[T/fin{V} T/prt{v,V}] D] + mi(cl)
			Filtering out impossible merge sites...
			Sink "mi(cl)" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mi(cl)]
			=[[T/fin{V} T/prt{v,V}] D{N}]

28.
		Decomposing a polymorphemic word loro-#D#pl#3p#def#n.
		Next word contains multiple morphemes ['n$', 'def$', '3p$', 'pl$', 'D$', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.
		Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.
		Consume "D$"
		Adding inflectional features {'LANG:IT', 'PHI:NUM:PL', 'PHI:GEN:N', '-', 'PHI:PER:3', 'PHI:DET:DEF'} to D
		Consume "D"

		[[T/fin{V} T/prt{v,V}] D{N}] + D
			Filtering out impossible merge sites...
				Reject [[[T/fin{V} T/prt{v,V}] <D mi(cl)>] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
				1. Head movement reconstruction:
					D was opened into [D mi(cl)].
				=[D mi(cl)]
				2. Feature processing:
				=[D mi(cl)]
				3. Extraposition:
				=[D mi(cl)]
				4. Floater movement reconstruction:
				=[D mi(cl)]
				5. Phrasal movement reconstruction:
				=[D mi(cl)]
				6. Agreement reconstruction:
				=[D mi(cl)]
				7. Last resort extraposition:
			=[[T/fin{V} T/prt{v,V}] [[D mi(cl)] D]]

33.
		Consume "loro"

		[[T/fin{V} T/prt{v,V}] [[D mi(cl)] D]] + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=[[T/fin{V} T/prt{v,V}] [[D mi(cl)] D{N}]]

34.
	>>>	Trying candidate parse [[T/fin{V} T/prt{v,V}] [[D mi(cl)] D{N}]] (2.)
		Checking surface conditions...
				Clitic adjoined to complex phrase, not word
			Surface condition failure.


		I have now explored all solutions for "loro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "loro".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "cl$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "m$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mi#lavato".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ha-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hanno".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
