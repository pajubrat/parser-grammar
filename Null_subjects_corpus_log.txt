

\========================================================================
# 1
['mina', 'ihailen', 'Merjaa']


			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*mina]
			=PRO.D{N}

8.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:NUM:SG', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					PRO.D was opened into [PRO.D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D mina] PRO.T/fin]

10.

		Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D mina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D mina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D mina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D mina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D mina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D mina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D mina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D mina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "Merja-"

		[[D mina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:3 [PRO.T/fin [<DP>:3 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:3.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:3.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:3.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:3 [phi.T/fin [<DP>:3 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<phi.D mina>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 2
['sina', 'ihailet', 'Merjaa']


			=None

1.
		Next word "sina" contains multiple morphemes ['$hum', '$def', '$2p', '$sg', '$nom', '$D', 'sina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:2'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:PER:2', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "sina"

		D + sina
			Filtering out impossible merge sites...
			Sink "sina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*sina]
			=PRO.D{N}

8.
		Next word "ihailet" contains multiple morphemes ['$[-t]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "sina" from PRO.D and created [PRO.D sina]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "sina" from PRO.D and created [PRO.D sina]
					PRO.D was opened into [PRO.D sina].
				Feature processing:
				Floater movement reconstruction:
					= [D sina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:2 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D sina] PRO.T/fin]

10.

		Consume "v"

		[[D sina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D sina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D sina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D sina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D sina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D sina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D sina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D sina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D sina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D sina] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D sina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D sina> [T/fin [<D sina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D sina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D sina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D sina] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "Merja-"

		[[D sina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D sina] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D sina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D sina] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D sina] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D sina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D sina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D sina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D sina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D sina]
						<phi.D sina> was made an adjunct.
						Floater <D sina> dropped.
						 = [<phi.D sina>:6 [PRO.T/fin [<DP>:6 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D sina> [T/fin [<D sina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:2 by phi-Agree from <DP>:6.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:6.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:6.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D sina> [T/fin [<D sina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D sina>:6 [phi.T/fin [<DP>:6 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D sina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D sina> [T/fin [<D sina> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<phi.D sina>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'VAL']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'VAL']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
sina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 3
['han', 'ihailee', 'Merjaa']


			=None

1.
		Next word "han" contains multiple morphemes ['$hum', '$def', '$3p', '$sg', '$nom', '$D', 'han-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "han"

		D + han
			Filtering out impossible merge sites...
			Sink "han" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*han]
			=PRO.D{N}

8.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "han" from PRO.D and created [PRO.D han]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "han" from PRO.D and created [PRO.D han]
					PRO.D was opened into [PRO.D han].
				Feature processing:
				Floater movement reconstruction:
					= [D han]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D han] PRO.T/fin]

10.

		Consume "v"

		[[D han] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D han] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D han] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D han] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D han] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D han] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D han] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D han] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D han] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D han] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D han] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D han> [T/fin [<D han> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D han] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D han] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D han] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "Merja-"

		[[D han] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D han] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D han] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D han] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D han] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D han] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D han] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D han] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D han] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D han]
						<phi.D han> was made an adjunct.
						Floater <D han> dropped.
						 = [<phi.D han>:9 [PRO.T/fin [<DP>:9 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D han> [T/fin [<D han> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:9.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:9.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:9.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D han> [T/fin [<D han> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D han>:9 [phi.T/fin [<DP>:9 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D han>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D han> [T/fin [<D han> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<phi.D han>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
han: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 4
['me', 'ihailemme', 'Merjaa']


			=None

1.
		Next word "me" contains multiple morphemes ['$hum', '$def', '$1p', '$pl', '$nom', '$D', 'me-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "me"

		D + me
			Filtering out impossible merge sites...
			Sink "me" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*me]
			=PRO.D{N}

8.
		Next word "ihailemme" contains multiple morphemes ['$[-mme]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "me" from PRO.D and created [PRO.D me]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "me" from PRO.D and created [PRO.D me]
					PRO.D was opened into [PRO.D me].
				Feature processing:
				Floater movement reconstruction:
					= [D me]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
			=[[phi.D me] PRO.T/fin]

10.

		Consume "v"

		[[D me] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D me] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D me] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D me] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D me] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D me] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D me] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D me] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D me] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D me] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D me] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D me> [T/fin [<D me> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D me] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D me] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D me] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "Merja-"

		[[D me] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D me] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D me] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D me] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D me] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D me] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D me] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D me] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D me] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D me]
						<phi.D me> was made an adjunct.
						Floater <D me> dropped.
						 = [<phi.D me>:12 [PRO.T/fin [<DP>:12 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D me> [T/fin [<D me> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:12.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:12.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:12.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D me> [T/fin [<D me> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D me>:12 [phi.T/fin [<DP>:12 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D me>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D me> [T/fin [<D me> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<phi.D me>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
me: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 5
['te', 'ihailette', 'Merjaa']


			=None

1.
		Next word "te" contains multiple morphemes ['$hum', '$def', '$2p', '$pl', '$nom', '$D', 'te-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:2'] into working memory.

		Consume "$pl"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:PER:2', '-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "te"

		D + te
			Filtering out impossible merge sites...
			Sink "te" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*te]
			=PRO.D{N}

8.
		Next word "ihailette" contains multiple morphemes ['$[-tte]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "te" from PRO.D and created [PRO.D te]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "te" from PRO.D and created [PRO.D te]
					PRO.D was opened into [PRO.D te].
				Feature processing:
				Floater movement reconstruction:
					= [D te]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:2 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
			=[[phi.D te] PRO.T/fin]

10.

		Consume "v"

		[[D te] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D te] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D te] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D te] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D te] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D te] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D te] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D te] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D te] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D te] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D te] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D te> [T/fin [<D te> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D te] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D te] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D te] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "Merja-"

		[[D te] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D te] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D te] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D te] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D te] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D te] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D te] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D te] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D te] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D te]
						<phi.D te> was made an adjunct.
						Floater <D te> dropped.
						 = [<phi.D te>:15 [PRO.T/fin [<DP>:15 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D te> [T/fin [<D te> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:2 by phi-Agree from <DP>:15.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:15.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:15.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D te> [T/fin [<D te> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D te>:15 [phi.T/fin [<DP>:15 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D te>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D te> [T/fin [<D te> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<phi.D te>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'VAL']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'VAL']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
te: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 6
['he', 'ihailevat', 'Merjaa']


			=None

1.
		Ambiguous lexical item "he" detected.
		Next word "he" contains multiple morphemes ['$hum', '$def', '$3p', '$pl', '$nom', '$D', 'he-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$pl"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.
		Ambiguous lexical item "he-" detected.

		Consume "he"

		D + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*he]
			=PRO.D{N}

8.
		Next word "ihailevat" contains multiple morphemes ['$[-vat]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'LANG:FI', 'PHI:PER:3', '-', 'PHI:NUM:PL'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "he" from PRO.D and created [PRO.D he]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "he" from PRO.D and created [PRO.D he]
					PRO.D was opened into [PRO.D he].
				Feature processing:
				Floater movement reconstruction:
					= [D he]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
			=[[phi.D he] PRO.T/fin]

10.

		Consume "v"

		[[D he] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D he] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D he] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D he] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D he] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D he] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D he] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D he] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D he] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D he] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D he] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D he> [T/fin [<D he> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D he] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D he] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D he] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "Merja-"

		[[D he] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D he] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D he] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D he] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D he] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D he] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D he] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D he] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D he] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D he]
						<phi.D he> was made an adjunct.
						Floater <D he> dropped.
						 = [<phi.D he>:18 [PRO.T/fin [<DP>:18 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D he> [T/fin [<D he> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:18.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:18.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:18.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D he> [T/fin [<D he> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D he>:18 [phi.T/fin [<DP>:18 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D he>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 20/185 operations) <------------------------------------
		Solution:
		[<D he> [T/fin [<D he> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<phi.D he>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
he: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"


		Adding inflectional features {'LANG:FI', '-', 'TAIL:ARG,-VAL'} to he
		= ['-', '-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/N/PHI/PHI', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'TAIL:ARG,-VAL']

		Consume "he"

		D + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*he]
		Next word "he" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'he-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:GEN:M'] into working memory.

		Consume "$hum"



\========================================================================
# 7
['I', 'admire', 'Mary']


			=None

1.
		Next word "I" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', 'PHI:NUM:SG', '-', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*I]
			=PRO.D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D I] T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D I] T/fin{v}]

11.

		Consume "admire"

		[[D I] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D I] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D I] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D I] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D I] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D I] [T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D I] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D I] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D I] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:3 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:3 [T/fin [(DP):3 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):3.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):3.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):3.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):3.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:3 [T/fin [(DP):3 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/178 operations) <------------------------------------
		Solution:
		[[D I] [T/fin [[D I] [v [admire [D Mary]]]]]]
		Grammar: [[phi.D I]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [phi.D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 8
['you', 'admire', 'Mary']


			=None

1.
		Next word "you" contains multiple morphemes ['$n', '$hum', '$def', '$2p', '$sg', '$D', 'you-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', '-', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "you"

		D + you
			Filtering out impossible merge sites...
			Sink "you" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*you]
			=PRO.D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "you" from PRO.D and created [PRO.D you]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "you" from PRO.D and created [PRO.D you]
					PRO.D was opened into [PRO.D you].
				Feature processing:
				Floater movement reconstruction:
					= [D you]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:2 from (Spec,phi.D).
					phi.D acquired PHI:GEN:N from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D you] T/fin]

10.

		Consume "v"

		[[D you] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D you] T/fin{v}]

11.

		Consume "admire"

		[[D you] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D you] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D you] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D you] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D you] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D you] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D you] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D you] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D you] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D you] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D you] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D you] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D you] [T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D you] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D you] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D you] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D you] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D you] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D you] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D you] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D you " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D you]:6 from memory buffer into Spec of PRO.v
					Result [[phi.D you]:6 [T/fin [(DP):6 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:2 by phi-Agree from (DP):6.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):6.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):6.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):6.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D you] [T/fin [[D you] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D you]:6 [T/fin [(DP):6 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D you]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/178 operations) <------------------------------------
		Solution:
		[[D you] [T/fin [[D you] [v [admire [D Mary]]]]]]
		Grammar: [[phi.D you]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [phi.D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'VAL']
you:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you', 'PF:you', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'VAL', 'null']
you:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you', 'PF:you', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'VAL']
you:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you', 'PF:you', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'VAL', 'null']
you:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you', 'PF:you', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
you: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 9
['he', 'admires', 'Mary']


			=None

1.
		Ambiguous lexical item "he" detected.
		Next word "he" contains multiple morphemes ['$hum', '$def', '$3p', '$pl', '$nom', '$D', 'he-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$pl"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.
		Ambiguous lexical item "he-" detected.

		Consume "he"

		D + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*he]
			=PRO.D{N}

8.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "he" from PRO.D and created [PRO.D he]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "he" from PRO.D and created [PRO.D he]
					PRO.D was opened into [PRO.D he].
				Feature processing:
				Floater movement reconstruction:
					= [D he]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D he] T/fin]

10.

		Consume "v"

		[[D he] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D he] T/fin{v}]

11.

		Consume "admire"

		[[D he] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D he] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D he] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D he] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D he] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D he] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D he] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D he] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D he] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D he] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D he] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D he] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D he] [T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D he] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D he] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D he] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D he] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D he] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D he] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D he] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D he]
						<phi.D he> was made an adjunct.
						Floater <D he> dropped.
						 = [<phi.D he>:3 [T/fin [<DP>:3 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
					= [<D he> [T/fin [<D he> [v [admire [D Mary]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
				\Feature PHI:NUM:PL was not matched in T/fin.
					T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:3.
					T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:3.
					T/fin acquired PHI:PER:3 by phi-Agree from <DP>:3.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [<D he> [T/fin [<D he> [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D he>:3 [T/fin [<DP>:3 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
he: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D he] T/fin{v,V}] D]
			Transferring [[phi.D he] T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D he] T/fin{v,V}].
					Extracted head "PRO.v{V}" from T/fin and created [[phi.D he] [T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [[phi.D he] [T/fin [PRO.v PRO.admire]]]
				Feature processing:
				Floater movement reconstruction:
					[D he] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D he]
						<phi.D he> was made an adjunct.
						Floater <D he> dropped.
						 = [<phi.D he>:4 [T/fin [<DP>:4 [PRO.v PRO.admire]]]]
					= [<D he> [T/fin [<D he> [v admire]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
				\Feature PHI:NUM:PL was not matched in T/fin.
					T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:4.
					T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:4.
					T/fin acquired PHI:PER:3 by phi-Agree from <DP>:4.
			=[[<phi.D he>:4 [T/fin [<DP>:4 [PRO.v PRO.admire]]]] PRO.D]

20.

		Consume "Mary"

		[[<D he> [T/fin [<D he> [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[<phi.D he>:4 [T/fin [<DP>:4 [PRO.v PRO.admire]]]] PRO.D{N}]

21.
	>>>	Trying candidate parse [[<D he> [T/fin [<D he> [v admire]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[<phi.D he>:4 [T/fin [<DP>:4 [PRO.v PRO.admire]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D he>:4 [T/fin [<DP>:4 [PRO.v PRO.admire]]]] PRO.D{N}].
					Extracted head "Mary" from PRO.D and created [[<phi.D he>:4 [T/fin [<DP>:4 [PRO.v PRO.admire]]]] [PRO.D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[<D he> [T/fin [<D he> [v admire]]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D he T/fin __v admire " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [<phi.D he>:4 [T/fin [<DP>:4 [PRO.v PRO.admire]]]].
					Extraposition will be tried on [[<phi.D he>:4 [T/fin [<DP>:4 [PRO.v PRO.admire]]]] [PRO.D Mary]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:GEN:_'}
			= [[<D he> [T/fin [<D he> [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D he>:4 [T/fin [<DP>:4 [PRO.v PRO.admire]]]] <PRO.D Mary>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
he: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
PRO.D: [D]
Mary: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admires".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.

		Consume "he"

		D + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*he]
			=PRO.D{N}

22.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

23.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "he" from PRO.D and created [PRO.D he]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "he" from PRO.D and created [PRO.D he]
					PRO.D was opened into [PRO.D he].
				Feature processing:
				Floater movement reconstruction:
					= [D he]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D he] T/fin]

24.

		Consume "v"

		[[D he] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D he] T/fin{v}]

25.

		Consume "admire"

		[[D he] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D he] T/fin{v,V}]

26.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D he] T/fin{v,V}]

27.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D he] T/fin{v,V}]

28.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D he] T/fin{v,V}]

29.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D he] T/fin{v,V}]

30.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D he] T/fin{v,V}]

31.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D he] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D he] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D he] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D he] [T/fin{v,V} PRO.D]]

32.

		Consume "Mary"

		[[D he] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D he] [T/fin{v,V} PRO.D{N}]]

33.
	>>>	Trying candidate parse [[D he] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D he] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D he] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D he] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D he] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D he] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D he] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D he]
						<phi.D he> was made an adjunct.
						Floater <D he> dropped.
						 = [<phi.D he>:7 [T/fin [<DP>:7 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
					= [<D he> [T/fin [<D he> [v [admire [D Mary]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
				\Feature PHI:NUM:PL was not matched in T/fin.
					T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:7.
					T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:7.
					T/fin acquired PHI:PER:3 by phi-Agree from <DP>:7.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [<D he> [T/fin [<D he> [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D he>:7 [T/fin [<DP>:7 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
he: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D he] T/fin{v,V}] D]
			Transferring [[phi.D he] T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D he] T/fin{v,V}].
					Extracted head "PRO.v{V}" from T/fin and created [[phi.D he] [T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [[phi.D he] [T/fin [PRO.v PRO.admire]]]
				Feature processing:
				Floater movement reconstruction:
					[D he] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D he]
						<phi.D he> was made an adjunct.
						Floater <D he> dropped.
						 = [<phi.D he>:8 [T/fin [<DP>:8 [PRO.v PRO.admire]]]]
					= [<D he> [T/fin [<D he> [v admire]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
				\Feature PHI:NUM:PL was not matched in T/fin.
					T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:8.
					T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:8.
					T/fin acquired PHI:PER:3 by phi-Agree from <DP>:8.
			=[[<phi.D he>:8 [T/fin [<DP>:8 [PRO.v PRO.admire]]]] PRO.D]

34.

		Consume "Mary"

		[[<D he> [T/fin [<D he> [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[<phi.D he>:8 [T/fin [<DP>:8 [PRO.v PRO.admire]]]] PRO.D{N}]

35.
	>>>	Trying candidate parse [[<D he> [T/fin [<D he> [v admire]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<phi.D he>:8 [T/fin [<DP>:8 [PRO.v PRO.admire]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D he>:8 [T/fin [<DP>:8 [PRO.v PRO.admire]]]] PRO.D{N}].
					Extracted head "Mary" from PRO.D and created [[<phi.D he>:8 [T/fin [<DP>:8 [PRO.v PRO.admire]]]] [PRO.D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[<D he> [T/fin [<D he> [v admire]]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D he T/fin __v admire " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [<phi.D he>:8 [T/fin [<DP>:8 [PRO.v PRO.admire]]]].
					Extraposition will be tried on [[<phi.D he>:8 [T/fin [<DP>:8 [PRO.v PRO.admire]]]] [PRO.D Mary]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:GEN:_'}
			= [[<D he> [T/fin [<D he> [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D he>:8 [T/fin [<DP>:8 [PRO.v PRO.admire]]]] <PRO.D Mary>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
he: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
PRO.D: [D]
Mary: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admires".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "he-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$pl".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "he" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'he-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

36.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

37.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

38.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

39.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

40.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

41.
		Ambiguous lexical item "he-" detected.

		Consume "he"

		D + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*he]
			=PRO.D{N}

42.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

43.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "he" from PRO.D and created [PRO.D he]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "he" from PRO.D and created [PRO.D he]
					PRO.D was opened into [PRO.D he].
				Feature processing:
				Floater movement reconstruction:
					= [D he]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D he] T/fin]

44.

		Consume "v"

		[[D he] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D he] T/fin{v}]

45.

		Consume "admire"

		[[D he] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D he] T/fin{v,V}]

46.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D he] T/fin{v,V}]

47.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D he] T/fin{v,V}]

48.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D he] T/fin{v,V}]

49.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D he] T/fin{v,V}]

50.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D he] T/fin{v,V}]

51.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D he] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D he] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D he] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D he] [T/fin{v,V} PRO.D]]

52.

		Consume "Mary"

		[[D he] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D he] [T/fin{v,V} PRO.D{N}]]

53.
	>>>	Trying candidate parse [[D he] [T/fin{v,V} D{N}]] (5.)
		Reconstructing...
			Transferring [[phi.D he] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D he] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D he] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D he] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D he] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D he] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D he " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D he]:9 from memory buffer into Spec of PRO.v
					Result [[phi.D he]:9 [T/fin [(DP):9 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):9.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):9.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):9.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):9.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D he] [T/fin [[D he] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D he]:9 [T/fin [(DP):9 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D he]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 53/710 operations) <------------------------------------
		Solution:
		[[D he] [T/fin [[D he] [v [admire [D Mary]]]]]]
		Grammar: [[phi.D he]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [phi.D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
he: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "he"

		D + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*he]


\========================================================================
# 10
['she', 'admires', 'Mary']


			=None

1.
		Next word "she" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'she-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "she"

		D + she
			Filtering out impossible merge sites...
			Sink "she" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*she]
			=PRO.D{N}

8.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "she" from PRO.D and created [PRO.D she]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "she" from PRO.D and created [PRO.D she]
					PRO.D was opened into [PRO.D she].
				Feature processing:
				Floater movement reconstruction:
					= [D she]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D she] T/fin]

10.

		Consume "v"

		[[D she] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D she] T/fin{v}]

11.

		Consume "admire"

		[[D she] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D she] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D she] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D she] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D she] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D she] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D she] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D she] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D she] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D she] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D she] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D she] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D she] [T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D she] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D she] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D she] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D she] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D she] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D she] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D she] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D she " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D she]:12 from memory buffer into Spec of PRO.v
					Result [[phi.D she]:12 [T/fin [(DP):12 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:GEN:F by phi-Agree from (DP):12.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):12.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):12.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):12.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D she] [T/fin [[D she] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D she]:12 [T/fin [(DP):12 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D she]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/178 operations) <------------------------------------
		Solution:
		[[D she] [T/fin [[D she] [v [admire [D Mary]]]]]]
		Grammar: [[phi.D she]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [phi.D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
she:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:she', 'PF:she', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
she:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:she', 'PF:she', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
she:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:she', 'PF:she', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
she:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:she', 'PF:she', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
she: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['John', 'admires', 'Mary']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D John] T/fin{v}]

11.

		Consume "admire"

		[[D John] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D John] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D John] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D John] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D John] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D John] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D John] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D John] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D John] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D John] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D John] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D John] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:15 from memory buffer into Spec of PRO.v
					Result [[phi.D John]:15 [T/fin [(DP):15 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):15.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):15.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):15.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):15.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D John] [T/fin [[D John] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:15 [T/fin [(DP):15 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/178 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [admire [D Mary]]]]]]
		Grammar: [[phi.D John]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [phi.D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 12
['we', 'admire', 'Mary']


			=None

1.
		Next word "we" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$pl', '$D', 'we-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', '-', 'PHI:NUM:PL', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "we"

		D + we
			Filtering out impossible merge sites...
			Sink "we" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*we]
			=PRO.D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "we" from PRO.D and created [PRO.D we]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "we" from PRO.D and created [PRO.D we]
					PRO.D was opened into [PRO.D we].
				Feature processing:
				Floater movement reconstruction:
					= [D we]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D we] T/fin]

10.

		Consume "v"

		[[D we] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D we] T/fin{v}]

11.

		Consume "admire"

		[[D we] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D we] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D we] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D we] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D we] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D we] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D we] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D we] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D we] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D we] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D we] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D we] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D we] [T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D we] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D we] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D we] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D we] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D we] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D we] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D we] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D we " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D we]:18 from memory buffer into Spec of PRO.v
					Result [[phi.D we]:18 [T/fin [(DP):18 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):18.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):18.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):18.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):18.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D we] [T/fin [[D we] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D we]:18 [T/fin [(DP):18 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D we]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/178 operations) <------------------------------------
		Solution:
		[[D we] [T/fin [[D we] [v [admire [D Mary]]]]]]
		Grammar: [[phi.D we]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [phi.D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
we: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 13
['you_pl', 'admire', 'Mary']


			=None

1.
		Next word "you_pl" contains multiple morphemes ['$n', '$hum', '$def', '$2p', '$pl', '$D', 'you_pl-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', '-', 'PHI:NUM:PL', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:DET:DEF'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "you_pl"

		D + you_pl
			Filtering out impossible merge sites...
			Sink "you_pl" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*you_pl]
			=PRO.D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "you_pl" from PRO.D and created [PRO.D you_pl]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "you_pl" from PRO.D and created [PRO.D you_pl]
					PRO.D was opened into [PRO.D you_pl].
				Feature processing:
				Floater movement reconstruction:
					= [D you_pl]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:2 from (Spec,phi.D).
					phi.D acquired PHI:GEN:N from (Spec,phi.D).
					pro/x.D acquired PHI:NUM:PL from (Spec,pro/x.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
			=[[phi.D you_pl] T/fin]

10.

		Consume "v"

		[[D you_pl] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D you_pl] T/fin{v}]

11.

		Consume "admire"

		[[D you_pl] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D you_pl] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D you_pl] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D you_pl] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D you_pl] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D you_pl] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D you_pl] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D you_pl] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D you_pl] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D you_pl] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D you_pl] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D you_pl] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D you_pl] [T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D you_pl] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D you_pl] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D you_pl] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D you_pl] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D you_pl] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D you_pl] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D you_pl] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D you_pl " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D you_pl]:21 from memory buffer into Spec of PRO.v
					Result [[phi.D you_pl]:21 [T/fin [(DP):21 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:2 by phi-Agree from (DP):21.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):21.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):21.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):21.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D you_pl] [T/fin [[D you_pl] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D you_pl]:21 [T/fin [(DP):21 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D you_pl]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/178 operations) <------------------------------------
		Solution:
		[[D you_pl] [T/fin [[D you_pl] [v [admire [D Mary]]]]]]
		Grammar: [[phi.D you_pl]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [phi.D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'VAL']
you_pl:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you_pl', 'PF:you_pl', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'VAL', 'null']
you_pl:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you_pl', 'PF:you_pl', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'VAL']
you_pl:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you_pl', 'PF:you_pl', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'VAL', 'null']
you_pl:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you_pl', 'PF:you_pl', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
you_pl: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 14
['they', 'admire', 'Mary']


			=None

1.
		Next word "they" contains multiple morphemes ['$n', '$hum', '$def', '$3p', '$pl', '$D', 'they-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', '-', 'PHI:PER:3', 'LANG:EN', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "they"

		D + they
			Filtering out impossible merge sites...
			Sink "they" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*they]
			=PRO.D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "they" from PRO.D and created [PRO.D they]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "they" from PRO.D and created [PRO.D they]
					PRO.D was opened into [PRO.D they].
				Feature processing:
				Floater movement reconstruction:
					= [D they]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
					pro/x.D acquired PHI:PER:3 from (Spec,pro/x.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
			=[[phi.D they] T/fin]

10.

		Consume "v"

		[[D they] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D they] T/fin{v}]

11.

		Consume "admire"

		[[D they] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D they] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D they] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D they] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D they] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D they] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D they] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D they] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D they] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D they] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D they] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D they] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D they] [T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D they] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D they] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D they] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D they] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D they] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D they] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D they] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D they " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D they]:24 from memory buffer into Spec of PRO.v
					Result [[phi.D they]:24 [T/fin [(DP):24 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):24.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):24.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):24.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):24.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D they] [T/fin [[D they] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D they]:24 [T/fin [(DP):24 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D they]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/178 operations) <------------------------------------
		Solution:
		[[D they] [T/fin [[D they] [v [admire [D Mary]]]]]]
		Grammar: [[phi.D they]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [phi.D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
they:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:they', 'PF:they', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
they:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:they', 'PF:they', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
they:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:they', 'PF:they', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
they:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:they', 'PF:they', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
they: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['io', 'adoro', 'Luisa']


			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*I]
			=PRO.D{N}

8.
		Next word "adoro" contains multiple morphemes ['$[-o]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:NUM:SG', '-', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D I] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:3 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:3 [PRO.T/fin [(DP):3 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):3.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):3.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):3.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):3.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:3 [phi.T/fin [(DP):3 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/177 operations) <------------------------------------
		Solution:
		[[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Grammar: [[phi.D I]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [phi.D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]


\========================================================================
# 16
['tu', 'adori', 'Luisa']


			=None

1.
		Ambiguous lexical item "tu" detected.
		Next word "tu" contains multiple morphemes ['$n', '$hum', '$def', '$2p', '$sg', '$D', 'tu-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', '-', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.
		Ambiguous lexical item "tu-" detected.

		Consume "tu"

		D + tu
			Filtering out impossible merge sites...
			Sink "tu" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*tu]
			=PRO.D{N}

8.
		Next word "adori" contains multiple morphemes ['$[-i]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "tu" from PRO.D and created [PRO.D tu]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "tu" from PRO.D and created [PRO.D tu]
					PRO.D was opened into [PRO.D tu].
				Feature processing:
				Floater movement reconstruction:
					= [D tu]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:2 from (Spec,phi.D).
					phi.D acquired PHI:GEN:N from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D tu] PRO.T/fin]

10.

		Consume "v"

		[[D tu] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D tu] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D tu] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D tu] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D tu] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D tu] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D tu] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D tu] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D tu] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D tu] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D tu] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D tu] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D tu] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D tu] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D tu] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D tu] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D tu] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D tu] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D tu] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D tu] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D tu] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D tu] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D tu " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D tu]:6 from memory buffer into Spec of PRO.v
					Result [[phi.D tu]:6 [PRO.T/fin [(DP):6 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:2 by phi-Agree from (DP):6.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):6.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):6.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):6.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D tu] [T/fin [[D tu] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D tu]:6 [phi.T/fin [(DP):6 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D tu]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/179 operations) <------------------------------------
		Solution:
		[[D tu] [T/fin [[D tu] [v [adora [D Luisa]]]]]]
		Grammar: [[phi.D tu]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [phi.D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'VAL']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'VAL', 'null']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'VAL']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'VAL', 'null']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
tu: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		[[D tu] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]

		Consume "tu"

		D + tu
			Filtering out impossible merge sites...
			Sink "tu" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*tu]
		Next word "tu" contains multiple morphemes ['$D', 'tu-']


\========================================================================
# 17
['lui', 'adora', 'Luisa']


			=None

1.
		Next word "lui" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'lui-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "lui"

		D + lui
			Filtering out impossible merge sites...
			Sink "lui" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*lui]
			=PRO.D{N}

8.
		Ambiguous lexical item "adora" detected.
		Next word "adora" contains multiple morphemes ['$[-a]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "lui" from PRO.D and created [PRO.D lui]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "lui" from PRO.D and created [PRO.D lui]
					PRO.D was opened into [PRO.D lui].
				Feature processing:
				Floater movement reconstruction:
					= [D lui]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D lui] PRO.T/fin]

10.

		Consume "v"

		[[D lui] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D lui] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D lui] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D lui] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D lui] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D lui] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D lui] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D lui] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D lui] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D lui] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D lui] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D lui] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D lui] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D lui] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D lui] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D lui] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D lui] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D lui] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D lui] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D lui] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D lui] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D lui] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lui " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D lui]:9 from memory buffer into Spec of PRO.v
					Result [[phi.D lui]:9 [PRO.T/fin [(DP):9 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:3 by phi-Agree from (DP):9.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from (DP):9.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):9.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):9.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D lui] [T/fin [[D lui] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D lui]:9 [phi.T/fin [(DP):9 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D lui]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/178 operations) <------------------------------------
		Solution:
		[[D lui] [T/fin [[D lui] [v [adora [D Luisa]]]]]]
		Grammar: [[phi.D lui]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [phi.D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
lui: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		[[D lui] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
		Next word "adora" contains multiple morphemes ['$T/fin', '$v', 'adora-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "lui" from PRO.D and created [PRO.D lui]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "lui" from PRO.D and created [PRO.D lui]
					PRO.D was opened into [PRO.D lui].
				Feature processing:
				Floater movement reconstruction:
					= [D lui]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).


\========================================================================
# 18
['lei', 'adora', 'Luisa']


			=None

1.
		Next word "lei" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'lei-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "lei"

		D + lei
			Filtering out impossible merge sites...
			Sink "lei" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*lei]
			=PRO.D{N}

8.
		Ambiguous lexical item "adora" detected.
		Next word "adora" contains multiple morphemes ['$[-a]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "lei" from PRO.D and created [PRO.D lei]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "lei" from PRO.D and created [PRO.D lei]
					PRO.D was opened into [PRO.D lei].
				Feature processing:
				Floater movement reconstruction:
					= [D lei]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D lei] PRO.T/fin]

10.

		Consume "v"

		[[D lei] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D lei] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D lei] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D lei] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D lei] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D lei] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D lei] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D lei] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D lei] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D lei] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D lei] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D lei] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D lei] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D lei] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D lei] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D lei] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D lei] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D lei] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D lei] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D lei] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D lei] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D lei] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lei " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D lei]:12 from memory buffer into Spec of PRO.v
					Result [[phi.D lei]:12 [PRO.T/fin [(DP):12 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:F by phi-Agree from (DP):12.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from (DP):12.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):12.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):12.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D lei] [T/fin [[D lei] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D lei]:12 [phi.T/fin [(DP):12 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D lei]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/178 operations) <------------------------------------
		Solution:
		[[D lei] [T/fin [[D lei] [v [adora [D Luisa]]]]]]
		Grammar: [[phi.D lei]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [phi.D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
lei: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		[[D lei] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
		Next word "adora" contains multiple morphemes ['$T/fin', '$v', 'adora-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "lei" from PRO.D and created [PRO.D lei]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "lei" from PRO.D and created [PRO.D lei]
					PRO.D was opened into [PRO.D lei].
				Feature processing:
				Floater movement reconstruction:
					= [D lei]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).


\========================================================================
# 19
['noi', 'adoriamo', 'Luisa']


			=None

1.
		Next word "noi" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$pl', '$D', 'noi-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', '-', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "noi"

		D + noi
			Filtering out impossible merge sites...
			Sink "noi" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*noi]
			=PRO.D{N}

8.
		Next word "adoriamo" contains multiple morphemes ['$[-iamo]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "noi" from PRO.D and created [PRO.D noi]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "noi" from PRO.D and created [PRO.D noi]
					PRO.D was opened into [PRO.D noi].
				Feature processing:
				Floater movement reconstruction:
					= [D noi]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D noi] PRO.T/fin]

10.

		Consume "v"

		[[D noi] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D noi] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D noi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D noi] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D noi] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D noi] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D noi] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D noi] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D noi] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D noi] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D noi] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D noi] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D noi] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D noi] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D noi] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D noi] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D noi] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D noi] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D noi] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D noi] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D noi] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D noi] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D noi " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D noi]:15 from memory buffer into Spec of PRO.v
					Result [[phi.D noi]:15 [PRO.T/fin [(DP):15 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):15.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from (DP):15.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):15.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):15.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D noi]:15 [phi.T/fin [(DP):15 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D noi]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/177 operations) <------------------------------------
		Solution:
		[[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Grammar: [[phi.D noi]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [phi.D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
noi: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		[[D noi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]


\========================================================================
# 20
['voi', 'adorate', 'Luisa']


			=None

1.
		Next word "voi" contains multiple morphemes ['$n', '$hum', '$def', '$2p', '$pl', '$D', 'voi-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', '-', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "voi"

		D + voi
			Filtering out impossible merge sites...
			Sink "voi" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*voi]
			=PRO.D{N}

8.
		Next word "adorate" contains multiple morphemes ['$[-te]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "voi" from PRO.D and created [PRO.D voi]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "voi" from PRO.D and created [PRO.D voi]
					PRO.D was opened into [PRO.D voi].
				Feature processing:
				Floater movement reconstruction:
					= [D voi]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:2 from (Spec,phi.D).
					phi.D acquired PHI:GEN:N from (Spec,phi.D).
					pro/x.D acquired PHI:NUM:PL from (Spec,pro/x.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
			=[[phi.D voi] PRO.T/fin]

10.

		Consume "v"

		[[D voi] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D voi] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D voi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D voi] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D voi] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D voi] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D voi] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D voi] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D voi] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D voi] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D voi] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D voi] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D voi] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D voi] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D voi] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D voi] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D voi] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D voi] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D voi] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D voi] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D voi] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D voi] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D voi " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D voi]:18 from memory buffer into Spec of PRO.v
					Result [[phi.D voi]:18 [PRO.T/fin [(DP):18 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:2 by phi-Agree from (DP):18.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):18.
					pro/x.T/fin acquired PHI:NUM:PL by phi-Agree from (DP):18.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):18.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D voi] [T/fin [[D voi] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D voi]:18 [phi.T/fin [(DP):18 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D voi]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 19/177 operations) <------------------------------------
		Solution:
		[[D voi] [T/fin [[D voi] [v [adora [D Luisa]]]]]]
		Grammar: [[phi.D voi]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [phi.D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'VAL']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'VAL', 'null']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'VAL']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'VAL', 'null']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
voi: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		[[D voi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]


\========================================================================
# 21
['loro', 'adorano', 'Luisa']


			=None

1.
		Next word "loro" contains multiple morphemes ['$n', '$def', '$3p', '$pl', '$D', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$pl"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

5.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:GEN:N', '-', 'LANG:IT', 'PHI:NUM:PL', 'PHI:PER:3'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

6.

		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*loro]
			=PRO.D{N}

7.
		Next word "adorano" contains multiple morphemes ['$[-no]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

8.

		Adding inflectional features {'PHI:DET:DEF', 'LANG:IT', '-', 'PHI:PER:3', 'PHI:NUM:PL'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "loro" from PRO.D and created [PRO.D loro]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "loro" from PRO.D and created [PRO.D loro]
					PRO.D was opened into [PRO.D loro].
				Feature processing:
				Floater movement reconstruction:
					= [D loro]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:N from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
			=[[phi.D loro] PRO.T/fin]

9.

		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D loro] PRO.T/fin{v}]

10.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D loro] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D loro] PRO.T/fin{v,V}]

11.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D loro] PRO.T/fin{v,V}]

12.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D loro] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D loro] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D loro] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D loro] PRO.T/fin{v,V}]

16.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D loro] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D loro] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D loro] [PRO.T/fin{v,V} PRO.D]]

17.

		Consume "Luisa"

		[[D loro] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D loro] [PRO.T/fin{v,V} PRO.D{N}]]

18.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D loro] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D loro] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D loro] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D loro] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D loro] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D loro] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D loro]:21 from memory buffer into Spec of PRO.v
					Result [[phi.D loro]:21 [PRO.T/fin [(DP):21 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:3 by phi-Agree from (DP):21.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):21.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):21.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from (DP):21.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D loro] [T/fin [[D loro] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D loro]:21 [phi.T/fin [(DP):21 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 18/173 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [adora [D Luisa]]]]]]
		Grammar: [[phi.D loro]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [phi.D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		[[D loro] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]


\========================================================================
# 22
['mina', 'ihailet', 'Merjaa']


			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*mina]
			=PRO.D{N}

8.
		Next word "ihailet" contains multiple morphemes ['$[-t]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					PRO.D was opened into [PRO.D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D mina] PRO.T/fin]

10.

		Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D mina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D mina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D mina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D mina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D mina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D mina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D mina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D mina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "Merja-"

		[[D mina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:21 [PRO.T/fin [<DP>:21 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:21.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:21.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:21.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:21 [T/fin [<DP>:21 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D mina] PRO.T/fin{v,V}] D]
			Transferring [[phi.D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:22 [PRO.T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:22 [PRO.T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:22.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:22.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:22.
			=[[<phi.D mina>:22 [T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]] PRO.D]

21.

		Consume "Merja-"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[<phi.D mina>:22 [T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]] PRO.D{N}]

22.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[<phi.D mina>:22 [T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D mina>:22 [T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]] PRO.D{N}].
					Extracted head "Merja-" from PRO.D and created [[<phi.D mina>:22 [T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]] [PRO.D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merja-> was made an adjunct.
					Dropping <PRO.D Merja->
						Floater <D Merja-> dropped.
						 = [[<phi.D mina>:22 [T/fin [<DP>:22 [PRO.v [<DP>:23 PRO.ihaile-]]]]] <PRO.D Merja->:23]
					= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D mina>:22 [T/fin [<DP>:22 [PRO.v [<DP>:23 PRO.ihaile-]]]]] <PRO.D Merja->:23] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] PRO.T/fin{v,V}]

23.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:ARG,-VAL'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D]]

24.

		Consume "Merjaa"

		[[D mina] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]

25.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merjaa" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:26 [PRO.T/fin [<DP>:26 [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:26.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:26.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:26.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:26 [T/fin [<DP>:26 [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D mina] PRO.T/fin{v,V}] D]
			Transferring [[phi.D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:27 [PRO.T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:27 [PRO.T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:27.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:27.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:27.
			=[[<phi.D mina>:27 [T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]] PRO.D]

26.

		Consume "Merjaa"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[<phi.D mina>:27 [T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]] PRO.D{N}]

27.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<phi.D mina>:27 [T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D mina>:27 [T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]] PRO.D{N}].
					Extracted head "Merjaa" from PRO.D and created [[<phi.D mina>:27 [T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]] [PRO.D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merjaa> was made an adjunct.
					Dropping <PRO.D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[<phi.D mina>:27 [T/fin [<DP>:27 [PRO.v [<DP>:28 PRO.ihaile-]]]]] <PRO.D Merjaa>:28]
					= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D mina>:27 [T/fin [<DP>:27 [PRO.v [<DP>:28 PRO.ihaile-]]]]] <PRO.D Merjaa>:28] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailet".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 23
['mina', 'ihalee', 'Merjaa']


			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*mina]
			=PRO.D{N}

8.

		Consume "?"

		D{N} + ?
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} ?]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					PRO.D was opened into [PRO.D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D mina] ?]

9.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D mina] ?]

10.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D mina] ?]

11.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D mina] ?]

12.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D mina] ?]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D mina] ?]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] ?]

15.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] ?] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[phi.D mina] ?] + D = 1]
				? + D = 2]
		Ranking completed:
			1. [?; D]
			2. [[[phi.D mina] ?]; D]
		Exploring solution number (1) =[? D]
			Transferring ? to LF.
				head movement reconstruction:
					Reconstructing head movement for ?.
				Feature processing:
				Floater movement reconstruction:
					= ?
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[phi.D mina] [? PRO.D]]

16.

		Consume "Merja-"

		[[D mina] [? D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D mina] [? PRO.D{N}]]

17.
	>>>	Trying candidate parse [[D mina] [? D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D mina] [? PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [? PRO.D{N}]].
					Extracted head "Merja-" from PRO.D and created [[phi.D mina] [? [PRO.D Merja-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
					D at the right failed to tail [-VAL][ARG]
					= [[D mina] [? [D Merja-]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [[D mina] [? [D Merja-]]]
		Checking LF-interface conditions.
			phi.D<[D]> failed to tail features [ARG][CAT:FIN][VAL]
D
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
?:['CAT:X', 'PF:?']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
?: []
phi.D: [D, ]
Merja-: [N, D, ]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D mina] ?] D]
			Transferring [[phi.D mina] ?] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] ?].
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
					= [[D mina] ?]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[[phi.D mina] ?] PRO.D]

18.

		Consume "Merja-"

		[[[D mina] ?] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[[phi.D mina] ?] PRO.D{N}]

19.
	>>>	Trying candidate parse [[[D mina] ?] D{N}] (2.)
		Reconstructing...
			Transferring [[[phi.D mina] ?] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D mina] ?] PRO.D{N}].
					Extracted head "Merja-" from PRO.D and created [[[phi.D mina] ?] [PRO.D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					= [[[D mina] ?] [D Merja-]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mina ? " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] ]]
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [[[D mina] ?] [D Merja-]]
		Checking LF-interface conditions.
			phi.D<[D]> failed to tail features [ARG][CAT:FIN][VAL]
D
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
?:['CAT:X', 'PF:?']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
?: []
PRO.D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] ?]

20.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:ARG,-VAL'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] ?] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[phi.D mina] ?] + D = 1]
				? + D = 2]
		Ranking completed:
			1. [?; D]
			2. [[[phi.D mina] ?]; D]
		Exploring solution number (1) =[? D]
			Transferring ? to LF.
				head movement reconstruction:
					Reconstructing head movement for ?.
				Feature processing:
				Floater movement reconstruction:
					= ?
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[phi.D mina] [? PRO.D]]

21.

		Consume "Merjaa"

		[[D mina] [? D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[phi.D mina] [? PRO.D{N}]]

22.
	>>>	Trying candidate parse [[D mina] [? D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D mina] [? PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [? PRO.D{N}]].
					Extracted head "Merjaa" from PRO.D and created [[phi.D mina] [? [PRO.D Merjaa]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
					D at the right failed to tail [-VAL][ARG]
					= [[D mina] [? [D Merjaa]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [[D mina] [? [D Merjaa]]]
		Checking LF-interface conditions.
			phi.D<[D]> failed to tail features [ARG][CAT:FIN][VAL]
D
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
?:['CAT:X', 'PF:?']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
?: []
PRO.D: [D, ]
Merjaa: [N, D, ]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D mina] ?] D]
			Transferring [[phi.D mina] ?] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] ?].
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
					= [[D mina] ?]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[[phi.D mina] ?] PRO.D]

23.

		Consume "Merjaa"

		[[[D mina] ?] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[[phi.D mina] ?] PRO.D{N}]

24.
	>>>	Trying candidate parse [[[D mina] ?] D{N}] (4.)
		Reconstructing...
			Transferring [[[phi.D mina] ?] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D mina] ?] PRO.D{N}].
					Extracted head "Merjaa" from PRO.D and created [[[phi.D mina] ?] [PRO.D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					= [[[D mina] ?] [D Merjaa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mina ? " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] ]]
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [[[D mina] ?] [D Merjaa]]
		Checking LF-interface conditions.
			phi.D<[D]> failed to tail features [ARG][CAT:FIN][VAL]
D
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
?:['CAT:X', 'PF:?']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
?: []
PRO.D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihalee".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 24
['mina', 'ihailemme', 'Merjaa']


			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*mina]
			=PRO.D{N}

8.
		Next word "ihailemme" contains multiple morphemes ['$[-mme]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					PRO.D was opened into [PRO.D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D mina] PRO.T/fin]

10.

		Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D mina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D mina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D mina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D mina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D mina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D mina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D mina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D mina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "Merja-"

		[[D mina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:31 [PRO.T/fin [<DP>:31 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:31.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:31.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:31.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:31 [T/fin [<DP>:31 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D mina] PRO.T/fin{v,V}] D]
			Transferring [[phi.D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:32 [PRO.T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:32 [PRO.T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:32.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:32.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:32.
			=[[<phi.D mina>:32 [T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]] PRO.D]

21.

		Consume "Merja-"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[<phi.D mina>:32 [T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]] PRO.D{N}]

22.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[<phi.D mina>:32 [T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D mina>:32 [T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]] PRO.D{N}].
					Extracted head "Merja-" from PRO.D and created [[<phi.D mina>:32 [T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]] [PRO.D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merja-> was made an adjunct.
					Dropping <PRO.D Merja->
						Floater <D Merja-> dropped.
						 = [[<phi.D mina>:32 [T/fin [<DP>:32 [PRO.v [<DP>:33 PRO.ihaile-]]]]] <PRO.D Merja->:33]
					= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D mina>:32 [T/fin [<DP>:32 [PRO.v [<DP>:33 PRO.ihaile-]]]]] <PRO.D Merja->:33] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] PRO.T/fin{v,V}]

23.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:ARG,-VAL'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D]]

24.

		Consume "Merjaa"

		[[D mina] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]

25.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merjaa" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:36 [PRO.T/fin [<DP>:36 [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:36.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:36.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:36.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:36 [T/fin [<DP>:36 [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D mina] PRO.T/fin{v,V}] D]
			Transferring [[phi.D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:37 [PRO.T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:37 [PRO.T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:37.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:37.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:37.
			=[[<phi.D mina>:37 [T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]] PRO.D]

26.

		Consume "Merjaa"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[<phi.D mina>:37 [T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]] PRO.D{N}]

27.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<phi.D mina>:37 [T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D mina>:37 [T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]] PRO.D{N}].
					Extracted head "Merjaa" from PRO.D and created [[<phi.D mina>:37 [T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]] [PRO.D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merjaa> was made an adjunct.
					Dropping <PRO.D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[<phi.D mina>:37 [T/fin [<DP>:37 [PRO.v [<DP>:38 PRO.ihaile-]]]]] <PRO.D Merjaa>:38]
					= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D mina>:37 [T/fin [<DP>:37 [PRO.v [<DP>:38 PRO.ihaile-]]]]] <PRO.D Merjaa>:38] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailemme".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 25
['mina', 'ihailette', 'Merjaa']


			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*mina]
			=PRO.D{N}

8.
		Next word "ihailette" contains multiple morphemes ['$[-tte]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					PRO.D was opened into [PRO.D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D mina] PRO.T/fin]

10.

		Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D mina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D mina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D mina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D mina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D mina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D mina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D mina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D mina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "Merja-"

		[[D mina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:41 [PRO.T/fin [<DP>:41 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:41.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:41.
				\Feature PHI:PER:1 was not matched in T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:41.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:41 [T/fin [<DP>:41 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D mina] PRO.T/fin{v,V}] D]
			Transferring [[phi.D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:42 [PRO.T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:42 [PRO.T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:42.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:42.
				\Feature PHI:PER:1 was not matched in T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:42.
			=[[<phi.D mina>:42 [T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]] PRO.D]

21.

		Consume "Merja-"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[<phi.D mina>:42 [T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]] PRO.D{N}]

22.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[<phi.D mina>:42 [T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D mina>:42 [T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]] PRO.D{N}].
					Extracted head "Merja-" from PRO.D and created [[<phi.D mina>:42 [T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]] [PRO.D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merja-> was made an adjunct.
					Dropping <PRO.D Merja->
						Floater <D Merja-> dropped.
						 = [[<phi.D mina>:42 [T/fin [<DP>:42 [PRO.v [<DP>:43 PRO.ihaile-]]]]] <PRO.D Merja->:43]
					= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D mina>:42 [T/fin [<DP>:42 [PRO.v [<DP>:43 PRO.ihaile-]]]]] <PRO.D Merja->:43] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] PRO.T/fin{v,V}]

23.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:ARG,-VAL'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D]]

24.

		Consume "Merjaa"

		[[D mina] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]

25.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merjaa" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:46 [PRO.T/fin [<DP>:46 [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:46.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:46.
				\Feature PHI:PER:1 was not matched in T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:46.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:46 [T/fin [<DP>:46 [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D mina] PRO.T/fin{v,V}] D]
			Transferring [[phi.D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:47 [PRO.T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:47 [PRO.T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:47.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:47.
				\Feature PHI:PER:1 was not matched in T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:47.
			=[[<phi.D mina>:47 [T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]] PRO.D]

26.

		Consume "Merjaa"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[<phi.D mina>:47 [T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]] PRO.D{N}]

27.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<phi.D mina>:47 [T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D mina>:47 [T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]] PRO.D{N}].
					Extracted head "Merjaa" from PRO.D and created [[<phi.D mina>:47 [T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]] [PRO.D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merjaa> was made an adjunct.
					Dropping <PRO.D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[<phi.D mina>:47 [T/fin [<DP>:47 [PRO.v [<DP>:48 PRO.ihaile-]]]]] <PRO.D Merjaa>:48]
					= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D mina>:47 [T/fin [<DP>:47 [PRO.v [<DP>:48 PRO.ihaile-]]]]] <PRO.D Merjaa>:48] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailette".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 26
['mina', 'ihailevat', 'Merjaa']


			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*mina]
			=PRO.D{N}

8.
		Next word "ihailevat" contains multiple morphemes ['$[-vat]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'LANG:FI', 'PHI:PER:3', '-', 'PHI:NUM:PL'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					PRO.D was opened into [PRO.D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D mina] PRO.T/fin]

10.

		Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D mina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D mina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D mina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D mina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D mina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D mina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D mina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D mina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "Merja-"

		[[D mina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:51 [PRO.T/fin [<DP>:51 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:51.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:51.
				\Feature PHI:PER:1 was not matched in T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:51.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:51 [T/fin [<DP>:51 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D mina] PRO.T/fin{v,V}] D]
			Transferring [[phi.D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:52 [PRO.T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:52 [PRO.T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:52.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:52.
				\Feature PHI:PER:1 was not matched in T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:52.
			=[[<phi.D mina>:52 [T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]] PRO.D]

21.

		Consume "Merja-"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[<phi.D mina>:52 [T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]] PRO.D{N}]

22.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[<phi.D mina>:52 [T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D mina>:52 [T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]] PRO.D{N}].
					Extracted head "Merja-" from PRO.D and created [[<phi.D mina>:52 [T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]] [PRO.D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merja-> was made an adjunct.
					Dropping <PRO.D Merja->
						Floater <D Merja-> dropped.
						 = [[<phi.D mina>:52 [T/fin [<DP>:52 [PRO.v [<DP>:53 PRO.ihaile-]]]]] <PRO.D Merja->:53]
					= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D mina>:52 [T/fin [<DP>:52 [PRO.v [<DP>:53 PRO.ihaile-]]]]] <PRO.D Merja->:53] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] PRO.T/fin{v,V}]

23.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:ARG,-VAL'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D]]

24.

		Consume "Merjaa"

		[[D mina] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]

25.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merjaa" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:56 [PRO.T/fin [<DP>:56 [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:56.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:56.
				\Feature PHI:PER:1 was not matched in T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:56.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:56 [T/fin [<DP>:56 [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D mina] PRO.T/fin{v,V}] D]
			Transferring [[phi.D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:57 [PRO.T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:57 [PRO.T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:57.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:57.
				\Feature PHI:PER:1 was not matched in T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:57.
			=[[<phi.D mina>:57 [T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]] PRO.D]

26.

		Consume "Merjaa"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[<phi.D mina>:57 [T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]] PRO.D{N}]

27.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<phi.D mina>:57 [T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D mina>:57 [T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]] PRO.D{N}].
					Extracted head "Merjaa" from PRO.D and created [[<phi.D mina>:57 [T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]] [PRO.D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merjaa> was made an adjunct.
					Dropping <PRO.D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[<phi.D mina>:57 [T/fin [<DP>:57 [PRO.v [<DP>:58 PRO.ihaile-]]]]] <PRO.D Merjaa>:58]
					= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D mina>:57 [T/fin [<DP>:57 [PRO.v [<DP>:58 PRO.ihaile-]]]]] <PRO.D Merjaa>:58] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailevat".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 27
['John', 'admire', 'Mary']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D John] T/fin{v}]

11.

		Consume "admire"

		[[D John] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D John] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D John] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D John] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D John] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D John] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D John] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D John] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D John] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D John] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D John] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D John] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:27 from memory buffer into Spec of PRO.v
					Result [[phi.D John]:27 [T/fin [(DP):27 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):27.
				\Feature PHI:GEN:M was not matched in T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):27.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):27.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):27.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D John] [T/fin [[D John] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:27 [T/fin [(DP):27 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D John] T/fin{v,V}] D]
			Transferring [[phi.D John] T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] T/fin{v,V}].
					Extracted head "PRO.v{V}" from T/fin and created [[phi.D John] [T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [[phi.D John] [T/fin [PRO.v PRO.admire]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [v admire]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:28 from memory buffer into Spec of PRO.v
					Result [[phi.D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):28.
				\Feature PHI:GEN:M was not matched in T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):28.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):28.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):28.
			=[[[phi.D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] PRO.D]

20.

		Consume "Mary"

		[[[D John] [T/fin [[D John] [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[[phi.D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] PRO.D{N}]

21.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] [v admire]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[phi.D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] PRO.D{N}].
					Extracted head "Mary" from PRO.D and created [[[phi.D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] [PRO.D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] [v admire]]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John T/fin __v admire " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]].
					Extraposition will be tried on [[[phi.D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] [PRO.D Mary]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D John] [T/fin [[D John] [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] <PRO.D Mary>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
PRO.D: [D]
Mary: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 28
['we', 'admires', 'Mary']


			=None

1.
		Next word "we" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$pl', '$D', 'we-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', '-', 'PHI:NUM:PL', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "we"

		D + we
			Filtering out impossible merge sites...
			Sink "we" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*we]
			=PRO.D{N}

8.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "we" from PRO.D and created [PRO.D we]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "we" from PRO.D and created [PRO.D we]
					PRO.D was opened into [PRO.D we].
				Feature processing:
				Floater movement reconstruction:
					= [D we]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D we] T/fin]

10.

		Consume "v"

		[[D we] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D we] T/fin{v}]

11.

		Consume "admire"

		[[D we] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D we] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D we] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D we] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D we] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D we] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D we] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D we] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D we] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D we] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D we] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D we] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D we] [T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D we] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D we] [T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D we] [T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D we] [T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D we] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D we] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D we] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D we " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D we]:31 from memory buffer into Spec of PRO.v
					Result [[phi.D we]:31 [T/fin [(DP):31 [PRO.v [PRO.admire [PRO.D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
				\Feature PHI:GEN:N was not matched in T/fin.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):31.
				\Feature PHI:NUM:PL was not matched in T/fin.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):31.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):31.
				\Feature PHI:PER:1 was not matched in T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):31.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D we] [T/fin [[D we] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D we]:31 [T/fin [(DP):31 [PRO.v [PRO.admire [phi.D Mary]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D we]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
we: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D we] T/fin{v,V}] D]
			Transferring [[phi.D we] T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D we] T/fin{v,V}].
					Extracted head "PRO.v{V}" from T/fin and created [[phi.D we] [T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [[phi.D we] [T/fin [PRO.v PRO.admire]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D we] [T/fin [v admire]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D we " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D we]:32 from memory buffer into Spec of PRO.v
					Result [[phi.D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
				\Feature PHI:GEN:N was not matched in T/fin.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):32.
				\Feature PHI:NUM:PL was not matched in T/fin.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):32.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):32.
				\Feature PHI:PER:1 was not matched in T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):32.
			=[[[phi.D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] PRO.D]

20.

		Consume "Mary"

		[[[D we] [T/fin [[D we] [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[[phi.D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] PRO.D{N}]

21.
	>>>	Trying candidate parse [[[D we] [T/fin [[D we] [v admire]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[phi.D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] PRO.D{N}].
					Extracted head "Mary" from PRO.D and created [[[phi.D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] [PRO.D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D we] [T/fin [[D we] [v admire]]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D we T/fin __v admire " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]].
					Extraposition will be tried on [[[phi.D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] [PRO.D Mary]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D we] [T/fin [[D we] [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] <PRO.D Mary>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D we]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
we: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
PRO.D: [D]
Mary: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admires".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "we-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$pl".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "we".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 29
['io', 'adori', 'Luisa']


			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*I]
			=PRO.D{N}

8.
		Next word "adori" contains multiple morphemes ['$[-i]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D I] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:24 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:24 [PRO.T/fin [(DP):24 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):24.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):24.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):24.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):24.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:24 [T/fin [(DP):24 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:25 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:25 [PRO.T/fin [(DP):25 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):25.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):25.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):25.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):25.
			=[[[phi.D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] PRO.D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] PRO.D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[phi.D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

22.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

23.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

24.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

25.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

26.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

27.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

28.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

29.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:28 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:28 [PRO.T/fin [(DP):28 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):28.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):28.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):28.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):28.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:28 [T/fin [(DP):28 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:29 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:29 [PRO.T/fin [(DP):29 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):29.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):29.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):29.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):29.
			=[[[phi.D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] PRO.D]

30.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] PRO.D{N}]

31.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[[phi.D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adori".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "I-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 30
['io', 'adora', 'Luisa']


			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*I]
			=PRO.D{N}

8.
		Ambiguous lexical item "adora" detected.
		Next word "adora" contains multiple morphemes ['$[-a]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D I] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:32 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:32 [PRO.T/fin [(DP):32 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):32.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):32.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):32.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):32.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:32 [T/fin [(DP):32 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:33 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:33 [PRO.T/fin [(DP):33 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):33.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):33.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):33.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):33.
			=[[[phi.D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] PRO.D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] PRO.D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[phi.D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

22.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

23.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

24.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

25.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

26.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

27.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

28.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

29.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:36 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:36 [PRO.T/fin [(DP):36 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):36.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):36.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):36.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):36.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:36 [T/fin [(DP):36 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:37 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:37 [PRO.T/fin [(DP):37 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):37.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):37.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):37.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):37.
			=[[[phi.D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] PRO.D]

30.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] PRO.D{N}]

31.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[[phi.D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "adora" contains multiple morphemes ['$T/fin', '$v', 'adora-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D I] PRO.T/fin]

32.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D I] PRO.T/fin{v}]

33.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

34.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

35.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

36.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

37.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

38.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

39.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

40.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

41.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (5.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:40 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:40 [PRO.T/fin [(DP):40 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):40.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):40.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):40.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):40.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:40 [phi.T/fin [(DP):40 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 41/599 operations) <------------------------------------
		Solution:
		[[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Grammar: [[phi.D I]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [phi.D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]


\========================================================================
# 31
['io', 'adora', 'Luisa']


			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*I]
			=PRO.D{N}

8.
		Ambiguous lexical item "adora" detected.
		Next word "adora" contains multiple morphemes ['$[-a]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D I] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:43 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:43 [PRO.T/fin [(DP):43 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):43.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):43.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):43.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):43.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:43 [T/fin [(DP):43 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:44 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:44 [PRO.T/fin [(DP):44 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):44.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):44.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):44.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):44.
			=[[[phi.D I]:44 [T/fin [(DP):44 [PRO.v PRO.adora]]]] PRO.D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:44 [T/fin [(DP):44 [PRO.v PRO.adora]]]] PRO.D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[phi.D I]:44 [T/fin [(DP):44 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:44 [T/fin [(DP):44 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:44 [T/fin [(DP):44 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:44 [T/fin [(DP):44 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:44 [T/fin [(DP):44 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:44 [T/fin [(DP):44 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

22.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

23.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

24.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

25.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

26.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

27.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

28.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

29.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:47 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:47 [PRO.T/fin [(DP):47 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):47.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):47.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):47.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):47.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:47 [T/fin [(DP):47 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:48 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:48 [PRO.T/fin [(DP):48 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):48.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):48.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):48.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):48.
			=[[[phi.D I]:48 [T/fin [(DP):48 [PRO.v PRO.adora]]]] PRO.D]

30.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:48 [T/fin [(DP):48 [PRO.v PRO.adora]]]] PRO.D{N}]

31.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[[phi.D I]:48 [T/fin [(DP):48 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:48 [T/fin [(DP):48 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:48 [T/fin [(DP):48 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:48 [T/fin [(DP):48 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:48 [T/fin [(DP):48 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:48 [T/fin [(DP):48 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "adora" contains multiple morphemes ['$T/fin', '$v', 'adora-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D I] PRO.T/fin]

32.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D I] PRO.T/fin{v}]

33.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

34.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

35.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

36.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

37.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

38.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

39.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

40.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

41.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (5.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:51 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:51 [PRO.T/fin [(DP):51 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):51.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):51.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):51.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):51.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:51 [phi.T/fin [(DP):51 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 41/599 operations) <------------------------------------
		Solution:
		[[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Grammar: [[phi.D I]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [phi.D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]


\========================================================================
# 32
['io', 'adoriamo', 'Luisa']


			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*I]
			=PRO.D{N}

8.
		Next word "adoriamo" contains multiple morphemes ['$[-iamo]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D I] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:54 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:54 [PRO.T/fin [(DP):54 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):54.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):54.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):54.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):54.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:54 [T/fin [(DP):54 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:55 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:55 [PRO.T/fin [(DP):55 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):55.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):55.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):55.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):55.
			=[[[phi.D I]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] PRO.D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] PRO.D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[phi.D I]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:55 [T/fin [(DP):55 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

22.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

23.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

24.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

25.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

26.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

27.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

28.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

29.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:58 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:58 [PRO.T/fin [(DP):58 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):58.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):58.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):58.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):58.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:58 [T/fin [(DP):58 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:59 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:59 [PRO.T/fin [(DP):59 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):59.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):59.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):59.
				\Feature PHI:NUM:SG was not matched in phi.T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):59.
			=[[[phi.D I]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] PRO.D]

30.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] PRO.D{N}]

31.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[[phi.D I]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:59 [T/fin [(DP):59 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adoriamo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "I-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 33
['io', 'adorate', 'Luisa']


			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*I]
			=PRO.D{N}

8.
		Next word "adorate" contains multiple morphemes ['$[-te]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D I] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:62 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:62 [PRO.T/fin [(DP):62 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):62.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):62.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):62.
				\Feature PHI:NUM:SG was not matched in T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):62.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:62 [T/fin [(DP):62 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:63 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:63 [PRO.T/fin [(DP):63 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):63.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):63.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):63.
				\Feature PHI:NUM:SG was not matched in T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):63.
			=[[[phi.D I]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] PRO.D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] PRO.D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[phi.D I]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:63 [T/fin [(DP):63 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

22.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

23.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

24.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

25.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

26.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

27.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

28.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

29.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:66 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:66 [PRO.T/fin [(DP):66 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):66.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):66.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):66.
				\Feature PHI:NUM:SG was not matched in T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):66.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:66 [T/fin [(DP):66 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:67 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:67 [PRO.T/fin [(DP):67 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):67.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):67.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):67.
				\Feature PHI:NUM:SG was not matched in T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):67.
			=[[[phi.D I]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] PRO.D]

30.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] PRO.D{N}]

31.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[[phi.D I]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:67 [T/fin [(DP):67 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adorate".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "I-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 34
['io', 'adorano', 'Luisa']


			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*I]
			=PRO.D{N}

8.
		Next word "adorano" contains multiple morphemes ['$[-no]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', 'LANG:IT', '-', 'PHI:PER:3', 'PHI:NUM:PL'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D I] PRO.T/fin{v}]

11.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:70 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:70 [PRO.T/fin [(DP):70 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):70.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):70.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):70.
				\Feature PHI:NUM:SG was not matched in T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):70.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:70 [T/fin [(DP):70 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:71 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:71 [PRO.T/fin [(DP):71 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):71.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):71.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):71.
				\Feature PHI:NUM:SG was not matched in T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):71.
			=[[[phi.D I]:71 [T/fin [(DP):71 [PRO.v PRO.adora]]]] PRO.D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:71 [T/fin [(DP):71 [PRO.v PRO.adora]]]] PRO.D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[phi.D I]:71 [T/fin [(DP):71 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:71 [T/fin [(DP):71 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:71 [T/fin [(DP):71 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:71 [T/fin [(DP):71 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:71 [T/fin [(DP):71 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:71 [T/fin [(DP):71 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[phi.D I] PRO.T/fin{v,V}]

22.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D I] PRO.T/fin{v,V}]

23.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D I] PRO.T/fin{v,V}]

24.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D I] PRO.T/fin{v,V}]

25.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D I] PRO.T/fin{v,V}]

26.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D I] PRO.T/fin{v,V}]

27.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[phi.D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D]]

28.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]]

29.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]]
					Extracted head "Luisa" from PRO.D and created [[phi.D I] [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:74 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:74 [PRO.T/fin [(DP):74 [PRO.v [PRO.adora [PRO.D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):74.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):74.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):74.
				\Feature PHI:NUM:SG was not matched in T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):74.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D I]:74 [T/fin [(DP):74 [PRO.v [PRO.adora [phi.D Luisa]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D I] PRO.T/fin{v,V}] D]
			Transferring [[phi.D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[phi.D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:75 from memory buffer into Spec of PRO.v
					Result [[phi.D I]:75 [PRO.T/fin [(DP):75 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.T/fin acquired PHI:GEN:N by phi-Agree from (DP):75.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):75.
				\Feature PHI:PER:1 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):75.
				\Feature PHI:NUM:SG was not matched in T/fin.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):75.
			=[[[phi.D I]:75 [T/fin [(DP):75 [PRO.v PRO.adora]]]] PRO.D]

30.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[[[phi.D I]:75 [T/fin [(DP):75 [PRO.v PRO.adora]]]] PRO.D{N}]

31.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[[phi.D I]:75 [T/fin [(DP):75 [PRO.v PRO.adora]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D I]:75 [T/fin [(DP):75 [PRO.v PRO.adora]]]] PRO.D{N}].
					Extracted head "Luisa" from PRO.D and created [[[phi.D I]:75 [T/fin [(DP):75 [PRO.v PRO.adora]]]] [PRO.D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I T/fin __v adora " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [v V]]]]]
				PRO.D has unaccetable specifier [[phi.D I]:75 [T/fin [(DP):75 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[phi.D I]:75 [T/fin [(DP):75 [PRO.v PRO.adora]]]] [PRO.D Luisa]].
					<PRO.D Luisa> was made an adjunct.
					<PRO.D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D I]:75 [T/fin [(DP):75 [PRO.v PRO.adora]]]] <PRO.D Luisa>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
PRO.D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adorano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "I-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 35
['Merjaa', 'ihailen', 'mina']


			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
			=PRO.D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=PRO.D{N}

9.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:NUM:SG', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Merja-] PRO.T/fin{v,V}]

13.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "mina"

		[[D Merja-] [T/fin{v,V} D]] + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*mina]
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "mina" from PRO.D and created [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D mina]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Merja->:61 [PRO.T/fin [PRO.v [<DP>:61 [PRO.ihaile- [PRO.D mina]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<PRO.D mina> was made an adjunct.
					Dropping <PRO.D mina>
						Floater <D mina> dropped.
						 = [<phi.D Merja->:61 [PRO.T/fin [<DP>:62 [PRO.v [<DP>:61 [PRO.ihaile- <PRO.D mina>:62]]]]]]
					= [<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:62.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:62.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:62.
			= [<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Merja->:61 [phi.T/fin [<DP>:62 [PRO.v [<DP>:61 [PRO.ihaile- <PRO.D mina>:62]]]]]] into LF...
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
		Grammar: [<phi.D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <PRO.D mina>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']

phi.D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
mina: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 36
['Merjaa', 'ihailet', 'sina']


			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
			=PRO.D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=PRO.D{N}

9.
		Next word "ihailet" contains multiple morphemes ['$[-t]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Merja-] PRO.T/fin{v,V}]

13.
		Next word "sina" contains multiple morphemes ['$hum', '$def', '$2p', '$sg', '$nom', '$D', 'sina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:2'] into working memory.

		Consume "$sg"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'PHI:PER:2', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "sina"

		[[D Merja-] [T/fin{v,V} D]] + sina
			Filtering out impossible merge sites...
			Sink "sina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*sina]
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "sina" from PRO.D and created [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D sina]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Merja->:65 [PRO.T/fin [PRO.v [<DP>:65 [PRO.ihaile- [PRO.D sina]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<PRO.D sina> was made an adjunct.
					Dropping <PRO.D sina>
						Floater <D sina> dropped.
						 = [<phi.D Merja->:65 [PRO.T/fin [<DP>:66 [PRO.v [<DP>:65 [PRO.ihaile- <PRO.D sina>:66]]]]]]
					= [<D Merja-> [T/fin [<D sina> [v [<D Merja-> [ihaile- <D sina>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:2 by phi-Agree from <DP>:66.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:66.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:66.
			= [<D Merja-> [T/fin [<D sina> [v [<D Merja-> [ihaile- <D sina>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Merja->:65 [phi.T/fin [<DP>:66 [PRO.v [<DP>:65 [PRO.ihaile- <PRO.D sina>:66]]]]]] into LF...
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D sina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D sina> [v [<D Merja-> [ihaile- <D sina>]]]]]]
		Grammar: [<phi.D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <PRO.D sina>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'VAL']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'VAL']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A']

phi.D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
sina: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 37
['Merjaa', 'ihailee', 'han']


			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
			=PRO.D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=PRO.D{N}

9.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Merja-] PRO.T/fin{v,V}]

13.
		Next word "han" contains multiple morphemes ['$hum', '$def', '$3p', '$sg', '$nom', '$D', 'han-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "han"

		[[D Merja-] [T/fin{v,V} D]] + han
			Filtering out impossible merge sites...
			Sink "han" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*han]
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "han" from PRO.D and created [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D han]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Merja->:69 [PRO.T/fin [PRO.v [<DP>:69 [PRO.ihaile- [PRO.D han]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<PRO.D han> was made an adjunct.
					Dropping <PRO.D han>
						Floater <D han> dropped.
						 = [<phi.D Merja->:69 [PRO.T/fin [<DP>:70 [PRO.v [<DP>:69 [PRO.ihaile- <PRO.D han>:70]]]]]]
					= [<D Merja-> [T/fin [<D han> [v [<D Merja-> [ihaile- <D han>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:70.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:70.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:70.
			= [<D Merja-> [T/fin [<D han> [v [<D Merja-> [ihaile- <D han>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Merja->:69 [phi.T/fin [<DP>:70 [PRO.v [<DP>:69 [PRO.ihaile- <PRO.D han>:70]]]]]] into LF...
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D han>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D han> [v [<D Merja-> [ihaile- <D han>]]]]]]
		Grammar: [<phi.D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <PRO.D han>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']

phi.D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
han: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 38
['Merjaa', 'ihailemme', 'me']


			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
			=PRO.D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=PRO.D{N}

9.
		Next word "ihailemme" contains multiple morphemes ['$[-mme]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Merja-] PRO.T/fin{v,V}]

13.
		Next word "me" contains multiple morphemes ['$hum', '$def', '$1p', '$pl', '$nom', '$D', 'me-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "me"

		[[D Merja-] [T/fin{v,V} D]] + me
			Filtering out impossible merge sites...
			Sink "me" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*me]
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "me" from PRO.D and created [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D me]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Merja->:73 [PRO.T/fin [PRO.v [<DP>:73 [PRO.ihaile- [PRO.D me]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<PRO.D me> was made an adjunct.
					Dropping <PRO.D me>
						Floater <D me> dropped.
						 = [<phi.D Merja->:73 [PRO.T/fin [<DP>:74 [PRO.v [<DP>:73 [PRO.ihaile- <PRO.D me>:74]]]]]]
					= [<D Merja-> [T/fin [<D me> [v [<D Merja-> [ihaile- <D me>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:74.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:74.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:74.
			= [<D Merja-> [T/fin [<D me> [v [<D Merja-> [ihaile- <D me>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Merja->:73 [phi.T/fin [<DP>:74 [PRO.v [<DP>:73 [PRO.ihaile- <PRO.D me>:74]]]]]] into LF...
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D me>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D me> [v [<D Merja-> [ihaile- <D me>]]]]]]
		Grammar: [<phi.D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <PRO.D me>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A']

phi.D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
me: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 39
['Merjaa', 'ihailette', 'te']


			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
			=PRO.D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=PRO.D{N}

9.
		Next word "ihailette" contains multiple morphemes ['$[-tte]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Merja-] PRO.T/fin{v,V}]

13.
		Next word "te" contains multiple morphemes ['$hum', '$def', '$2p', '$pl', '$nom', '$D', 'te-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:2'] into working memory.

		Consume "$pl"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'PHI:PER:2', '-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "te"

		[[D Merja-] [T/fin{v,V} D]] + te
			Filtering out impossible merge sites...
			Sink "te" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*te]
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "te" from PRO.D and created [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D te]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Merja->:77 [PRO.T/fin [PRO.v [<DP>:77 [PRO.ihaile- [PRO.D te]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<PRO.D te> was made an adjunct.
					Dropping <PRO.D te>
						Floater <D te> dropped.
						 = [<phi.D Merja->:77 [PRO.T/fin [<DP>:78 [PRO.v [<DP>:77 [PRO.ihaile- <PRO.D te>:78]]]]]]
					= [<D Merja-> [T/fin [<D te> [v [<D Merja-> [ihaile- <D te>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:2 by phi-Agree from <DP>:78.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:78.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:78.
			= [<D Merja-> [T/fin [<D te> [v [<D Merja-> [ihaile- <D te>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Merja->:77 [phi.T/fin [<DP>:78 [PRO.v [<DP>:77 [PRO.ihaile- <PRO.D te>:78]]]]]] into LF...
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D te>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D te> [v [<D Merja-> [ihaile- <D te>]]]]]]
		Grammar: [<phi.D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <PRO.D te>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'VAL']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'VAL']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A']

phi.D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
te: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 40
['Merjaa', 'ihailevat', 'he']


			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
			=PRO.D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=PRO.D{N}

9.
		Next word "ihailevat" contains multiple morphemes ['$[-vat]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:PER:3', '-', 'PHI:NUM:PL'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Merja-] PRO.T/fin{v,V}]

13.
		Ambiguous lexical item "he" detected.
		Next word "he" contains multiple morphemes ['$hum', '$def', '$3p', '$pl', '$nom', '$D', 'he-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$pl"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D]]

19.
		Ambiguous lexical item "he-" detected.

		Consume "he"

		[[D Merja-] [T/fin{v,V} D]] + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*he]
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "he" from PRO.D and created [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D he]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Merja->:81 [PRO.T/fin [PRO.v [<DP>:81 [PRO.ihaile- [PRO.D he]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<PRO.D he> was made an adjunct.
					Dropping <PRO.D he>
						Floater <D he> dropped.
						 = [<phi.D Merja->:81 [PRO.T/fin [<DP>:82 [PRO.v [<DP>:81 [PRO.ihaile- <PRO.D he>:82]]]]]]
					= [<D Merja-> [T/fin [<D he> [v [<D Merja-> [ihaile- <D he>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:82.
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:82.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:82.
			= [<D Merja-> [T/fin [<D he> [v [<D Merja-> [ihaile- <D he>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Merja->:81 [phi.T/fin [<DP>:82 [PRO.v [<DP>:81 [PRO.ihaile- <PRO.D he>:82]]]]]] into LF...
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D he>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> )
				Transfer to LF successful.
!--->		Tests passed (with 20/185 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D he> [v [<D Merja-> [ihaile- <D he>]]]]]]
		Grammar: [<phi.D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <PRO.D he>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']

phi.D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
he: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "he"

		[[D Merja-] [T/fin{v,V} D]] + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*he]
		Next word "he" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'he-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 41
['kuka', 'ihailee', 'Merjaa']


			=None

1.
		Next word "kuka" contains multiple morphemes ['$hum', '$def', '$3p', '$sg', '$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$wh"

			=None

6.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-COMP:C/fin', 'ABAR:WH', '-', 'PHI:PER:3', 'LANG:FI', '-COMP:ADV', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG', 'CAT:WH'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D/WH', 'CAT:ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*kuka]
			=PRO.D{N}

9.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "kuka" from PRO.D and created [PRO.D kuka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "kuka" from PRO.D and created [PRO.D kuka]
					PRO.D was opened into [PRO.D kuka].
				Feature processing:
				Floater movement reconstruction:
					= [D kuka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D kuka] PRO.T/fin]

11.

		Consume "v"

		[[D kuka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D kuka] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D kuka] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D kuka] PRO.T/fin{v,V}]

13.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D kuka] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D kuka] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D kuka] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D kuka] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D kuka] PRO.T/fin{v,V}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D kuka] PRO.T/fin{v,V}]

19.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D kuka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D kuka> [T/fin [<D kuka> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D kuka] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D kuka] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D kuka] [PRO.T/fin{v,V} PRO.D]]

20.

		Consume "Merja-"

		[[D kuka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D kuka] [PRO.T/fin{v,V} PRO.D{N}]]

21.
	>>>	Trying candidate parse [[D kuka] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D kuka] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D kuka] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D kuka] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D kuka] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D kuka] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D kuka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D kuka]
						<phi.D kuka> was made an adjunct.
						Floater <D kuka> dropped.
						 = [<phi.D kuka>:85 [PRO.T/fin [<DP>:85 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]
					= [<D kuka> [T/fin [<D kuka> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Criterial features {'WH'} copied to {'T/fin', 'ARG/FIN/T/T/fin', 'FIN', 'T', 'ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'ARG'}
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:85.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:85.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:85.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D kuka> [T/fin [<D kuka> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D kuka>:85 [phi.T/fin [<DP>:85 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D kuka>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 21/189 operations) <------------------------------------
		Solution:
		[<D kuka> [T/fin [<D kuka> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<phi.D kuka>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]
		Spellout TT/finiWHP = [DP:1 [TT/finiWH [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D/WH', 'CAT:ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/iWH/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D/WH', 'CAT:ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D/WH', 'CAT:ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/iWH/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D/WH', 'CAT:ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
kuka: [N, D]
phi.T/fin: [TT/finiWH]
(D): [D, TT/finiWH]
(N): [N, D, TT/finiWH]
PRO.v: [v, TT/finiWH]
PRO.ihaile-: [V, v, TT/finiWH]
phi.D: [D, V, v, TT/finiWH]
Merja-: [N, D, V, v, TT/finiWH]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 42
['keta', 'han', 'ihailee']


			=None

1.
		Next word "keta" contains multiple morphemes ['$hum', '$def', '$3p', '$sg', '$par', '$wh', '$D', 'keta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$wh"

			=None

6.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-COMP:C/fin', 'ABAR:WH', '-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', '-COMP:ADV', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG', 'CAT:WH'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D/WH', 'CAT:ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
			=PRO.D

8.

		Consume "ketä"

		D + ketä
			Filtering out impossible merge sites...
			Sink "ketä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*ketä]
			=PRO.D{N}

9.
		Next word "han" contains multiple morphemes ['$hum', '$def', '$3p', '$sg', '$nom', '$D', 'han-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.D{N}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.D{N}

11.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.D{N}

12.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=PRO.D{N}

13.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=PRO.D{N}

14.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} D]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "ketä" from PRO.D and created [PRO.D ketä]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "ketä" from PRO.D and created [PRO.D ketä]
					PRO.D was opened into [PRO.D ketä].
				Feature processing:
				Floater movement reconstruction:
					= [D ketä]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D ketä] PRO.D]

15.

		Consume "han"

		[[D ketä] D] + han
			Filtering out impossible merge sites...
			Sink "han" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*han]
			=[[phi.D ketä] PRO.D{N}]

16.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[phi.D ketä] PRO.D{N}]

17.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D ketä] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [<[D ketä] <D han>> PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "han" from PRO.D and created [PRO.D han]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "han" from PRO.D and created [PRO.D han]
					PRO.D was opened into [PRO.D han].
				Feature processing:
				Floater movement reconstruction:
					= [D han]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D ketä] [[phi.D han] PRO.T/fin]]

18.

		Consume "v"

		[[D ketä] [[D han] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D ketä] [[phi.D han] PRO.T/fin{v}]]

19.

		Consume "ihaile-"

		[[D ketä] [[D han] T/fin{v}]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D ketä] [[phi.D han] PRO.T/fin{v,V}]]

20.
	>>>	Trying candidate parse [[D ketä] [[D han] T/fin{v,V}]] (1.)
		Reconstructing...
			Transferring [[phi.D ketä] [[phi.D han] PRO.T/fin{v,V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D ketä] [[phi.D han] PRO.T/fin{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D ketä] [[phi.D han] [PRO.T/fin PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D ketä] [[phi.D han] [PRO.T/fin [PRO.v PRO.ihaile-]]]]
				Feature processing:
				Floater movement reconstruction:
					[D ketä] failed to tail [-VAL][ARG]
					Dropping [phi.D ketä]
						<phi.D ketä> was made an adjunct.
						Floater <D ketä> dropped.
						 = [<phi.D ketä>:86 [[phi.D han] [PRO.T/fin [PRO.v [<DP>:86 PRO.ihaile-]]]]]
					[D han] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D han]
						<phi.D han> was made an adjunct.
						Floater <D han> dropped.
						 = [<phi.D ketä>:86 [<phi.D han>:87 [PRO.T/fin [<DP>:87 [PRO.v [<DP>:86 PRO.ihaile-]]]]]]
					= [<D ketä> [<D han> [T/fin [<D han> [v [<D ketä> ihaile-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					New {'WH'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Agreement reconstruction:
					PRO.uWH has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.uWH acquired PHI:DET:DEF by phi-Agree from <phi.D han>:87.
					phi.uWH acquired PHI:NUM:SG by phi-Agree from <phi.D han>:87.
					phi.uWH acquired PHI:PER:3 by phi-Agree from <phi.D han>:87.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:87.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:87.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:87.
			= [<D ketä> [uWH [<D han> [T/fin [<D han> [v [<D ketä> ihaile-]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D ketä>:86 [phi.uWH [<phi.D han>:87 [phi.T/fin [<DP>:87 [PRO.v [<DP>:86 PRO.ihaile-]]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D han>    (alternatives: 2. T/fin 3. uWH )
				(D)[ABAR:WH] was bound to an operator.
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D ketä>    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 20/178 operations) <------------------------------------
		Solution:
		[<D ketä> [uWH [<D han> [T/fin [<D han> [v [<D ketä> ihaile-]]]]]]]
		Grammar: [<phi.D ketä>:1 [phi.uWH [<phi.D han>:2 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 PRO.ihaile-]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [TT/fin [__:2 [v [__:1 V]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D/WH', 'CAT:ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A']
uWH:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'PF:uWH', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D/WH', 'CAT:ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D/WH', 'CAT:ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A']
uWH:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'PF:uWH', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D/WH', 'CAT:ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
ketä: [N, D]
phi.uWH: [TT/fin]
phi.D: [D, TT/fin]
han: [N, D, TT/fin]
phi.T/fin: [TT/fin, TT/fin]
(D): [D, TT/fin, TT/fin]
(N): [N, D, TT/fin, TT/fin]
PRO.v: [v, TT/fin, TT/fin]
(D): [D, v, TT/fin, TT/fin]
(N): [N, D, v, TT/fin, TT/fin]
PRO.ihaile-: [V, v, TT/fin, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 43
['ihailen', 'Merjaa']


			=None

1.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:NUM:SG', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[PRO.T/fin{v,V} PRO.D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]
					Extracted head "Merja-" from PRO.D and created [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:PER:1 from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 13/113 operations) <------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 44
['ihailet', 'Merjaa']


			=None

1.
		Next word "ihailet" contains multiple morphemes ['$[-t]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[PRO.T/fin{v,V} PRO.D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]
					Extracted head "Merja-" from PRO.D and created [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:2 from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 13/113 operations) <------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 45
['ihailee', 'Merjaa']


			=None

1.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[PRO.T/fin{v,V} PRO.D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]
					Extracted head "Merja-" from PRO.D and created [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [pro/x.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]] into LF...
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					(Salient discourse antecedent or ungrammatical if not found)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

pro/x.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

14.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:ARG,-VAL'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

15.

		Consume "Merjaa"

		[T/fin{v,V} D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[PRO.T/fin{v,V} PRO.D{N}]

16.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (2.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]
					Extracted head "Merjaa" from PRO.D and created [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merjaa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [T/fin [v [ihaile- [D Merjaa]]]]
		Checking LF-interface conditions.
			Trying to transfer [pro/x.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]] into LF...
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					(Salient discourse antecedent or ungrammatical if not found)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

pro/x.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 46
['ihailemme', 'Merjaa']


			=None

1.
		Next word "ihailemme" contains multiple morphemes ['$[-mme]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[PRO.T/fin{v,V} PRO.D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]
					Extracted head "Merja-" from PRO.D and created [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:PER:1 from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:PL from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 13/113 operations) <------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 47
['ihailette', 'Merjaa']


			=None

1.
		Next word "ihailette" contains multiple morphemes ['$[-tte]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[PRO.T/fin{v,V} PRO.D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]
					Extracted head "Merja-" from PRO.D and created [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:2 from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:PL from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 13/113 operations) <------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 48
['ihailevat', 'Merjaa']


			=None

1.
		Next word "ihailevat" contains multiple morphemes ['$[-vat]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'LANG:FI', 'PHI:PER:3', '-', 'PHI:NUM:PL'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[PRO.T/fin{v,V} PRO.D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]
					Extracted head "Merja-" from PRO.D and created [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:3 from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:NUM:PL from (Spec,pro/x.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [pro/x.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]] into LF...
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					(Salient discourse antecedent or ungrammatical if not found)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

pro/x.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

14.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:ARG,-VAL'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

15.

		Consume "Merjaa"

		[T/fin{v,V} D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[PRO.T/fin{v,V} PRO.D{N}]

16.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (2.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]
					Extracted head "Merjaa" from PRO.D and created [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merjaa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:3 from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:NUM:PL from (Spec,pro/x.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [T/fin [v [ihaile- [D Merjaa]]]]
		Checking LF-interface conditions.
			Trying to transfer [pro/x.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]] into LF...
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					(Salient discourse antecedent or ungrammatical if not found)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

pro/x.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailevat".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 49
['admire', 'Mary']


			=None

1.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.

		Consume "admire"

		T/fin{v} + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=T/fin{v,V}

5.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=T/fin{v,V}

10.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[T/fin{v,V} PRO.D]

11.

		Consume "Mary"

		[T/fin{v,V} D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[T/fin{v,V} PRO.D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.admire" and reconstructed it = [T/fin [PRO.v [PRO.admire PRO.D{N}]]]
					Extracted head "Mary" from PRO.D and created [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [admire [D Mary]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
					Extraposition will be tried on [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [T/fin [v [admire [D Mary]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 50
['admires', 'Mary']


			=None

1.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.

		Consume "admire"

		T/fin{v} + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=T/fin{v,V}

5.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=T/fin{v,V}

10.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[T/fin{v,V} PRO.D]

11.

		Consume "Mary"

		[T/fin{v,V} D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[T/fin{v,V} PRO.D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.admire" and reconstructed it = [T/fin [PRO.v [PRO.admire PRO.D{N}]]]
					Extracted head "Mary" from PRO.D and created [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [admire [D Mary]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
					Extraposition will be tried on [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [T/fin [v [admire [D Mary]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admires".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 51
['adori', 'Luisa']


			=None

1.
		Next word "adori" contains multiple morphemes ['$[-i]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[PRO.T/fin{v,V} PRO.D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]
					Extracted head "Luisa" from PRO.D and created [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:2 from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 12/109 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]


\========================================================================
# 52
['adora', 'Luisa']


			=None

1.
		Ambiguous lexical item "adora" detected.
		Next word "adora" contains multiple morphemes ['$[-a]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[PRO.T/fin{v,V} PRO.D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]
					Extracted head "Luisa" from PRO.D and created [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:PER:3 from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 12/110 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
		Next word "adora" contains multiple morphemes ['$T/fin', '$v', 'adora-']


\========================================================================
# 53
['adora', 'Luisa']


			=None

1.
		Ambiguous lexical item "adora" detected.
		Next word "adora" contains multiple morphemes ['$[-a]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[PRO.T/fin{v,V} PRO.D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]
					Extracted head "Luisa" from PRO.D and created [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:PER:3 from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 12/110 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
		Next word "adora" contains multiple morphemes ['$T/fin', '$v', 'adora-']


\========================================================================
# 54
['adoriamo', 'Luisa']


			=None

1.
		Next word "adoriamo" contains multiple morphemes ['$[-iamo]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[PRO.T/fin{v,V} PRO.D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]
					Extracted head "Luisa" from PRO.D and created [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:PER:1 from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:PL from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 12/109 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]


\========================================================================
# 55
['adorate', 'Luisa']


			=None

1.
		Next word "adorate" contains multiple morphemes ['$[-te]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:PER:2', 'PHI:DET:DEF', '-', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[PRO.T/fin{v,V} PRO.D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]
					Extracted head "Luisa" from PRO.D and created [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:2 from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:PL from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 12/109 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]


\========================================================================
# 56
['adorano', 'Luisa']


			=None

1.
		Next word "adorano" contains multiple morphemes ['$[-no]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'PHI:DET:DEF', 'LANG:IT', '-', 'PHI:PER:3', 'PHI:NUM:PL'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "adora-" detected.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features {'-', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Luisa]
			=[PRO.T/fin{v,V} PRO.D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora PRO.D{N}]]]
					Extracted head "Luisa" from PRO.D and created [PRO.T/fin [PRO.v [PRO.adora [PRO.D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:PER:3 from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:PL from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.adora with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Luisa]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 12/109 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [phi.D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]


\========================================================================
# 57
['Pekka', 'sanoo', 'etta', 'mina', 'ihailen', 'Merjaa']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

18.

		Adding inflectional features {'-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} että]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.D] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.D] due to bad left branch.
		Exploring solution number (1) =[että D]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.D]]]

19.

		Consume "mina"

		[[D Pekka] [T/fin{V} [että D]]] + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*mina]
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.D{N}]]]

20.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.D{N}]]]

21.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:NUM:SG', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} [että D{N}]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että <D mina>]]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- [että <D mina>]]] PRO.T/fin] due to bad left branch.
				Reject [[että <D mina>] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					PRO.D was opened into [PRO.D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin]]]]

22.

		Consume "v"

		[[D Pekka] [T/fin{V} [että [[D mina] T/fin]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v}]]]]

23.

		Consume "ihaile-"

		[[D Pekka] [T/fin{V} [että [[D mina] T/fin{v}]]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]]]

24.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]]]

25.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]]]

26.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]]]

27.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]]]

28.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]]]

29.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]]]

30.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} [että [[D mina] T/fin{v,V}]]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D mina> [T/fin [<D mina> [v ihaile-]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [<D mina> [T/fin [<D mina> [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [<D mina> [T/fin [<D mina> [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]]] + D = -197]
				[PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]] + D = -194]
				[että [[phi.D mina] PRO.T/fin{v,V}]] + D = -94]
				[[phi.D mina] PRO.T/fin{v,V}] + D = -188]
				PRO.T/fin{v,V} + D = 170]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että [[phi.D mina] PRO.T/fin{v,V}]]; D]
			3. [[[phi.D mina] PRO.T/fin{v,V}]; D]
			4. [[PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]]; D]
			5. [[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] PRO.T/fin{v,V}]]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] [PRO.T/fin{v,V} PRO.D]]]]]

31.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} [että [[D mina] [T/fin{v,V} D]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]]]]

32.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [[D mina] [T/fin{v,V} D{N}]]]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[phi.D mina] [PRO.T/fin{v,V} PRO.D{N}]]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[phi.D mina] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:101 [PRO.T/fin [<DP>:101 [PRO.sano- [että [[phi.D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]]]
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D Pekka>:101 [PRO.T/fin [<DP>:101 [PRO.sano- [että [<phi.D mina>:102 [PRO.T/fin [<DP>:102 [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:101.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:101.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:101.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:102.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:102.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:102.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Pekka>:101 [phi.T/fin [<DP>:101 [PRO.sano- [että [<phi.D mina>:102 [phi.T/fin [<DP>:102 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]]]]]] into LF...
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D Pekka> 4. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 32/325 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [että [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]]]]]]
		Grammar: [<phi.D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.sano- [että [<phi.D mina>:2 [phi.T/fin [<DP>:2 [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [DP:2 [TT/fin [__:2 [v [V [D N]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
phi.D: [D, , V, TT/fin]
mina: [N, D, , V, TT/fin]
phi.T/fin: [TT/fin, , V, TT/fin]
(D): [D, TT/fin, , V, TT/fin]
(N): [N, D, TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
phi.D: [D, V, v, TT/fin, , V, TT/fin]
Merja-: [N, D, V, v, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 58
['Pekka', 'sanoo', 'etta', 'ihailen', 'Merjaa']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

14.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:NUM:SG', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} että]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin]]]

15.

		Consume "v"

		[[D Pekka] [T/fin{V} [että T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v}]]]

16.

		Consume "ihaile-"

		[[D Pekka] [T/fin{V} [että T/fin{v}]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

17.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

19.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

20.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

21.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

22.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

23.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} [että T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] + D = -197]
				[PRO.T/fin{V} [että PRO.T/fin{v,V}]] + D = -194]
				[että PRO.T/fin{v,V}] + D = -94]
				PRO.T/fin{v,V} + D = 166]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että PRO.T/fin{v,V}]; D]
			3. [[PRO.T/fin{V} [että PRO.T/fin{v,V}]]; D]
			4. [[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D]]]]

24.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} [että [T/fin{v,V} D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]]

25.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [T/fin{v,V} D{N}]]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} PRO.D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} PRO.D{N}]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:107 [PRO.T/fin [<DP>:107 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:107.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:107.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:107.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:PER:1 from (Spec,phi.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Pekka>:107 [phi.T/fin [<DP>:107 [PRO.sano- [että [phi.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]]]] into LF...
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: 2. <D Pekka> 3. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 25/259 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Grammar: [<phi.D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.sano- [että [phi.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [TT/fin [v [V [D N]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
phi.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
phi.D: [D, V, v, TT/fin, , V, TT/fin]
Merja-: [N, D, V, v, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 59
['Pekka', 'sanoo', 'etta', 'ihailee', 'Merjaa']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

14.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} että]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin]]]

15.

		Consume "v"

		[[D Pekka] [T/fin{V} [että T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v}]]]

16.

		Consume "ihaile-"

		[[D Pekka] [T/fin{V} [että T/fin{v}]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

17.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

19.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

20.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

21.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

22.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

23.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} [että T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] + D = -197]
				[PRO.T/fin{V} [että PRO.T/fin{v,V}]] + D = -194]
				[että PRO.T/fin{v,V}] + D = -94]
				PRO.T/fin{v,V} + D = 166]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että PRO.T/fin{v,V}]; D]
			3. [[PRO.T/fin{V} [että PRO.T/fin{v,V}]]; D]
			4. [[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D]]]]

24.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} [että [T/fin{v,V} D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]]

25.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [T/fin{v,V} D{N}]]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} PRO.D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} PRO.D{N}]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:112 [PRO.T/fin [<DP>:112 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:112.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:112.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:112.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Pekka>:112 [phi.T/fin [<DP>:112 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]]]] into LF...
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 25/260 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Grammar: [<phi.D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [TT/fin [v [V [D N]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
phi.D: [D, V, v, TT/fin, , V, TT/fin]
Merja-: [N, D, V, v, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 60
['mina', 'sanon', 'etta', 'ihailee', 'Merjaa']


			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*mina]
			=PRO.D{N}

8.
		Next word "sanon" contains multiple morphemes ['$[-n]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:NUM:SG', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "mina" from PRO.D and created [PRO.D mina]
					PRO.D was opened into [PRO.D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D mina] PRO.T/fin]

10.

		Consume "sano-"

		[[D mina] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[phi.D mina] PRO.T/fin{V}]

11.

		Consume "että"

		[[D mina] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D mina> [T/fin [<D mina> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{V} että]]

12.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[phi.D mina] [PRO.T/fin{V} että]]

13.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D mina] [T/fin{V} että]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D mina> [T/fin [<D mina> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin]]]

14.

		Consume "v"

		[[D mina] [T/fin{V} [että T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v}]]]

15.

		Consume "ihaile-"

		[[D mina] [T/fin{V} [että T/fin{v}]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

16.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

19.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

20.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

21.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

22.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] [T/fin{V} [että T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] + D = -197]
				[PRO.T/fin{V} [että PRO.T/fin{v,V}]] + D = -194]
				[että PRO.T/fin{v,V}] + D = -94]
				PRO.T/fin{v,V} + D = 166]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että PRO.T/fin{v,V}]; D]
			3. [[PRO.T/fin{V} [että PRO.T/fin{v,V}]]; D]
			4. [[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D]]]]

23.

		Consume "Merja-"

		[[D mina] [T/fin{V} [että [T/fin{v,V} D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]]

24.
	>>>	Trying candidate parse [[D mina] [T/fin{V} [että [T/fin{v,V} D{N}]]]] (1.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} PRO.D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} PRO.D{N}]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:117 [PRO.T/fin [<DP>:117 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:117.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:117.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:117.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:117 [phi.T/fin [<DP>:117 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]]]] into LF...
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					(Salient discourse antecedent or ungrammatical if not found)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
phi.D: [D, V, v, TT/fin, , V, TT/fin]
Merja-: [N, D, V, v, TT/fin, , V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[että PRO.T/fin{v,V}] D]
			Transferring [että PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [että PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [että [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [että [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					= [että [T/fin [v ihaile-]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [että [PRO.T/fin [PRO.v PRO.ihaile-]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			=[[phi.D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] PRO.D]]]

25.

		Consume "Merja-"

		[[D mina] [T/fin{V} [[että [T/fin [v ihaile-]]] D]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] PRO.D{N}]]]

26.
	>>>	Trying candidate parse [[D mina] [T/fin{V} [[että [T/fin [v ihaile-]]] D{N}]]] (2.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] PRO.D{N}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] PRO.D{N}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] PRO.D{N}]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [PRO.D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:118 [PRO.T/fin [<DP>:118 [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [PRO.D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [[että [T/fin [v ihaile-]]] [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "että T/fin v ihaile- " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[ [TT/fin [v V]]]]
					PRO.sano- (sano-) is missing a mandatory complement FORCE
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:118 [PRO.T/fin [<DP>:118 [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [PRO.D Merja-]]]]]].
					<PRO.D Merja-> was made an adjunct.
					<PRO.D Merja-> was made adjunct by an extraposition rule.
				PRO.ihaile- (ihaile-) is missing complement D
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:118.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:118.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:118.
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [<D mina> [T/fin [<D mina> [sano- [[että [T/fin [v ihaile-]]] <D Merja->]]]]]
		Checking LF-interface conditions.
				PRO.ihaile- (ihaile-) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'TAIL:PHI:DET:DEF,PHI:DET:_,PHI:HUM:HUM,PHI:NUM:SG,PHI:NUM:_,PHI:PER:3,PHI:PER:_,!COMP:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D, V, TT/fin]
Merja-: [N, D, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.T/fin{V} [että PRO.T/fin{v,V}]] D]
			Transferring [PRO.T/fin{V} [että PRO.T/fin{v,V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [että PRO.T/fin{v,V}]].
						Extracted head "PRO.sano-" and reconstructed it = [PRO.T/fin [PRO.sano- [että PRO.T/fin{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [sano- [että [T/fin [v ihaile-]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:PER:1 from (Spec,phi.T/fin).
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			=[[phi.D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] PRO.D]]

27.

		Consume "Merja-"

		[[D mina] [[T/fin [sano- [että [T/fin [v ihaile-]]]]] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] PRO.D{N}]]

28.
	>>>	Trying candidate parse [[D mina] [[T/fin [sano- [että [T/fin [v ihaile-]]]]] D{N}]] (3.)
		Reconstructing...
			Transferring [[phi.D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] PRO.D{N}]].
					Extracted head "Merja-" from PRO.D and created [[phi.D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] [PRO.D Merja-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merja-> was made an adjunct.
					Dropping <PRO.D Merja->
						Floater <D Merja-> dropped.
						 = [[phi.D mina] [[phi.T/fin [PRO.sano- [<DP>:119 [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]] <PRO.D Merja->:119]]
					Dropping <DP>:119
						Floater <D Merja-> dropped.
						 = [[phi.D mina] [[phi.T/fin [PRO.sano- [<DP>:119 [että [pro/x.T/fin [PRO.v [<DP>:119 PRO.ihaile-]]]]]]] <PRO.D Merja->:119]]
					= [[D mina] [[T/fin [sano- [<D Merja-> [että [T/fin [v [<D Merja-> ihaile-]]]]]]] <D Merja->]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mina " into memory buffer from SPEC of "phi.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D mina]:1 from memory buffer into Spec of PRO.sano-
					Result [[phi.D mina]:1 [[phi.T/fin [(DP):1 [PRO.sano- [<DP>:119 [että [pro/x.T/fin [PRO.v [<DP>:119 PRO.ihaile-]]]]]]]] <PRO.D Merja->:119]]
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[D mina] [[T/fin [[D mina] [sano- [<D Merja-> [että [T/fin [v [<D Merja-> ihaile-]]]]]]]] <D Merja->]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D mina]:1 [[phi.T/fin [(DP):1 [PRO.sano- [<DP>:119 [että [pro/x.T/fin [PRO.v [<DP>:119 PRO.ihaile-]]]]]]]] <PRO.D Merja->:119]] into LF...
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D mina]    (alternatives: 2. T/fin )
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					(Salient discourse antecedent or ungrammatical if not found)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D mina]    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
(D): [D, V, TT/fin]
(N): [N, D, V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
(D): [D, v, TT/fin, , V, TT/fin]
(N): [N, D, v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] D]
			Transferring [[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.sano- [että PRO.T/fin{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:121 [PRO.T/fin [<DP>:121 [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:121 [PRO.T/fin [<DP>:121 [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:121.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:121.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:121.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			=[[<phi.D mina>:121 [phi.T/fin [<DP>:121 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] PRO.D]

29.

		Consume "Merja-"

		[[<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[<phi.D mina>:121 [phi.T/fin [<DP>:121 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] PRO.D{N}]

30.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<phi.D mina>:121 [phi.T/fin [<DP>:121 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D mina>:121 [phi.T/fin [<DP>:121 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] PRO.D{N}].
					Extracted head "Merja-" from PRO.D and created [[<phi.D mina>:121 [phi.T/fin [<DP>:121 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] [PRO.D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merja-> was made an adjunct.
					Dropping <PRO.D Merja->
						Floater <D Merja-> dropped.
						 = [[<phi.D mina>:121 [phi.T/fin [<DP>:121 [PRO.sano- [<DP>:122 [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]]] <PRO.D Merja->:122]
					Dropping <DP>:122
						Floater <D Merja-> dropped.
						 = [[<phi.D mina>:121 [phi.T/fin [<DP>:121 [PRO.sano- [<DP>:122 [että [pro/x.T/fin [PRO.v [<DP>:122 PRO.ihaile-]]]]]]]]] <PRO.D Merja->:122]
					= [[<D mina> [T/fin [<D mina> [sano- [<D Merja-> [että [T/fin [v [<D Merja-> ihaile-]]]]]]]]] <D Merja->]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[<D mina> [T/fin [<D mina> [sano- [<D Merja-> [että [T/fin [v [<D Merja-> ihaile-]]]]]]]]] <D Merja->]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D mina>:121 [phi.T/fin [<DP>:121 [PRO.sano- [<DP>:122 [että [pro/x.T/fin [PRO.v [<DP>:122 PRO.ihaile-]]]]]]]]] <PRO.D Merja->:122] into LF...
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					(Salient discourse antecedent or ungrammatical if not found)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
(D): [D, V, TT/fin]
(N): [N, D, V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
(D): [D, v, TT/fin, , V, TT/fin]
(N): [N, D, v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

31.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:ARG,-VAL'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] [T/fin{V} [että T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] + D = -197]
				[PRO.T/fin{V} [että PRO.T/fin{v,V}]] + D = -194]
				[että PRO.T/fin{v,V}] + D = -94]
				PRO.T/fin{v,V} + D = 166]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että PRO.T/fin{v,V}]; D]
			3. [[PRO.T/fin{V} [että PRO.T/fin{v,V}]]; D]
			4. [[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D]]]]

32.

		Consume "Merjaa"

		[[D mina] [T/fin{V} [että [T/fin{v,V} D]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[phi.D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]]

33.
	>>>	Trying candidate parse [[D mina] [T/fin{V} [että [T/fin{v,V} D{N}]]]] (5.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} PRO.D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} PRO.D{N}]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]]]]
					Extracted head "Merjaa" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:126 [PRO.T/fin [<DP>:126 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v [ihaile- [D Merjaa]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:126.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:126.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:126.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v [ihaile- [D Merjaa]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D mina>:126 [phi.T/fin [<DP>:126 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [PRO.D Merjaa]]]]]]]]] into LF...
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					(Salient discourse antecedent or ungrammatical if not found)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D, V, v, TT/fin, , V, TT/fin]
Merjaa: [N, D, V, v, TT/fin, , V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[että PRO.T/fin{v,V}] D]
			Transferring [että PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [että PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [että [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [että [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					= [että [T/fin [v ihaile-]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [että [PRO.T/fin [PRO.v PRO.ihaile-]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			=[[phi.D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] PRO.D]]]

34.

		Consume "Merjaa"

		[[D mina] [T/fin{V} [[että [T/fin [v ihaile-]]] D]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[phi.D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] PRO.D{N}]]]

35.
	>>>	Trying candidate parse [[D mina] [T/fin{V} [[että [T/fin [v ihaile-]]] D{N}]]] (6.)
		Reconstructing...
			Transferring [[phi.D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] PRO.D{N}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] PRO.D{N}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] PRO.D{N}]]]]
					Extracted head "Merjaa" from PRO.D and created [[phi.D mina] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [PRO.D Merjaa]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:127 [PRO.T/fin [<DP>:127 [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [PRO.D Merjaa]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [[että [T/fin [v ihaile-]]] [D Merjaa]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "että T/fin v ihaile- " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[ [TT/fin [v V]]]]
					PRO.sano- (sano-) is missing a mandatory complement FORCE
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:127 [PRO.T/fin [<DP>:127 [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [PRO.D Merjaa]]]]]].
					<PRO.D Merjaa> was made an adjunct.
					<PRO.D Merjaa> was made adjunct by an extraposition rule.
				PRO.ihaile- (ihaile-) is missing complement D
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:127.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:127.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:127.
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [<D mina> [T/fin [<D mina> [sano- [[että [T/fin [v ihaile-]]] <D Merjaa>]]]]]
		Checking LF-interface conditions.
				PRO.ihaile- (ihaile-) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'TAIL:PHI:DET:_,PHI:NUM:_,PHI:PER:_,!COMP:*', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D, V, TT/fin]
Merjaa: [N, D, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.T/fin{V} [että PRO.T/fin{v,V}]] D]
			Transferring [PRO.T/fin{V} [että PRO.T/fin{v,V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [että PRO.T/fin{v,V}]].
						Extracted head "PRO.sano-" and reconstructed it = [PRO.T/fin [PRO.sano- [että PRO.T/fin{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [sano- [että [T/fin [v ihaile-]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:PER:1 from (Spec,phi.T/fin).
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			=[[phi.D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] PRO.D]]

36.

		Consume "Merjaa"

		[[D mina] [[T/fin [sano- [että [T/fin [v ihaile-]]]]] D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[phi.D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] PRO.D{N}]]

37.
	>>>	Trying candidate parse [[D mina] [[T/fin [sano- [että [T/fin [v ihaile-]]]]] D{N}]] (7.)
		Reconstructing...
			Transferring [[phi.D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] PRO.D{N}]].
					Extracted head "Merjaa" from PRO.D and created [[phi.D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] [PRO.D Merjaa]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merjaa> was made an adjunct.
					Dropping <PRO.D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[phi.D mina] [[phi.T/fin [PRO.sano- [<DP>:128 [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]] <PRO.D Merjaa>:128]]
					Dropping <DP>:128
						Floater <D Merjaa> dropped.
						 = [[phi.D mina] [[phi.T/fin [PRO.sano- [<DP>:128 [että [pro/x.T/fin [PRO.v [<DP>:128 PRO.ihaile-]]]]]]] <PRO.D Merjaa>:128]]
					= [[D mina] [[T/fin [sano- [<D Merjaa> [että [T/fin [v [<D Merjaa> ihaile-]]]]]]] <D Merjaa>]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mina " into memory buffer from SPEC of "phi.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D mina]:2 from memory buffer into Spec of PRO.sano-
					Result [[phi.D mina]:2 [[phi.T/fin [(DP):2 [PRO.sano- [<DP>:128 [että [pro/x.T/fin [PRO.v [<DP>:128 PRO.ihaile-]]]]]]]] <PRO.D Merjaa>:128]]
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[D mina] [[T/fin [[D mina] [sano- [<D Merjaa> [että [T/fin [v [<D Merjaa> ihaile-]]]]]]]] <D Merjaa>]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D mina]:2 [[phi.T/fin [(DP):2 [PRO.sano- [<DP>:128 [että [pro/x.T/fin [PRO.v [<DP>:128 PRO.ihaile-]]]]]]]] <PRO.D Merjaa>:128]] into LF...
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D mina]    (alternatives: 2. T/fin )
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					(Salient discourse antecedent or ungrammatical if not found)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D mina]    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
(D): [D, V, TT/fin]
(N): [N, D, V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
(D): [D, v, TT/fin, , V, TT/fin]
(N): [N, D, v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] D]
			Transferring [[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D mina] [PRO.T/fin [PRO.sano- [että PRO.T/fin{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D mina]
						<phi.D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<phi.D mina>:130 [PRO.T/fin [<DP>:130 [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<phi.D mina>:130 [PRO.T/fin [<DP>:130 [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:130.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:130.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:130.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			=[[<phi.D mina>:130 [phi.T/fin [<DP>:130 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] PRO.D]

38.

		Consume "Merjaa"

		[[<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=[[<phi.D mina>:130 [phi.T/fin [<DP>:130 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] PRO.D{N}]

39.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] D{N}] (8.)
		Reconstructing...
			Transferring [[<phi.D mina>:130 [phi.T/fin [<DP>:130 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D mina>:130 [phi.T/fin [<DP>:130 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] PRO.D{N}].
					Extracted head "Merjaa" from PRO.D and created [[<phi.D mina>:130 [phi.T/fin [<DP>:130 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] [PRO.D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<PRO.D Merjaa> was made an adjunct.
					Dropping <PRO.D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[<phi.D mina>:130 [phi.T/fin [<DP>:130 [PRO.sano- [<DP>:131 [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]]] <PRO.D Merjaa>:131]
					Dropping <DP>:131
						Floater <D Merjaa> dropped.
						 = [[<phi.D mina>:130 [phi.T/fin [<DP>:130 [PRO.sano- [<DP>:131 [että [pro/x.T/fin [PRO.v [<DP>:131 PRO.ihaile-]]]]]]]]] <PRO.D Merjaa>:131]
					= [[<D mina> [T/fin [<D mina> [sano- [<D Merjaa> [että [T/fin [v [<D Merjaa> ihaile-]]]]]]]]] <D Merjaa>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[<D mina> [T/fin [<D mina> [sano- [<D Merjaa> [että [T/fin [v [<D Merjaa> ihaile-]]]]]]]]] <D Merjaa>]
		Checking LF-interface conditions.
			Trying to transfer [[<phi.D mina>:130 [phi.T/fin [<DP>:130 [PRO.sano- [<DP>:131 [että [pro/x.T/fin [PRO.v [<DP>:131 PRO.ihaile-]]]]]]]]] <PRO.D Merjaa>:131] into LF...
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					(Salient discourse antecedent or ungrammatical if not found)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

phi.D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
(D): [D, V, TT/fin]
(N): [N, D, V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
(D): [D, v, TT/fin, , V, TT/fin]
(N): [N, D, v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sanon".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 61
['Pekka', 'sanoo', 'etta', 'Jukka', 'sanoo', 'etta', 'ihailee', 'Merjaa']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "Jukka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Jukka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

19.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} että]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.D] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.D] due to bad left branch.
		Exploring solution number (1) =[että D]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.D]]]

20.

		Consume "Jukka"

		[[D Pekka] [T/fin{V} [että D]]] + Jukka
			Filtering out impossible merge sites...
			Sink "Jukka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Jukka]
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.D{N}]]]

21.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.D{N}]]]

22.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} [että D{N}]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että <D Jukka>]]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- [että <D Jukka>]]] PRO.T/fin] due to bad left branch.
				Reject [[että <D Jukka>] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Jukka" from PRO.D and created [PRO.D Jukka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Jukka" from PRO.D and created [PRO.D Jukka]
					PRO.D was opened into [PRO.D Jukka].
				Feature processing:
				Floater movement reconstruction:
					= [D Jukka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] PRO.T/fin]]]]

23.

		Consume "sano-"

		[[D Pekka] [T/fin{V} [että [[D Jukka] T/fin]]]] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] PRO.T/fin{V}]]]]

24.

		Consume "että"

		[[D Pekka] [T/fin{V} [että [[D Jukka] T/fin{V}]]]] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> sano-]]]]]]]] että] due to bad left branch.
				Reject [[T/fin [sano- [että [<D Jukka> [T/fin [<D Jukka> sano-]]]]]] että] due to bad left branch.
				Reject [[että [<D Jukka> [T/fin [<D Jukka> sano-]]]] että] due to bad left branch.
				Reject [[<D Jukka> [T/fin [<D Jukka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} että]]]]]

25.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} että]]]]]

26.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} että]]]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- että]]]]]]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- että]]]]]]] PRO.T/fin] due to bad left branch.
				Reject [[että [<D Jukka> [T/fin [<D Jukka> [sano- että]]]]] PRO.T/fin] due to bad left branch.
				Reject [[<D Jukka> [T/fin [<D Jukka> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin]]]]]]

27.

		Consume "v"

		[[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} [että T/fin]]]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v}]]]]]]

28.

		Consume "ihaile-"

		[[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} [että T/fin{v}]]]]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

29.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

30.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

31.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

32.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

33.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

34.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

35.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} [että T/fin{v,V}]]]]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v ihaile-]]]]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v ihaile-]]]]]]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v ihaile-]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]] + D = -197]
				[PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]] + D = -194]
				[että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]] + D = -94]
				[[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] + D = -188]
				[PRO.T/fin{V} [että PRO.T/fin{v,V}]] + D = -185]
				[että PRO.T/fin{v,V}] + D = -88]
				PRO.T/fin{v,V} + D = 178]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että PRO.T/fin{v,V}]; D]
			3. [[että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]; D]
			4. [[PRO.T/fin{V} [että PRO.T/fin{v,V}]]; D]
			5. [[[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]; D]
			6. [[PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]; D]
			7. [[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D]]]]]]]

36.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} [että [T/fin{v,V} D]]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]]]]]

37.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} [että [T/fin{v,V} D{N}]]]]]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [että [[phi.D Jukka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[phi.D Jukka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} PRO.D{N}]]]]]]]]
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[phi.D Jukka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} PRO.D{N}]]]]]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[phi.D Jukka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} PRO.D{N}]]]]]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[phi.D Jukka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]]]]]]]]
					Extracted head "Merja-" from PRO.D and created [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[phi.D Jukka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:156 [PRO.T/fin [<DP>:156 [PRO.sano- [että [[phi.D Jukka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]]]]]]
					[D Jukka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Jukka]
						<phi.D Jukka> was made an adjunct.
						Floater <D Jukka> dropped.
						 = [<phi.D Pekka>:156 [PRO.T/fin [<DP>:156 [PRO.sano- [että [<phi.D Jukka>:157 [PRO.T/fin [<DP>:157 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D Merja-]]]]]]]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:156.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:156.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:156.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:157.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:157.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:157.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Pekka>:156 [phi.T/fin [<DP>:156 [PRO.sano- [että [<phi.D Jukka>:157 [phi.T/fin [<DP>:157 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]]]]]]]]] into LF...
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.sano- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Jukka>    (alternatives: 2. T/fin 3. <D Pekka> 4. T/fin )
				pro/x.T/fin with {'PHI:DET:_'} was associated at LF with:
					1. <D Jukka>    (alternatives: 2. T/fin 3. <D Pekka> 4. T/fin )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Jukka>    (alternatives: 2. T/fin 3. <D Pekka> 4. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 37/408 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
		Grammar: [<phi.D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.sano- [että [<phi.D Jukka>:2 [phi.T/fin [<DP>:2 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [phi.D Merja-]]]]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [DP:2 [TT/fin [__:2 [V [ [TT/fin [v [V [D N]]]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
phi.D: [D, , V, TT/fin]
Jukka: [N, D, , V, TT/fin]
phi.T/fin: [TT/fin, , V, TT/fin]
(D): [D, TT/fin, , V, TT/fin]
(N): [N, D, TT/fin, , V, TT/fin]
PRO.sano-: [V, TT/fin, , V, TT/fin]
että: [, V, TT/fin, , V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin, , V, TT/fin]
phi.D: [D, V, v, TT/fin, , V, TT/fin, , V, TT/fin]
Merja-: [N, D, V, v, TT/fin, , V, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 62
['we', 'said', 'that', 'I', 'admire', 'Mary']


			=None

1.
		Next word "we" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$pl', '$D', 'we-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'PHI:GEN:N', '-', 'PHI:NUM:PL', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "we"

		D + we
			Filtering out impossible merge sites...
			Sink "we" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*we]
			=PRO.D{N}

8.
		Next word "said" contains multiple morphemes ['$[-0]', '$T/fin', 'say-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "we" from PRO.D and created [PRO.D we]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "we" from PRO.D and created [PRO.D we]
					PRO.D was opened into [PRO.D we].
				Feature processing:
				Floater movement reconstruction:
					= [D we]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:NUM:PL from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
			=[[phi.D we] T/fin]

10.

		Consume "say"

		[[D we] T/fin] + say
			Filtering out impossible merge sites...
			Sink "say" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*say]
			=[[phi.D we] T/fin{V}]

11.

		Consume "that"

		[[D we] T/fin{V}] + that
			Filtering out impossible merge sites...
				Reject [[[D we] [T/fin [[D we] say]]] that] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} that]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.say" from T/fin and created [T/fin PRO.say]
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.say (say) is missing complement FORCE
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[phi.D we] [T/fin{V} that]]

12.
		Next word "I" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=[[phi.D we] [T/fin{V} that]]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D we] [T/fin{V} that]]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=[[phi.D we] [T/fin{V} that]]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=[[phi.D we] [T/fin{V} that]]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D we] [T/fin{V} that]]

17.

		Adding inflectional features {'PHI:GEN:N', 'PHI:NUM:SG', '-', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D we] [T/fin{V} that]] + D
			Filtering out impossible merge sites...
				Reject [[[D we] [T/fin [[D we] [say that]]]] PRO.D] due to bad left branch.
				Reject [[T/fin [say that]] PRO.D] due to bad left branch.
		Exploring solution number (1) =[that D]
			Transferring that to LF.
				head movement reconstruction:
					Reconstructing head movement for that.
				Feature processing:
				Floater movement reconstruction:
					= that
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				that probing for CAT:T/fin failed.
				A phi-marked head "that" lacks complement
					Extraposition will be tried on that.
				Agreement reconstruction:
			=[[phi.D we] [T/fin{V} [that PRO.D]]]

18.

		Consume "I"

		[[D we] [T/fin{V} [that D]]] + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*I]
			=[[phi.D we] [T/fin{V} [that PRO.D{N}]]]

19.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[phi.D we] [T/fin{V} [that PRO.D{N}]]]

20.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D we] [T/fin{V} [that D{N}]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D we] [T/fin [[D we] [say [that [D I]]]]]] T/fin] due to bad left branch.
				Reject [[T/fin [say [that [D I]]]] T/fin] due to bad left branch.
				Reject [[that [D I]] T/fin] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "I" from PRO.D and created [PRO.D I]
					PRO.D was opened into [PRO.D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:N from (Spec,PRO.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:PER:1 from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D we] [T/fin{V} [that [[phi.D I] T/fin]]]]

21.

		Consume "v"

		[[D we] [T/fin{V} [that [[D I] T/fin]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D we] [T/fin{V} [that [[phi.D I] T/fin{v}]]]]

22.

		Consume "admire"

		[[D we] [T/fin{V} [that [[D I] T/fin{v}]]]] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D we] [T/fin{V} [that [[phi.D I] T/fin{v,V}]]]]

23.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D we] [T/fin{V} [that [[phi.D I] T/fin{v,V}]]]]

24.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D we] [T/fin{V} [that [[phi.D I] T/fin{v,V}]]]]

25.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D we] [T/fin{V} [that [[phi.D I] T/fin{v,V}]]]]

26.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D we] [T/fin{V} [that [[phi.D I] T/fin{v,V}]]]]

27.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D we] [T/fin{V} [that [[phi.D I] T/fin{v,V}]]]]

28.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D we] [T/fin{V} [that [[D I] T/fin{v,V}]]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [say [that [[D I] [T/fin [[D I] [v admire]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D we] [T/fin{V} [that [[phi.D I] T/fin{v,V}]]]] + D = -98]
				[T/fin{V} [that [[phi.D I] T/fin{v,V}]]] + D = -194]
				[that [[phi.D I] T/fin{v,V}]] + D = 3]
				[[phi.D I] T/fin{v,V}] + D = -92]
				T/fin{v,V} + D = 215]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[that [[phi.D I] T/fin{v,V}]]; D]
			3. [[[phi.D I] T/fin{v,V}]; D]
			4. [[[phi.D we] [T/fin{V} [that [[phi.D I] T/fin{v,V}]]]]; D]
			5. [[T/fin{V} [that [[phi.D I] T/fin{v,V}]]]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D we] [T/fin{V} [that [[phi.D I] [T/fin{v,V} PRO.D]]]]]

29.

		Consume "Mary"

		[[D we] [T/fin{V} [that [[D I] [T/fin{v,V} D]]]]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D we] [T/fin{V} [that [[phi.D I] [T/fin{v,V} PRO.D{N}]]]]]

30.
	>>>	Trying candidate parse [[D we] [T/fin{V} [that [[D I] [T/fin{v,V} D{N}]]]]] (1.)
		Reconstructing...
			Transferring [[phi.D we] [T/fin{V} [that [[phi.D I] [T/fin{v,V} PRO.D{N}]]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D we] [T/fin{V} [that [[phi.D I] [T/fin{v,V} PRO.D{N}]]]]].
						Extracted head "PRO.say" and reconstructed it = [[phi.D we] [T/fin [PRO.say [that [[phi.D I] [T/fin{v,V} PRO.D{N}]]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D we] [T/fin [PRO.say [that [[phi.D I] [T/fin [PRO.v{V} PRO.D{N}]]]]]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D we] [T/fin [PRO.say [that [[phi.D I] [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D we] [T/fin [PRO.say [that [[phi.D I] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D we] [T/fin [say [that [[D I] [T/fin [v [admire [D Mary]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D we " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D we]:46 from memory buffer into Spec of PRO.say
					Result [[phi.D we]:46 [T/fin [(DP):46 [PRO.say [that [[phi.D I] [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]]]]]]
					Moving "D I " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D I]:47 from memory buffer into Spec of PRO.v
					Result [[phi.D we]:46 [T/fin [(DP):46 [PRO.say [that [[phi.D I]:47 [T/fin [(DP):47 [PRO.v [PRO.admire [PRO.D Mary]]]]]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):46.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):46.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):46.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):46.
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):47.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):47.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):47.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):47.
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D we] [T/fin [[D we] [say [that [[D I] [T/fin [[D I] [v [admire [D Mary]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D we]:46 [T/fin [(DP):46 [PRO.say [that [[phi.D I]:47 [T/fin [(DP):47 [PRO.v [PRO.admire [phi.D Mary]]]]]]]]]]] into LF...
				PRO.say with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D we]    (alternatives: 2. T/fin )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D we] 4. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 30/315 operations) <------------------------------------
		Solution:
		[[D we] [T/fin [[D we] [say [that [[D I] [T/fin [[D I] [v [admire [D Mary]]]]]]]]]]]
		Grammar: [[phi.D we]:1 [T/fin [(DP):1 [PRO.say [that [[phi.D I]:2 [T/fin [(DP):2 [PRO.v [PRO.admire [phi.D Mary]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [DP:2 [TT/fin [__:2 [v [V [D N]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
we: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
phi.D: [D, , V, TT/fin]
I: [N, D, , V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
(D): [D, TT/fin, , V, TT/fin]
(N): [N, D, TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
phi.D: [D, V, v, TT/fin, , V, TT/fin]
Mary: [N, D, V, v, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 63
['John', 'said', 'that', 'admire', 'Mary']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "said" contains multiple morphemes ['$[-0]', '$T/fin', 'say-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "say"

		[[D John] T/fin] + say
			Filtering out impossible merge sites...
			Sink "say" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*say]
			=[[phi.D John] T/fin{V}]

11.

		Consume "that"

		[[D John] T/fin{V}] + that
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] say]]] that] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} that]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.say" from T/fin and created [T/fin PRO.say]
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.say (say) is missing complement FORCE
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} that]]

12.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[phi.D John] [T/fin{V} that]]

13.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D John] [T/fin{V} that]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [say that]]]] T/fin] due to bad left branch.
				Reject [[T/fin [say that]] T/fin] due to bad left branch.
		Exploring solution number (1) =[that T/fin]
			Transferring that to LF.
				head movement reconstruction:
					Reconstructing head movement for that.
				Feature processing:
				Floater movement reconstruction:
					= that
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				that probing for CAT:T/fin failed.
				A phi-marked head "that" lacks complement
					Extraposition will be tried on that.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} [that T/fin]]]

14.

		Consume "v"

		[[D John] [T/fin{V} [that T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D John] [T/fin{V} [that T/fin{v}]]]

15.

		Consume "admire"

		[[D John] [T/fin{V} [that T/fin{v}]]] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

16.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

17.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

18.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

19.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

20.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

21.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D John] [T/fin{V} [that T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [say [that [T/fin [v admire]]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D John] [T/fin{V} [that T/fin{v,V}]]] + D = -98]
				[T/fin{V} [that T/fin{v,V}]] + D = -194]
				[that T/fin{v,V}] + D = 3]
				T/fin{v,V} + D = 212]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[that T/fin{v,V}]; D]
			3. [[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]; D]
			4. [[T/fin{V} [that T/fin{v,V}]]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} [that [T/fin{v,V} PRO.D]]]]

22.

		Consume "Mary"

		[[D John] [T/fin{V} [that [T/fin{v,V} D]]]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{V} [that [T/fin{v,V} PRO.D{N}]]]]

23.
	>>>	Trying candidate parse [[D John] [T/fin{V} [that [T/fin{v,V} D{N}]]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{V} [that [T/fin{v,V} PRO.D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [that [T/fin{v,V} PRO.D{N}]]]].
						Extracted head "PRO.say" and reconstructed it = [[phi.D John] [T/fin [PRO.say [that [T/fin{v,V} PRO.D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D John] [T/fin [PRO.say [that [T/fin [PRO.v{V} PRO.D{N}]]]]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D John] [T/fin [PRO.say [that [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D John] [T/fin [PRO.say [that [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [say [that [T/fin [v [admire [D Mary]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:52 from memory buffer into Spec of PRO.say
					Result [[phi.D John]:52 [T/fin [(DP):52 [PRO.say [that [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):52.
				\Feature PHI:GEN:M was not matched in T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):52.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):52.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):52.
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D John] [T/fin [[D John] [say [that [T/fin [v [admire [D Mary]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:52 [T/fin [(DP):52 [PRO.say [that [T/fin [PRO.v [PRO.admire [phi.D Mary]]]]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.say with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				T/fin with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: 2. [D John] 3. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
phi.D: [D, V, v, TT/fin, , V, TT/fin]
Mary: [N, D, V, v, TT/fin, , V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[that T/fin{v,V}] D]
			Transferring [that T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [that T/fin{v,V}].
					Extracted head "PRO.v{V}" from T/fin and created [that [T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [that [T/fin [PRO.v PRO.admire]]]
				Feature processing:
				Floater movement reconstruction:
					= [that [T/fin [v admire]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[phi.D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] PRO.D]]]

24.

		Consume "Mary"

		[[D John] [T/fin{V} [[that [T/fin [v admire]]] D]]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] PRO.D{N}]]]

25.
	>>>	Trying candidate parse [[D John] [T/fin{V} [[that [T/fin [v admire]]] D{N}]]] (2.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] PRO.D{N}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] PRO.D{N}]]].
						Extracted head "PRO.say" and reconstructed it = [[phi.D John] [T/fin [PRO.say [[that [T/fin [PRO.v PRO.admire]]] PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D John] [T/fin [PRO.say [[that [T/fin [PRO.v PRO.admire]]] [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [say [[that [T/fin [v admire]]] [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:53 from memory buffer into Spec of PRO.say
					Result [[phi.D John]:53 [T/fin [(DP):53 [PRO.say [[that [T/fin [PRO.v PRO.admire]]] [PRO.D Mary]]]]]]
					Moving "that T/fin v admire " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[ [TT/fin [v V]]]]
					PRO.say (say) is missing a mandatory complement FORCE
					Extraposition will be tried on [[phi.D John]:53 [T/fin [(DP):53 [PRO.say [[that [T/fin [PRO.v PRO.admire]]] [PRO.D Mary]]]]]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):53.
				\Feature PHI:GEN:M was not matched in T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):53.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):53.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):53.
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [[D John] [T/fin [[D John] [say [[that [T/fin [v admire]]] <D Mary>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:53 [T/fin [(DP):53 [PRO.say [[that [T/fin [PRO.v PRO.admire]]] <PRO.D Mary>]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.say with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				T/fin with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: 2. [D John] 3. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[phi.D John] [T/fin{V} [that T/fin{v,V}]]] D]
			Transferring [[phi.D John] [T/fin{V} [that T/fin{v,V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [that T/fin{v,V}]]].
						Extracted head "PRO.say" and reconstructed it = [[phi.D John] [T/fin [PRO.say [that T/fin{v,V}]]]]
					Extracted head "PRO.v{V}" from T/fin and created [[phi.D John] [T/fin [PRO.say [that [T/fin PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [[phi.D John] [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [say [that [T/fin [v admire]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:54 from memory buffer into Spec of PRO.say
					Result [[phi.D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):54.
				\Feature PHI:GEN:M was not matched in T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):54.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):54.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):54.
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[[phi.D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] PRO.D]

26.

		Consume "Mary"

		[[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[[phi.D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] PRO.D{N}]

27.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] D{N}] (3.)
		Reconstructing...
			Transferring [[[phi.D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] PRO.D{N}].
					Extracted head "Mary" from PRO.D and created [[[phi.D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] [PRO.D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John T/fin __say that T/fin v admire " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [ [TT/fin [v V]]]]]]]]
				PRO.D has unaccetable specifier [[phi.D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]].
					Extraposition will be tried on [[[phi.D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] [PRO.D Mary]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] <D Mary>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] <PRO.D Mary>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.say with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				T/fin with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: 2. [D John] 3. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D]
Mary: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[T/fin{V} [that T/fin{v,V}]] D]
			Transferring [T/fin{V} [that T/fin{v,V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [that T/fin{v,V}]].
						Extracted head "PRO.say" and reconstructed it = [T/fin [PRO.say [that T/fin{v,V}]]]
					Extracted head "PRO.v{V}" from T/fin and created [T/fin [PRO.say [that [T/fin PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [say [that [T/fin [v admire]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
					Extraposition will be tried on [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[phi.D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] PRO.D]]

28.

		Consume "Mary"

		[[D John] [[T/fin [say [that [T/fin [v admire]]]]] D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] PRO.D{N}]]

29.
	>>>	Trying candidate parse [[D John] [[T/fin [say [that [T/fin [v admire]]]]] D{N}]] (4.)
		Reconstructing...
			Transferring [[phi.D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] PRO.D{N}]].
					Extracted head "Mary" from PRO.D and created [[phi.D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] [PRO.D Mary]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [[T/fin [say [that [T/fin [v admire]]]]] [D Mary]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin say that T/fin v admire " into memory buffer from SPEC of "PRO.D".
					Moving "D John " into memory buffer from SPEC of "PRO.D".
					New head was spawned due to multiple specifiers at PRO.D but its category is unknown!
					Memory buffer: [[TT/fin [V [ [TT/fin [v V]]]]], [D N]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.D has unaccetable specifier [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]].
					Extraposition will be tried on [[phi.D John] [? [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] [PRO.D Mary]]]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier but needs one.
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [[D John] [? [[T/fin [say [that [T/fin [v admire]]]]] <D Mary>]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:PHI:DET:DEF,PHI:DET:_,PHI:GEN:F,PHI:GEN:_,PHI:HUM:HUM,PHI:NUM:SG,PHI:NUM:_,PHI:PER:3,PHI:PER:_,!COMP:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
?: [?]
T/fin: [TT/fin, ?]
PRO.say: [V, TT/fin, ?]
that: [, V, TT/fin, ?]
T/fin: [TT/fin, , V, TT/fin, ?]
PRO.v: [v, TT/fin, , V, TT/fin, ?]
PRO.admire: [V, v, TT/fin, , V, TT/fin, ?]
PRO.D: [D, ?]
Mary: [N, D, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "that".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "say-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "said".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 64
['John', 'said', 'that', 'admires', 'Mary']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "said" contains multiple morphemes ['$[-0]', '$T/fin', 'say-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG', '-', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:DET:DEF', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "say"

		[[D John] T/fin] + say
			Filtering out impossible merge sites...
			Sink "say" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*say]
			=[[phi.D John] T/fin{V}]

11.

		Consume "that"

		[[D John] T/fin{V}] + that
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] say]]] that] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} that]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.say" from T/fin and created [T/fin PRO.say]
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.say (say) is missing complement FORCE
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} that]]

12.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[phi.D John] [T/fin{V} that]]

13.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D John] [T/fin{V} that]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [say that]]]] T/fin] due to bad left branch.
				Reject [[T/fin [say that]] T/fin] due to bad left branch.
		Exploring solution number (1) =[that T/fin]
			Transferring that to LF.
				head movement reconstruction:
					Reconstructing head movement for that.
				Feature processing:
				Floater movement reconstruction:
					= that
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				that probing for CAT:T/fin failed.
				A phi-marked head "that" lacks complement
					Extraposition will be tried on that.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} [that T/fin]]]

14.

		Consume "v"

		[[D John] [T/fin{V} [that T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D John] [T/fin{V} [that T/fin{v}]]]

15.

		Consume "admire"

		[[D John] [T/fin{V} [that T/fin{v}]]] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

16.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

17.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

18.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

19.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

20.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]

21.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D John] [T/fin{V} [that T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [say [that [T/fin [v admire]]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[phi.D John] [T/fin{V} [that T/fin{v,V}]]] + D = -98]
				[T/fin{V} [that T/fin{v,V}]] + D = -194]
				[that T/fin{v,V}] + D = 3]
				T/fin{v,V} + D = 212]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[that T/fin{v,V}]; D]
			3. [[[phi.D John] [T/fin{V} [that T/fin{v,V}]]]; D]
			4. [[T/fin{V} [that T/fin{v,V}]]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} [that [T/fin{v,V} PRO.D]]]]

22.

		Consume "Mary"

		[[D John] [T/fin{V} [that [T/fin{v,V} D]]]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{V} [that [T/fin{v,V} PRO.D{N}]]]]

23.
	>>>	Trying candidate parse [[D John] [T/fin{V} [that [T/fin{v,V} D{N}]]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{V} [that [T/fin{v,V} PRO.D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [that [T/fin{v,V} PRO.D{N}]]]].
						Extracted head "PRO.say" and reconstructed it = [[phi.D John] [T/fin [PRO.say [that [T/fin{v,V} PRO.D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D John] [T/fin [PRO.say [that [T/fin [PRO.v{V} PRO.D{N}]]]]]]
						Extracted head "PRO.admire" and reconstructed it = [[phi.D John] [T/fin [PRO.say [that [T/fin [PRO.v [PRO.admire PRO.D{N}]]]]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D John] [T/fin [PRO.say [that [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [say [that [T/fin [v [admire [D Mary]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:59 from memory buffer into Spec of PRO.say
					Result [[phi.D John]:59 [T/fin [(DP):59 [PRO.say [that [T/fin [PRO.v [PRO.admire [PRO.D Mary]]]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):59.
				\Feature PHI:GEN:M was not matched in T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):59.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):59.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):59.
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			= [[D John] [T/fin [[D John] [say [that [T/fin [v [admire [D Mary]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:59 [T/fin [(DP):59 [PRO.say [that [T/fin [PRO.v [PRO.admire [phi.D Mary]]]]]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.say with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				T/fin with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
phi.D: [D, V, v, TT/fin, , V, TT/fin]
Mary: [N, D, V, v, TT/fin, , V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[that T/fin{v,V}] D]
			Transferring [that T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [that T/fin{v,V}].
					Extracted head "PRO.v{V}" from T/fin and created [that [T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [that [T/fin [PRO.v PRO.admire]]]
				Feature processing:
				Floater movement reconstruction:
					= [that [T/fin [v admire]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[phi.D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] PRO.D]]]

24.

		Consume "Mary"

		[[D John] [T/fin{V} [[that [T/fin [v admire]]] D]]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] PRO.D{N}]]]

25.
	>>>	Trying candidate parse [[D John] [T/fin{V} [[that [T/fin [v admire]]] D{N}]]] (2.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] PRO.D{N}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] PRO.D{N}]]].
						Extracted head "PRO.say" and reconstructed it = [[phi.D John] [T/fin [PRO.say [[that [T/fin [PRO.v PRO.admire]]] PRO.D{N}]]]]
					Extracted head "Mary" from PRO.D and created [[phi.D John] [T/fin [PRO.say [[that [T/fin [PRO.v PRO.admire]]] [PRO.D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [say [[that [T/fin [v admire]]] [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:60 from memory buffer into Spec of PRO.say
					Result [[phi.D John]:60 [T/fin [(DP):60 [PRO.say [[that [T/fin [PRO.v PRO.admire]]] [PRO.D Mary]]]]]]
					Moving "that T/fin v admire " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[ [TT/fin [v V]]]]
					PRO.say (say) is missing a mandatory complement FORCE
					Extraposition will be tried on [[phi.D John]:60 [T/fin [(DP):60 [PRO.say [[that [T/fin [PRO.v PRO.admire]]] [PRO.D Mary]]]]]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):60.
				\Feature PHI:GEN:M was not matched in T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):60.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):60.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):60.
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [[D John] [T/fin [[D John] [say [[that [T/fin [v admire]]] <D Mary>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:60 [T/fin [(DP):60 [PRO.say [[that [T/fin [PRO.v PRO.admire]]] <PRO.D Mary>]]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.say with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				T/fin with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[phi.D John] [T/fin{V} [that T/fin{v,V}]]] D]
			Transferring [[phi.D John] [T/fin{V} [that T/fin{v,V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [that T/fin{v,V}]]].
						Extracted head "PRO.say" and reconstructed it = [[phi.D John] [T/fin [PRO.say [that T/fin{v,V}]]]]
					Extracted head "PRO.v{V}" from T/fin and created [[phi.D John] [T/fin [PRO.say [that [T/fin PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [[phi.D John] [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [say [that [T/fin [v admire]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:61 from memory buffer into Spec of PRO.say
					Result [[phi.D John]:61 [T/fin [(DP):61 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):61.
				\Feature PHI:GEN:M was not matched in T/fin.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):61.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):61.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):61.
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[[phi.D John]:61 [T/fin [(DP):61 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] PRO.D]

26.

		Consume "Mary"

		[[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[[phi.D John]:61 [T/fin [(DP):61 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] PRO.D{N}]

27.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] D{N}] (3.)
		Reconstructing...
			Transferring [[[phi.D John]:61 [T/fin [(DP):61 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D John]:61 [T/fin [(DP):61 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] PRO.D{N}].
					Extracted head "Mary" from PRO.D and created [[[phi.D John]:61 [T/fin [(DP):61 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] [PRO.D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John T/fin __say that T/fin v admire " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] [V [ [TT/fin [v V]]]]]]]]
				PRO.D has unaccetable specifier [[phi.D John]:61 [T/fin [(DP):61 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]].
					Extraposition will be tried on [[[phi.D John]:61 [T/fin [(DP):61 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] [PRO.D Mary]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] <D Mary>]
		Checking LF-interface conditions.
			Trying to transfer [[[phi.D John]:61 [T/fin [(DP):61 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] <PRO.D Mary>] into LF...
				T/fin induces a phi-feature conflict.
				PRO.say with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				T/fin with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.admire with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.D with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
PRO.D: [D]
Mary: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[T/fin{V} [that T/fin{v,V}]] D]
			Transferring [T/fin{V} [that T/fin{v,V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [that T/fin{v,V}]].
						Extracted head "PRO.say" and reconstructed it = [T/fin [PRO.say [that T/fin{v,V}]]]
					Extracted head "PRO.v{V}" from T/fin and created [T/fin [PRO.say [that [T/fin PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [say [that [T/fin [v admire]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
					Extraposition will be tried on [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[phi.D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] PRO.D]]

28.

		Consume "Mary"

		[[D John] [[T/fin [say [that [T/fin [v admire]]]]] D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] PRO.D{N}]]

29.
	>>>	Trying candidate parse [[D John] [[T/fin [say [that [T/fin [v admire]]]]] D{N}]] (4.)
		Reconstructing...
			Transferring [[phi.D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] PRO.D{N}]].
					Extracted head "Mary" from PRO.D and created [[phi.D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] [PRO.D Mary]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [[T/fin [say [that [T/fin [v admire]]]]] [D Mary]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "T/fin say that T/fin v admire " into memory buffer from SPEC of "PRO.D".
					Moving "D John " into memory buffer from SPEC of "PRO.D".
					New head was spawned due to multiple specifiers at PRO.D but its category is unknown!
					Memory buffer: [[TT/fin [V [ [TT/fin [v V]]]]], [D N]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.D has unaccetable specifier [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]].
					Extraposition will be tried on [[phi.D John] [? [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] [PRO.D Mary]]]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier but needs one.
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [[D John] [? [[T/fin [say [that [T/fin [v admire]]]]] <D Mary>]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:PHI:DET:DEF,PHI:DET:_,PHI:GEN:F,PHI:GEN:_,PHI:HUM:HUM,PHI:NUM:SG,PHI:NUM:_,PHI:PER:3,PHI:PER:_,!COMP:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

phi.D: [D]
John: [N, D]
?: [?]
T/fin: [TT/fin, ?]
PRO.say: [V, TT/fin, ?]
that: [, V, TT/fin, ?]
T/fin: [TT/fin, , V, TT/fin, ?]
PRO.v: [v, TT/fin, , V, TT/fin, ?]
PRO.admire: [V, v, TT/fin, , V, TT/fin, ?]
PRO.D: [D, ?]
Mary: [N, D, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admires".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "that".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "say-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "said".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 65
['Merjaa', 'ihailen', 'mina']


			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
			=PRO.D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=PRO.D{N}

9.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:NUM:SG', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Merja-] PRO.T/fin{v,V}]

13.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[phi.D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features {'-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:PER:1', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[phi.D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D]]

19.

		Consume "mina"

		[[D Merja-] [T/fin{v,V} D]] + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*mina]
			=[[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Merja-] [PRO.T/fin{v,V} PRO.D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v{V} PRO.D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- PRO.D{N}]]]]
					Extracted head "mina" from PRO.D and created [[phi.D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [PRO.D mina]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Merja->:160 [PRO.T/fin [PRO.v [<DP>:160 [PRO.ihaile- [PRO.D mina]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<PRO.D mina> was made an adjunct.
					Dropping <PRO.D mina>
						Floater <D mina> dropped.
						 = [<phi.D Merja->:160 [PRO.T/fin [<DP>:161 [PRO.v [<DP>:160 [PRO.ihaile- <PRO.D mina>:161]]]]]]
					= [<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:161.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:161.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:161.
			= [<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Merja->:160 [phi.T/fin [<DP>:161 [PRO.v [<DP>:160 [PRO.ihaile- <PRO.D mina>:161]]]]]] into LF...
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> )
				Transfer to LF successful.
!--->		Tests passed (with 20/183 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
		Grammar: [<phi.D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <PRO.D mina>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']

phi.D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
PRO.D: [D, V, v, TT/fin]
mina: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 66
['Merjaa', 'ihailen']


			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
			=PRO.D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=PRO.D{N}

9.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:NUM:SG', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[phi.D Merja-] PRO.T/fin{v,V}]

13.
	>>>	Trying candidate parse [[D Merja-] T/fin{v,V}] (1.)
		Reconstructing...
			Transferring [[phi.D Merja-] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Merja-] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[phi.D Merja-] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[phi.D Merja-] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Merja->:162 [PRO.T/fin [PRO.v [<DP>:162 PRO.ihaile-]]]]
					= [<D Merja-> [T/fin [v [<D Merja-> ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF from (Spec,phi.T/fin).
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
				\Feature PHI:PER:3 was not matched in phi.T/fin.
					T/fin acquired PHI:PER:3 from (Spec,T/fin).
			= [<D Merja-> [T/fin [v [<D Merja-> ihaile-]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Merja->:162 [T/fin [PRO.v [<DP>:162 PRO.ihaile-]]]] into LF...
				T/fin induces a phi-feature conflict.
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: )
				Transfer to LF crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:3*', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Merja-: [N, D]
T/fin: [TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailen".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

14.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:ARG,-VAL'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
			=PRO.D

15.

		Consume "Merjaa"

		D + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merjaa]
			=PRO.D{N}

16.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

17.

		Adding inflectional features {'PHI:DET:DEF', 'PHI:NUM:SG', '-', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merjaa" from PRO.D and created [PRO.D Merjaa]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merjaa" from PRO.D and created [PRO.D Merjaa]
					PRO.D was opened into [PRO.D Merjaa].
				Feature processing:
				Floater movement reconstruction:
					= [D Merjaa]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[PRO.D Merjaa] PRO.T/fin]

18.

		Consume "v"

		[[D Merjaa] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[PRO.D Merjaa] PRO.T/fin{v}]

19.

		Consume "ihaile-"

		[[D Merjaa] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[PRO.D Merjaa] PRO.T/fin{v,V}]

20.
	>>>	Trying candidate parse [[D Merjaa] T/fin{v,V}] (2.)
		Reconstructing...
			Transferring [[PRO.D Merjaa] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[PRO.D Merjaa] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[PRO.D Merjaa] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[PRO.D Merjaa] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merjaa] failed to tail [-VAL][ARG]
					Dropping [PRO.D Merjaa]
						<PRO.D Merjaa> was made an adjunct.
						Floater <D Merjaa> dropped.
						 = [<PRO.D Merjaa>:163 [PRO.T/fin [PRO.v [<DP>:163 PRO.ihaile-]]]]
					= [<D Merjaa> [T/fin [v [<D Merjaa> ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			= [<D Merjaa> [T/fin [v [<D Merjaa> ihaile-]]]]
		Checking LF-interface conditions.
			Trying to transfer [<PRO.D Merjaa>:163 [PRO.T/fin [PRO.v [<DP>:163 PRO.ihaile-]]]] into LF...
				PRO.T/fin with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. T/fin    (alternatives: )
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.ihaile- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF successful.
!--->		Tests passed (with 20/231 operations) <------------------------------------
		Solution:
		[<D Merjaa> [T/fin [v [<D Merjaa> ihaile-]]]]
		Grammar: [<PRO.D Merjaa>:1 [PRO.T/fin [PRO.v [<DP>:1 PRO.ihaile-]]]]
		Spellout TT/finP = [DP:1 [TT/fin [v [__:1 V]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

PRO.D: [D]
Merjaa: [N, D]
PRO.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 67
['Pekka', 'sanoo', 'etta', 'istuu', 'mukavasti']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "istuu" contains multiple morphemes ['$[-V]', '$T/fin', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[phi.D Pekka] [PRO.T/fin{V} että]]

14.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} että]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin]]]

15.

		Consume "istuu"

		[[D Pekka] [T/fin{V} [että T/fin]]] + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*istuu]
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{V}]]]

16.

		Consume "mukavasti"

		[[D Pekka] [T/fin{V} [että T/fin{V}]]] + mukavasti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, mukavasti.
				Avoid TT/finP as SPEC, mukavasti.
				Avoid P as SPEC, mukavasti.
				Considering [että PRO.T/fin{V}] due to legitimate tail-head configuration.
				Considering PRO.T/fin{V} due to legitimate tail-head configuration.
				[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{V}]]] + mukavasti = -98]
				[PRO.T/fin{V} [että PRO.T/fin{V}]] + mukavasti = -96]
				[että PRO.T/fin{V}] + mukavasti = 112]
				PRO.T/fin{V} + mukavasti = 212]
		Ranking completed:
			1. [PRO.T/fin{V}; mukavasti]
			2. [[että PRO.T/fin{V}]; mukavasti]
			3. [[PRO.T/fin{V} [että PRO.T/fin{V}]]; mukavasti]
			4. [[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{V}]]]; mukavasti]
		Exploring solution number (1) =[PRO.T/fin{V} mukavasti]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin PRO.istuu]
					PRO.T/fin{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{V} mukavasti]]]]

17.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [T/fin{V} mukavasti]]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{V} mukavasti]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{V} mukavasti]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{V} mukavasti]]]]]
						Extracted head "PRO.istuu" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.istuu mukavasti]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:168 [PRO.T/fin [<DP>:168 [PRO.sano- [että [PRO.T/fin [PRO.istuu mukavasti]]]]]]]
					mukavasti at the right failed to tail [CAT:T]
						<PRO.istuu mukavasti> was made an adjunct.
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin <istuu mukavasti>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin probing for CAT:V failed.
				A phi-marked head "PRO.T/fin" lacks complement
					Extraposition will be tried on [<phi.D Pekka>:168 [PRO.T/fin [<DP>:168 [PRO.sano- [että [PRO.T/fin <PRO.istuu mukavasti>]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:168.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:168.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:168.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin <istuu mukavasti>]]]]]]
		Checking LF-interface conditions.
				pro/x.T/fin probing for CAT:V failed.
				A phi-marked head "pro/x.T/fin" lacks complement
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
mukavasti: [ADV, V, TT/fin, , V, TT/fin]


		Trying to find other solutions...
		Exploring solution number (2) =[[että PRO.T/fin{V}] mukavasti]
			Transferring [että PRO.T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [että PRO.T/fin{V}].
					Extracted head "PRO.istuu" from PRO.T/fin and created [että [PRO.T/fin PRO.istuu]]
				Feature processing:
				Floater movement reconstruction:
					= [että [T/fin istuu]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			=[[phi.D Pekka] [PRO.T/fin{V} [[että [pro/x.T/fin PRO.istuu]] mukavasti]]]

18.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[että [T/fin istuu]] mukavasti]]] (2.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [[että [pro/x.T/fin PRO.istuu]] mukavasti]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [[että [pro/x.T/fin PRO.istuu]] mukavasti]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin PRO.istuu]] mukavasti]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:169 [PRO.T/fin [<DP>:169 [PRO.sano- [[että [pro/x.T/fin PRO.istuu]] mukavasti]]]]]
					mukavasti at the right failed to tail [CAT:T]
						<[että [pro/x.T/fin PRO.istuu]] mukavasti> was made an adjunct.
					= [<D Pekka> [T/fin [<D Pekka> [sano- <[että [T/fin istuu]] mukavasti>]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.sano- (sano-) is missing a mandatory complement FORCE
				mukavasti has unaccetable specifier [että [pro/x.T/fin PRO.istuu]].
					Extraposition will be tried on [<phi.D Pekka>:169 [PRO.T/fin [<DP>:169 [PRO.sano- <[että [pro/x.T/fin PRO.istuu]] mukavasti>]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:169.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:169.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:169.
			= [<D Pekka> [T/fin [<D Pekka> [sano- <[että [T/fin istuu]] mukavasti>]]]]
		Checking LF-interface conditions.
					PRO.sano- (sano-) is missing a mandatory complement FORCE
				mukavasti has unaccetable specifier [että [pro/x.T/fin PRO.istuu]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
mukavasti: [ADV, V, TT/fin]


		Trying to find other solutions...
		Exploring solution number (3) =[[PRO.T/fin{V} [että PRO.T/fin{V}]] mukavasti]
			Transferring [PRO.T/fin{V} [että PRO.T/fin{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [että PRO.T/fin{V}]].
						Extracted head "PRO.sano-" and reconstructed it = [PRO.T/fin [PRO.sano- [että PRO.T/fin{V}]]]
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.istuu]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [sano- [että [T/fin istuu]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			=[[phi.D Pekka] [[pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]] mukavasti]]

19.
	>>>	Trying candidate parse [[D Pekka] [[T/fin [sano- [että [T/fin istuu]]]] mukavasti]] (3.)
		Reconstructing...
			Transferring [[phi.D Pekka] [[pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]] mukavasti]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [[pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]] mukavasti]].
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
					mukavasti at the right failed to tail [CAT:T]
						<[pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]] mukavasti> was made an adjunct.
					= [[D Pekka] <[T/fin [sano- [että [T/fin istuu]]]] mukavasti>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				mukavasti has unaccetable specifier [pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]].
					Extraposition will be tried on [[phi.D Pekka] <[pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]] mukavasti>].
				Agreement reconstruction:
			= [[D Pekka] <[T/fin [sano- [että [T/fin istuu]]]] mukavasti>]
		Checking LF-interface conditions.
				mukavasti has unaccetable specifier [pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

phi.D: [D]
Pekka: [N, D]
pro/x.T/fin: [TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
mukavasti: [ADV]


		Trying to find other solutions...
		Exploring solution number (4) =[[[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{V}]]] mukavasti]
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [että PRO.T/fin{V}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että PRO.T/fin{V}]]]]
					Extracted head "PRO.istuu" from PRO.T/fin and created [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.istuu]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:170 [PRO.T/fin [<DP>:170 [PRO.sano- [että [PRO.T/fin PRO.istuu]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin istuu]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:170.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:170.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:170.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			=[[<phi.D Pekka>:170 [phi.T/fin [<DP>:170 [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]]]] mukavasti]

20.
	>>>	Trying candidate parse [[<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin istuu]]]]]] mukavasti] (4.)
		Reconstructing...
			Transferring [[<phi.D Pekka>:170 [phi.T/fin [<DP>:170 [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]]]] mukavasti] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D Pekka>:170 [phi.T/fin [<DP>:170 [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]]]] mukavasti].
				Feature processing:
				Floater movement reconstruction:
					mukavasti at the right failed to tail [CAT:T]
						<[<phi.D Pekka>:170 [phi.T/fin [<DP>:170 [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]]]] mukavasti> was made an adjunct.
					= <[<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin istuu]]]]]] mukavasti>
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				mukavasti has unaccetable specifier [<phi.D Pekka>:170 [phi.T/fin [<DP>:170 [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]]]].
					Extraposition will be tried on <[<phi.D Pekka>:170 [phi.T/fin [<DP>:170 [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]]]] mukavasti>.
				Agreement reconstruction:
			= <[<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin istuu]]]]]] mukavasti>
		Checking LF-interface conditions.
				mukavasti has unaccetable specifier [<phi.D Pekka>:170 [phi.T/fin [<DP>:170 [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
mukavasti: [ADV]


		Trying to find other solutions...
		I have now explored all solutions for "mukavasti".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "istu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "istuu".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sanoo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 68
['istuu', 'mukavasti']


			=None

1.
		Next word "istuu" contains multiple morphemes ['$[-V]', '$T/fin', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "istuu"

		T/fin + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*istuu]
			=PRO.T/fin{V}

4.

		Consume "mukavasti"

		T/fin{V} + mukavasti
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} mukavasti]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin PRO.istuu]
					PRO.T/fin{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[PRO.T/fin{V} mukavasti]

5.
	>>>	Trying candidate parse [T/fin{V} mukavasti] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{V} mukavasti] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} mukavasti].
						Extracted head "PRO.istuu" and reconstructed it = [PRO.T/fin [PRO.istuu mukavasti]]
				Feature processing:
				Floater movement reconstruction:
					mukavasti at the right failed to tail [CAT:T]
						<PRO.istuu mukavasti> was made an adjunct.
					= [T/fin <istuu mukavasti>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin probing for CAT:V failed.
				A phi-marked head "PRO.T/fin" lacks complement
					Extraposition will be tried on [PRO.T/fin <PRO.istuu mukavasti>].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
			= [T/fin <istuu mukavasti>]
		Checking LF-interface conditions.
				pro/x.T/fin probing for CAT:V failed.
				A phi-marked head "pro/x.T/fin" lacks complement
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

pro/x.T/fin: [TT/fin]
PRO.istuu: [V, TT/fin]
mukavasti: [ADV, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "mukavasti".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "istu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "istuu".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 69
['tassa', 'istuu', 'mukavasti']


			=None

1.
		Next word "tassa" contains multiple morphemes ['$P', 'tama']
			=PRO.P

2.
		Next word "tama" contains multiple morphemes ['$def', '$3p', '$sg', '$D', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.P

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.P

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.P

5.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		P + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=PRO.P{D}

6.

		Consume "tama"

		P{D} + tama
			Filtering out impossible merge sites...
			Sink "tama" into P{D} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*tama]
			=PRO.P{D,N}

7.
		Next word "istuu" contains multiple morphemes ['$[-V]', '$T/fin', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.P{D,N}

8.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		P{D,N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.P{D,N} T/fin]
			Transferring PRO.P{D,N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "PRO.D{N}" from PRO.P and created [PRO.P PRO.D{N}]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "tama" from PRO.D and created [PRO.P [PRO.D tama]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "PRO.D{N}" from PRO.P and created [PRO.P PRO.D{N}]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "tama" from PRO.D and created [PRO.P [PRO.D tama]]
					PRO.P was opened into [PRO.P [PRO.D tama]].
				Feature processing:
				Floater movement reconstruction:
					= [P [D tama]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[PRO.P [phi.D tama]] PRO.T/fin]

9.

		Consume "istuu"

		[[P [D tama]] T/fin] + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*istuu]
			=[[PRO.P [phi.D tama]] PRO.T/fin{V}]

10.

		Consume "mukavasti"

		[[P [D tama]] T/fin{V}] + mukavasti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, mukavasti.
				Considering PRO.T/fin{V} due to legitimate tail-head configuration.
				[[PRO.P [phi.D tama]] PRO.T/fin{V}] + mukavasti = -98]
				PRO.T/fin{V} + mukavasti = 206]
		Ranking completed:
			1. [PRO.T/fin{V}; mukavasti]
			2. [[[PRO.P [phi.D tama]] PRO.T/fin{V}]; mukavasti]
		Exploring solution number (1) =[PRO.T/fin{V} mukavasti]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin PRO.istuu]
					PRO.T/fin{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[PRO.P [phi.D tama]] [PRO.T/fin{V} mukavasti]]

11.
	>>>	Trying candidate parse [[P [D tama]] [T/fin{V} mukavasti]] (1.)
		Reconstructing...
			Transferring [[PRO.P [phi.D tama]] [PRO.T/fin{V} mukavasti]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[PRO.P [phi.D tama]] [PRO.T/fin{V} mukavasti]].
						Extracted head "PRO.istuu" and reconstructed it = [[PRO.P [phi.D tama]] [PRO.T/fin [PRO.istuu mukavasti]]]
				Feature processing:
				Floater movement reconstruction:
					mukavasti at the right failed to tail [CAT:T]
						<PRO.istuu mukavasti> was made an adjunct.
					= [[P [D tama]] [T/fin <istuu mukavasti>]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]], [P [D N]]]
				PRO.T/fin probing for CAT:V failed.
				A phi-marked head "PRO.T/fin" lacks complement
					Extraposition will be tried on [[PRO.P [phi.D tama]] [PRO.T/fin <PRO.istuu mukavasti>]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from [phi.D tama].
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from [phi.D tama].
					phi.T/fin acquired PHI:PER:3 by phi-Agree from [phi.D tama].
			= [[P [D tama]] [T/fin <istuu mukavasti>]]
		Checking LF-interface conditions.
				phi.T/fin probing for CAT:V failed.
				A phi-marked head "phi.T/fin" lacks complement
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

PRO.P: [P]
phi.D: [D, P]
tama: [N, D, P]
phi.T/fin: [TT/fin]
PRO.istuu: [V, TT/fin]
mukavasti: [ADV, V, TT/fin]


		Trying to find other solutions...
		Exploring solution number (2) =[[[PRO.P [phi.D tama]] PRO.T/fin{V}] mukavasti]
			Transferring [[PRO.P [phi.D tama]] PRO.T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[PRO.P [phi.D tama]] PRO.T/fin{V}].
					Extracted head "PRO.istuu" from PRO.T/fin and created [[PRO.P [phi.D tama]] [PRO.T/fin PRO.istuu]]
				Feature processing:
				Floater movement reconstruction:
					= [[P [D tama]] [T/fin istuu]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Dropping constituent [PRO.P [phi.D tama]]:5 from memory buffer into Spec of PRO.istuu
					Result [[PRO.P [phi.D tama]]:5 [PRO.T/fin [(PP):5 PRO.istuu]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[[PRO.P [phi.D tama]]:5 [PRO.T/fin [(PP):5 PRO.istuu]]] mukavasti]

12.
	>>>	Trying candidate parse [[[P [D tama]] [T/fin [[P [D tama]] istuu]]] mukavasti] (2.)
		Reconstructing...
			Transferring [[[PRO.P [phi.D tama]]:5 [PRO.T/fin [(PP):5 PRO.istuu]]] mukavasti] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[PRO.P [phi.D tama]]:5 [PRO.T/fin [(PP):5 PRO.istuu]]] mukavasti].
				Feature processing:
				Floater movement reconstruction:
					mukavasti at the right failed to tail [CAT:T]
						<[[PRO.P [phi.D tama]]:5 [PRO.T/fin [(PP):5 PRO.istuu]]] mukavasti> was made an adjunct.
					= <[[P [D tama]] [T/fin [[P [D tama]] istuu]]] mukavasti>
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				mukavasti has unaccetable specifier [[PRO.P [phi.D tama]]:5 [PRO.T/fin [(PP):5 PRO.istuu]]].
					Extraposition will be tried on <[[PRO.P [phi.D tama]]:5 [PRO.T/fin [(PP):5 PRO.istuu]]] mukavasti>.
				Agreement reconstruction:
			= <[[P [D tama]] [T/fin [[P [D tama]] istuu]]] mukavasti>
		Checking LF-interface conditions.
				mukavasti has unaccetable specifier [[PRO.P [phi.D tama]]:5 [PRO.T/fin [(PP):5 PRO.istuu]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

PRO.P: [P]
phi.D: [D, P]
tama: [N, D, P]
PRO.T/fin: [TT/fin]
(P): [P, TT/fin]
(D): [D, P, TT/fin]
(N): [N, D, P, TT/fin]
PRO.istuu: [V, TT/fin]
mukavasti: [ADV]


		Trying to find other solutions...
		I have now explored all solutions for "mukavasti".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "istu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "istuu".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "tama-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "tama".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "tassa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 70
['Pekka', 'sanoo', 'etta', 'tassa', 'istuu', 'mukavasti']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "tassa" contains multiple morphemes ['$P', 'tama']

		Consume "P"

		[[D Pekka] [T/fin{V} että]] + P
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.P] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.P] due to bad left branch.
		Exploring solution number (1) =[että P]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.P]]]

14.
		Next word "tama" contains multiple morphemes ['$def', '$3p', '$sg', '$D', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.P]]]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.P]]]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.P]]]

17.

		Adding inflectional features {'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} [että P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.P{D}]]]

18.

		Consume "tama"

		[[D Pekka] [T/fin{V} [että P{D}]]] + tama
			Filtering out impossible merge sites...
			Sink "tama" into P{D} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*tama]
			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.P{D,N}]]]

19.
		Next word "istuu" contains multiple morphemes ['$[-V]', '$T/fin', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[phi.D Pekka] [PRO.T/fin{V} [että PRO.P{D,N}]]]

20.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} [että P{D,N}]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että [P [D tama]]]]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- [että [P [D tama]]]]] PRO.T/fin] due to bad left branch.
				Reject [[että [P [D tama]]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[PRO.P{D,N} T/fin]
			Transferring PRO.P{D,N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "PRO.D{N}" from PRO.P and created [PRO.P PRO.D{N}]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "tama" from PRO.D and created [PRO.P [PRO.D tama]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "PRO.D{N}" from PRO.P and created [PRO.P PRO.D{N}]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "tama" from PRO.D and created [PRO.P [PRO.D tama]]
					PRO.P was opened into [PRO.P [PRO.D tama]].
				Feature processing:
				Floater movement reconstruction:
					= [P [D tama]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin]]]]

21.

		Consume "istuu"

		[[D Pekka] [T/fin{V} [että [[P [D tama]] T/fin]]]] + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*istuu]
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]]]

22.

		Consume "mukavasti"

		[[D Pekka] [T/fin{V} [että [[P [D tama]] T/fin{V}]]]] + mukavasti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, mukavasti.
				Avoid TT/finP as SPEC, mukavasti.
				Avoid P as SPEC, mukavasti.
				Considering [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]] due to legitimate tail-head configuration.
				Avoid TT/finP as SPEC, mukavasti.
				Avoid [[PRO.P [phi.D tama]] PRO.T/fin{V}] due to tail-head failure.
				Considering PRO.T/fin{V} due to legitimate tail-head configuration.
				[[phi.D Pekka] [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]]] + mukavasti = -98]
				[PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]] + mukavasti = -96]
				[että [[PRO.P [phi.D tama]] PRO.T/fin{V}]] + mukavasti = 112]
				[[PRO.P [phi.D tama]] PRO.T/fin{V}] + mukavasti = -188]
				PRO.T/fin{V} + mukavasti = 215]
		Ranking completed:
			1. [PRO.T/fin{V}; mukavasti]
			2. [[että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]; mukavasti]
			3. [[PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]]; mukavasti]
			4. [[[phi.D Pekka] [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]]]; mukavasti]
			5. [[[PRO.P [phi.D tama]] PRO.T/fin{V}]; mukavasti]
		Exploring solution number (1) =[PRO.T/fin{V} mukavasti]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin PRO.istuu]
					PRO.T/fin{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] [PRO.T/fin{V} mukavasti]]]]]

23.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [[P [D tama]] [T/fin{V} mukavasti]]]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] [PRO.T/fin{V} mukavasti]]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] [PRO.T/fin{V} mukavasti]]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]] [PRO.T/fin{V} mukavasti]]]]]]
						Extracted head "PRO.istuu" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]] [PRO.T/fin [PRO.istuu mukavasti]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:176 [PRO.T/fin [<DP>:176 [PRO.sano- [että [[PRO.P [phi.D tama]] [PRO.T/fin [PRO.istuu mukavasti]]]]]]]]
					mukavasti at the right failed to tail [CAT:T]
						<PRO.istuu mukavasti> was made an adjunct.
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [[P [D tama]] [T/fin <istuu mukavasti>]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]], [P [D N]]]
				PRO.T/fin probing for CAT:V failed.
				A phi-marked head "PRO.T/fin" lacks complement
					Extraposition will be tried on [<phi.D Pekka>:176 [PRO.T/fin [<DP>:176 [PRO.sano- [että [[PRO.P [phi.D tama]] [PRO.T/fin <PRO.istuu mukavasti>]]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:176.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:176.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:176.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from [phi.D tama].
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from [phi.D tama].
					phi.T/fin acquired PHI:PER:3 by phi-Agree from [phi.D tama].
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [[P [D tama]] [T/fin <istuu mukavasti>]]]]]]]
		Checking LF-interface conditions.
				phi.T/fin probing for CAT:V failed.
				A phi-marked head "phi.T/fin" lacks complement
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
PRO.P: [P, , V, TT/fin]
phi.D: [D, P, , V, TT/fin]
tama: [N, D, P, , V, TT/fin]
phi.T/fin: [TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
mukavasti: [ADV, V, TT/fin, , V, TT/fin]


		Trying to find other solutions...
		Exploring solution number (2) =[[että [[PRO.P [phi.D tama]] PRO.T/fin{V}]] mukavasti]
			Transferring [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]].
					Extracted head "PRO.istuu" from PRO.T/fin and created [että [[PRO.P [phi.D tama]] [PRO.T/fin PRO.istuu]]]
				Feature processing:
				Floater movement reconstruction:
					= [että [[P [D tama]] [T/fin istuu]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Dropping constituent [PRO.P [phi.D tama]]:14 from memory buffer into Spec of PRO.istuu
					Result [että [[PRO.P [phi.D tama]]:14 [PRO.T/fin [(PP):14 PRO.istuu]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[phi.D Pekka] [PRO.T/fin{V} [[että [[PRO.P [phi.D tama]]:14 [PRO.T/fin [(PP):14 PRO.istuu]]]] mukavasti]]]

24.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]] mukavasti]]] (2.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [[että [[PRO.P [phi.D tama]]:14 [PRO.T/fin [(PP):14 PRO.istuu]]]] mukavasti]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [[että [[PRO.P [phi.D tama]]:14 [PRO.T/fin [(PP):14 PRO.istuu]]]] mukavasti]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [[että [[PRO.P [phi.D tama]]:14 [PRO.T/fin [(PP):14 PRO.istuu]]]] mukavasti]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:177 [PRO.T/fin [<DP>:177 [PRO.sano- [[että [[PRO.P [phi.D tama]]:14 [PRO.T/fin [(PP):14 PRO.istuu]]]] mukavasti]]]]]
					mukavasti at the right failed to tail [CAT:T]
						<[että [[PRO.P [phi.D tama]]:14 [PRO.T/fin [(PP):14 PRO.istuu]]]] mukavasti> was made an adjunct.
					= [<D Pekka> [T/fin [<D Pekka> [sano- <[että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]] mukavasti>]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.sano- (sano-) is missing a mandatory complement FORCE
				mukavasti has unaccetable specifier [että [[PRO.P [phi.D tama]]:14 [PRO.T/fin [(PP):14 PRO.istuu]]]].
					Extraposition will be tried on [<phi.D Pekka>:177 [PRO.T/fin [<DP>:177 [PRO.sano- <[että [[PRO.P [phi.D tama]]:14 [PRO.T/fin [(PP):14 PRO.istuu]]]] mukavasti>]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:177.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:177.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:177.
			= [<D Pekka> [T/fin [<D Pekka> [sano- <[että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]] mukavasti>]]]]
		Checking LF-interface conditions.
					PRO.sano- (sano-) is missing a mandatory complement FORCE
				mukavasti has unaccetable specifier [että [[PRO.P [phi.D tama]]:14 [PRO.T/fin [(PP):14 PRO.istuu]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
PRO.P: [P, , V, TT/fin]
phi.D: [D, P, , V, TT/fin]
tama: [N, D, P, , V, TT/fin]
PRO.T/fin: [TT/fin, , V, TT/fin]
(P): [P, TT/fin, , V, TT/fin]
(D): [D, P, TT/fin, , V, TT/fin]
(N): [N, D, P, TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
mukavasti: [ADV, V, TT/fin]


		Trying to find other solutions...
		Exploring solution number (3) =[[PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]] mukavasti]
			Transferring [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]].
						Extracted head "PRO.sano-" and reconstructed it = [PRO.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]]]
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]] [PRO.T/fin PRO.istuu]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [sano- [että [[P [D tama]] [T/fin istuu]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Dropping constituent [PRO.P [phi.D tama]]:15 from memory buffer into Spec of PRO.istuu
					Result [PRO.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]]:15 [PRO.T/fin [(PP):15 PRO.istuu]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[phi.D Pekka] [[pro/x.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]]:15 [PRO.T/fin [(PP):15 PRO.istuu]]]]]] mukavasti]]

25.
	>>>	Trying candidate parse [[D Pekka] [[T/fin [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]] mukavasti]] (3.)
		Reconstructing...
			Transferring [[phi.D Pekka] [[pro/x.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]]:15 [PRO.T/fin [(PP):15 PRO.istuu]]]]]] mukavasti]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [[pro/x.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]]:15 [PRO.T/fin [(PP):15 PRO.istuu]]]]]] mukavasti]].
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
					mukavasti at the right failed to tail [CAT:T]
						<[pro/x.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]]:15 [PRO.T/fin [(PP):15 PRO.istuu]]]]]] mukavasti> was made an adjunct.
					= [[D Pekka] <[T/fin [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]] mukavasti>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				mukavasti has unaccetable specifier [pro/x.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]]:15 [PRO.T/fin [(PP):15 PRO.istuu]]]]]].
					Extraposition will be tried on [[phi.D Pekka] <[pro/x.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]]:15 [PRO.T/fin [(PP):15 PRO.istuu]]]]]] mukavasti>].
				Agreement reconstruction:
			= [[D Pekka] <[T/fin [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]] mukavasti>]
		Checking LF-interface conditions.
				mukavasti has unaccetable specifier [pro/x.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]]:15 [PRO.T/fin [(PP):15 PRO.istuu]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

phi.D: [D]
Pekka: [N, D]
pro/x.T/fin: [TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
PRO.P: [P, , V, TT/fin]
phi.D: [D, P, , V, TT/fin]
tama: [N, D, P, , V, TT/fin]
PRO.T/fin: [TT/fin, , V, TT/fin]
(P): [P, TT/fin, , V, TT/fin]
(D): [D, P, TT/fin, , V, TT/fin]
(N): [N, D, P, TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
mukavasti: [ADV]


		Trying to find other solutions...
		Exploring solution number (4) =[[[phi.D Pekka] [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]]] mukavasti]
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]] PRO.T/fin{V}]]]]]
					Extracted head "PRO.istuu" from PRO.T/fin and created [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[PRO.P [phi.D tama]] [PRO.T/fin PRO.istuu]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:178 [PRO.T/fin [<DP>:178 [PRO.sano- [että [[PRO.P [phi.D tama]] [PRO.T/fin PRO.istuu]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [[P [D tama]] [T/fin istuu]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Dropping constituent [PRO.P [phi.D tama]]:16 from memory buffer into Spec of PRO.istuu
					Result [<phi.D Pekka>:178 [PRO.T/fin [<DP>:178 [PRO.sano- [että [[PRO.P [phi.D tama]]:16 [PRO.T/fin [(PP):16 PRO.istuu]]]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:178.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:178.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:178.
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[<phi.D Pekka>:178 [phi.T/fin [<DP>:178 [PRO.sano- [että [[PRO.P [phi.D tama]]:16 [PRO.T/fin [(PP):16 PRO.istuu]]]]]]]] mukavasti]

26.
	>>>	Trying candidate parse [[<D Pekka> [T/fin [<D Pekka> [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]]]] mukavasti] (4.)
		Reconstructing...
			Transferring [[<phi.D Pekka>:178 [phi.T/fin [<DP>:178 [PRO.sano- [että [[PRO.P [phi.D tama]]:16 [PRO.T/fin [(PP):16 PRO.istuu]]]]]]]] mukavasti] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D Pekka>:178 [phi.T/fin [<DP>:178 [PRO.sano- [että [[PRO.P [phi.D tama]]:16 [PRO.T/fin [(PP):16 PRO.istuu]]]]]]]] mukavasti].
				Feature processing:
				Floater movement reconstruction:
					mukavasti at the right failed to tail [CAT:T]
						<[<phi.D Pekka>:178 [phi.T/fin [<DP>:178 [PRO.sano- [että [[PRO.P [phi.D tama]]:16 [PRO.T/fin [(PP):16 PRO.istuu]]]]]]]] mukavasti> was made an adjunct.
					= <[<D Pekka> [T/fin [<D Pekka> [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]]]] mukavasti>
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				mukavasti has unaccetable specifier [<phi.D Pekka>:178 [phi.T/fin [<DP>:178 [PRO.sano- [että [[PRO.P [phi.D tama]]:16 [PRO.T/fin [(PP):16 PRO.istuu]]]]]]]].
					Extraposition will be tried on <[<phi.D Pekka>:178 [phi.T/fin [<DP>:178 [PRO.sano- [että [[PRO.P [phi.D tama]]:16 [PRO.T/fin [(PP):16 PRO.istuu]]]]]]]] mukavasti>.
				Agreement reconstruction:
			= <[<D Pekka> [T/fin [<D Pekka> [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]]]] mukavasti>
		Checking LF-interface conditions.
				mukavasti has unaccetable specifier [<phi.D Pekka>:178 [phi.T/fin [<DP>:178 [PRO.sano- [että [[PRO.P [phi.D tama]]:16 [PRO.T/fin [(PP):16 PRO.istuu]]]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
PRO.P: [P, , V, TT/fin]
phi.D: [D, P, , V, TT/fin]
tama: [N, D, P, , V, TT/fin]
PRO.T/fin: [TT/fin, , V, TT/fin]
(P): [P, TT/fin, , V, TT/fin]
(D): [D, P, TT/fin, , V, TT/fin]
(N): [N, D, P, TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
mukavasti: [ADV]


		Trying to find other solutions...
		Exploring solution number (5) =[[[PRO.P [phi.D tama]] PRO.T/fin{V}] mukavasti]
			Transferring [[PRO.P [phi.D tama]] PRO.T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[PRO.P [phi.D tama]] PRO.T/fin{V}].
					Extracted head "PRO.istuu" from PRO.T/fin and created [[PRO.P [phi.D tama]] [PRO.T/fin PRO.istuu]]
				Feature processing:
				Floater movement reconstruction:
					= [[P [D tama]] [T/fin istuu]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Dropping constituent [PRO.P [phi.D tama]]:17 from memory buffer into Spec of PRO.istuu
					Result [[PRO.P [phi.D tama]]:17 [PRO.T/fin [(PP):17 PRO.istuu]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[phi.D Pekka] [PRO.T/fin{V} [että [[[PRO.P [phi.D tama]]:17 [PRO.T/fin [(PP):17 PRO.istuu]]] mukavasti]]]]

27.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [[[P [D tama]] [T/fin [[P [D tama]] istuu]]] mukavasti]]]] (5.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [että [[[PRO.P [phi.D tama]]:17 [PRO.T/fin [(PP):17 PRO.istuu]]] mukavasti]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [että [[[PRO.P [phi.D tama]]:17 [PRO.T/fin [(PP):17 PRO.istuu]]] mukavasti]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.sano- [että [[[PRO.P [phi.D tama]]:17 [PRO.T/fin [(PP):17 PRO.istuu]]] mukavasti]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:179 [PRO.T/fin [<DP>:179 [PRO.sano- [että [[[PRO.P [phi.D tama]]:17 [PRO.T/fin [(PP):17 PRO.istuu]]] mukavasti]]]]]]
					mukavasti at the right failed to tail [CAT:T]
						<[[PRO.P [phi.D tama]]:17 [PRO.T/fin [(PP):17 PRO.istuu]]] mukavasti> was made an adjunct.
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että <[[P [D tama]] [T/fin [[P [D tama]] istuu]]] mukavasti>]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
				mukavasti has unaccetable specifier [[PRO.P [phi.D tama]]:17 [PRO.T/fin [(PP):17 PRO.istuu]]].
					Extraposition will be tried on [<phi.D Pekka>:179 [PRO.T/fin [<DP>:179 [PRO.sano- [että <[[PRO.P [phi.D tama]]:17 [PRO.T/fin [(PP):17 PRO.istuu]]] mukavasti>]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:179.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:179.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:179.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että <[[P [D tama]] [T/fin [[P [D tama]] istuu]]] mukavasti>]]]]]
		Checking LF-interface conditions.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
				mukavasti has unaccetable specifier [[PRO.P [phi.D tama]]:17 [PRO.T/fin [(PP):17 PRO.istuu]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
mukavasti:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'TAIL:CAT:T']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
PRO.P: [P, , V, TT/fin]
phi.D: [D, P, , V, TT/fin]
tama: [N, D, P, , V, TT/fin]
PRO.T/fin: [TT/fin, , V, TT/fin]
(P): [P, TT/fin, , V, TT/fin]
(D): [D, P, TT/fin, , V, TT/fin]
(N): [N, D, P, TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
mukavasti: [ADV, , V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "mukavasti".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "istu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "istuu".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "tama-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "tama".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "tassa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sanoo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 71
['Pekka', 'haluaa', 'lahtea']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "haluaa"

		[[D Pekka] T/fin] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*haluaa]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] T/fin{V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> haluaa]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} A/inf]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.haluaa" from PRO.T/fin and created [PRO.T/fin PRO.haluaa]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} A/inf]]

13.

		Consume "lahtea"

		[[D Pekka] [T/fin{V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[phi.D Pekka] [PRO.T/fin{V} A/inf{V}]]

14.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} A/inf{V}]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} A/inf{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} A/inf{V}]].
						Extracted head "PRO.haluaa" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.haluaa A/inf{V}]]]
					Extracted head "PRO.lahtea" from A/inf and created [[phi.D Pekka] [PRO.T/fin [PRO.haluaa [A/inf PRO.lahtea]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.haluaa
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:181 [PRO.T/fin [<DP>:181 [PRO.haluaa [A/inf PRO.lahtea]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [haluaa [A/inf lahtea]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:181.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:181.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:181.
			= [<D Pekka> [T/fin [<D Pekka> [haluaa [A/inf lahtea]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Pekka>:181 [phi.T/fin [<DP>:181 [PRO.haluaa [A/inf PRO.lahtea]]]]] into LF...
				PRO.haluaa with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.lahtea with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to LF successful.
!--->		Tests passed (with 14/136 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [haluaa [A/inf lahtea]]]]]
		Grammar: [<phi.D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.haluaa [A/inf PRO.lahtea]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.haluaa: [V, TT/fin]
A/inf: [INF, V, TT/fin]
PRO.lahtea: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 72
['Pekka', 'kaskee', 'Merjan', 'lahtea']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "kaskee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Pekka] PRO.T/fin{v}]

12.
		Ambiguous lexical item "kaske-" detected.

		Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=[[phi.D Pekka] PRO.T/fin{v,V}]

13.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

19.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'TAIL:ARG,VAL,CAT:INF', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.kaske (kaske) is missing complement A/inf
				Avoid [<D Pekka> [T/fin [<D Pekka> [v kaske]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[phi.D Pekka] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D Pekka] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.kaske" from PRO.v and created [PRO.T/fin [PRO.v PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{v,V} PRO.D]]

20.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D Pekka] [PRO.T/fin{v,V} PRO.D{N}]]

21.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] [T/fin{v,V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v [kaske <D Merja->]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [v [kaske <D Merja->]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} A/inf]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] [PRO.T/fin{v,V} [[phi.D Merja-] A/inf]]]

22.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[phi.D Pekka] [PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]]

23.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.v{V} [[phi.D Merja-] A/inf{V}]]]]
						Extracted head "PRO.kaske" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.v [PRO.kaske [[phi.D Merja-] A/inf{V}]]]]]
					Extracted head "PRO.lahtea" from A/inf and created [[phi.D Pekka] [PRO.T/fin [PRO.v [PRO.kaske [[phi.D Merja-] [A/inf PRO.lahtea]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:185 [PRO.T/fin [<DP>:185 [PRO.v [PRO.kaske [[phi.D Merja-] [A/inf PRO.lahtea]]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Pekka>:185 [PRO.T/fin [<DP>:185 [PRO.v [PRO.kaske [<phi.D Merja->:186 [A/inf [<DP>:186 PRO.lahtea]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v [kaske [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:185.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:185.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:185.
			= [<D Pekka> [T/fin [<D Pekka> [v [kaske [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Pekka>:185 [phi.T/fin [<DP>:185 [PRO.v [PRO.kaske [<phi.D Merja->:186 [A/inf [<DP>:186 PRO.lahtea]]]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.kaske with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.lahtea with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 23/223 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [kaske [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
		Grammar: [<phi.D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.kaske [<phi.D Merja->:2 [A/inf [<DP>:2 PRO.lahtea]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]


\========================================================================
# 73
['Pekka', 'haluaa', 'Merjan', 'lahtea']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "haluaa"

		[[D Pekka] T/fin] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*haluaa]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D Pekka] PRO.T/fin{V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] PRO.T/fin{V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] PRO.T/fin{V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] PRO.T/fin{V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=[[phi.D Pekka] PRO.T/fin{V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] PRO.T/fin{V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'TAIL:ARG,VAL,CAT:INF', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.haluaa" lacks complement
				Avoid [<D Pekka> [T/fin [<D Pekka> haluaa]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [haluaa D] due to complement selection.
				[[phi.D Pekka] PRO.T/fin{V}] + D = -197]
				PRO.T/fin{V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[phi.D Pekka] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.haluaa" from PRO.T/fin and created [PRO.T/fin PRO.haluaa]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} PRO.D]]

19.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D Pekka] [PRO.T/fin{V} PRO.D{N}]]

20.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] [T/fin{V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [haluaa <D Merja->]]]] A/inf] due to bad left branch.
				Reject [[T/fin [haluaa <D Merja->]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} A/inf]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] A/inf]]]

21.

		Consume "lahtea"

		[[D Pekka] [T/fin{V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] A/inf{V}]]]

22.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D Merja-] A/inf{V}]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] A/inf{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] A/inf{V}]]].
						Extracted head "PRO.haluaa" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.haluaa [[phi.D Merja-] A/inf{V}]]]]
					Extracted head "PRO.lahtea" from A/inf and created [[phi.D Pekka] [PRO.T/fin [PRO.haluaa [[phi.D Merja-] [A/inf PRO.lahtea]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.haluaa
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:190 [PRO.T/fin [<DP>:190 [PRO.haluaa [[phi.D Merja-] [A/inf PRO.lahtea]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [phi.D Merja-]
					= [<D Pekka> [T/fin [<D Pekka> [haluaa [[D Merja-] [A/inf lahtea]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				hphi.D failed internal tail test.
				A/inf (A/inf) has a specifier [phi.D Merja-] but is marked for -EPP behavior.
					Extraposition will be tried on [<phi.D Pekka>:190 [PRO.T/fin [<DP>:190 [PRO.haluaa [[phi.D Merja-] [A/inf PRO.lahtea]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:190.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:190.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:190.
			= [<D Pekka> [T/fin [<D Pekka> [haluaa [[D Merja-] [A/inf lahtea]]]]]]
		Checking LF-interface conditions.
				hphi.D failed internal tail test.
				A/inf (A/inf) has a specifier [phi.D Merja-] but is marked for -EPP behavior.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.haluaa: [V, TT/fin]
phi.D: [D, V, TT/fin]
Merja-: [N, D, V, TT/fin]
A/inf: [INF, V, TT/fin]
PRO.lahtea: [V, INF, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D Pekka] PRO.T/fin{V}] D]
			Transferring [[phi.D Pekka] PRO.T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] PRO.T/fin{V}].
					Extracted head "PRO.haluaa" from PRO.T/fin and created [[phi.D Pekka] [PRO.T/fin PRO.haluaa]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:191 [PRO.T/fin [<DP>:191 PRO.haluaa]]]
					= [<D Pekka> [T/fin [<D Pekka> haluaa]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				A phi-marked head "PRO.haluaa" lacks complement
					Extraposition will be tried on [<phi.D Pekka>:191 [PRO.T/fin [<DP>:191 PRO.haluaa]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:191.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:191.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:191.
			=[[<phi.D Pekka>:191 [phi.T/fin [<DP>:191 PRO.haluaa]]] PRO.D]

23.

		Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> haluaa]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[<phi.D Pekka>:191 [phi.T/fin [<DP>:191 PRO.haluaa]]] PRO.D{N}]

24.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[<D Pekka> [T/fin [<D Pekka> haluaa]]] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T/fin [<D Pekka> haluaa]]] <D Merja->] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} A/inf]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[<phi.D Pekka>:191 [phi.T/fin [<DP>:191 PRO.haluaa]]] [[phi.D Merja-] A/inf]]

25.

		Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> haluaa]]] [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[<phi.D Pekka>:191 [phi.T/fin [<DP>:191 PRO.haluaa]]] [[phi.D Merja-] A/inf{V}]]

26.
	>>>	Trying candidate parse [[<D Pekka> [T/fin [<D Pekka> haluaa]]] [[D Merja-] A/inf{V}]] (2.)
		Reconstructing...
			Transferring [[<phi.D Pekka>:191 [phi.T/fin [<DP>:191 PRO.haluaa]]] [[phi.D Merja-] A/inf{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D Pekka>:191 [phi.T/fin [<DP>:191 PRO.haluaa]]] [[phi.D Merja-] A/inf{V}]].
					Extracted head "PRO.lahtea" from A/inf and created [[<phi.D Pekka>:191 [phi.T/fin [<DP>:191 PRO.haluaa]]] [[phi.D Merja-] [A/inf PRO.lahtea]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [phi.D Merja-]
					= [[<D Pekka> [T/fin [<D Pekka> haluaa]]] [[D Merja-] [A/inf lahtea]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				A phi-marked head "PRO.haluaa" lacks complement
				A/inf has unaccetable specifier [phi.D Merja-].
					Extraposition will be tried on [[<phi.D Pekka>:191 [phi.T/fin [<DP>:191 PRO.haluaa]]] [[phi.D Merja-] [A/inf PRO.lahtea]]].
				Agreement reconstruction:
			= [[<D Pekka> [T/fin [<D Pekka> haluaa]]] [[D Merja-] [A/inf lahtea]]]
		Checking LF-interface conditions.
				A phi-marked head "PRO.haluaa" lacks complement
				A/inf has unaccetable specifier [phi.D Merja-].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.haluaa: [V, TT/fin]
phi.D: [D]
Merja-: [N, D]
A/inf: [INF]
PRO.lahtea: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$gen".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 74
['Pekka', 'kaskee', 'lahtea']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "kaskee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Pekka] PRO.T/fin{v}]

12.
		Ambiguous lexical item "kaske-" detected.

		Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=[[phi.D Pekka] PRO.T/fin{v,V}]

13.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] T/fin{v,V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v kaske]]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{v,V} A/inf]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.kaske" from PRO.v and created [PRO.T/fin [PRO.v PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{v,V} A/inf]]

14.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[phi.D Pekka] [PRO.T/fin{v,V} A/inf{V}]]

15.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} A/inf{V}]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{v,V} A/inf{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{v,V} A/inf{V}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.v{V} A/inf{V}]]]
						Extracted head "PRO.kaske" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.v [PRO.kaske A/inf{V}]]]]
					Extracted head "PRO.lahtea" from A/inf and created [[phi.D Pekka] [PRO.T/fin [PRO.v [PRO.kaske [A/inf PRO.lahtea]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:193 [PRO.T/fin [<DP>:193 [PRO.v [PRO.kaske [A/inf PRO.lahtea]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v [kaske [A/inf lahtea]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "A/inf" lacks specifier but needs one.
					Extraposition will be tried on [<phi.D Pekka>:193 [PRO.T/fin [<DP>:193 [PRO.v [PRO.kaske [A/inf PRO.lahtea]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:193.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:193.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:193.
			= [<D Pekka> [T/fin [<D Pekka> [v [kaske [A/inf lahtea]]]]]]
		Checking LF-interface conditions.
				An EPP-head "A/inf" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.

		Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=[[phi.D Pekka] PRO.T/fin{v,V}]

16.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] T/fin{v,V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v kaske]]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{v,V} A/inf]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.kaske" from PRO.v and created [PRO.T/fin [PRO.v PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{v,V} A/inf]]

17.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[phi.D Pekka] [PRO.T/fin{v,V} A/inf{V}]]

18.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} A/inf{V}]] (2.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{v,V} A/inf{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{v,V} A/inf{V}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.v{V} A/inf{V}]]]
						Extracted head "PRO.kaske" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.v [PRO.kaske A/inf{V}]]]]
					Extracted head "PRO.lahtea" from A/inf and created [[phi.D Pekka] [PRO.T/fin [PRO.v [PRO.kaske [A/inf PRO.lahtea]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:195 [PRO.T/fin [<DP>:195 [PRO.v [PRO.kaske [A/inf PRO.lahtea]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v [kaske [A/inf lahtea]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "A/inf" lacks specifier but needs one.
					Extraposition will be tried on [<phi.D Pekka>:195 [PRO.T/fin [<DP>:195 [PRO.v [PRO.kaske [A/inf PRO.lahtea]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:195.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:195.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:195.
			= [<D Pekka> [T/fin [<D Pekka> [v [kaske [A/inf lahtea]]]]]]
		Checking LF-interface conditions.
				An EPP-head "A/inf" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kaske-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kaskee".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 75
['Pekka', 'haluaa', 'lahtemaan']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "haluaa"

		[[D Pekka] T/fin] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*haluaa]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.
		Next word "lahtemaan" contains multiple morphemes ['$MA/inf', 'lahte-']

		Consume "ma"

		[[D Pekka] T/fin{V}] + ma
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> haluaa]]] ma] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} ma]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.haluaa" from PRO.T/fin and created [PRO.T/fin PRO.haluaa]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} ma]]

13.

		Consume "lahtea"

		[[D Pekka] [T/fin{V} ma]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into ma because they are inside the same phonological word.
		Exploring solution number (1) =[ma*lahtea]
			=[[phi.D Pekka] [PRO.T/fin{V} ma{V}]]

14.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} ma{V}]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} ma{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} ma{V}]].
						Extracted head "PRO.haluaa" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.haluaa ma{V}]]]
					Extracted head "PRO.lahtea" from ma and created [[phi.D Pekka] [PRO.T/fin [PRO.haluaa [ma PRO.lahtea]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:197 [PRO.T/fin [<DP>:197 [PRO.haluaa [ma PRO.lahtea]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [haluaa [ma lahtea]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:197.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:197.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:197.
			= [<D Pekka> [T/fin [<D Pekka> [haluaa [ma lahtea]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Pekka>:197 [phi.T/fin [<DP>:197 [PRO.haluaa [ma PRO.lahtea]]]]] into LF...
				PRO.haluaa with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.lahtea with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to LF successful.
!--->		Tests passed (with 14/135 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [haluaa [ma lahtea]]]]]
		Grammar: [<phi.D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.haluaa [ma PRO.lahtea]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.haluaa: [V, TT/fin]
ma: [INF, V, TT/fin]
PRO.lahtea: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 76
['Pekka', 'haluaa', 'Merjan', 'lahtevan']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "haluaa"

		[[D Pekka] T/fin] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*haluaa]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D Pekka] PRO.T/fin{V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] PRO.T/fin{V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] PRO.T/fin{V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] PRO.T/fin{V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=[[phi.D Pekka] PRO.T/fin{V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] PRO.T/fin{V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'TAIL:ARG,VAL,CAT:INF', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.haluaa" lacks complement
				Avoid [<D Pekka> [T/fin [<D Pekka> haluaa]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [haluaa D] due to complement selection.
				[[phi.D Pekka] PRO.T/fin{V}] + D = -197]
				PRO.T/fin{V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[phi.D Pekka] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.haluaa" from PRO.T/fin and created [PRO.T/fin PRO.haluaa]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} PRO.D]]

19.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D Pekka] [PRO.T/fin{V} PRO.D{N}]]

20.
		Next word "lahtevan" contains multiple morphemes ['$VA/inf', 'lahte-']

		Consume "vAn"

		[[D Pekka] [T/fin{V} D{N}]] + vAn
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [haluaa <D Merja->]]]] PRO.vAn] due to bad left branch.
				Reject [[T/fin [haluaa <D Merja->]] PRO.vAn] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} vAn]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] PRO.vAn]]]

21.

		Consume "lahtea"

		[[D Pekka] [T/fin{V} [[D Merja-] vAn]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.vAn*lahtea]
			=[[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] PRO.vAn{V}]]]

22.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D Merja-] vAn{V}]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] PRO.vAn{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] PRO.vAn{V}]]].
						Extracted head "PRO.haluaa" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.haluaa [[phi.D Merja-] PRO.vAn{V}]]]]
					Extracted head "PRO.lahtea" from PRO.vAn and created [[phi.D Pekka] [PRO.T/fin [PRO.haluaa [[phi.D Merja-] [PRO.vAn PRO.lahtea]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:201 [PRO.T/fin [<DP>:201 [PRO.haluaa [[phi.D Merja-] [PRO.vAn PRO.lahtea]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Pekka>:201 [PRO.T/fin [<DP>:201 [PRO.haluaa [<phi.D Merja->:202 [PRO.vAn [<DP>:202 PRO.lahtea]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [haluaa [<D Merja-> [vAn [<D Merja-> lahtea]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:201.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:201.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:201.
					PRO.vAn has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.vAn acquired PHI:DET:DEF by phi-Agree from <DP>:202.
					phi.vAn acquired PHI:NUM:SG by phi-Agree from <DP>:202.
					phi.vAn acquired PHI:PER:3 by phi-Agree from <DP>:202.
			= [<D Pekka> [T/fin [<D Pekka> [haluaa [<D Merja-> [vAn [<D Merja-> lahtea]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Pekka>:201 [phi.T/fin [<DP>:201 [PRO.haluaa [<phi.D Merja->:202 [phi.vAn [<DP>:202 PRO.lahtea]]]]]]] into LF...
				PRO.haluaa with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [<D Merja-> [vAn [<D Merja-> lahtea]]]    (alternatives: 2. <D Pekka> 3. T/fin )
				PRO.lahtea with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: 2. vAn 3. <D Pekka> 4. T/fin )
				Transfer to LF successful.
!--->		Tests passed (with 22/214 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [haluaa [<D Merja-> [vAn [<D Merja-> lahtea]]]]]]]
		Grammar: [<phi.D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.haluaa [<phi.D Merja->:2 [phi.vAn [<DP>:2 PRO.lahtea]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP:2 [INF [__:2 V]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.haluaa: [V, TT/fin]
phi.D: [D, V, TT/fin]
Merja-: [N, D, V, TT/fin]
phi.vAn: [INF, V, TT/fin]
(D): [D, INF, V, TT/fin]
(N): [N, D, INF, V, TT/fin]
PRO.lahtea: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 77
['Pekka', 'yrittaa', 'Merjan', 'lahtevan']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "yrittaa" contains multiple morphemes ['$[-V]', '$T/fin', 'yritta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "yritta"

		[[D Pekka] T/fin] + yritta
			Filtering out impossible merge sites...
			Sink "yritta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*yritta]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D Pekka] PRO.T/fin{V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] PRO.T/fin{V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] PRO.T/fin{V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] PRO.T/fin{V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=[[phi.D Pekka] PRO.T/fin{V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] PRO.T/fin{V}]

18.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'TAIL:ARG,VAL,CAT:INF', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
					PRO.yritta (yritta) is missing a mandatory complement -ARG
					PRO.yritta (yritta) is missing a mandatory complement A/inf
				Avoid [<D Pekka> [T/fin [<D Pekka> yritta]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[phi.D Pekka] PRO.T/fin{V}] + D = -197]
				PRO.T/fin{V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[phi.D Pekka] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.yritta" from PRO.T/fin and created [PRO.T/fin PRO.yritta]
				PRO.yritta (yritta) is missing complement -ARG
				PRO.yritta (yritta) is missing complement A/inf
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} PRO.D]]

19.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D Pekka] [PRO.T/fin{V} PRO.D{N}]]

20.
		Next word "lahtevan" contains multiple morphemes ['$VA/inf', 'lahte-']

		Consume "vAn"

		[[D Pekka] [T/fin{V} D{N}]] + vAn
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [yritta <D Merja->]]]] PRO.vAn] due to bad left branch.
				Reject [[T/fin [yritta <D Merja->]] PRO.vAn] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} vAn]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] PRO.vAn]]]

21.

		Consume "lahtea"

		[[D Pekka] [T/fin{V} [[D Merja-] vAn]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.vAn*lahtea]
			=[[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] PRO.vAn{V}]]]

22.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D Merja-] vAn{V}]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] PRO.vAn{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} [[phi.D Merja-] PRO.vAn{V}]]].
						Extracted head "PRO.yritta" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.yritta [[phi.D Merja-] PRO.vAn{V}]]]]
					Extracted head "PRO.lahtea" from PRO.vAn and created [[phi.D Pekka] [PRO.T/fin [PRO.yritta [[phi.D Merja-] [PRO.vAn PRO.lahtea]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:206 [PRO.T/fin [<DP>:206 [PRO.yritta [[phi.D Merja-] [PRO.vAn PRO.lahtea]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<phi.D Pekka>:206 [PRO.T/fin [<DP>:206 [PRO.yritta [<phi.D Merja->:207 [PRO.vAn [<DP>:207 PRO.lahtea]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [yritta [<D Merja-> [vAn [<D Merja-> lahtea]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.yritta (yritta) is missing a mandatory complement -ARG
					PRO.yritta (yritta) is missing a mandatory complement A/inf
					Extraposition will be tried on [<phi.D Pekka>:206 [PRO.T/fin [<DP>:206 [PRO.yritta [<phi.D Merja->:207 [PRO.vAn [<DP>:207 PRO.lahtea]]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:206.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:206.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:206.
					PRO.vAn has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.vAn acquired PHI:DET:DEF by phi-Agree from <DP>:207.
					phi.vAn acquired PHI:NUM:SG by phi-Agree from <DP>:207.
					phi.vAn acquired PHI:PER:3 by phi-Agree from <DP>:207.
			= [<D Pekka> [T/fin [<D Pekka> [yritta [<D Merja-> [vAn [<D Merja-> lahtea]]]]]]]
		Checking LF-interface conditions.
					PRO.yritta (yritta) is missing a mandatory complement -ARG
					PRO.yritta (yritta) is missing a mandatory complement A/inf
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.yritta: [V, TT/fin]
phi.D: [D, V, TT/fin]
Merja-: [N, D, V, TT/fin]
phi.vAn: [INF, V, TT/fin]
(D): [D, INF, V, TT/fin]
(N): [N, D, INF, V, TT/fin]
PRO.lahtea: [V, INF, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D Pekka] PRO.T/fin{V}] D]
			Transferring [[phi.D Pekka] PRO.T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] PRO.T/fin{V}].
					Extracted head "PRO.yritta" from PRO.T/fin and created [[phi.D Pekka] [PRO.T/fin PRO.yritta]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:208 [PRO.T/fin [<DP>:208 PRO.yritta]]]
					= [<D Pekka> [T/fin [<D Pekka> yritta]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.yritta (yritta) is missing a mandatory complement -ARG
					PRO.yritta (yritta) is missing a mandatory complement A/inf
					Extraposition will be tried on [<phi.D Pekka>:208 [PRO.T/fin [<DP>:208 PRO.yritta]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:208.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:208.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:208.
			=[[<phi.D Pekka>:208 [phi.T/fin [<DP>:208 PRO.yritta]]] PRO.D]

23.

		Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> yritta]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[<phi.D Pekka>:208 [phi.T/fin [<DP>:208 PRO.yritta]]] PRO.D{N}]

24.
		Next word "lahtevan" contains multiple morphemes ['$VA/inf', 'lahte-']

		Consume "vAn"

		[[<D Pekka> [T/fin [<D Pekka> yritta]]] D{N}] + vAn
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T/fin [<D Pekka> yritta]]] <D Merja->] PRO.vAn] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} vAn]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[<phi.D Pekka>:208 [phi.T/fin [<DP>:208 PRO.yritta]]] [[phi.D Merja-] PRO.vAn]]

25.

		Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> yritta]]] [[D Merja-] vAn]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.vAn*lahtea]
			=[[<phi.D Pekka>:208 [phi.T/fin [<DP>:208 PRO.yritta]]] [[phi.D Merja-] PRO.vAn{V}]]

26.
	>>>	Trying candidate parse [[<D Pekka> [T/fin [<D Pekka> yritta]]] [[D Merja-] vAn{V}]] (2.)
		Reconstructing...
			Transferring [[<phi.D Pekka>:208 [phi.T/fin [<DP>:208 PRO.yritta]]] [[phi.D Merja-] PRO.vAn{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<phi.D Pekka>:208 [phi.T/fin [<DP>:208 PRO.yritta]]] [[phi.D Merja-] PRO.vAn{V}]].
					Extracted head "PRO.lahtea" from PRO.vAn and created [[<phi.D Pekka>:208 [phi.T/fin [<DP>:208 PRO.yritta]]] [[phi.D Merja-] [PRO.vAn PRO.lahtea]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [[<phi.D Pekka>:208 [phi.T/fin [<DP>:208 PRO.yritta]]] [<phi.D Merja->:209 [PRO.vAn [<DP>:209 PRO.lahtea]]]]
					= [[<D Pekka> [T/fin [<D Pekka> yritta]]] [<D Merja-> [vAn [<D Merja-> lahtea]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Pekka T/fin __yritta " into memory buffer from SPEC of "PRO.vAn".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
					PRO.yritta (yritta) is missing a mandatory complement -ARG
					PRO.yritta (yritta) is missing a mandatory complement A/inf
				PRO.vAn has unaccetable specifier <phi.D Merja->:209.
					Extraposition will be tried on [[<phi.D Pekka>:208 [phi.T/fin [<DP>:208 PRO.yritta]]] [<phi.D Merja->:209 [PRO.vAn [<DP>:209 PRO.lahtea]]]].
				Agreement reconstruction:
					PRO.vAn has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.vAn acquired PHI:DET:DEF by phi-Agree from <DP>:209.
					phi.vAn acquired PHI:NUM:SG by phi-Agree from <DP>:209.
					phi.vAn acquired PHI:PER:3 by phi-Agree from <DP>:209.
			= [[<D Pekka> [T/fin [<D Pekka> yritta]]] [<D Merja-> [vAn [<D Merja-> lahtea]]]]
		Checking LF-interface conditions.
					PRO.yritta (yritta) is missing a mandatory complement -ARG
					PRO.yritta (yritta) is missing a mandatory complement A/inf
				phi.vAn has unaccetable specifier <phi.D Merja->:209.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.yritta: [V, TT/fin]
phi.D: [D]
Merja-: [N, D]
phi.vAn: [INF]
(D): [D, INF]
(N): [N, D, INF]
PRO.lahtea: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$gen".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "yritta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "yrittaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 78
['Pekka', 'yrittaa']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "yrittaa" contains multiple morphemes ['$[-V]', '$T/fin', 'yritta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "yritta"

		[[D Pekka] T/fin] + yritta
			Filtering out impossible merge sites...
			Sink "yritta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*yritta]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.
	>>>	Trying candidate parse [[D Pekka] T/fin{V}] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] PRO.T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] PRO.T/fin{V}].
					Extracted head "PRO.yritta" from PRO.T/fin and created [[phi.D Pekka] [PRO.T/fin PRO.yritta]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:210 [PRO.T/fin [<DP>:210 PRO.yritta]]]
					= [<D Pekka> [T/fin [<D Pekka> yritta]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.yritta (yritta) is missing a mandatory complement -ARG
					PRO.yritta (yritta) is missing a mandatory complement A/inf
					Extraposition will be tried on [<phi.D Pekka>:210 [PRO.T/fin [<DP>:210 PRO.yritta]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:210.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:210.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:210.
			= [<D Pekka> [T/fin [<D Pekka> yritta]]]
		Checking LF-interface conditions.
					PRO.yritta (yritta) is missing a mandatory complement -ARG
					PRO.yritta (yritta) is missing a mandatory complement A/inf
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.yritta: [V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "yritta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "yrittaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 79
['Pekka', 'yrittaa', 'lahtea']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "yrittaa" contains multiple morphemes ['$[-V]', '$T/fin', 'yritta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "yritta"

		[[D Pekka] T/fin] + yritta
			Filtering out impossible merge sites...
			Sink "yritta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*yritta]
			=[[phi.D Pekka] PRO.T/fin{V}]

12.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] T/fin{V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> yritta]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} A/inf]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.yritta" from PRO.T/fin and created [PRO.T/fin PRO.yritta]
				PRO.yritta (yritta) is missing complement -ARG
				PRO.yritta (yritta) is missing complement A/inf
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{V} A/inf]]

13.

		Consume "lahtea"

		[[D Pekka] [T/fin{V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[phi.D Pekka] [PRO.T/fin{V} A/inf{V}]]

14.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} A/inf{V}]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{V} A/inf{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{V} A/inf{V}]].
						Extracted head "PRO.yritta" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.yritta A/inf{V}]]]
					Extracted head "PRO.lahtea" from A/inf and created [[phi.D Pekka] [PRO.T/fin [PRO.yritta [A/inf PRO.lahtea]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.yritta
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:212 [PRO.T/fin [<DP>:212 [PRO.yritta [A/inf PRO.lahtea]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [yritta [A/inf lahtea]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:212.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:212.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:212.
			= [<D Pekka> [T/fin [<D Pekka> [yritta [A/inf lahtea]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Pekka>:212 [phi.T/fin [<DP>:212 [PRO.yritta [A/inf PRO.lahtea]]]]] into LF...
				PRO.yritta with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.lahtea with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to LF successful.
!--->		Tests passed (with 14/137 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [yritta [A/inf lahtea]]]]]
		Grammar: [<phi.D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.yritta [A/inf PRO.lahtea]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.yritta: [V, TT/fin]
A/inf: [INF, V, TT/fin]
PRO.lahtea: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 80
['John', 'wants', 'to_inf', 'leave']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "wants" contains multiple morphemes ['$[-s]', '$T/fin', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "want"

		[[D John] T/fin] + want
			Filtering out impossible merge sites...
			Sink "want" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*want]
			=[[phi.D John] T/fin{V}]

11.

		Consume "to"

		[[D John] T/fin{V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Prioritize [want to] due to complement selection.
				[[phi.D John] T/fin{V}] + to = -98]
				T/fin{V} + to = 104]
		Ranking completed:
			1. [T/fin{V}; to]
			2. [[[phi.D John] T/fin{V}]; to]
		Exploring solution number (1) =[T/fin{V} to]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.want" from T/fin and created [T/fin PRO.want]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} to]]

12.

		Consume "leave"

		[[D John] [T/fin{V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [want to]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [want to]] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} [to PRO.leave]]]

13.
	>>>	Trying candidate parse [[D John] [T/fin{V} [to leave]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{V} [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [to PRO.leave]]].
						Extracted head "PRO.want" and reconstructed it = [[phi.D John] [T/fin [PRO.want [to PRO.leave]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [want [to leave]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:65 from memory buffer into Spec of PRO.want
					Result [[phi.D John]:65 [T/fin [(DP):65 [PRO.want [to PRO.leave]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):65.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):65.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):65.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):65.
			= [[D John] [T/fin [[D John] [want [to leave]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:65 [T/fin [(DP):65 [PRO.want [to PRO.leave]]]]] into LF...
				PRO.want with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.leave with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to LF successful.
!--->		Tests passed (with 13/150 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [want [to leave]]]]]
		Grammar: [[phi.D John]:1 [T/fin [(DP):1 [PRO.want [to PRO.leave]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
want:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
want:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.want: [V, TT/fin]
to: [INF, V, TT/fin]
PRO.leave: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 81
['John', 'wants', 'Mary', 'to_inf', 'leave']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "wants" contains multiple morphemes ['$[-s]', '$T/fin', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "want"

		[[D John] T/fin] + want
			Filtering out impossible merge sites...
			Sink "want" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*want]
			=[[phi.D John] T/fin{V}]

11.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D John] T/fin{V}]

12.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D John] T/fin{V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D John] T/fin{V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D John] T/fin{V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D John] T/fin{V}]

16.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D John] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				[[phi.D John] T/fin{V}] + D = -98]
				T/fin{V} + D = 104]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[phi.D John] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.want" from T/fin and created [T/fin PRO.want]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} PRO.D]]

17.

		Consume "Mary"

		[[D John] [T/fin{V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{V} PRO.D{N}]]

18.

		Consume "to"

		[[D John] [T/fin{V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [want [D Mary]]] as left branch because it constitutes illicit structure.
				Avoid PRO.D{N} because it could break words.
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
				Prioritize PRO.D{N} because all solutions were negative.
				[[phi.D John] [T/fin{V} PRO.D{N}]] + to = -98]
				[T/fin{V} PRO.D{N}] + to = -194]
				PRO.D{N} + to = 106]
		Ranking completed:
			1. [PRO.D{N}; to]
			2. [[[phi.D John] [T/fin{V} PRO.D{N}]]; to]
			3. [[T/fin{V} PRO.D{N}]; to]
		Exploring solution number (1) =[PRO.D{N} to]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] [T/fin{V} [[phi.D Mary] to]]]

19.

		Consume "leave"

		[[D John] [T/fin{V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [want [[D Mary] to]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [want [[D Mary] to]]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} [[phi.D Mary] [to PRO.leave]]]]

20.
	>>>	Trying candidate parse [[D John] [T/fin{V} [[D Mary] [to leave]]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{V} [[phi.D Mary] [to PRO.leave]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [[phi.D Mary] [to PRO.leave]]]].
						Extracted head "PRO.want" and reconstructed it = [[phi.D John] [T/fin [PRO.want [[phi.D Mary] [to PRO.leave]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [want [[D Mary] [to leave]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:71 from memory buffer into Spec of PRO.want
					Result [[phi.D John]:71 [T/fin [(DP):71 [PRO.want [[phi.D Mary] [to PRO.leave]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):71.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):71.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):71.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):71.
			= [[D John] [T/fin [[D John] [want [[D Mary] [to leave]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:71 [T/fin [(DP):71 [PRO.want [[phi.D Mary] [to PRO.leave]]]]]] into LF...
				PRO.want with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.leave with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] 3. T/fin )
				Transfer to LF successful.
!--->		Tests passed (with 20/231 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [want [[D Mary] [to leave]]]]]]
		Grammar: [[phi.D John]:1 [T/fin [(DP):1 [PRO.want [[phi.D Mary] [to PRO.leave]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [DP [INF V]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
want:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
want:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.want: [V, TT/fin]
phi.D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]
to: [INF, V, TT/fin]
PRO.leave: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 82
['John', 'tries', 'to_inf', 'leave']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "tries" contains multiple morphemes ['$[-s]', '$T/fin', 'try-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "try"

		[[D John] T/fin] + try
			Filtering out impossible merge sites...
			Sink "try" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*try]
			=[[phi.D John] T/fin{V}]

11.

		Consume "to"

		[[D John] T/fin{V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				Avoid [[D John] [T/fin [[D John] try]]] as left branch because it constitutes illicit structure.
				Prioritize [try to] due to complement selection.
				[[phi.D John] T/fin{V}] + to = -197]
				T/fin{V} + to = 104]
		Ranking completed:
			1. [T/fin{V}; to]
			2. [[[phi.D John] T/fin{V}]; to]
		Exploring solution number (1) =[T/fin{V} to]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.try" from T/fin and created [T/fin PRO.try]
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.try (try) is missing complement -ARG
				PRO.try (try) is missing complement TO/inf
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} to]]

12.

		Consume "leave"

		[[D John] [T/fin{V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [try to]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [try to]] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} [to PRO.leave]]]

13.
	>>>	Trying candidate parse [[D John] [T/fin{V} [to leave]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{V} [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [to PRO.leave]]].
						Extracted head "PRO.try" and reconstructed it = [[phi.D John] [T/fin [PRO.try [to PRO.leave]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into -ARG due to PRO.try
				Floater movement reconstruction:
					= [[D John] [T/fin [try [to leave]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:75 from memory buffer into Spec of PRO.try
					Result [[phi.D John]:75 [T/fin [(DP):75 [PRO.try [to PRO.leave]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):75.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):75.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):75.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):75.
			= [[D John] [T/fin [[D John] [try [to leave]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:75 [T/fin [(DP):75 [PRO.try [to PRO.leave]]]]] into LF...
				PRO.try with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.leave with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to LF successful.
!--->		Tests passed (with 13/156 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [try [to leave]]]]]
		Grammar: [[phi.D John]:1 [T/fin [(DP):1 [PRO.try [to PRO.leave]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.try: [V, TT/fin]
to: [INF, V, TT/fin]
PRO.leave: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 83
['John', 'tries', 'Mary', 'to_inf', 'leave']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "tries" contains multiple morphemes ['$[-s]', '$T/fin', 'try-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "try"

		[[D John] T/fin] + try
			Filtering out impossible merge sites...
			Sink "try" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*try]
			=[[phi.D John] T/fin{V}]

11.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D John] T/fin{V}]

12.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D John] T/fin{V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D John] T/fin{V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D John] T/fin{V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D John] T/fin{V}]

16.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D John] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				Avoid [[D John] [T/fin [[D John] try]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[phi.D John] T/fin{V}] + D = -197]
				T/fin{V} + D = 104]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[phi.D John] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.try" from T/fin and created [T/fin PRO.try]
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.try (try) is missing complement -ARG
				PRO.try (try) is missing complement TO/inf
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} PRO.D]]

17.

		Consume "Mary"

		[[D John] [T/fin{V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{V} PRO.D{N}]]

18.

		Consume "to"

		[[D John] [T/fin{V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				hPRO.D failed internal tail test.
				Avoid [[D John] [T/fin [[D John] [try <D Mary>]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.try (try) is missing complement -ARG
				PRO.try (try) is missing complement TO/inf
				hPRO.D failed internal tail test.
				Avoid [T/fin [try <D Mary>]] as left branch because it constitutes illicit structure.
				Avoid PRO.D{N} because it could break words.
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
				Prioritize PRO.D{N} because all solutions were negative.
				[[phi.D John] [T/fin{V} PRO.D{N}]] + to = -197]
				[T/fin{V} PRO.D{N}] + to = -194]
				PRO.D{N} + to = 106]
		Ranking completed:
			1. [PRO.D{N}; to]
			2. [[T/fin{V} PRO.D{N}]; to]
			3. [[[phi.D John] [T/fin{V} PRO.D{N}]]; to]
		Exploring solution number (1) =[PRO.D{N} to]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] [T/fin{V} [[phi.D Mary] to]]]

19.

		Consume "leave"

		[[D John] [T/fin{V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [try [[D Mary] to]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [try [[D Mary] to]]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} [[phi.D Mary] [to PRO.leave]]]]

20.
	>>>	Trying candidate parse [[D John] [T/fin{V} [[D Mary] [to leave]]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{V} [[phi.D Mary] [to PRO.leave]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [[phi.D Mary] [to PRO.leave]]]].
						Extracted head "PRO.try" and reconstructed it = [[phi.D John] [T/fin [PRO.try [[phi.D Mary] [to PRO.leave]]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into -ARG due to PRO.try
				Floater movement reconstruction:
					= [[D John] [T/fin [try [[D Mary] [to leave]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:81 from memory buffer into Spec of PRO.try
					Result [[phi.D John]:81 [T/fin [(DP):81 [PRO.try [[phi.D Mary] [to PRO.leave]]]]]]
				to (to) has a specifier [phi.D Mary] but is marked for -EPP behavior.
					Extraposition will be tried on [[phi.D John]:81 [T/fin [(DP):81 [PRO.try [[phi.D Mary] [to PRO.leave]]]]]].
					<to PRO.leave> was made an adjunct.
					<to PRO.leave> was made adjunct by an extraposition rule.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):81.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):81.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):81.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):81.
			= [[D John] [T/fin [[D John] [try [[D Mary] <to leave>]]]]]
		Checking LF-interface conditions.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.try: [V, TT/fin]
phi.D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]
to: [INF, V, TT/fin]
PRO.leave: [V, INF, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} PRO.D{N}] to]
			Transferring [T/fin{V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [T/fin{V} PRO.D{N}].
						Extracted head "PRO.try" and reconstructed it = [T/fin [PRO.try PRO.D{N}]]
					Extracted head "Mary" from PRO.D and created [T/fin [PRO.try [PRO.D Mary]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [try [D Mary]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
					Extraposition will be tried on [T/fin [PRO.try [PRO.D Mary]]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.try (try) is missing complement -ARG
				PRO.try (try) is missing complement TO/inf
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
			=[[phi.D John] [[T/fin [PRO.try <PRO.D Mary>]] to]]

21.

		Consume "leave"

		[[D John] [[T/fin [try <D Mary>]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[T/fin [try <D Mary>]] to]] PRO.leave] due to bad left branch.
				Reject [[[T/fin [try <D Mary>]] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[phi.D John] [[T/fin [PRO.try <PRO.D Mary>]] [to PRO.leave]]]

22.
	>>>	Trying candidate parse [[D John] [[T/fin [try <D Mary>]] [to leave]]] (2.)
		Reconstructing...
			Transferring [[phi.D John] [[T/fin [PRO.try <PRO.D Mary>]] [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [[T/fin [PRO.try <PRO.D Mary>]] [to PRO.leave]]].
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [[T/fin [try <D Mary>]] [to leave]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.try (try) is missing complement -ARG
				PRO.try (try) is missing complement TO/inf
				hPRO.D failed internal tail test.
				to has unaccetable specifier [T/fin [PRO.try <PRO.D Mary>]].
					Extraposition will be tried on [[phi.D John] [[T/fin [PRO.try <PRO.D Mary>]] [to PRO.leave]]].
				Agreement reconstruction:
			= [[D John] [[T/fin [try <D Mary>]] [to leave]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.try (try) is missing complement -ARG
				PRO.try (try) is missing complement TO/inf
				hPRO.D failed internal tail test.
				to has unaccetable specifier [T/fin [PRO.try <PRO.D Mary>]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:PHI:DET:DEF,PHI:DET:_,PHI:GEN:F,PHI:GEN:_,PHI:HUM:HUM,PHI:NUM:SG,PHI:NUM:_,PHI:PER:3,PHI:PER:_,!COMP:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
PRO.try: [V, TT/fin]
PRO.D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]
to: [INF]
PRO.leave: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[phi.D John] [T/fin{V} PRO.D{N}]] to]
			Transferring [[phi.D John] [T/fin{V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} PRO.D{N}]].
						Extracted head "PRO.try" and reconstructed it = [[phi.D John] [T/fin [PRO.try PRO.D{N}]]]
					Extracted head "Mary" from PRO.D and created [[phi.D John] [T/fin [PRO.try [PRO.D Mary]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [try [D Mary]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:82 from memory buffer into Spec of PRO.try
					Result [[phi.D John]:82 [T/fin [(DP):82 [PRO.try [PRO.D Mary]]]]]
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
					Extraposition will be tried on [[phi.D John]:82 [T/fin [(DP):82 [PRO.try [PRO.D Mary]]]]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):82.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):82.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):82.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):82.
			=[[[phi.D John]:82 [T/fin [(DP):82 [PRO.try <PRO.D Mary>]]]] to]

23.

		Consume "leave"

		[[[D John] [T/fin [[D John] [try <D Mary>]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [try <D Mary>]]]] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[[phi.D John]:82 [T/fin [(DP):82 [PRO.try <PRO.D Mary>]]]] [to PRO.leave]]

24.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] [try <D Mary>]]]] [to leave]] (3.)
		Reconstructing...
			Transferring [[[phi.D John]:82 [T/fin [(DP):82 [PRO.try <PRO.D Mary>]]]] [to PRO.leave]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D John]:82 [T/fin [(DP):82 [PRO.try <PRO.D Mary>]]]] [to PRO.leave]].
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] [try <D Mary>]]]] [to leave]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				hPRO.D failed internal tail test.
				to has unaccetable specifier [[phi.D John]:82 [T/fin [(DP):82 [PRO.try <PRO.D Mary>]]]].
					Extraposition will be tried on [[[phi.D John]:82 [T/fin [(DP):82 [PRO.try <PRO.D Mary>]]]] [to PRO.leave]].
				Agreement reconstruction:
			= [[[D John] [T/fin [[D John] [try <D Mary>]]]] [to leave]]
		Checking LF-interface conditions.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				hPRO.D failed internal tail test.
				to has unaccetable specifier [[phi.D John]:82 [T/fin [(DP):82 [PRO.try <PRO.D Mary>]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:PHI:DET:DEF,PHI:DET:_,PHI:GEN:F,PHI:GEN:_,PHI:HUM:HUM,PHI:NUM:SG,PHI:NUM:_,PHI:PER:3,PHI:PER:_,!COMP:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.try: [V, TT/fin]
PRO.D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]
to: [INF]
PRO.leave: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D John] T/fin{V}] D]
			Transferring [[phi.D John] T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] T/fin{V}].
					Extracted head "PRO.try" from T/fin and created [[phi.D John] [T/fin PRO.try]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin try]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:83 from memory buffer into Spec of PRO.try
					Result [[phi.D John]:83 [T/fin [(DP):83 PRO.try]]]
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
					Extraposition will be tried on [[phi.D John]:83 [T/fin [(DP):83 PRO.try]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):83.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):83.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):83.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):83.
			=[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] PRO.D]

25.

		Consume "Mary"

		[[[D John] [T/fin [[D John] try]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] PRO.D{N}]

26.

		Consume "to"

		[[[D John] [T/fin [[D John] try]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				Avoid [[[D John] [T/fin [[D John] try]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] PRO.D{N}] + to = -98]
				PRO.D{N} + to = 2]
		Ranking completed:
			1. [PRO.D{N}; to]
			2. [[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] PRO.D{N}]; to]
		Exploring solution number (1) =[PRO.D{N} to]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] [[phi.D Mary] to]]

27.

		Consume "leave"

		[[[D John] [T/fin [[D John] try]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] try]]] [[D Mary] to]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] [[phi.D Mary] [to PRO.leave]]]

28.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] try]]] [[D Mary] [to leave]]] (4.)
		Reconstructing...
			Transferring [[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] [[phi.D Mary] [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] [[phi.D Mary] [to PRO.leave]]].
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] try]]] [[D Mary] [to leave]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [phi.D Mary].
					Extraposition will be tried on [[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] [[phi.D Mary] [to PRO.leave]]].
				Agreement reconstruction:
			= [[[D John] [T/fin [[D John] try]]] [[D Mary] [to leave]]]
		Checking LF-interface conditions.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [phi.D Mary].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.try: [V, TT/fin]
phi.D: [D]
Mary: [N, D]
to: [INF]
PRO.leave: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] PRO.D{N}] to]
			Transferring [[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] PRO.D{N}].
					Extracted head "Mary" from PRO.D and created [[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] [PRO.D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] try]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John T/fin __try " into memory buffer from SPEC of "PRO.D".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				PRO.D has unaccetable specifier [[phi.D John]:83 [T/fin [(DP):83 PRO.try]]].
					Extraposition will be tried on [[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] [PRO.D Mary]].
					<PRO.D Mary> was made an adjunct.
					<PRO.D Mary> was made adjunct by an extraposition rule.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
			=[[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] <PRO.D Mary>] to]

29.

		Consume "leave"

		[[[[D John] [T/fin [[D John] try]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] try]]] <D Mary>] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] <PRO.D Mary>] [to PRO.leave]]

30.
	>>>	Trying candidate parse [[[[D John] [T/fin [[D John] try]]] <D Mary>] [to leave]] (5.)
		Reconstructing...
			Transferring [[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] <PRO.D Mary>] [to PRO.leave]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] <PRO.D Mary>] [to PRO.leave]].
				Feature processing:
				Floater movement reconstruction:
					= [[[[D John] [T/fin [[D John] try]]] <D Mary>] [to leave]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] <PRO.D Mary>].
					Extraposition will be tried on [[[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] <PRO.D Mary>] [to PRO.leave]].
				Agreement reconstruction:
			= [[[[D John] [T/fin [[D John] try]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
					PRO.try (try) is missing a mandatory complement -ARG
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [[[phi.D John]:83 [T/fin [(DP):83 PRO.try]]] <PRO.D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:PHI:DET:DEF,PHI:DET:_,PHI:GEN:F,PHI:GEN:_,PHI:HUM:HUM,PHI:NUM:SG,PHI:NUM:_,PHI:PER:3,PHI:PER:_,!COMP:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.try: [V, TT/fin]
PRO.D: [D]
Mary: [N, D]
to: [INF]
PRO.leave: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "try-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "tries".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 84
['John', 'asks', 'Mary', 'to_inf', 'leave']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "asks" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'ask-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D John] T/fin{v}]

11.
		Ambiguous lexical item "ask-" detected.

		Consume "ask"

		[[D John] T/fin{v}] + ask
			Filtering out impossible merge sites...
			Sink "ask" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*ask]
			=[[phi.D John] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D John] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D John] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D John] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D John] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D John] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ask D] due to complement selection.
				[[phi.D John] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D John] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ask" from PRO.v and created [T/fin [PRO.v PRO.ask]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{v,V} PRO.D{N}]]

19.

		Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [v [ask [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid PRO.D{N} because it could break words.
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
				Prioritize PRO.D{N} because all solutions were negative.
				[[phi.D John] [T/fin{v,V} PRO.D{N}]] + to = -98]
				[T/fin{v,V} PRO.D{N}] + to = -194]
				PRO.D{N} + to = 106]
		Ranking completed:
			1. [PRO.D{N}; to]
			2. [[[phi.D John] [T/fin{v,V} PRO.D{N}]]; to]
			3. [[T/fin{v,V} PRO.D{N}]; to]
		Exploring solution number (1) =[PRO.D{N} to]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] [T/fin{v,V} [[phi.D Mary] to]]]

20.

		Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [ask [[D Mary] to]]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [v [ask [[D Mary] to]]]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[phi.D John] [T/fin{v,V} [[phi.D Mary] [to PRO.leave]]]]

21.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} [[D Mary] [to leave]]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{v,V} [[phi.D Mary] [to PRO.leave]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{v,V} [[phi.D Mary] [to PRO.leave]]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D John] [T/fin [PRO.v{V} [[phi.D Mary] [to PRO.leave]]]]]
						Extracted head "PRO.ask" and reconstructed it = [[phi.D John] [T/fin [PRO.v [PRO.ask [[phi.D Mary] [to PRO.leave]]]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into -ARG due to PRO.ask
				Floater movement reconstruction:
					= [[D John] [T/fin [v [ask [[D Mary] [to leave]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:89 from memory buffer into Spec of PRO.v
					Result [[phi.D John]:89 [T/fin [(DP):89 [PRO.v [PRO.ask [[phi.D Mary] [to PRO.leave]]]]]]]
				to (to) has a specifier [phi.D Mary] but is marked for -EPP behavior.
					Extraposition will be tried on [[phi.D John]:89 [T/fin [(DP):89 [PRO.v [PRO.ask [[phi.D Mary] [to PRO.leave]]]]]]].
					<to PRO.leave> was made an adjunct.
					<to PRO.leave> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):89.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):89.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):89.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):89.
			= [[D John] [T/fin [[D John] [v [ask [[D Mary] <to leave>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:89 [T/fin [(DP):89 [PRO.v [PRO.ask [[phi.D Mary] <to PRO.leave>]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.ask with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [[D Mary] <to leave>]    (alternatives: )
				PRO.leave with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF successful.
!--->		Tests passed (with 21/250 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [ask [[D Mary] <to leave>]]]]]]
		Grammar: [[phi.D John]:1 [T/fin [(DP):1 [PRO.v [PRO.ask [[phi.D Mary] <to PRO.leave>]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [[D N] INFP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ask: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]
to: [INF, V, v, TT/fin]
PRO.leave: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "ask"

		[[D John] T/fin{v}] + ask
			Filtering out impossible merge sites...
			Sink "ask" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*ask]


\========================================================================
# 85
['John', 'persuades', 'Mary', 'to_inf', 'leave']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "persuades" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'persuade-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D John] T/fin{v}]

11.

		Consume "persuade"

		[[D John] T/fin{v}] + persuade
			Filtering out impossible merge sites...
			Sink "persuade" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*persuade]
			=[[phi.D John] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D John] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D John] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D John] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D John] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D John] T/fin{v,V}]

17.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[phi.D John] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[phi.D John] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.persuade" from PRO.v and created [T/fin [PRO.v PRO.persuade]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{v,V} PRO.D]]

18.

		Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{v,V} PRO.D{N}]]

19.

		Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [v [persuade [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid PRO.D{N} because it could break words.
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
				Prioritize PRO.D{N} because all solutions were negative.
				[[phi.D John] [T/fin{v,V} PRO.D{N}]] + to = -98]
				[T/fin{v,V} PRO.D{N}] + to = -194]
				PRO.D{N} + to = 106]
		Ranking completed:
			1. [PRO.D{N}; to]
			2. [[[phi.D John] [T/fin{v,V} PRO.D{N}]]; to]
			3. [[T/fin{v,V} PRO.D{N}]; to]
		Exploring solution number (1) =[PRO.D{N} to]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] [T/fin{v,V} [[phi.D Mary] to]]]

20.

		Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [persuade [[D Mary] to]]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [v [persuade [[D Mary] to]]]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[phi.D John] [T/fin{v,V} [[phi.D Mary] [to PRO.leave]]]]

21.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} [[D Mary] [to leave]]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{v,V} [[phi.D Mary] [to PRO.leave]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{v,V} [[phi.D Mary] [to PRO.leave]]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D John] [T/fin [PRO.v{V} [[phi.D Mary] [to PRO.leave]]]]]
						Extracted head "PRO.persuade" and reconstructed it = [[phi.D John] [T/fin [PRO.v [PRO.persuade [[phi.D Mary] [to PRO.leave]]]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into +ARG due to PRO.persuade
				Floater movement reconstruction:
					= [[D John] [T/fin [v [persuade [[D Mary] [to leave]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:95 from memory buffer into Spec of PRO.v
					Result [[phi.D John]:95 [T/fin [(DP):95 [PRO.v [PRO.persuade [[phi.D Mary] [to PRO.leave]]]]]]]
					Moving "D Mary " into memory buffer from SPEC of "to".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D Mary]:96 from memory buffer into Spec of PRO.leave
					Result [[phi.D John]:95 [T/fin [(DP):95 [PRO.v [PRO.persuade [[phi.D Mary]:96 [to [(DP):96 PRO.leave]]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):95.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):95.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):95.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):95.
			= [[D John] [T/fin [[D John] [v [persuade [[D Mary] [to [[D Mary] leave]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:95 [T/fin [(DP):95 [PRO.v [PRO.persuade [[phi.D Mary]:96 [to [(DP):96 PRO.leave]]]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.persuade with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.leave with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 21/248 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [persuade [[D Mary] [to [[D Mary] leave]]]]]]]]
		Grammar: [[phi.D John]:1 [T/fin [(DP):1 [PRO.v [PRO.persuade [[phi.D Mary]:2 [to [(DP):2 PRO.leave]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
persuade:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
persuade:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.persuade: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]
to: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.leave: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 86
['John', 'persuades', 'to_inf', 'leave']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "persuades" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'persuade-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[phi.D John] T/fin{v}]

11.

		Consume "persuade"

		[[D John] T/fin{v}] + persuade
			Filtering out impossible merge sites...
			Sink "persuade" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*persuade]
			=[[phi.D John] T/fin{v,V}]

12.

		Consume "to"

		[[D John] T/fin{v,V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Prioritize [persuade to] due to complement selection.
				[[phi.D John] T/fin{v,V}] + to = -98]
				T/fin{v,V} + to = 104]
		Ranking completed:
			1. [T/fin{v,V}; to]
			2. [[[phi.D John] T/fin{v,V}]; to]
		Exploring solution number (1) =[T/fin{v,V} to]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.persuade" from PRO.v and created [T/fin [PRO.v PRO.persuade]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{v,V} to]]

13.

		Consume "leave"

		[[D John] [T/fin{v,V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [persuade to]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [v [persuade to]]] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[phi.D John] [T/fin{v,V} [to PRO.leave]]]

14.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} [to leave]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{v,V} [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{v,V} [to PRO.leave]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D John] [T/fin [PRO.v{V} [to PRO.leave]]]]
						Extracted head "PRO.persuade" and reconstructed it = [[phi.D John] [T/fin [PRO.v [PRO.persuade [to PRO.leave]]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into +ARG due to PRO.persuade
				Floater movement reconstruction:
					= [[D John] [T/fin [v [persuade [to leave]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:100 from memory buffer into Spec of PRO.v
					Result [[phi.D John]:100 [T/fin [(DP):100 [PRO.v [PRO.persuade [to PRO.leave]]]]]]
				An EPP-head "to" lacks specifier but needs one.
					Extraposition will be tried on [[phi.D John]:100 [T/fin [(DP):100 [PRO.v [PRO.persuade [to PRO.leave]]]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):100.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):100.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):100.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):100.
			= [[D John] [T/fin [[D John] [v [persuade [to leave]]]]]]
		Checking LF-interface conditions.
				An EPP-head "to" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
persuade:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'VAL']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.persuade: [V, v, TT/fin]
to: [INF, V, v, TT/fin]
PRO.leave: [V, INF, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[phi.D John] T/fin{v,V}] to]
			Transferring [[phi.D John] T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] T/fin{v,V}].
					Extracted head "PRO.v{V}" from T/fin and created [[phi.D John] [T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.persuade" from PRO.v and created [[phi.D John] [T/fin [PRO.v PRO.persuade]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [v persuade]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:101 from memory buffer into Spec of PRO.v
					Result [[phi.D John]:101 [T/fin [(DP):101 [PRO.v PRO.persuade]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):101.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):101.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):101.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):101.
			=[[[phi.D John]:101 [T/fin [(DP):101 [PRO.v PRO.persuade]]]] to]

15.

		Consume "leave"

		[[[D John] [T/fin [[D John] [v persuade]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v persuade]]]] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[[phi.D John]:101 [T/fin [(DP):101 [PRO.v PRO.persuade]]]] [to PRO.leave]]

16.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] [v persuade]]]] [to leave]] (2.)
		Reconstructing...
			Transferring [[[phi.D John]:101 [T/fin [(DP):101 [PRO.v PRO.persuade]]]] [to PRO.leave]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[phi.D John]:101 [T/fin [(DP):101 [PRO.v PRO.persuade]]]] [to PRO.leave]].
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] [v persuade]]]] [to leave]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to has unaccetable specifier [[phi.D John]:101 [T/fin [(DP):101 [PRO.v PRO.persuade]]]].
					Extraposition will be tried on [[[phi.D John]:101 [T/fin [(DP):101 [PRO.v PRO.persuade]]]] [to PRO.leave]].
				Agreement reconstruction:
			= [[[D John] [T/fin [[D John] [v persuade]]]] [to leave]]
		Checking LF-interface conditions.
				to has unaccetable specifier [[phi.D John]:101 [T/fin [(DP):101 [PRO.v PRO.persuade]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
persuade:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.persuade: [V, v, TT/fin]
to: [INF]
PRO.leave: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "persuade-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "persuades".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 87
['John', 'promises', 'Mary', 'to_inf', 'leave']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "promises" contains multiple morphemes ['$[-s]', '$T/fin', 'promise-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "promise"

		[[D John] T/fin] + promise
			Filtering out impossible merge sites...
			Sink "promise" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*promise]
			=[[phi.D John] T/fin{V}]

11.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[phi.D John] T/fin{V}]

12.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D John] T/fin{V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D John] T/fin{V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D John] T/fin{V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[phi.D John] T/fin{V}]

16.

		Adding inflectional features {'-', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']

		Consume "D"

		[[D John] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [promise D] due to complement selection.
				[[phi.D John] T/fin{V}] + D = -98]
				T/fin{V} + D = 206]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[phi.D John] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.promise" from T/fin and created [T/fin PRO.promise]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} PRO.D]]

17.

		Consume "Mary"

		[[D John] [T/fin{V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Mary]
			=[[phi.D John] [T/fin{V} PRO.D{N}]]

18.

		Consume "to"

		[[D John] [T/fin{V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [promise [D Mary]]] as left branch because it constitutes illicit structure.
				Avoid PRO.D{N} because it could break words.
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
				Prioritize PRO.D{N} because all solutions were negative.
				[[phi.D John] [T/fin{V} PRO.D{N}]] + to = -98]
				[T/fin{V} PRO.D{N}] + to = -194]
				PRO.D{N} + to = 106]
		Ranking completed:
			1. [PRO.D{N}; to]
			2. [[[phi.D John] [T/fin{V} PRO.D{N}]]; to]
			3. [[T/fin{V} PRO.D{N}]; to]
		Exploring solution number (1) =[PRO.D{N} to]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Mary" from PRO.D and created [PRO.D Mary]
					PRO.D was opened into [PRO.D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.D acquired PHI:GEN:F from (Spec,PRO.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] [T/fin{V} [[phi.D Mary] to]]]

19.

		Consume "leave"

		[[D John] [T/fin{V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [promise [[D Mary] to]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [promise [[D Mary] to]]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} [[phi.D Mary] [to PRO.leave]]]]

20.
	>>>	Trying candidate parse [[D John] [T/fin{V} [[D Mary] [to leave]]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{V} [[phi.D Mary] [to PRO.leave]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [[phi.D Mary] [to PRO.leave]]]].
						Extracted head "PRO.promise" and reconstructed it = [[phi.D John] [T/fin [PRO.promise [[phi.D Mary] [to PRO.leave]]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into -ARG due to PRO.promise
				Floater movement reconstruction:
					= [[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:107 from memory buffer into Spec of PRO.promise
					Result [[phi.D John]:107 [T/fin [(DP):107 [PRO.promise [[phi.D Mary] [to PRO.leave]]]]]]
				to (to) has a specifier [phi.D Mary] but is marked for -EPP behavior.
					Extraposition will be tried on [[phi.D John]:107 [T/fin [(DP):107 [PRO.promise [[phi.D Mary] [to PRO.leave]]]]]].
					<to PRO.leave> was made an adjunct.
					<to PRO.leave> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):107.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):107.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):107.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):107.
			= [[D John] [T/fin [[D John] [promise [[D Mary] <to leave>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:107 [T/fin [(DP):107 [PRO.promise [[phi.D Mary] <to PRO.leave>]]]]] into LF...
				PRO.promise with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [[D Mary] <to leave>]    (alternatives: 2. [D John] 3. T/fin )
				PRO.leave with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to LF successful.
!--->		Tests passed (with 20/237 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [promise [[D Mary] <to leave>]]]]]
		Grammar: [[phi.D John]:1 [T/fin [(DP):1 [PRO.promise [[phi.D Mary] <to PRO.leave>]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [[D N] INFP]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.promise: [V, TT/fin]
phi.D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]
to: [INF, V, TT/fin]
PRO.leave: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 88
['John', 'promises', 'to_inf', 'leave']


			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:EN', 'PHI:HUM:HUM', 'PHI:GEN:M', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
			=PRO.D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*John]
			=PRO.D{N}

8.
		Next word "promises" contains multiple morphemes ['$[-s]', '$T/fin', 'promise-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

9.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "John" from PRO.D and created [PRO.D John]
					PRO.D was opened into [PRO.D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
					phi.D acquired PHI:GEN:M from (Spec,phi.D).
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
			=[[phi.D John] T/fin]

10.

		Consume "promise"

		[[D John] T/fin] + promise
			Filtering out impossible merge sites...
			Sink "promise" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*promise]
			=[[phi.D John] T/fin{V}]

11.

		Consume "to"

		[[D John] T/fin{V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				[[phi.D John] T/fin{V}] + to = -98]
				T/fin{V} + to = 2]
		Ranking completed:
			1. [T/fin{V}; to]
			2. [[[phi.D John] T/fin{V}]; to]
		Exploring solution number (1) =[T/fin{V} to]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.promise" from T/fin and created [T/fin PRO.promise]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} to]]

12.

		Consume "leave"

		[[D John] [T/fin{V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [promise to]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [promise to]] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[phi.D John] [T/fin{V} [to PRO.leave]]]

13.
	>>>	Trying candidate parse [[D John] [T/fin{V} [to leave]]] (1.)
		Reconstructing...
			Transferring [[phi.D John] [T/fin{V} [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D John] [T/fin{V} [to PRO.leave]]].
						Extracted head "PRO.promise" and reconstructed it = [[phi.D John] [T/fin [PRO.promise [to PRO.leave]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into -ARG due to PRO.promise
				Floater movement reconstruction:
					= [[D John] [T/fin [promise [to leave]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D John]:111 from memory buffer into Spec of PRO.promise
					Result [[phi.D John]:111 [T/fin [(DP):111 [PRO.promise [to PRO.leave]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):111.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):111.
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):111.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):111.
			= [[D John] [T/fin [[D John] [promise [to leave]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D John]:111 [T/fin [(DP):111 [PRO.promise [to PRO.leave]]]]] into LF...
				PRO.promise with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				PRO.leave with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to LF successful.
!--->		Tests passed (with 13/150 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [promise [to leave]]]]]
		Grammar: [[phi.D John]:1 [T/fin [(DP):1 [PRO.promise [to PRO.leave]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.promise: [V, TT/fin]
to: [INF, V, TT/fin]
PRO.leave: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 89
['haluaa', 'lahtea', 'Pekka']


			=None

1.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "haluaa"

		T/fin + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*haluaa]
			=PRO.T/fin{V}

4.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		T/fin{V} + A/inf
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} A/inf]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.haluaa" from PRO.T/fin and created [PRO.T/fin PRO.haluaa]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[PRO.T/fin{V} A/inf]

5.

		Consume "lahtea"

		[T/fin{V} A/inf] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[PRO.T/fin{V} A/inf{V}]

6.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[PRO.T/fin{V} A/inf{V}]

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[PRO.T/fin{V} A/inf{V}]

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[PRO.T/fin{V} A/inf{V}]

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[PRO.T/fin{V} A/inf{V}]

10.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[PRO.T/fin{V} A/inf{V}]

11.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[PRO.T/fin{V} A/inf{V}]

12.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[T/fin{V} A/inf{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid A/inf{V} because it could break words.
				[PRO.T/fin{V} A/inf{V}] + D = -98]
				A/inf{V} + D = -96]
		Ranking completed:
			1. [A/inf{V}; D]
			2. [[PRO.T/fin{V} A/inf{V}]; D]
		Exploring solution number (1) =[A/inf{V} D]
			Transferring A/inf{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for A/inf{V}.
					Extracted head "PRO.lahtea" from A/inf and created [A/inf PRO.lahtea]
					A/inf{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= A/inf{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				A/inf{V} probing for CAT:V failed.
				A phi-marked head "A/inf{V}" lacks complement
				Agreement reconstruction:
			=[PRO.T/fin{V} [A/inf{V} PRO.D]]

13.

		Consume "Pekka"

		[T/fin{V} [A/inf{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=[PRO.T/fin{V} [A/inf{V} PRO.D{N}]]

14.
	>>>	Trying candidate parse [T/fin{V} [A/inf{V} D{N}]] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{V} [A/inf{V} PRO.D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [A/inf{V} PRO.D{N}]].
						Extracted head "PRO.haluaa" and reconstructed it = [PRO.T/fin [PRO.haluaa [A/inf{V} PRO.D{N}]]]
						Extracted head "PRO.lahtea" and reconstructed it = [PRO.T/fin [PRO.haluaa [A/inf [PRO.lahtea PRO.D{N}]]]]
					Extracted head "Pekka" from PRO.D and created [PRO.T/fin [PRO.haluaa [A/inf [PRO.lahtea [PRO.D Pekka]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.haluaa
				Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<PRO.D Pekka> was made an adjunct.
					Dropping <PRO.D Pekka>
						Floater <D Pekka> dropped.
						 = [PRO.T/fin [<DP>:213 [PRO.haluaa [A/inf [PRO.lahtea <PRO.D Pekka>:213]]]]]
					= [T/fin [<D Pekka> [haluaa [A/inf [lahtea <D Pekka>]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:213.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:213.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:213.
			= [T/fin [<D Pekka> [haluaa [A/inf [lahtea <D Pekka>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [<DP>:213 [PRO.haluaa [A/inf [PRO.lahtea <PRO.D Pekka>:213]]]]] into LF...
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.haluaa with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.lahtea with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to LF successful.
!--->		Tests passed (with 14/142 operations) <------------------------------------
		Solution:
		[T/fin [<D Pekka> [haluaa [A/inf [lahtea <D Pekka>]]]]]
		Grammar: [phi.T/fin [<DP>:1 [PRO.haluaa [A/inf [PRO.lahtea <PRO.D Pekka>:1]]]]]
		Spellout TT/finP = [TT/fin [__:1 [V [INF [V DP:1]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.haluaa: [V, TT/fin]
A/inf: [INF, V, TT/fin]
PRO.lahtea: [V, INF, V, TT/fin]
PRO.D: [D, V, INF, V, TT/fin]
Pekka: [N, D, V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 90
['kaskee', 'Merjan', 'lahtea', 'Pekka']


			=None

1.
		Next word "kaskee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "kaske-" detected.

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=PRO.T/fin{v,V}

5.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'TAIL:ARG,VAL,CAT:INF', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.kaske" from PRO.v and created [PRO.T/fin [PRO.v PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[PRO.T/fin{v,V} PRO.D{N}]

13.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[T/fin{v,V} D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[T/fin [v [kaske <D Merja->]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.D{N} A/inf]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[PRO.T/fin{v,V} [[phi.D Merja-] A/inf]]

14.

		Consume "lahtea"

		[T/fin{v,V} [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]

15.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]

19.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]

20.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]

21.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[T/fin{v,V} [[D Merja-] A/inf{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				[PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]] + D = -98]
				[[phi.D Merja-] A/inf{V}] + D = 2]
				A/inf{V} + D = 3]
		Ranking completed:
			1. [A/inf{V}; D]
			2. [[[phi.D Merja-] A/inf{V}]; D]
			3. [[PRO.T/fin{v,V} [[phi.D Merja-] A/inf{V}]]; D]
		Exploring solution number (1) =[A/inf{V} D]
			Transferring A/inf{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for A/inf{V}.
					Extracted head "PRO.lahtea" from A/inf and created [A/inf PRO.lahtea]
					A/inf{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= A/inf{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				A/inf{V} probing for CAT:V failed.
				A phi-marked head "A/inf{V}" lacks complement
				Agreement reconstruction:
			=[PRO.T/fin{v,V} [[phi.D Merja-] [A/inf{V} PRO.D]]]

22.

		Consume "Pekka"

		[T/fin{v,V} [[D Merja-] [A/inf{V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=[PRO.T/fin{v,V} [[phi.D Merja-] [A/inf{V} PRO.D{N}]]]

23.
	>>>	Trying candidate parse [T/fin{v,V} [[D Merja-] [A/inf{V} D{N}]]] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} [[phi.D Merja-] [A/inf{V} PRO.D{N}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} [[phi.D Merja-] [A/inf{V} PRO.D{N}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} [[phi.D Merja-] [A/inf{V} PRO.D{N}]]]]
						Extracted head "PRO.kaske" and reconstructed it = [PRO.T/fin [PRO.v [PRO.kaske [[phi.D Merja-] [A/inf{V} PRO.D{N}]]]]]
						Extracted head "PRO.lahtea" and reconstructed it = [PRO.T/fin [PRO.v [PRO.kaske [[phi.D Merja-] [A/inf [PRO.lahtea PRO.D{N}]]]]]]
					Extracted head "Pekka" from PRO.D and created [PRO.T/fin [PRO.v [PRO.kaske [[phi.D Merja-] [A/inf [PRO.lahtea [PRO.D Pekka]]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [PRO.T/fin [PRO.v [PRO.kaske [<phi.D Merja->:216 [A/inf [<DP>:216 [PRO.lahtea [PRO.D Pekka]]]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<PRO.D Pekka> was made an adjunct.
					Dropping <PRO.D Pekka>
						Floater <D Pekka> dropped.
						 = [PRO.T/fin [<DP>:217 [PRO.v [PRO.kaske [<phi.D Merja->:216 [A/inf [<DP>:216 [PRO.lahtea <PRO.D Pekka>:217]]]]]]]]
					= [T/fin [<D Pekka> [v [kaske [<D Merja-> [A/inf [<D Merja-> [lahtea <D Pekka>]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:217.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:217.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:217.
			= [T/fin [<D Pekka> [v [kaske [<D Merja-> [A/inf [<D Merja-> [lahtea <D Pekka>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [<DP>:217 [PRO.v [PRO.kaske [<phi.D Merja->:216 [A/inf [<DP>:216 [PRO.lahtea <PRO.D Pekka>:217]]]]]]]] into LF...
				(D) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.kaske with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.lahtea with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> )
				Transfer to LF successful.
!--->		Tests passed (with 23/219 operations) <------------------------------------
		Solution:
		[T/fin [<D Pekka> [v [kaske [<D Merja-> [A/inf [<D Merja-> [lahtea <D Pekka>]]]]]]]]
		Grammar: [phi.T/fin [<DP>:1 [PRO.v [PRO.kaske [<phi.D Merja->:2 [A/inf [<DP>:2 [PRO.lahtea <PRO.D Pekka>:1]]]]]]]]
		Spellout TT/finP = [TT/fin [__:1 [v [V [DP:2 [INF [__:2 [V DP:1]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]
PRO.D: [D, V, INF, V, v, TT/fin]
Pekka: [N, D, V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]


\========================================================================
# 91
['kaskee', 'Pekka', 'Merjan', 'lahtea']


			=None

1.
		Next word "kaskee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "kaske-" detected.

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=PRO.T/fin{v,V}

5.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.kaske" from PRO.v and created [PRO.T/fin [PRO.v PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

12.

		Consume "Pekka"

		[T/fin{v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=[PRO.T/fin{v,V} PRO.D{N}]

13.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[PRO.T/fin{v,V} PRO.D{N}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[PRO.T/fin{v,V} PRO.D{N}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[PRO.T/fin{v,V} PRO.D{N}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[PRO.T/fin{v,V} PRO.D{N}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=[PRO.T/fin{v,V} PRO.D{N}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=[PRO.T/fin{v,V} PRO.D{N}]

19.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'TAIL:ARG,VAL,CAT:INF', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		[T/fin{v,V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.kaske (kaske) is missing complement A/inf
				Avoid [T/fin [<D Pekka> [v [kaske <D Pekka>]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N} D] due to local agreement failure.
				Avoid PRO.D{N} because it could break words.
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
				Prioritize PRO.D{N} because all solutions were negative.
				[PRO.T/fin{v,V} PRO.D{N}] + D = -197]
				PRO.D{N} + D = 56]
		Ranking completed:
			1. [PRO.D{N}; D]
			2. [[PRO.T/fin{v,V} PRO.D{N}]; D]
		Exploring solution number (1) =[PRO.D{N} D]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[PRO.T/fin{v,V} [[phi.D Pekka] PRO.D]]

20.

		Consume "Merja-"

		[T/fin{v,V} [[D Pekka] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[PRO.T/fin{v,V} [[phi.D Pekka] PRO.D{N}]]

21.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[T/fin{v,V} [[D Pekka] D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[T/fin [v [kaske <[D Pekka] [D Merja-]>]]] A/inf] due to bad left branch.
				Reject [[[D N] D] A/inf] as Spec because it breaks words.
		Exploring solution number (1) =[PRO.D{N} A/inf]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[PRO.T/fin{v,V} [[phi.D Pekka] [[phi.D Merja-] A/inf]]]

22.

		Consume "lahtea"

		[T/fin{v,V} [[D Pekka] [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[PRO.T/fin{v,V} [[phi.D Pekka] [[phi.D Merja-] A/inf{V}]]]

23.
	>>>	Trying candidate parse [T/fin{v,V} [[D Pekka] [[D Merja-] A/inf{V}]]] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} [[phi.D Pekka] [[phi.D Merja-] A/inf{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} [[phi.D Pekka] [[phi.D Merja-] A/inf{V}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} [[phi.D Pekka] [[phi.D Merja-] A/inf{V}]]]]
						Extracted head "PRO.kaske" and reconstructed it = [PRO.T/fin [PRO.v [PRO.kaske [[phi.D Pekka] [[phi.D Merja-] A/inf{V}]]]]]
					Extracted head "PRO.lahtea" from A/inf and created [PRO.T/fin [PRO.v [PRO.kaske [[phi.D Pekka] [[phi.D Merja-] [A/inf PRO.lahtea]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [PRO.T/fin [<DP>:220 [PRO.v [PRO.kaske [<phi.D Pekka>:220 [[phi.D Merja-] [A/inf PRO.lahtea]]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [PRO.T/fin [<DP>:220 [PRO.v [PRO.kaske [<phi.D Pekka>:220 [<phi.D Merja->:221 [A/inf [<DP>:221 PRO.lahtea]]]]]]]]
					= [T/fin [<D Pekka> [v [kaske [<D Pekka> [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:220.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:220.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:220.
			= [T/fin [<D Pekka> [v [kaske [<D Pekka> [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [<DP>:220 [PRO.v [PRO.kaske [<phi.D Pekka>:220 [<phi.D Merja->:221 [A/inf [<DP>:221 PRO.lahtea]]]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.kaske with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.lahtea with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 23/235 operations) <------------------------------------
		Solution:
		[T/fin [<D Pekka> [v [kaske [<D Pekka> [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
		Grammar: [phi.T/fin [<DP>:1 [PRO.v [PRO.kaske [<phi.D Pekka>:1 [<phi.D Merja->:2 [A/inf [<DP>:2 PRO.lahtea]]]]]]]]
		Spellout TT/finP = [TT/fin [__:1 [v [V [DP:1 [DP:2 [INF [__:2 V]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Pekka: [N, D, V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]


\========================================================================
# 92
['kaskee', 'Merjan', 'Pekka', 'lahtea']


			=None

1.
		Next word "kaskee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "kaske-" detected.

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=PRO.T/fin{v,V}

5.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'TAIL:ARG,VAL,CAT:INF', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.kaske" from PRO.v and created [PRO.T/fin [PRO.v PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} PRO.D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[PRO.T/fin{v,V} PRO.D{N}]

13.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[PRO.T/fin{v,V} PRO.D{N}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[PRO.T/fin{v,V} PRO.D{N}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[PRO.T/fin{v,V} PRO.D{N}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[PRO.T/fin{v,V} PRO.D{N}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[PRO.T/fin{v,V} PRO.D{N}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[PRO.T/fin{v,V} PRO.D{N}]

19.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[T/fin{v,V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.kaske (kaske) is missing complement A/inf
				hPRO.D failed internal tail test.
				Avoid [T/fin [v [kaske <D Merja->]]] as left branch because it constitutes illicit structure.
				Avoid [D{N} D] due to local agreement failure.
				Avoid PRO.D{N} because it could break words.
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
				Prioritize PRO.D{N} because all solutions were negative.
				[PRO.T/fin{v,V} PRO.D{N}] + D = -197]
				PRO.D{N} + D = 56]
		Ranking completed:
			1. [PRO.D{N}; D]
			2. [[PRO.T/fin{v,V} PRO.D{N}]; D]
		Exploring solution number (1) =[PRO.D{N} D]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[PRO.T/fin{v,V} [[phi.D Merja-] PRO.D]]

20.

		Consume "Pekka"

		[T/fin{v,V} [[D Merja-] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=[PRO.T/fin{v,V} [[phi.D Merja-] PRO.D{N}]]

21.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[T/fin{v,V} [[D Merja-] D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[T/fin [<D Pekka> [v [kaske <[D Merja-] <D Pekka>>]]]] A/inf] due to bad left branch.
				Reject [[[D N] D] A/inf] as Spec because it breaks words.
		Exploring solution number (1) =[PRO.D{N} A/inf]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[PRO.T/fin{v,V} [[phi.D Merja-] [[phi.D Pekka] A/inf]]]

22.

		Consume "lahtea"

		[T/fin{v,V} [[D Merja-] [[D Pekka] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[PRO.T/fin{v,V} [[phi.D Merja-] [[phi.D Pekka] A/inf{V}]]]

23.
	>>>	Trying candidate parse [T/fin{v,V} [[D Merja-] [[D Pekka] A/inf{V}]]] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} [[phi.D Merja-] [[phi.D Pekka] A/inf{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} [[phi.D Merja-] [[phi.D Pekka] A/inf{V}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} [[phi.D Merja-] [[phi.D Pekka] A/inf{V}]]]]
						Extracted head "PRO.kaske" and reconstructed it = [PRO.T/fin [PRO.v [PRO.kaske [[phi.D Merja-] [[phi.D Pekka] A/inf{V}]]]]]
					Extracted head "PRO.lahtea" from A/inf and created [PRO.T/fin [PRO.v [PRO.kaske [[phi.D Merja-] [[phi.D Pekka] [A/inf PRO.lahtea]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [phi.D Merja-]
						<phi.D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [PRO.T/fin [PRO.v [PRO.kaske [<phi.D Merja->:223 [[phi.D Pekka] [A/inf [<DP>:223 PRO.lahtea]]]]]]]
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [PRO.T/fin [<DP>:224 [PRO.v [PRO.kaske [<phi.D Merja->:223 [<phi.D Pekka>:224 [A/inf [<DP>:223 PRO.lahtea]]]]]]]]
					= [T/fin [<D Pekka> [v [kaske [<D Merja-> [<D Pekka> [A/inf [<D Merja-> lahtea]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:224.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:224.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:224.
			= [T/fin [<D Pekka> [v [kaske [<D Merja-> [<D Pekka> [A/inf [<D Merja-> lahtea]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [<DP>:224 [PRO.v [PRO.kaske [<phi.D Merja->:223 [<phi.D Pekka>:224 [A/inf [<DP>:223 PRO.lahtea]]]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.kaske with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.lahtea with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Merja->    (alternatives: )
				Transfer to LF successful.
!--->		Tests passed (with 23/236 operations) <------------------------------------
		Solution:
		[T/fin [<D Pekka> [v [kaske [<D Merja-> [<D Pekka> [A/inf [<D Merja-> lahtea]]]]]]]]
		Grammar: [phi.T/fin [<DP>:1 [PRO.v [PRO.kaske [<phi.D Merja->:2 [<phi.D Pekka>:1 [A/inf [<DP>:2 PRO.lahtea]]]]]]]]
		Spellout TT/finP = [TT/fin [__:1 [v [V [DP:2 [DP:1 [INF [__:2 V]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Pekka: [N, D, V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]


\========================================================================
# 93
['Pekka', 'pyytaa', 'lahtemaan']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "pyytaa" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'pyyta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Pekka] PRO.T/fin{v}]

12.

		Consume "pyyda"

		[[D Pekka] T/fin{v}] + pyyda
			Filtering out impossible merge sites...
			Sink "pyyda" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*pyyda]
			=[[phi.D Pekka] PRO.T/fin{v,V}]

13.
		Next word "lahtemaan" contains multiple morphemes ['$MA/inf', 'lahte-']

		Consume "ma"

		[[D Pekka] T/fin{v,V}] + ma
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, ma.
				[[phi.D Pekka] PRO.T/fin{v,V}] + ma = -98]
				PRO.T/fin{v,V} + ma = 2]
		Ranking completed:
			1. [PRO.T/fin{v,V}; ma]
			2. [[[phi.D Pekka] PRO.T/fin{v,V}]; ma]
		Exploring solution number (1) =[PRO.T/fin{v,V} ma]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.pyyda" from PRO.v and created [PRO.T/fin [PRO.v PRO.pyyda]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{v,V} ma]]

14.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} ma]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into ma because they are inside the same phonological word.
		Exploring solution number (1) =[ma*lahtea]
			=[[phi.D Pekka] [PRO.T/fin{v,V} ma{V}]]

15.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} ma{V}]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{v,V} ma{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{v,V} ma{V}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.v{V} ma{V}]]]
						Extracted head "PRO.pyyda" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.v [PRO.pyyda ma{V}]]]]
					Extracted head "PRO.lahtea" from ma and created [[phi.D Pekka] [PRO.T/fin [PRO.v [PRO.pyyda [ma PRO.lahtea]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:227 [PRO.T/fin [<DP>:227 [PRO.v [PRO.pyyda [ma PRO.lahtea]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v [pyyda [ma lahtea]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:227.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:227.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:227.
			= [<D Pekka> [T/fin [<D Pekka> [v [pyyda [ma lahtea]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<phi.D Pekka>:227 [phi.T/fin [<DP>:227 [PRO.v [PRO.pyyda [ma PRO.lahtea]]]]]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.pyyda with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.lahtea with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF successful.
!--->		Tests passed (with 15/152 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [pyyda [ma lahtea]]]]]]
		Grammar: [<phi.D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.pyyda [ma PRO.lahtea]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
pyyda:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:pyyda', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
pyyda:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:pyyda', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.pyyda: [V, v, TT/fin]
ma: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 94
['to_inf', 'leave', 'is', 'a', 'mistake']


			=None

1.
			=to

2.

		Consume "leave"

		to + leave
			Filtering out impossible merge sites...
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[to PRO.leave]

3.
		Next word "is" contains multiple morphemes ['$[-s]', '$T/fin', 'be-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[to PRO.leave]

4.

		Adding inflectional features {'PHI:GEN:M', 'PHI:GEN:F', '-', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[to leave] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Prioritize INFP as SPEC,T/fin.
				[to PRO.leave] + T/fin = 102]
				PRO.leave + T/fin = 2]
		Ranking completed:
			1. [[to PRO.leave]; T/fin]
			2. [PRO.leave; T/fin]
		Exploring solution number (1) =[[to PRO.leave] T/fin]
			Transferring [to PRO.leave] to LF.
				head movement reconstruction:
					Reconstructing head movement for [to PRO.leave].
				Feature processing:
				Floater movement reconstruction:
					= [to leave]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[to PRO.leave] T/fin]

5.

		Consume "be"

		[[to leave] T/fin] + be
			Filtering out impossible merge sites...
			Sink "be" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*be]
			=[[to PRO.leave] T/fin{V}]

6.

		Consume "a"

		[[to leave] T/fin{V}] + a
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, a.
				A phi-marked head "PRO.be" lacks complement
				Avoid [[to leave] [T/fin [[to leave] be]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{V} a] due to complement selection.
				[[to PRO.leave] T/fin{V}] + a = -197]
				T/fin{V} + a = 104]
		Ranking completed:
			1. [T/fin{V}; a]
			2. [[[to PRO.leave] T/fin{V}]; a]
		Exploring solution number (1) =[T/fin{V} a]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.be" from T/fin and created [T/fin PRO.be]
				An EPP-head "T/fin" lacks specifier but needs one.
				A phi-marked head "PRO.be" lacks complement
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[to PRO.leave] [T/fin{V} PRO.a]]

7.

		Consume "mistake"

		[[to leave] [T/fin{V} a]] + mistake
			Filtering out impossible merge sites...
				Reject [[[to leave] [T/fin [[to leave] [be a]]]] mistake] due to bad left branch.
				Reject [[T/fin [be a]] mistake] due to bad left branch.
		Exploring solution number (1) =[PRO.a mistake]
			Transferring PRO.a to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.a.
				Feature processing:
				Floater movement reconstruction:
					= a
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.a probing for CAT:N failed.
				A phi-marked head "PRO.a" lacks complement
					Extraposition will be tried on PRO.a.
				Agreement reconstruction:
			=[[to PRO.leave] [T/fin{V} [PRO.a mistake]]]

8.
	>>>	Trying candidate parse [[to leave] [T/fin{V} [a mistake]]] (1.)
		Reconstructing...
			Transferring [[to PRO.leave] [T/fin{V} [PRO.a mistake]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[to PRO.leave] [T/fin{V} [PRO.a mistake]]].
						Extracted head "PRO.be" and reconstructed it = [[to PRO.leave] [T/fin [PRO.be [PRO.a mistake]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[to leave] [T/fin [be [a mistake]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "to leave " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[INF V]]
					Dropping constituent [to PRO.leave]:115 from memory buffer into Spec of PRO.be
					Result [[to PRO.leave]:115 [T/fin [(INFP):115 [PRO.be [PRO.a mistake]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					PRO.a has unvalued phi-features {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.a acquired PHI:NUM:SG from (Spec,phi.a).
					phi.a acquired PHI:DET:INDEF from (Spec,phi.a).
					phi.a acquired PHI:PER:3 from (Spec,phi.a).
			= [[to leave] [T/fin [[to leave] [be [a mistake]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[to PRO.leave]:115 [T/fin [(INFP):115 [PRO.be [phi.a mistake]]]]] into LF...
				T/fin with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				(V) with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				PRO.be with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF successful.
!--->		Tests passed (with 8/141 operations) <------------------------------------
		Solution:
		[[to leave] [T/fin [[to leave] [be [a mistake]]]]]
		Grammar: [[to PRO.leave]:1 [T/fin [(INFP):1 [PRO.be [phi.a mistake]]]]]
		Spellout TT/finP = [INFP:1 [TT/fin [__:1 [V [D N]]]]]
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', 'null']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:-ARG', 'CAT:-ARG/ARG/COPULA/V', 'CAT:ARG', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', 'null']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:-ARG', 'CAT:-ARG/ARG/COPULA/V', 'CAT:ARG', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF]
PRO.leave: [V, INF]
T/fin: [TT/fin]
(INF): [INF, TT/fin]
(V): [V, INF, TT/fin]
PRO.be: [V, TT/fin]
phi.a: [D, V, TT/fin]
mistake: [N, D, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 95
['Pekka', 'etsii', 'Merjaa', 'juosten']


			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'TAIL:ARG,VAL,CAT:FIN', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=PRO.D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Pekka]
			=PRO.D{N}

9.
		Next word "etsii" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'etsi-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.D{N}

10.

		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.D{N} T/fin]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Pekka" from PRO.D and created [PRO.D Pekka]
					PRO.D was opened into [PRO.D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[phi.D Pekka] PRO.T/fin{v}]

12.

		Consume "etsi"

		[[D Pekka] T/fin{v}] + etsi
			Filtering out impossible merge sites...
			Sink "etsi" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*etsi]
			=[[phi.D Pekka] PRO.T/fin{v,V}]

13.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[phi.D Pekka] PRO.T/fin{v,V}]

19.

		Adding inflectional features {'-', 'PHI:PER:3', 'LANG:FI', 'TAIL:ARG,-VAL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.etsi (etsi) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [v etsi]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [etsi D] due to complement selection.
				[[phi.D Pekka] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[phi.D Pekka] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.etsi" from PRO.v and created [PRO.T/fin [PRO.v PRO.etsi]]
				PRO.etsi (etsi) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[phi.D Pekka] [PRO.T/fin{v,V} PRO.D]]

20.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.D*Merja-]
			=[[phi.D Pekka] [PRO.T/fin{v,V} PRO.D{N}]]

21.
		Next word "juosten" contains multiple morphemes ['$Cen', 'juokse-']

		Consume "en"

		[[D Pekka] [T/fin{v,V} D{N}]] + en
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, en.
				Avoid TT/finP as SPEC, en.
				Avoid PRO.D{N} due to tail-head failure.
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
				Prioritize PRO.D{N} because all solutions were negative.
				[[phi.D Pekka] [PRO.T/fin{v,V} PRO.D{N}]] + en = -98]
				[PRO.T/fin{v,V} PRO.D{N}] + en = -96]
				PRO.D{N} + en = 106]
		Ranking completed:
			1. [PRO.D{N}; en]
			2. [[PRO.T/fin{v,V} PRO.D{N}]; en]
			3. [[[phi.D Pekka] [PRO.T/fin{v,V} PRO.D{N}]]; en]
		Exploring solution number (1) =[PRO.D{N} en]
			Transferring PRO.D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					Reconstructing head movement for PRO.D{N}.
					Extracted head "Merja-" from PRO.D and created [PRO.D Merja-]
					PRO.D was opened into [PRO.D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] [PRO.T/fin{v,V} [[phi.D Merja-] en]]]

22.

		Consume "juokse-"

		[[D Pekka] [T/fin{v,V} [[D Merja-] en]]] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
		Exploring solution number (1) =[en*juokse-]
			=[[phi.D Pekka] [PRO.T/fin{v,V} [[phi.D Merja-] en{V}]]]

23.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D Merja-] en{V}]]] (1.)
		Reconstructing...
			Transferring [[phi.D Pekka] [PRO.T/fin{v,V} [[phi.D Merja-] en{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [PRO.T/fin{v,V} [[phi.D Merja-] en{V}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.v{V} [[phi.D Merja-] en{V}]]]]
						Extracted head "PRO.etsi" and reconstructed it = [[phi.D Pekka] [PRO.T/fin [PRO.v [PRO.etsi [[phi.D Merja-] en{V}]]]]]
					Extracted head "PRO.juokse-" from en and created [[phi.D Pekka] [PRO.T/fin [PRO.v [PRO.etsi [[phi.D Merja-] [en PRO.juokse-]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
						<phi.D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<phi.D Pekka>:232 [PRO.T/fin [<DP>:232 [PRO.v [PRO.etsi [[phi.D Merja-] [en PRO.juokse-]]]]]]]
					en at the right failed to tail [CAT:T]
en: [[D N]]
						<[phi.D Merja-] [en PRO.juokse-]> was made an adjunct.
					= [<D Pekka> [T/fin [<D Pekka> [v [etsi <[D Merja-] [en juokse-]>]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.etsi (etsi) is missing complement D
					Extraposition will be tried on [<phi.D Pekka>:232 [PRO.T/fin [<DP>:232 [PRO.v [PRO.etsi <[phi.D Merja-] [en PRO.juokse-]>]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:232.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:232.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:232.
			= [<D Pekka> [T/fin [<D Pekka> [v [etsi <[D Merja-] [en juokse-]>]]]]]
		Checking LF-interface conditions.
				PRO.etsi (etsi) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.etsi: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
en: [ADV, V, v, TT/fin]
PRO.juokse-: [V, ADV, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "juokse-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{v,V} PRO.D{N}] en]
			Transferring [PRO.T/fin{v,V} PRO.D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} PRO.D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} PRO.D{N}]]
						Extracted head "PRO.etsi" and reconstructed it = [PRO.T/fin [PRO.v [PRO.etsi PRO.D{N}]]]
					Extracted head "Merja-" from PRO.D and created [PRO.T/fin [PRO.v [PRO.etsi [PRO.D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [etsi [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.T/fin acquired PHI:NUM:SG from (Spec,phi.T/fin).
					pro/x.T/fin acquired PHI:PER:3 from (Spec,pro/x.T/fin).
					PRO.D has unvalued phi-features {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'}
					phi.D acquired PHI:DET:DEF from (Spec,phi.D).
					phi.D acquired PHI:NUM:SG from (Spec,phi.D).
					phi.D acquired PHI:PER:3 from (Spec,phi.D).
			=[[phi.D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [phi.D Merja-]]]] en]]

24.

		Consume "juokse-"

		[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] en]] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
		Exploring solution number (1) =[en*juokse-]
			=[[phi.D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [phi.D Merja-]]]] en{V}]]

25.
	>>>	Trying candidate parse [[D Pekka] [[T/fin [v [etsi [D Merja-]]]] en{V}]] (2.)
		Reconstructing...
			Transferring [[phi.D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [phi.D Merja-]]]] en{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[phi.D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [phi.D Merja-]]]] en{V}]].
					Extracted head "PRO.juokse-" from en and created [[phi.D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [phi.D Merja-]]]] [en PRO.juokse-]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [phi.D Pekka]
					en at the right failed to tail [CAT:T]
						<en PRO.juokse-> was made an adjunct.
					= [[D Pekka] [[T/fin [v [etsi [D Merja-]]]] <en juokse->]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Pekka " into memory buffer from SPEC of "pro/x.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [phi.D Pekka]:18 from memory buffer into Spec of PRO.v
					Result [[phi.D Pekka]:18 [[pro/x.T/fin [(DP):18 [PRO.v [PRO.etsi [phi.D Merja-]]]]] <en PRO.juokse->]]
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):18.
			= [[D Pekka] [[T/fin [[D Pekka] [v [etsi [D Merja-]]]]] <en juokse->]]
		Checking LF-interface conditions.
			Trying to transfer [[phi.D Pekka]:18 [[phi.T/fin [(DP):18 [PRO.v [PRO.etsi [phi.D Merja-]]]]] <en PRO.juokse->]] into LF...
				PRO.v with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin )
				PRO.etsi with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					1. [D Merja-]    (alternatives: )
				PRO.juokse- with {'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'} was associated at LF with:
					(Generic interpretation)
				Transfer to LF successful.
!--->		Tests passed (with 25/304 operations) <------------------------------------
		Solution:
		[[D Pekka] [[T/fin [[D Pekka] [v [etsi [D Merja-]]]]] <en juokse->]]
		Grammar: [[phi.D Pekka]:1 [[phi.T/fin [(DP):1 [PRO.v [PRO.etsi [phi.D Merja-]]]]] <en PRO.juokse->]]
		Spellout TT/finP = [DP:1 [[TT/fin [__:1 [v [V [D N]]]]] ADVP]]
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '!SPEC:*', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/D/D', 'CAT:ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

phi.D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.etsi: [V, v, TT/fin]
phi.D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
en: [ADV]
PRO.juokse-: [V, ADV]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

